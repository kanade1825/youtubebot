/* Generated code for Python module 'youtube_dl.extractor.extractors'
 * created by Nuitka version 1.3.8
 *
 * This code is in part copyright 2022 Kay Hayen.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "nuitka/prelude.h"

#include "nuitka/unfreezing.h"

#include "__helpers.h"

/* The "module_youtube_dl$extractor$extractors" is a Python object pointer of module type.
 *
 * Note: For full compatibility with CPython, every module variable access
 * needs to go through it except for cases where the module cannot possibly
 * have changed in the mean time.
 */

PyObject *module_youtube_dl$extractor$extractors;
PyDictObject *moduledict_youtube_dl$extractor$extractors;

/* The declarations of module constants used, if any. */
static PyObject *mod_consts[2794];
#ifndef __NUITKA_NO_ASSERT__
static Py_hash_t mod_consts_hash[2794];
#endif

static PyObject *module_filename_obj = NULL;

/* Indicator if this modules private constants were created yet. */
static bool constants_created = false;

/* Function to create module private constants. */
static void createModuleConstants(void) {
    if (constants_created == false) {
        loadConstantsBlob(&mod_consts[0], UNTRANSLATE("youtube_dl.extractor.extractors"));
        constants_created = true;

#ifndef __NUITKA_NO_ASSERT__
        for (int i = 0; i < 2794; i++) {
            mod_consts_hash[i] = DEEP_HASH(mod_consts[i]);
        }
#endif
    }
}

// We want to be able to initialize the "__main__" constants in any case.
#if 0
void createMainModuleConstants(void) {
    createModuleConstants();
}
#endif

/* Function to verify module private constants for non-corruption. */
#ifndef __NUITKA_NO_ASSERT__
void checkModuleConstants_youtube_dl$extractor$extractors(void) {
    // The module may not have been used at all, then ignore this.
    if (constants_created == false) return;

    for (int i = 0; i < 2794; i++) {
        assert(mod_consts_hash[i] == DEEP_HASH(mod_consts[i]));
        CHECK_OBJECT_DEEP(mod_consts[i]);
    }
}
#endif

// The module code objects.
static PyCodeObject *codeobj_ac3b2570fea032a53c8babbaaa6c2ef6;

static void createModuleCodeObjects(void) {
    module_filename_obj = MAKE_RELATIVE_PATH(mod_consts[2791]); CHECK_OBJECT(module_filename_obj);
    codeobj_ac3b2570fea032a53c8babbaaa6c2ef6 = MAKE_CODE_OBJECT(module_filename_obj, 1, CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[2792], mod_consts[2792], NULL, NULL, 0, 0, 0);
}

// The module function declarations.


// The module function definitions.


extern void _initCompiledCellType();
extern void _initCompiledGeneratorType();
extern void _initCompiledFunctionType();
extern void _initCompiledMethodType();
extern void _initCompiledFrameType();

extern PyTypeObject Nuitka_Loader_Type;

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
// Provide a way to create find a function via its C code and create it back
// in another process, useful for multiprocessing extensions like dill
extern void registerDillPluginTables(char const *module_name, PyMethodDef *reduce_compiled_function, PyMethodDef *create_compiled_function);

function_impl_code functable_youtube_dl$extractor$extractors[] = {

    NULL
};

static char const *_reduce_compiled_function_argnames[] = {
    "func",
    NULL
};

static PyObject *_reduce_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    PyObject *func;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "O:reduce_compiled_function", (char **)_reduce_compiled_function_argnames, &func, NULL)) {
        return NULL;
    }

    if (Nuitka_Function_Check(func) == false) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "not a compiled function");
        return NULL;
    }

    struct Nuitka_FunctionObject *function = (struct Nuitka_FunctionObject *)func;

    function_impl_code *current = functable_youtube_dl$extractor$extractors;
    int offset = 0;

    while (*current != NULL) {
        if (*current == function->m_c_code) {
            break;
        }

        current += 1;
        offset += 1;
    }

    if (*current == NULL) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "Cannot find compiled function in module.");
        return NULL;
    }

    PyObject *code_object_desc = MAKE_TUPLE_EMPTY(6);
    PyTuple_SET_ITEM0(code_object_desc, 0, function->m_code_object->co_filename);
    PyTuple_SET_ITEM0(code_object_desc, 1, function->m_code_object->co_name);
    PyTuple_SET_ITEM(code_object_desc, 2, PyLong_FromLong(function->m_code_object->co_firstlineno));
    PyTuple_SET_ITEM0(code_object_desc, 3, function->m_code_object->co_varnames);
    PyTuple_SET_ITEM(code_object_desc, 4, PyLong_FromLong(function->m_code_object->co_argcount));
    PyTuple_SET_ITEM(code_object_desc, 5, PyLong_FromLong(function->m_code_object->co_flags));

    CHECK_OBJECT_DEEP(code_object_desc);

    PyObject *result = MAKE_TUPLE_EMPTY(4);
    PyTuple_SET_ITEM(result, 0, PyLong_FromLong(offset));
    PyTuple_SET_ITEM(result, 1, code_object_desc);
    PyTuple_SET_ITEM0(result, 2, function->m_defaults);
    PyTuple_SET_ITEM0(result, 3, function->m_doc != NULL ? function->m_doc : Py_None);

    CHECK_OBJECT_DEEP(result);

    return result;
}

static PyMethodDef _method_def_reduce_compiled_function = {"reduce_compiled_function", (PyCFunction)_reduce_compiled_function,
                                                           METH_VARARGS | METH_KEYWORDS, NULL};

static char const *_create_compiled_function_argnames[] = {
    "func",
    "code_object_desc",
    "defaults",
    "doc",
    NULL
};


static PyObject *_create_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    CHECK_OBJECT_DEEP(args);

    PyObject *func;
    PyObject *code_object_desc;
    PyObject *defaults;
    PyObject *doc;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "OOOO:create_compiled_function", (char **)_create_compiled_function_argnames, &func, &code_object_desc, &defaults, &doc, NULL)) {
        return NULL;
    }

    int offset = PyLong_AsLong(func);

    if (offset == -1 && ERROR_OCCURRED()) {
        return NULL;
    }

    if (offset > sizeof(functable_youtube_dl$extractor$extractors) || offset < 0) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "Wrong offset for compiled function.");
        return NULL;
    }

    PyObject *filename = PyTuple_GET_ITEM(code_object_desc, 0);
    PyObject *function_name = PyTuple_GET_ITEM(code_object_desc, 1);
    PyObject *line = PyTuple_GET_ITEM(code_object_desc, 2);
    int line_int = PyLong_AsLong(line);
    assert(!ERROR_OCCURRED());

    PyObject *argnames = PyTuple_GET_ITEM(code_object_desc, 3);
    PyObject *arg_count = PyTuple_GET_ITEM(code_object_desc, 4);
    int arg_count_int = PyLong_AsLong(arg_count);
    assert(!ERROR_OCCURRED());
    PyObject *flags = PyTuple_GET_ITEM(code_object_desc, 5);
    int flags_int = PyLong_AsLong(flags);
    assert(!ERROR_OCCURRED());

    PyCodeObject *code_object = MAKE_CODE_OBJECT(
        filename,
        line_int,
        flags_int,
        function_name,
        argnames,
        NULL, // freevars
        arg_count_int,
        0, // TODO: Missing kw_only_count
        0 // TODO: Missing pos_only_count
    );

    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        functable_youtube_dl$extractor$extractors[offset],
        code_object->co_name,
#if PYTHON_VERSION >= 0x300
        NULL, // TODO: Not transferring qualname yet
#endif
        code_object,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL, // kwdefaults are done on the outside currently
        NULL, // TODO: Not transferring annotations
#endif
        module_youtube_dl$extractor$extractors,
        doc,
        NULL,
        0
    );

    return (PyObject *)result;
}

static PyMethodDef _method_def_create_compiled_function = {
    "create_compiled_function",
    (PyCFunction)_create_compiled_function,
    METH_VARARGS | METH_KEYWORDS, NULL
};


#endif

// Internal entry point for module code.
PyObject *modulecode_youtube_dl$extractor$extractors(PyObject *module, struct Nuitka_MetaPathBasedLoaderEntry const *loader_entry) {
    // Report entry to PGO.
    PGO_onModuleEntered("youtube_dl.extractor.extractors");

    // Store the module for future use.
    module_youtube_dl$extractor$extractors = module;

    // Modules can be loaded again in case of errors, avoid the init being done again.
    static bool init_done = false;

    if (init_done == false) {
#if defined(_NUITKA_MODULE) && 0
        // In case of an extension module loaded into a process, we need to call
        // initialization here because that's the first and potentially only time
        // we are going called.

        // Initialize the constant values used.
        _initBuiltinModule();
        createGlobalConstants();

        /* Initialize the compiled types of Nuitka. */
        _initCompiledCellType();
        _initCompiledGeneratorType();
        _initCompiledFunctionType();
        _initCompiledMethodType();
        _initCompiledFrameType();

        _initSlotCompare();
#if PYTHON_VERSION >= 0x270
        _initSlotIterNext();
#endif

        patchTypeComparison();

        // Enable meta path based loader if not already done.
#ifdef _NUITKA_TRACE
        PRINT_STRING("youtube_dl.extractor.extractors: Calling setupMetaPathBasedLoader().\n");
#endif
        setupMetaPathBasedLoader();

#if PYTHON_VERSION >= 0x300
        patchInspectModule();
#endif

#endif

        /* The constants only used by this module are created now. */
#ifdef _NUITKA_TRACE
        PRINT_STRING("youtube_dl.extractor.extractors: Calling createModuleConstants().\n");
#endif
        createModuleConstants();

        /* The code objects used by this module are created now. */
#ifdef _NUITKA_TRACE
        PRINT_STRING("youtube_dl.extractor.extractors: Calling createModuleCodeObjects().\n");
#endif
        createModuleCodeObjects();

        init_done = true;
    }

    // PRINT_STRING("in inityoutube_dl$extractor$extractors\n");

    moduledict_youtube_dl$extractor$extractors = MODULE_DICT(module_youtube_dl$extractor$extractors);

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
    registerDillPluginTables(loader_entry->name, &_method_def_reduce_compiled_function, &_method_def_create_compiled_function);
#endif

    // Set "__compiled__" to what version information we have.
    UPDATE_STRING_DICT0(
        moduledict_youtube_dl$extractor$extractors,
        (Nuitka_StringObject *)const_str_plain___compiled__,
        Nuitka_dunder_compiled_value
    );

    // Update "__package__" value to what it ought to be.
    {
#if 0
        UPDATE_STRING_DICT0(
            moduledict_youtube_dl$extractor$extractors,
            (Nuitka_StringObject *)const_str_plain___package__,
            mod_consts[2793]
        );
#elif 0
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___name__);

        UPDATE_STRING_DICT0(
            moduledict_youtube_dl$extractor$extractors,
            (Nuitka_StringObject *)const_str_plain___package__,
            module_name
        );
#else

#if PYTHON_VERSION < 0x300
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___name__);
        char const *module_name_cstr = PyString_AS_STRING(module_name);

        char const *last_dot = strrchr(module_name_cstr, '.');

        if (last_dot != NULL) {
            UPDATE_STRING_DICT1(
                moduledict_youtube_dl$extractor$extractors,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyString_FromStringAndSize(module_name_cstr, last_dot - module_name_cstr)
            );
        }
#else
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___name__);
        Py_ssize_t dot_index = PyUnicode_Find(module_name, const_str_dot, 0, PyUnicode_GetLength(module_name), -1);

        if (dot_index != -1) {
            UPDATE_STRING_DICT1(
                moduledict_youtube_dl$extractor$extractors,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyUnicode_Substring(module_name, 0, dot_index)
            );
        }
#endif
#endif
    }

    CHECK_OBJECT(module_youtube_dl$extractor$extractors);

    // For deep importing of a module we need to have "__builtins__", so we set
    // it ourselves in the same way than CPython does. Note: This must be done
    // before the frame object is allocated, or else it may fail.

    if (GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___builtins__) == NULL) {
        PyObject *value = (PyObject *)builtin_module;

        // Check if main module, not a dict then but the module itself.
#if defined(_NUITKA_MODULE) || !0
        value = PyModule_GetDict(value);
#endif

        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___builtins__, value);
    }

#if PYTHON_VERSION >= 0x300
    UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___loader__, (PyObject *)&Nuitka_Loader_Type);
#endif

#if PYTHON_VERSION >= 0x340
// Set the "__spec__" value

#if 0
    // Main modules just get "None" as spec.
    UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___spec__, Py_None);
#else
    // Other modules get a "ModuleSpec" from the standard mechanism.
    {
        PyObject *bootstrap_module = getImportLibBootstrapModule();
        CHECK_OBJECT(bootstrap_module);

        PyObject *_spec_from_module = PyObject_GetAttrString(bootstrap_module, "_spec_from_module");
        CHECK_OBJECT(_spec_from_module);

        PyObject *spec_value = CALL_FUNCTION_WITH_SINGLE_ARG(_spec_from_module, module_youtube_dl$extractor$extractors);
        Py_DECREF(_spec_from_module);

        // We can assume this to never fail, or else we are in trouble anyway.
        // CHECK_OBJECT(spec_value);

        if (spec_value == NULL) {
            PyErr_PrintEx(0);
            abort();
        }

// Mark the execution in the "__spec__" value.
        SET_ATTRIBUTE(spec_value, const_str_plain__initializing, Py_True);

        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___spec__, spec_value);
    }
#endif
#endif

    // Temp variables if any
    PyObject *tmp_import_from_100__module = NULL;
    PyObject *tmp_import_from_101__module = NULL;
    PyObject *tmp_import_from_102__module = NULL;
    PyObject *tmp_import_from_103__module = NULL;
    PyObject *tmp_import_from_104__module = NULL;
    PyObject *tmp_import_from_105__module = NULL;
    PyObject *tmp_import_from_106__module = NULL;
    PyObject *tmp_import_from_107__module = NULL;
    PyObject *tmp_import_from_108__module = NULL;
    PyObject *tmp_import_from_109__module = NULL;
    PyObject *tmp_import_from_10__module = NULL;
    PyObject *tmp_import_from_110__module = NULL;
    PyObject *tmp_import_from_111__module = NULL;
    PyObject *tmp_import_from_112__module = NULL;
    PyObject *tmp_import_from_113__module = NULL;
    PyObject *tmp_import_from_114__module = NULL;
    PyObject *tmp_import_from_115__module = NULL;
    PyObject *tmp_import_from_116__module = NULL;
    PyObject *tmp_import_from_117__module = NULL;
    PyObject *tmp_import_from_118__module = NULL;
    PyObject *tmp_import_from_119__module = NULL;
    PyObject *tmp_import_from_11__module = NULL;
    PyObject *tmp_import_from_120__module = NULL;
    PyObject *tmp_import_from_121__module = NULL;
    PyObject *tmp_import_from_122__module = NULL;
    PyObject *tmp_import_from_123__module = NULL;
    PyObject *tmp_import_from_124__module = NULL;
    PyObject *tmp_import_from_125__module = NULL;
    PyObject *tmp_import_from_126__module = NULL;
    PyObject *tmp_import_from_127__module = NULL;
    PyObject *tmp_import_from_128__module = NULL;
    PyObject *tmp_import_from_129__module = NULL;
    PyObject *tmp_import_from_12__module = NULL;
    PyObject *tmp_import_from_130__module = NULL;
    PyObject *tmp_import_from_131__module = NULL;
    PyObject *tmp_import_from_132__module = NULL;
    PyObject *tmp_import_from_133__module = NULL;
    PyObject *tmp_import_from_134__module = NULL;
    PyObject *tmp_import_from_135__module = NULL;
    PyObject *tmp_import_from_136__module = NULL;
    PyObject *tmp_import_from_137__module = NULL;
    PyObject *tmp_import_from_138__module = NULL;
    PyObject *tmp_import_from_139__module = NULL;
    PyObject *tmp_import_from_13__module = NULL;
    PyObject *tmp_import_from_140__module = NULL;
    PyObject *tmp_import_from_141__module = NULL;
    PyObject *tmp_import_from_142__module = NULL;
    PyObject *tmp_import_from_143__module = NULL;
    PyObject *tmp_import_from_144__module = NULL;
    PyObject *tmp_import_from_145__module = NULL;
    PyObject *tmp_import_from_146__module = NULL;
    PyObject *tmp_import_from_147__module = NULL;
    PyObject *tmp_import_from_148__module = NULL;
    PyObject *tmp_import_from_149__module = NULL;
    PyObject *tmp_import_from_14__module = NULL;
    PyObject *tmp_import_from_150__module = NULL;
    PyObject *tmp_import_from_151__module = NULL;
    PyObject *tmp_import_from_152__module = NULL;
    PyObject *tmp_import_from_153__module = NULL;
    PyObject *tmp_import_from_154__module = NULL;
    PyObject *tmp_import_from_155__module = NULL;
    PyObject *tmp_import_from_156__module = NULL;
    PyObject *tmp_import_from_157__module = NULL;
    PyObject *tmp_import_from_158__module = NULL;
    PyObject *tmp_import_from_159__module = NULL;
    PyObject *tmp_import_from_15__module = NULL;
    PyObject *tmp_import_from_160__module = NULL;
    PyObject *tmp_import_from_161__module = NULL;
    PyObject *tmp_import_from_162__module = NULL;
    PyObject *tmp_import_from_163__module = NULL;
    PyObject *tmp_import_from_164__module = NULL;
    PyObject *tmp_import_from_165__module = NULL;
    PyObject *tmp_import_from_166__module = NULL;
    PyObject *tmp_import_from_167__module = NULL;
    PyObject *tmp_import_from_168__module = NULL;
    PyObject *tmp_import_from_169__module = NULL;
    PyObject *tmp_import_from_16__module = NULL;
    PyObject *tmp_import_from_170__module = NULL;
    PyObject *tmp_import_from_171__module = NULL;
    PyObject *tmp_import_from_172__module = NULL;
    PyObject *tmp_import_from_173__module = NULL;
    PyObject *tmp_import_from_174__module = NULL;
    PyObject *tmp_import_from_175__module = NULL;
    PyObject *tmp_import_from_176__module = NULL;
    PyObject *tmp_import_from_177__module = NULL;
    PyObject *tmp_import_from_178__module = NULL;
    PyObject *tmp_import_from_179__module = NULL;
    PyObject *tmp_import_from_17__module = NULL;
    PyObject *tmp_import_from_180__module = NULL;
    PyObject *tmp_import_from_181__module = NULL;
    PyObject *tmp_import_from_182__module = NULL;
    PyObject *tmp_import_from_183__module = NULL;
    PyObject *tmp_import_from_184__module = NULL;
    PyObject *tmp_import_from_185__module = NULL;
    PyObject *tmp_import_from_186__module = NULL;
    PyObject *tmp_import_from_187__module = NULL;
    PyObject *tmp_import_from_188__module = NULL;
    PyObject *tmp_import_from_189__module = NULL;
    PyObject *tmp_import_from_18__module = NULL;
    PyObject *tmp_import_from_190__module = NULL;
    PyObject *tmp_import_from_191__module = NULL;
    PyObject *tmp_import_from_192__module = NULL;
    PyObject *tmp_import_from_193__module = NULL;
    PyObject *tmp_import_from_194__module = NULL;
    PyObject *tmp_import_from_195__module = NULL;
    PyObject *tmp_import_from_196__module = NULL;
    PyObject *tmp_import_from_197__module = NULL;
    PyObject *tmp_import_from_198__module = NULL;
    PyObject *tmp_import_from_199__module = NULL;
    PyObject *tmp_import_from_19__module = NULL;
    PyObject *tmp_import_from_1__module = NULL;
    PyObject *tmp_import_from_200__module = NULL;
    PyObject *tmp_import_from_201__module = NULL;
    PyObject *tmp_import_from_202__module = NULL;
    PyObject *tmp_import_from_203__module = NULL;
    PyObject *tmp_import_from_204__module = NULL;
    PyObject *tmp_import_from_205__module = NULL;
    PyObject *tmp_import_from_206__module = NULL;
    PyObject *tmp_import_from_207__module = NULL;
    PyObject *tmp_import_from_208__module = NULL;
    PyObject *tmp_import_from_209__module = NULL;
    PyObject *tmp_import_from_20__module = NULL;
    PyObject *tmp_import_from_210__module = NULL;
    PyObject *tmp_import_from_211__module = NULL;
    PyObject *tmp_import_from_212__module = NULL;
    PyObject *tmp_import_from_213__module = NULL;
    PyObject *tmp_import_from_214__module = NULL;
    PyObject *tmp_import_from_215__module = NULL;
    PyObject *tmp_import_from_216__module = NULL;
    PyObject *tmp_import_from_217__module = NULL;
    PyObject *tmp_import_from_218__module = NULL;
    PyObject *tmp_import_from_219__module = NULL;
    PyObject *tmp_import_from_21__module = NULL;
    PyObject *tmp_import_from_220__module = NULL;
    PyObject *tmp_import_from_221__module = NULL;
    PyObject *tmp_import_from_222__module = NULL;
    PyObject *tmp_import_from_223__module = NULL;
    PyObject *tmp_import_from_224__module = NULL;
    PyObject *tmp_import_from_225__module = NULL;
    PyObject *tmp_import_from_226__module = NULL;
    PyObject *tmp_import_from_227__module = NULL;
    PyObject *tmp_import_from_22__module = NULL;
    PyObject *tmp_import_from_23__module = NULL;
    PyObject *tmp_import_from_24__module = NULL;
    PyObject *tmp_import_from_25__module = NULL;
    PyObject *tmp_import_from_26__module = NULL;
    PyObject *tmp_import_from_27__module = NULL;
    PyObject *tmp_import_from_28__module = NULL;
    PyObject *tmp_import_from_29__module = NULL;
    PyObject *tmp_import_from_2__module = NULL;
    PyObject *tmp_import_from_30__module = NULL;
    PyObject *tmp_import_from_31__module = NULL;
    PyObject *tmp_import_from_32__module = NULL;
    PyObject *tmp_import_from_33__module = NULL;
    PyObject *tmp_import_from_34__module = NULL;
    PyObject *tmp_import_from_35__module = NULL;
    PyObject *tmp_import_from_36__module = NULL;
    PyObject *tmp_import_from_37__module = NULL;
    PyObject *tmp_import_from_38__module = NULL;
    PyObject *tmp_import_from_39__module = NULL;
    PyObject *tmp_import_from_3__module = NULL;
    PyObject *tmp_import_from_40__module = NULL;
    PyObject *tmp_import_from_41__module = NULL;
    PyObject *tmp_import_from_42__module = NULL;
    PyObject *tmp_import_from_43__module = NULL;
    PyObject *tmp_import_from_44__module = NULL;
    PyObject *tmp_import_from_45__module = NULL;
    PyObject *tmp_import_from_46__module = NULL;
    PyObject *tmp_import_from_47__module = NULL;
    PyObject *tmp_import_from_48__module = NULL;
    PyObject *tmp_import_from_49__module = NULL;
    PyObject *tmp_import_from_4__module = NULL;
    PyObject *tmp_import_from_50__module = NULL;
    PyObject *tmp_import_from_51__module = NULL;
    PyObject *tmp_import_from_52__module = NULL;
    PyObject *tmp_import_from_53__module = NULL;
    PyObject *tmp_import_from_54__module = NULL;
    PyObject *tmp_import_from_55__module = NULL;
    PyObject *tmp_import_from_56__module = NULL;
    PyObject *tmp_import_from_57__module = NULL;
    PyObject *tmp_import_from_58__module = NULL;
    PyObject *tmp_import_from_59__module = NULL;
    PyObject *tmp_import_from_5__module = NULL;
    PyObject *tmp_import_from_60__module = NULL;
    PyObject *tmp_import_from_61__module = NULL;
    PyObject *tmp_import_from_62__module = NULL;
    PyObject *tmp_import_from_63__module = NULL;
    PyObject *tmp_import_from_64__module = NULL;
    PyObject *tmp_import_from_65__module = NULL;
    PyObject *tmp_import_from_66__module = NULL;
    PyObject *tmp_import_from_67__module = NULL;
    PyObject *tmp_import_from_68__module = NULL;
    PyObject *tmp_import_from_69__module = NULL;
    PyObject *tmp_import_from_6__module = NULL;
    PyObject *tmp_import_from_70__module = NULL;
    PyObject *tmp_import_from_71__module = NULL;
    PyObject *tmp_import_from_72__module = NULL;
    PyObject *tmp_import_from_73__module = NULL;
    PyObject *tmp_import_from_74__module = NULL;
    PyObject *tmp_import_from_75__module = NULL;
    PyObject *tmp_import_from_76__module = NULL;
    PyObject *tmp_import_from_77__module = NULL;
    PyObject *tmp_import_from_78__module = NULL;
    PyObject *tmp_import_from_79__module = NULL;
    PyObject *tmp_import_from_7__module = NULL;
    PyObject *tmp_import_from_80__module = NULL;
    PyObject *tmp_import_from_81__module = NULL;
    PyObject *tmp_import_from_82__module = NULL;
    PyObject *tmp_import_from_83__module = NULL;
    PyObject *tmp_import_from_84__module = NULL;
    PyObject *tmp_import_from_85__module = NULL;
    PyObject *tmp_import_from_86__module = NULL;
    PyObject *tmp_import_from_87__module = NULL;
    PyObject *tmp_import_from_88__module = NULL;
    PyObject *tmp_import_from_89__module = NULL;
    PyObject *tmp_import_from_8__module = NULL;
    PyObject *tmp_import_from_90__module = NULL;
    PyObject *tmp_import_from_91__module = NULL;
    PyObject *tmp_import_from_92__module = NULL;
    PyObject *tmp_import_from_93__module = NULL;
    PyObject *tmp_import_from_94__module = NULL;
    PyObject *tmp_import_from_95__module = NULL;
    PyObject *tmp_import_from_96__module = NULL;
    PyObject *tmp_import_from_97__module = NULL;
    PyObject *tmp_import_from_98__module = NULL;
    PyObject *tmp_import_from_99__module = NULL;
    PyObject *tmp_import_from_9__module = NULL;
    struct Nuitka_FrameObject *frame_ac3b2570fea032a53c8babbaaa6c2ef6;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    bool tmp_result;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;
    PyObject *exception_keeper_type_9;
    PyObject *exception_keeper_value_9;
    PyTracebackObject *exception_keeper_tb_9;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_9;
    PyObject *exception_keeper_type_10;
    PyObject *exception_keeper_value_10;
    PyTracebackObject *exception_keeper_tb_10;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_10;
    PyObject *exception_keeper_type_11;
    PyObject *exception_keeper_value_11;
    PyTracebackObject *exception_keeper_tb_11;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_11;
    PyObject *exception_keeper_type_12;
    PyObject *exception_keeper_value_12;
    PyTracebackObject *exception_keeper_tb_12;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_12;
    PyObject *exception_keeper_type_13;
    PyObject *exception_keeper_value_13;
    PyTracebackObject *exception_keeper_tb_13;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_13;
    PyObject *exception_keeper_type_14;
    PyObject *exception_keeper_value_14;
    PyTracebackObject *exception_keeper_tb_14;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_14;
    PyObject *exception_keeper_type_15;
    PyObject *exception_keeper_value_15;
    PyTracebackObject *exception_keeper_tb_15;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_15;
    PyObject *exception_keeper_type_16;
    PyObject *exception_keeper_value_16;
    PyTracebackObject *exception_keeper_tb_16;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_16;
    PyObject *exception_keeper_type_17;
    PyObject *exception_keeper_value_17;
    PyTracebackObject *exception_keeper_tb_17;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_17;
    PyObject *exception_keeper_type_18;
    PyObject *exception_keeper_value_18;
    PyTracebackObject *exception_keeper_tb_18;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_18;
    PyObject *exception_keeper_type_19;
    PyObject *exception_keeper_value_19;
    PyTracebackObject *exception_keeper_tb_19;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_19;
    PyObject *exception_keeper_type_20;
    PyObject *exception_keeper_value_20;
    PyTracebackObject *exception_keeper_tb_20;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_20;
    PyObject *exception_keeper_type_21;
    PyObject *exception_keeper_value_21;
    PyTracebackObject *exception_keeper_tb_21;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_21;
    PyObject *exception_keeper_type_22;
    PyObject *exception_keeper_value_22;
    PyTracebackObject *exception_keeper_tb_22;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_22;
    PyObject *exception_keeper_type_23;
    PyObject *exception_keeper_value_23;
    PyTracebackObject *exception_keeper_tb_23;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_23;
    PyObject *exception_keeper_type_24;
    PyObject *exception_keeper_value_24;
    PyTracebackObject *exception_keeper_tb_24;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_24;
    PyObject *exception_keeper_type_25;
    PyObject *exception_keeper_value_25;
    PyTracebackObject *exception_keeper_tb_25;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_25;
    PyObject *exception_keeper_type_26;
    PyObject *exception_keeper_value_26;
    PyTracebackObject *exception_keeper_tb_26;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_26;
    PyObject *exception_keeper_type_27;
    PyObject *exception_keeper_value_27;
    PyTracebackObject *exception_keeper_tb_27;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_27;
    PyObject *exception_keeper_type_28;
    PyObject *exception_keeper_value_28;
    PyTracebackObject *exception_keeper_tb_28;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_28;
    PyObject *exception_keeper_type_29;
    PyObject *exception_keeper_value_29;
    PyTracebackObject *exception_keeper_tb_29;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_29;
    PyObject *exception_keeper_type_30;
    PyObject *exception_keeper_value_30;
    PyTracebackObject *exception_keeper_tb_30;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_30;
    PyObject *exception_keeper_type_31;
    PyObject *exception_keeper_value_31;
    PyTracebackObject *exception_keeper_tb_31;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_31;
    PyObject *exception_keeper_type_32;
    PyObject *exception_keeper_value_32;
    PyTracebackObject *exception_keeper_tb_32;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_32;
    PyObject *exception_keeper_type_33;
    PyObject *exception_keeper_value_33;
    PyTracebackObject *exception_keeper_tb_33;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_33;
    PyObject *exception_keeper_type_34;
    PyObject *exception_keeper_value_34;
    PyTracebackObject *exception_keeper_tb_34;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_34;
    PyObject *exception_keeper_type_35;
    PyObject *exception_keeper_value_35;
    PyTracebackObject *exception_keeper_tb_35;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_35;
    PyObject *exception_keeper_type_36;
    PyObject *exception_keeper_value_36;
    PyTracebackObject *exception_keeper_tb_36;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_36;
    PyObject *exception_keeper_type_37;
    PyObject *exception_keeper_value_37;
    PyTracebackObject *exception_keeper_tb_37;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_37;
    PyObject *exception_keeper_type_38;
    PyObject *exception_keeper_value_38;
    PyTracebackObject *exception_keeper_tb_38;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_38;
    PyObject *exception_keeper_type_39;
    PyObject *exception_keeper_value_39;
    PyTracebackObject *exception_keeper_tb_39;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_39;
    PyObject *exception_keeper_type_40;
    PyObject *exception_keeper_value_40;
    PyTracebackObject *exception_keeper_tb_40;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_40;
    PyObject *exception_keeper_type_41;
    PyObject *exception_keeper_value_41;
    PyTracebackObject *exception_keeper_tb_41;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_41;
    PyObject *exception_keeper_type_42;
    PyObject *exception_keeper_value_42;
    PyTracebackObject *exception_keeper_tb_42;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_42;
    PyObject *exception_keeper_type_43;
    PyObject *exception_keeper_value_43;
    PyTracebackObject *exception_keeper_tb_43;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_43;
    PyObject *exception_keeper_type_44;
    PyObject *exception_keeper_value_44;
    PyTracebackObject *exception_keeper_tb_44;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_44;
    PyObject *exception_keeper_type_45;
    PyObject *exception_keeper_value_45;
    PyTracebackObject *exception_keeper_tb_45;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_45;
    PyObject *exception_keeper_type_46;
    PyObject *exception_keeper_value_46;
    PyTracebackObject *exception_keeper_tb_46;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_46;
    PyObject *exception_keeper_type_47;
    PyObject *exception_keeper_value_47;
    PyTracebackObject *exception_keeper_tb_47;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_47;
    PyObject *exception_keeper_type_48;
    PyObject *exception_keeper_value_48;
    PyTracebackObject *exception_keeper_tb_48;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_48;
    PyObject *exception_keeper_type_49;
    PyObject *exception_keeper_value_49;
    PyTracebackObject *exception_keeper_tb_49;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_49;
    PyObject *exception_keeper_type_50;
    PyObject *exception_keeper_value_50;
    PyTracebackObject *exception_keeper_tb_50;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_50;
    PyObject *exception_keeper_type_51;
    PyObject *exception_keeper_value_51;
    PyTracebackObject *exception_keeper_tb_51;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_51;
    PyObject *exception_keeper_type_52;
    PyObject *exception_keeper_value_52;
    PyTracebackObject *exception_keeper_tb_52;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_52;
    PyObject *exception_keeper_type_53;
    PyObject *exception_keeper_value_53;
    PyTracebackObject *exception_keeper_tb_53;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_53;
    PyObject *exception_keeper_type_54;
    PyObject *exception_keeper_value_54;
    PyTracebackObject *exception_keeper_tb_54;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_54;
    PyObject *exception_keeper_type_55;
    PyObject *exception_keeper_value_55;
    PyTracebackObject *exception_keeper_tb_55;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_55;
    PyObject *exception_keeper_type_56;
    PyObject *exception_keeper_value_56;
    PyTracebackObject *exception_keeper_tb_56;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_56;
    PyObject *exception_keeper_type_57;
    PyObject *exception_keeper_value_57;
    PyTracebackObject *exception_keeper_tb_57;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_57;
    PyObject *exception_keeper_type_58;
    PyObject *exception_keeper_value_58;
    PyTracebackObject *exception_keeper_tb_58;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_58;
    PyObject *exception_keeper_type_59;
    PyObject *exception_keeper_value_59;
    PyTracebackObject *exception_keeper_tb_59;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_59;
    PyObject *exception_keeper_type_60;
    PyObject *exception_keeper_value_60;
    PyTracebackObject *exception_keeper_tb_60;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_60;
    PyObject *exception_keeper_type_61;
    PyObject *exception_keeper_value_61;
    PyTracebackObject *exception_keeper_tb_61;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_61;
    PyObject *exception_keeper_type_62;
    PyObject *exception_keeper_value_62;
    PyTracebackObject *exception_keeper_tb_62;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_62;
    PyObject *exception_keeper_type_63;
    PyObject *exception_keeper_value_63;
    PyTracebackObject *exception_keeper_tb_63;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_63;
    PyObject *exception_keeper_type_64;
    PyObject *exception_keeper_value_64;
    PyTracebackObject *exception_keeper_tb_64;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_64;
    PyObject *exception_keeper_type_65;
    PyObject *exception_keeper_value_65;
    PyTracebackObject *exception_keeper_tb_65;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_65;
    PyObject *exception_keeper_type_66;
    PyObject *exception_keeper_value_66;
    PyTracebackObject *exception_keeper_tb_66;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_66;
    PyObject *exception_keeper_type_67;
    PyObject *exception_keeper_value_67;
    PyTracebackObject *exception_keeper_tb_67;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_67;
    PyObject *exception_keeper_type_68;
    PyObject *exception_keeper_value_68;
    PyTracebackObject *exception_keeper_tb_68;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_68;
    PyObject *exception_keeper_type_69;
    PyObject *exception_keeper_value_69;
    PyTracebackObject *exception_keeper_tb_69;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_69;
    PyObject *exception_keeper_type_70;
    PyObject *exception_keeper_value_70;
    PyTracebackObject *exception_keeper_tb_70;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_70;
    PyObject *exception_keeper_type_71;
    PyObject *exception_keeper_value_71;
    PyTracebackObject *exception_keeper_tb_71;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_71;
    PyObject *exception_keeper_type_72;
    PyObject *exception_keeper_value_72;
    PyTracebackObject *exception_keeper_tb_72;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_72;
    PyObject *exception_keeper_type_73;
    PyObject *exception_keeper_value_73;
    PyTracebackObject *exception_keeper_tb_73;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_73;
    PyObject *exception_keeper_type_74;
    PyObject *exception_keeper_value_74;
    PyTracebackObject *exception_keeper_tb_74;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_74;
    PyObject *exception_keeper_type_75;
    PyObject *exception_keeper_value_75;
    PyTracebackObject *exception_keeper_tb_75;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_75;
    PyObject *exception_keeper_type_76;
    PyObject *exception_keeper_value_76;
    PyTracebackObject *exception_keeper_tb_76;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_76;
    PyObject *exception_keeper_type_77;
    PyObject *exception_keeper_value_77;
    PyTracebackObject *exception_keeper_tb_77;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_77;
    PyObject *exception_keeper_type_78;
    PyObject *exception_keeper_value_78;
    PyTracebackObject *exception_keeper_tb_78;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_78;
    PyObject *exception_keeper_type_79;
    PyObject *exception_keeper_value_79;
    PyTracebackObject *exception_keeper_tb_79;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_79;
    PyObject *exception_keeper_type_80;
    PyObject *exception_keeper_value_80;
    PyTracebackObject *exception_keeper_tb_80;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_80;
    PyObject *exception_keeper_type_81;
    PyObject *exception_keeper_value_81;
    PyTracebackObject *exception_keeper_tb_81;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_81;
    PyObject *exception_keeper_type_82;
    PyObject *exception_keeper_value_82;
    PyTracebackObject *exception_keeper_tb_82;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_82;
    PyObject *exception_keeper_type_83;
    PyObject *exception_keeper_value_83;
    PyTracebackObject *exception_keeper_tb_83;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_83;
    PyObject *exception_keeper_type_84;
    PyObject *exception_keeper_value_84;
    PyTracebackObject *exception_keeper_tb_84;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_84;
    PyObject *exception_keeper_type_85;
    PyObject *exception_keeper_value_85;
    PyTracebackObject *exception_keeper_tb_85;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_85;
    PyObject *exception_keeper_type_86;
    PyObject *exception_keeper_value_86;
    PyTracebackObject *exception_keeper_tb_86;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_86;
    PyObject *exception_keeper_type_87;
    PyObject *exception_keeper_value_87;
    PyTracebackObject *exception_keeper_tb_87;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_87;
    PyObject *exception_keeper_type_88;
    PyObject *exception_keeper_value_88;
    PyTracebackObject *exception_keeper_tb_88;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_88;
    PyObject *exception_keeper_type_89;
    PyObject *exception_keeper_value_89;
    PyTracebackObject *exception_keeper_tb_89;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_89;
    PyObject *exception_keeper_type_90;
    PyObject *exception_keeper_value_90;
    PyTracebackObject *exception_keeper_tb_90;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_90;
    PyObject *exception_keeper_type_91;
    PyObject *exception_keeper_value_91;
    PyTracebackObject *exception_keeper_tb_91;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_91;
    PyObject *exception_keeper_type_92;
    PyObject *exception_keeper_value_92;
    PyTracebackObject *exception_keeper_tb_92;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_92;
    PyObject *exception_keeper_type_93;
    PyObject *exception_keeper_value_93;
    PyTracebackObject *exception_keeper_tb_93;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_93;
    PyObject *exception_keeper_type_94;
    PyObject *exception_keeper_value_94;
    PyTracebackObject *exception_keeper_tb_94;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_94;
    PyObject *exception_keeper_type_95;
    PyObject *exception_keeper_value_95;
    PyTracebackObject *exception_keeper_tb_95;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_95;
    PyObject *exception_keeper_type_96;
    PyObject *exception_keeper_value_96;
    PyTracebackObject *exception_keeper_tb_96;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_96;
    PyObject *exception_keeper_type_97;
    PyObject *exception_keeper_value_97;
    PyTracebackObject *exception_keeper_tb_97;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_97;
    PyObject *exception_keeper_type_98;
    PyObject *exception_keeper_value_98;
    PyTracebackObject *exception_keeper_tb_98;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_98;
    PyObject *exception_keeper_type_99;
    PyObject *exception_keeper_value_99;
    PyTracebackObject *exception_keeper_tb_99;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_99;
    PyObject *exception_keeper_type_100;
    PyObject *exception_keeper_value_100;
    PyTracebackObject *exception_keeper_tb_100;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_100;
    PyObject *exception_keeper_type_101;
    PyObject *exception_keeper_value_101;
    PyTracebackObject *exception_keeper_tb_101;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_101;
    PyObject *exception_keeper_type_102;
    PyObject *exception_keeper_value_102;
    PyTracebackObject *exception_keeper_tb_102;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_102;
    PyObject *exception_keeper_type_103;
    PyObject *exception_keeper_value_103;
    PyTracebackObject *exception_keeper_tb_103;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_103;
    PyObject *exception_keeper_type_104;
    PyObject *exception_keeper_value_104;
    PyTracebackObject *exception_keeper_tb_104;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_104;
    PyObject *exception_keeper_type_105;
    PyObject *exception_keeper_value_105;
    PyTracebackObject *exception_keeper_tb_105;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_105;
    PyObject *exception_keeper_type_106;
    PyObject *exception_keeper_value_106;
    PyTracebackObject *exception_keeper_tb_106;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_106;
    PyObject *exception_keeper_type_107;
    PyObject *exception_keeper_value_107;
    PyTracebackObject *exception_keeper_tb_107;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_107;
    PyObject *exception_keeper_type_108;
    PyObject *exception_keeper_value_108;
    PyTracebackObject *exception_keeper_tb_108;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_108;
    PyObject *exception_keeper_type_109;
    PyObject *exception_keeper_value_109;
    PyTracebackObject *exception_keeper_tb_109;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_109;
    PyObject *exception_keeper_type_110;
    PyObject *exception_keeper_value_110;
    PyTracebackObject *exception_keeper_tb_110;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_110;
    PyObject *exception_keeper_type_111;
    PyObject *exception_keeper_value_111;
    PyTracebackObject *exception_keeper_tb_111;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_111;
    PyObject *exception_keeper_type_112;
    PyObject *exception_keeper_value_112;
    PyTracebackObject *exception_keeper_tb_112;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_112;
    PyObject *exception_keeper_type_113;
    PyObject *exception_keeper_value_113;
    PyTracebackObject *exception_keeper_tb_113;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_113;
    PyObject *exception_keeper_type_114;
    PyObject *exception_keeper_value_114;
    PyTracebackObject *exception_keeper_tb_114;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_114;
    PyObject *exception_keeper_type_115;
    PyObject *exception_keeper_value_115;
    PyTracebackObject *exception_keeper_tb_115;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_115;
    PyObject *exception_keeper_type_116;
    PyObject *exception_keeper_value_116;
    PyTracebackObject *exception_keeper_tb_116;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_116;
    PyObject *exception_keeper_type_117;
    PyObject *exception_keeper_value_117;
    PyTracebackObject *exception_keeper_tb_117;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_117;
    PyObject *exception_keeper_type_118;
    PyObject *exception_keeper_value_118;
    PyTracebackObject *exception_keeper_tb_118;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_118;
    PyObject *exception_keeper_type_119;
    PyObject *exception_keeper_value_119;
    PyTracebackObject *exception_keeper_tb_119;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_119;
    PyObject *exception_keeper_type_120;
    PyObject *exception_keeper_value_120;
    PyTracebackObject *exception_keeper_tb_120;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_120;
    PyObject *exception_keeper_type_121;
    PyObject *exception_keeper_value_121;
    PyTracebackObject *exception_keeper_tb_121;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_121;
    PyObject *exception_keeper_type_122;
    PyObject *exception_keeper_value_122;
    PyTracebackObject *exception_keeper_tb_122;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_122;
    PyObject *exception_keeper_type_123;
    PyObject *exception_keeper_value_123;
    PyTracebackObject *exception_keeper_tb_123;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_123;
    PyObject *exception_keeper_type_124;
    PyObject *exception_keeper_value_124;
    PyTracebackObject *exception_keeper_tb_124;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_124;
    PyObject *exception_keeper_type_125;
    PyObject *exception_keeper_value_125;
    PyTracebackObject *exception_keeper_tb_125;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_125;
    PyObject *exception_keeper_type_126;
    PyObject *exception_keeper_value_126;
    PyTracebackObject *exception_keeper_tb_126;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_126;
    PyObject *exception_keeper_type_127;
    PyObject *exception_keeper_value_127;
    PyTracebackObject *exception_keeper_tb_127;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_127;
    PyObject *exception_keeper_type_128;
    PyObject *exception_keeper_value_128;
    PyTracebackObject *exception_keeper_tb_128;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_128;
    PyObject *exception_keeper_type_129;
    PyObject *exception_keeper_value_129;
    PyTracebackObject *exception_keeper_tb_129;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_129;
    PyObject *exception_keeper_type_130;
    PyObject *exception_keeper_value_130;
    PyTracebackObject *exception_keeper_tb_130;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_130;
    PyObject *exception_keeper_type_131;
    PyObject *exception_keeper_value_131;
    PyTracebackObject *exception_keeper_tb_131;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_131;
    PyObject *exception_keeper_type_132;
    PyObject *exception_keeper_value_132;
    PyTracebackObject *exception_keeper_tb_132;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_132;
    PyObject *exception_keeper_type_133;
    PyObject *exception_keeper_value_133;
    PyTracebackObject *exception_keeper_tb_133;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_133;
    PyObject *exception_keeper_type_134;
    PyObject *exception_keeper_value_134;
    PyTracebackObject *exception_keeper_tb_134;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_134;
    PyObject *exception_keeper_type_135;
    PyObject *exception_keeper_value_135;
    PyTracebackObject *exception_keeper_tb_135;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_135;
    PyObject *exception_keeper_type_136;
    PyObject *exception_keeper_value_136;
    PyTracebackObject *exception_keeper_tb_136;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_136;
    PyObject *exception_keeper_type_137;
    PyObject *exception_keeper_value_137;
    PyTracebackObject *exception_keeper_tb_137;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_137;
    PyObject *exception_keeper_type_138;
    PyObject *exception_keeper_value_138;
    PyTracebackObject *exception_keeper_tb_138;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_138;
    PyObject *exception_keeper_type_139;
    PyObject *exception_keeper_value_139;
    PyTracebackObject *exception_keeper_tb_139;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_139;
    PyObject *exception_keeper_type_140;
    PyObject *exception_keeper_value_140;
    PyTracebackObject *exception_keeper_tb_140;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_140;
    PyObject *exception_keeper_type_141;
    PyObject *exception_keeper_value_141;
    PyTracebackObject *exception_keeper_tb_141;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_141;
    PyObject *exception_keeper_type_142;
    PyObject *exception_keeper_value_142;
    PyTracebackObject *exception_keeper_tb_142;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_142;
    PyObject *exception_keeper_type_143;
    PyObject *exception_keeper_value_143;
    PyTracebackObject *exception_keeper_tb_143;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_143;
    PyObject *exception_keeper_type_144;
    PyObject *exception_keeper_value_144;
    PyTracebackObject *exception_keeper_tb_144;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_144;
    PyObject *exception_keeper_type_145;
    PyObject *exception_keeper_value_145;
    PyTracebackObject *exception_keeper_tb_145;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_145;
    PyObject *exception_keeper_type_146;
    PyObject *exception_keeper_value_146;
    PyTracebackObject *exception_keeper_tb_146;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_146;
    PyObject *exception_keeper_type_147;
    PyObject *exception_keeper_value_147;
    PyTracebackObject *exception_keeper_tb_147;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_147;
    PyObject *exception_keeper_type_148;
    PyObject *exception_keeper_value_148;
    PyTracebackObject *exception_keeper_tb_148;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_148;
    PyObject *exception_keeper_type_149;
    PyObject *exception_keeper_value_149;
    PyTracebackObject *exception_keeper_tb_149;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_149;
    PyObject *exception_keeper_type_150;
    PyObject *exception_keeper_value_150;
    PyTracebackObject *exception_keeper_tb_150;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_150;
    PyObject *exception_keeper_type_151;
    PyObject *exception_keeper_value_151;
    PyTracebackObject *exception_keeper_tb_151;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_151;
    PyObject *exception_keeper_type_152;
    PyObject *exception_keeper_value_152;
    PyTracebackObject *exception_keeper_tb_152;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_152;
    PyObject *exception_keeper_type_153;
    PyObject *exception_keeper_value_153;
    PyTracebackObject *exception_keeper_tb_153;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_153;
    PyObject *exception_keeper_type_154;
    PyObject *exception_keeper_value_154;
    PyTracebackObject *exception_keeper_tb_154;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_154;
    PyObject *exception_keeper_type_155;
    PyObject *exception_keeper_value_155;
    PyTracebackObject *exception_keeper_tb_155;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_155;
    PyObject *exception_keeper_type_156;
    PyObject *exception_keeper_value_156;
    PyTracebackObject *exception_keeper_tb_156;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_156;
    PyObject *exception_keeper_type_157;
    PyObject *exception_keeper_value_157;
    PyTracebackObject *exception_keeper_tb_157;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_157;
    PyObject *exception_keeper_type_158;
    PyObject *exception_keeper_value_158;
    PyTracebackObject *exception_keeper_tb_158;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_158;
    PyObject *exception_keeper_type_159;
    PyObject *exception_keeper_value_159;
    PyTracebackObject *exception_keeper_tb_159;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_159;
    PyObject *exception_keeper_type_160;
    PyObject *exception_keeper_value_160;
    PyTracebackObject *exception_keeper_tb_160;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_160;
    PyObject *exception_keeper_type_161;
    PyObject *exception_keeper_value_161;
    PyTracebackObject *exception_keeper_tb_161;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_161;
    PyObject *exception_keeper_type_162;
    PyObject *exception_keeper_value_162;
    PyTracebackObject *exception_keeper_tb_162;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_162;
    PyObject *exception_keeper_type_163;
    PyObject *exception_keeper_value_163;
    PyTracebackObject *exception_keeper_tb_163;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_163;
    PyObject *exception_keeper_type_164;
    PyObject *exception_keeper_value_164;
    PyTracebackObject *exception_keeper_tb_164;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_164;
    PyObject *exception_keeper_type_165;
    PyObject *exception_keeper_value_165;
    PyTracebackObject *exception_keeper_tb_165;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_165;
    PyObject *exception_keeper_type_166;
    PyObject *exception_keeper_value_166;
    PyTracebackObject *exception_keeper_tb_166;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_166;
    PyObject *exception_keeper_type_167;
    PyObject *exception_keeper_value_167;
    PyTracebackObject *exception_keeper_tb_167;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_167;
    PyObject *exception_keeper_type_168;
    PyObject *exception_keeper_value_168;
    PyTracebackObject *exception_keeper_tb_168;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_168;
    PyObject *exception_keeper_type_169;
    PyObject *exception_keeper_value_169;
    PyTracebackObject *exception_keeper_tb_169;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_169;
    PyObject *exception_keeper_type_170;
    PyObject *exception_keeper_value_170;
    PyTracebackObject *exception_keeper_tb_170;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_170;
    PyObject *exception_keeper_type_171;
    PyObject *exception_keeper_value_171;
    PyTracebackObject *exception_keeper_tb_171;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_171;
    PyObject *exception_keeper_type_172;
    PyObject *exception_keeper_value_172;
    PyTracebackObject *exception_keeper_tb_172;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_172;
    PyObject *exception_keeper_type_173;
    PyObject *exception_keeper_value_173;
    PyTracebackObject *exception_keeper_tb_173;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_173;
    PyObject *exception_keeper_type_174;
    PyObject *exception_keeper_value_174;
    PyTracebackObject *exception_keeper_tb_174;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_174;
    PyObject *exception_keeper_type_175;
    PyObject *exception_keeper_value_175;
    PyTracebackObject *exception_keeper_tb_175;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_175;
    PyObject *exception_keeper_type_176;
    PyObject *exception_keeper_value_176;
    PyTracebackObject *exception_keeper_tb_176;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_176;
    PyObject *exception_keeper_type_177;
    PyObject *exception_keeper_value_177;
    PyTracebackObject *exception_keeper_tb_177;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_177;
    PyObject *exception_keeper_type_178;
    PyObject *exception_keeper_value_178;
    PyTracebackObject *exception_keeper_tb_178;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_178;
    PyObject *exception_keeper_type_179;
    PyObject *exception_keeper_value_179;
    PyTracebackObject *exception_keeper_tb_179;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_179;
    PyObject *exception_keeper_type_180;
    PyObject *exception_keeper_value_180;
    PyTracebackObject *exception_keeper_tb_180;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_180;
    PyObject *exception_keeper_type_181;
    PyObject *exception_keeper_value_181;
    PyTracebackObject *exception_keeper_tb_181;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_181;
    PyObject *exception_keeper_type_182;
    PyObject *exception_keeper_value_182;
    PyTracebackObject *exception_keeper_tb_182;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_182;
    PyObject *exception_keeper_type_183;
    PyObject *exception_keeper_value_183;
    PyTracebackObject *exception_keeper_tb_183;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_183;
    PyObject *exception_keeper_type_184;
    PyObject *exception_keeper_value_184;
    PyTracebackObject *exception_keeper_tb_184;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_184;
    PyObject *exception_keeper_type_185;
    PyObject *exception_keeper_value_185;
    PyTracebackObject *exception_keeper_tb_185;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_185;
    PyObject *exception_keeper_type_186;
    PyObject *exception_keeper_value_186;
    PyTracebackObject *exception_keeper_tb_186;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_186;
    PyObject *exception_keeper_type_187;
    PyObject *exception_keeper_value_187;
    PyTracebackObject *exception_keeper_tb_187;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_187;
    PyObject *exception_keeper_type_188;
    PyObject *exception_keeper_value_188;
    PyTracebackObject *exception_keeper_tb_188;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_188;
    PyObject *exception_keeper_type_189;
    PyObject *exception_keeper_value_189;
    PyTracebackObject *exception_keeper_tb_189;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_189;
    PyObject *exception_keeper_type_190;
    PyObject *exception_keeper_value_190;
    PyTracebackObject *exception_keeper_tb_190;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_190;
    PyObject *exception_keeper_type_191;
    PyObject *exception_keeper_value_191;
    PyTracebackObject *exception_keeper_tb_191;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_191;
    PyObject *exception_keeper_type_192;
    PyObject *exception_keeper_value_192;
    PyTracebackObject *exception_keeper_tb_192;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_192;
    PyObject *exception_keeper_type_193;
    PyObject *exception_keeper_value_193;
    PyTracebackObject *exception_keeper_tb_193;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_193;
    PyObject *exception_keeper_type_194;
    PyObject *exception_keeper_value_194;
    PyTracebackObject *exception_keeper_tb_194;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_194;
    PyObject *exception_keeper_type_195;
    PyObject *exception_keeper_value_195;
    PyTracebackObject *exception_keeper_tb_195;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_195;
    PyObject *exception_keeper_type_196;
    PyObject *exception_keeper_value_196;
    PyTracebackObject *exception_keeper_tb_196;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_196;
    PyObject *exception_keeper_type_197;
    PyObject *exception_keeper_value_197;
    PyTracebackObject *exception_keeper_tb_197;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_197;
    PyObject *exception_keeper_type_198;
    PyObject *exception_keeper_value_198;
    PyTracebackObject *exception_keeper_tb_198;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_198;
    PyObject *exception_keeper_type_199;
    PyObject *exception_keeper_value_199;
    PyTracebackObject *exception_keeper_tb_199;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_199;
    PyObject *exception_keeper_type_200;
    PyObject *exception_keeper_value_200;
    PyTracebackObject *exception_keeper_tb_200;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_200;
    PyObject *exception_keeper_type_201;
    PyObject *exception_keeper_value_201;
    PyTracebackObject *exception_keeper_tb_201;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_201;
    PyObject *exception_keeper_type_202;
    PyObject *exception_keeper_value_202;
    PyTracebackObject *exception_keeper_tb_202;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_202;
    PyObject *exception_keeper_type_203;
    PyObject *exception_keeper_value_203;
    PyTracebackObject *exception_keeper_tb_203;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_203;
    PyObject *exception_keeper_type_204;
    PyObject *exception_keeper_value_204;
    PyTracebackObject *exception_keeper_tb_204;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_204;
    PyObject *exception_keeper_type_205;
    PyObject *exception_keeper_value_205;
    PyTracebackObject *exception_keeper_tb_205;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_205;
    PyObject *exception_keeper_type_206;
    PyObject *exception_keeper_value_206;
    PyTracebackObject *exception_keeper_tb_206;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_206;
    PyObject *exception_keeper_type_207;
    PyObject *exception_keeper_value_207;
    PyTracebackObject *exception_keeper_tb_207;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_207;
    PyObject *exception_keeper_type_208;
    PyObject *exception_keeper_value_208;
    PyTracebackObject *exception_keeper_tb_208;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_208;
    PyObject *exception_keeper_type_209;
    PyObject *exception_keeper_value_209;
    PyTracebackObject *exception_keeper_tb_209;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_209;
    PyObject *exception_keeper_type_210;
    PyObject *exception_keeper_value_210;
    PyTracebackObject *exception_keeper_tb_210;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_210;
    PyObject *exception_keeper_type_211;
    PyObject *exception_keeper_value_211;
    PyTracebackObject *exception_keeper_tb_211;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_211;
    PyObject *exception_keeper_type_212;
    PyObject *exception_keeper_value_212;
    PyTracebackObject *exception_keeper_tb_212;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_212;
    PyObject *exception_keeper_type_213;
    PyObject *exception_keeper_value_213;
    PyTracebackObject *exception_keeper_tb_213;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_213;
    PyObject *exception_keeper_type_214;
    PyObject *exception_keeper_value_214;
    PyTracebackObject *exception_keeper_tb_214;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_214;
    PyObject *exception_keeper_type_215;
    PyObject *exception_keeper_value_215;
    PyTracebackObject *exception_keeper_tb_215;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_215;
    PyObject *exception_keeper_type_216;
    PyObject *exception_keeper_value_216;
    PyTracebackObject *exception_keeper_tb_216;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_216;
    PyObject *exception_keeper_type_217;
    PyObject *exception_keeper_value_217;
    PyTracebackObject *exception_keeper_tb_217;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_217;
    PyObject *exception_keeper_type_218;
    PyObject *exception_keeper_value_218;
    PyTracebackObject *exception_keeper_tb_218;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_218;
    PyObject *exception_keeper_type_219;
    PyObject *exception_keeper_value_219;
    PyTracebackObject *exception_keeper_tb_219;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_219;
    PyObject *exception_keeper_type_220;
    PyObject *exception_keeper_value_220;
    PyTracebackObject *exception_keeper_tb_220;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_220;
    PyObject *exception_keeper_type_221;
    PyObject *exception_keeper_value_221;
    PyTracebackObject *exception_keeper_tb_221;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_221;
    PyObject *exception_keeper_type_222;
    PyObject *exception_keeper_value_222;
    PyTracebackObject *exception_keeper_tb_222;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_222;
    PyObject *exception_keeper_type_223;
    PyObject *exception_keeper_value_223;
    PyTracebackObject *exception_keeper_tb_223;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_223;
    PyObject *exception_keeper_type_224;
    PyObject *exception_keeper_value_224;
    PyTracebackObject *exception_keeper_tb_224;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_224;
    PyObject *exception_keeper_type_225;
    PyObject *exception_keeper_value_225;
    PyTracebackObject *exception_keeper_tb_225;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_225;
    PyObject *exception_keeper_type_226;
    PyObject *exception_keeper_value_226;
    PyTracebackObject *exception_keeper_tb_226;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_226;
    PyObject *exception_keeper_type_227;
    PyObject *exception_keeper_value_227;
    PyTracebackObject *exception_keeper_tb_227;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_227;

    // Module code.
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = Py_None;
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[0], tmp_assign_source_1);
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = module_filename_obj;
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1], tmp_assign_source_2);
    }
    // Frame without reuse.
    frame_ac3b2570fea032a53c8babbaaa6c2ef6 = MAKE_MODULE_FRAME(codeobj_ac3b2570fea032a53c8babbaaa6c2ef6, module_youtube_dl$extractor$extractors);

    // Push the new frame as the currently active one, and we should be exclusively
    // owning it.
    pushFrameStack(frame_ac3b2570fea032a53c8babbaaa6c2ef6);
    assert(Py_REFCNT(frame_ac3b2570fea032a53c8babbaaa6c2ef6) == 2);

    // Framed code:
    {
        PyObject *tmp_assattr_value_1;
        PyObject *tmp_assattr_target_1;
        tmp_assattr_value_1 = module_filename_obj;
        tmp_assattr_target_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2]);

        if (unlikely(tmp_assattr_target_1 == NULL)) {
            tmp_assattr_target_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[2]);
        }

        assert(!(tmp_assattr_target_1 == NULL));
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, mod_consts[3], tmp_assattr_value_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assattr_value_2;
        PyObject *tmp_assattr_target_2;
        tmp_assattr_value_2 = Py_True;
        tmp_assattr_target_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2]);

        if (unlikely(tmp_assattr_target_2 == NULL)) {
            tmp_assattr_target_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[2]);
        }

        assert(!(tmp_assattr_target_2 == NULL));
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, mod_consts[4], tmp_assattr_value_2);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_3;
        tmp_assign_source_3 = Py_None;
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[5], tmp_assign_source_3);
    }
    {
        PyObject *tmp_assign_source_4;
        {
            PyObject *hard_module = IMPORT_HARD___FUTURE__();
            tmp_assign_source_4 = LOOKUP_ATTRIBUTE(hard_module, mod_consts[6]);
        }
        assert(!(tmp_assign_source_4 == NULL));
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[6], tmp_assign_source_4);
    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_name_value_1;
        PyObject *tmp_globals_arg_value_1;
        PyObject *tmp_locals_arg_value_1;
        PyObject *tmp_fromlist_value_1;
        PyObject *tmp_level_value_1;
        tmp_name_value_1 = mod_consts[7];
        tmp_globals_arg_value_1 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_1 = Py_None;
        tmp_fromlist_value_1 = mod_consts[8];
        tmp_level_value_1 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 4;
        tmp_assign_source_5 = IMPORT_MODULE5(tmp_name_value_1, tmp_globals_arg_value_1, tmp_locals_arg_value_1, tmp_fromlist_value_1, tmp_level_value_1);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 4;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_1__module == NULL);
        tmp_import_from_1__module = tmp_assign_source_5;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_import_name_from_1;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_1 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_1)) {
            tmp_assign_source_6 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[10],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_6 = IMPORT_NAME(tmp_import_name_from_1, mod_consts[10]);
        }

        if (tmp_assign_source_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 4;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[10], tmp_assign_source_6);
    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_import_name_from_2;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_2 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_2)) {
            tmp_assign_source_7 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_2,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[12],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_7 = IMPORT_NAME(tmp_import_name_from_2, mod_consts[12]);
        }

        if (tmp_assign_source_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 4;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[12], tmp_assign_source_7);
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;
    CHECK_OBJECT(tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;
    {
        PyObject *tmp_assign_source_8;
        PyObject *tmp_name_value_2;
        PyObject *tmp_globals_arg_value_2;
        PyObject *tmp_locals_arg_value_2;
        PyObject *tmp_fromlist_value_2;
        PyObject *tmp_level_value_2;
        tmp_name_value_2 = mod_consts[13];
        tmp_globals_arg_value_2 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_2 = Py_None;
        tmp_fromlist_value_2 = mod_consts[14];
        tmp_level_value_2 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 8;
        tmp_assign_source_8 = IMPORT_MODULE5(tmp_name_value_2, tmp_globals_arg_value_2, tmp_locals_arg_value_2, tmp_fromlist_value_2, tmp_level_value_2);
        if (tmp_assign_source_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 8;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_2__module == NULL);
        tmp_import_from_2__module = tmp_assign_source_8;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_import_name_from_3;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_3 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_3)) {
            tmp_assign_source_9 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_3,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[15],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_9 = IMPORT_NAME(tmp_import_name_from_3, mod_consts[15]);
        }

        if (tmp_assign_source_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 8;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[15], tmp_assign_source_9);
    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_import_name_from_4;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_4 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_4)) {
            tmp_assign_source_10 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_4,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[16],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_10 = IMPORT_NAME(tmp_import_name_from_4, mod_consts[16]);
        }

        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 8;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[16], tmp_assign_source_10);
    }
    goto try_end_2;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_2__module);
    Py_DECREF(tmp_import_from_2__module);
    tmp_import_from_2__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto frame_exception_exit_1;
    // End of try:
    try_end_2:;
    CHECK_OBJECT(tmp_import_from_2__module);
    Py_DECREF(tmp_import_from_2__module);
    tmp_import_from_2__module = NULL;
    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_name_value_3;
        PyObject *tmp_globals_arg_value_3;
        PyObject *tmp_locals_arg_value_3;
        PyObject *tmp_fromlist_value_3;
        PyObject *tmp_level_value_3;
        tmp_name_value_3 = mod_consts[17];
        tmp_globals_arg_value_3 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_3 = Py_None;
        tmp_fromlist_value_3 = mod_consts[18];
        tmp_level_value_3 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 12;
        tmp_assign_source_11 = IMPORT_MODULE5(tmp_name_value_3, tmp_globals_arg_value_3, tmp_locals_arg_value_3, tmp_fromlist_value_3, tmp_level_value_3);
        if (tmp_assign_source_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 12;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_3__module == NULL);
        tmp_import_from_3__module = tmp_assign_source_11;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_12;
        PyObject *tmp_import_name_from_5;
        CHECK_OBJECT(tmp_import_from_3__module);
        tmp_import_name_from_5 = tmp_import_from_3__module;
        if (PyModule_Check(tmp_import_name_from_5)) {
            tmp_assign_source_12 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_5,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[19],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_12 = IMPORT_NAME(tmp_import_name_from_5, mod_consts[19]);
        }

        if (tmp_assign_source_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 12;

            goto try_except_handler_3;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[19], tmp_assign_source_12);
    }
    {
        PyObject *tmp_assign_source_13;
        PyObject *tmp_import_name_from_6;
        CHECK_OBJECT(tmp_import_from_3__module);
        tmp_import_name_from_6 = tmp_import_from_3__module;
        if (PyModule_Check(tmp_import_name_from_6)) {
            tmp_assign_source_13 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_6,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[20],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_13 = IMPORT_NAME(tmp_import_name_from_6, mod_consts[20]);
        }

        if (tmp_assign_source_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 12;

            goto try_except_handler_3;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[20], tmp_assign_source_13);
    }
    goto try_end_3;
    // Exception handler code:
    try_except_handler_3:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_3__module);
    Py_DECREF(tmp_import_from_3__module);
    tmp_import_from_3__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto frame_exception_exit_1;
    // End of try:
    try_end_3:;
    CHECK_OBJECT(tmp_import_from_3__module);
    Py_DECREF(tmp_import_from_3__module);
    tmp_import_from_3__module = NULL;
    {
        PyObject *tmp_assign_source_14;
        PyObject *tmp_import_name_from_7;
        PyObject *tmp_name_value_4;
        PyObject *tmp_globals_arg_value_4;
        PyObject *tmp_locals_arg_value_4;
        PyObject *tmp_fromlist_value_4;
        PyObject *tmp_level_value_4;
        tmp_name_value_4 = mod_consts[21];
        tmp_globals_arg_value_4 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_4 = Py_None;
        tmp_fromlist_value_4 = mod_consts[22];
        tmp_level_value_4 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 16;
        tmp_import_name_from_7 = IMPORT_MODULE5(tmp_name_value_4, tmp_globals_arg_value_4, tmp_locals_arg_value_4, tmp_fromlist_value_4, tmp_level_value_4);
        if (tmp_import_name_from_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 16;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_7)) {
            tmp_assign_source_14 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_7,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[23],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_14 = IMPORT_NAME(tmp_import_name_from_7, mod_consts[23]);
        }

        Py_DECREF(tmp_import_name_from_7);
        if (tmp_assign_source_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 16;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[23], tmp_assign_source_14);
    }
    {
        PyObject *tmp_assign_source_15;
        PyObject *tmp_name_value_5;
        PyObject *tmp_globals_arg_value_5;
        PyObject *tmp_locals_arg_value_5;
        PyObject *tmp_fromlist_value_5;
        PyObject *tmp_level_value_5;
        tmp_name_value_5 = mod_consts[24];
        tmp_globals_arg_value_5 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_5 = Py_None;
        tmp_fromlist_value_5 = mod_consts[25];
        tmp_level_value_5 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 17;
        tmp_assign_source_15 = IMPORT_MODULE5(tmp_name_value_5, tmp_globals_arg_value_5, tmp_locals_arg_value_5, tmp_fromlist_value_5, tmp_level_value_5);
        if (tmp_assign_source_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 17;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_4__module == NULL);
        tmp_import_from_4__module = tmp_assign_source_15;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_import_name_from_8;
        CHECK_OBJECT(tmp_import_from_4__module);
        tmp_import_name_from_8 = tmp_import_from_4__module;
        if (PyModule_Check(tmp_import_name_from_8)) {
            tmp_assign_source_16 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_8,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[26],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_16 = IMPORT_NAME(tmp_import_name_from_8, mod_consts[26]);
        }

        if (tmp_assign_source_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 17;

            goto try_except_handler_4;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[26], tmp_assign_source_16);
    }
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_import_name_from_9;
        CHECK_OBJECT(tmp_import_from_4__module);
        tmp_import_name_from_9 = tmp_import_from_4__module;
        if (PyModule_Check(tmp_import_name_from_9)) {
            tmp_assign_source_17 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_9,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[27],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_17 = IMPORT_NAME(tmp_import_name_from_9, mod_consts[27]);
        }

        if (tmp_assign_source_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 17;

            goto try_except_handler_4;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[27], tmp_assign_source_17);
    }
    goto try_end_4;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_4__module);
    Py_DECREF(tmp_import_from_4__module);
    tmp_import_from_4__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;
    CHECK_OBJECT(tmp_import_from_4__module);
    Py_DECREF(tmp_import_from_4__module);
    tmp_import_from_4__module = NULL;
    {
        PyObject *tmp_assign_source_18;
        PyObject *tmp_import_name_from_10;
        PyObject *tmp_name_value_6;
        PyObject *tmp_globals_arg_value_6;
        PyObject *tmp_locals_arg_value_6;
        PyObject *tmp_fromlist_value_6;
        PyObject *tmp_level_value_6;
        tmp_name_value_6 = mod_consts[28];
        tmp_globals_arg_value_6 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_6 = Py_None;
        tmp_fromlist_value_6 = mod_consts[29];
        tmp_level_value_6 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 21;
        tmp_import_name_from_10 = IMPORT_MODULE5(tmp_name_value_6, tmp_globals_arg_value_6, tmp_locals_arg_value_6, tmp_fromlist_value_6, tmp_level_value_6);
        if (tmp_import_name_from_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 21;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_10)) {
            tmp_assign_source_18 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_10,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[30],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_18 = IMPORT_NAME(tmp_import_name_from_10, mod_consts[30]);
        }

        Py_DECREF(tmp_import_name_from_10);
        if (tmp_assign_source_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 21;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[30], tmp_assign_source_18);
    }
    {
        PyObject *tmp_assign_source_19;
        PyObject *tmp_import_name_from_11;
        PyObject *tmp_name_value_7;
        PyObject *tmp_globals_arg_value_7;
        PyObject *tmp_locals_arg_value_7;
        PyObject *tmp_fromlist_value_7;
        PyObject *tmp_level_value_7;
        tmp_name_value_7 = mod_consts[31];
        tmp_globals_arg_value_7 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_7 = Py_None;
        tmp_fromlist_value_7 = mod_consts[32];
        tmp_level_value_7 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 22;
        tmp_import_name_from_11 = IMPORT_MODULE5(tmp_name_value_7, tmp_globals_arg_value_7, tmp_locals_arg_value_7, tmp_fromlist_value_7, tmp_level_value_7);
        if (tmp_import_name_from_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 22;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_11)) {
            tmp_assign_source_19 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_11,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[33],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_19 = IMPORT_NAME(tmp_import_name_from_11, mod_consts[33]);
        }

        Py_DECREF(tmp_import_name_from_11);
        if (tmp_assign_source_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 22;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[33], tmp_assign_source_19);
    }
    {
        PyObject *tmp_assign_source_20;
        PyObject *tmp_name_value_8;
        PyObject *tmp_globals_arg_value_8;
        PyObject *tmp_locals_arg_value_8;
        PyObject *tmp_fromlist_value_8;
        PyObject *tmp_level_value_8;
        tmp_name_value_8 = mod_consts[34];
        tmp_globals_arg_value_8 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_8 = Py_None;
        tmp_fromlist_value_8 = mod_consts[35];
        tmp_level_value_8 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 23;
        tmp_assign_source_20 = IMPORT_MODULE5(tmp_name_value_8, tmp_globals_arg_value_8, tmp_locals_arg_value_8, tmp_fromlist_value_8, tmp_level_value_8);
        if (tmp_assign_source_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 23;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_5__module == NULL);
        tmp_import_from_5__module = tmp_assign_source_20;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_21;
        PyObject *tmp_import_name_from_12;
        CHECK_OBJECT(tmp_import_from_5__module);
        tmp_import_name_from_12 = tmp_import_from_5__module;
        if (PyModule_Check(tmp_import_name_from_12)) {
            tmp_assign_source_21 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_12,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[36],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_21 = IMPORT_NAME(tmp_import_name_from_12, mod_consts[36]);
        }

        if (tmp_assign_source_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 23;

            goto try_except_handler_5;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[36], tmp_assign_source_21);
    }
    {
        PyObject *tmp_assign_source_22;
        PyObject *tmp_import_name_from_13;
        CHECK_OBJECT(tmp_import_from_5__module);
        tmp_import_name_from_13 = tmp_import_from_5__module;
        if (PyModule_Check(tmp_import_name_from_13)) {
            tmp_assign_source_22 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_13,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[37],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_22 = IMPORT_NAME(tmp_import_name_from_13, mod_consts[37]);
        }

        if (tmp_assign_source_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 23;

            goto try_except_handler_5;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[37], tmp_assign_source_22);
    }
    {
        PyObject *tmp_assign_source_23;
        PyObject *tmp_import_name_from_14;
        CHECK_OBJECT(tmp_import_from_5__module);
        tmp_import_name_from_14 = tmp_import_from_5__module;
        if (PyModule_Check(tmp_import_name_from_14)) {
            tmp_assign_source_23 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_14,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[38],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_23 = IMPORT_NAME(tmp_import_name_from_14, mod_consts[38]);
        }

        if (tmp_assign_source_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 23;

            goto try_except_handler_5;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[38], tmp_assign_source_23);
    }
    {
        PyObject *tmp_assign_source_24;
        PyObject *tmp_import_name_from_15;
        CHECK_OBJECT(tmp_import_from_5__module);
        tmp_import_name_from_15 = tmp_import_from_5__module;
        if (PyModule_Check(tmp_import_name_from_15)) {
            tmp_assign_source_24 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_15,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[39],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_24 = IMPORT_NAME(tmp_import_name_from_15, mod_consts[39]);
        }

        if (tmp_assign_source_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 23;

            goto try_except_handler_5;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[39], tmp_assign_source_24);
    }
    {
        PyObject *tmp_assign_source_25;
        PyObject *tmp_import_name_from_16;
        CHECK_OBJECT(tmp_import_from_5__module);
        tmp_import_name_from_16 = tmp_import_from_5__module;
        if (PyModule_Check(tmp_import_name_from_16)) {
            tmp_assign_source_25 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_16,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[40],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_25 = IMPORT_NAME(tmp_import_name_from_16, mod_consts[40]);
        }

        if (tmp_assign_source_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 23;

            goto try_except_handler_5;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[40], tmp_assign_source_25);
    }
    goto try_end_5;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_5 = exception_type;
    exception_keeper_value_5 = exception_value;
    exception_keeper_tb_5 = exception_tb;
    exception_keeper_lineno_5 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_5__module);
    Py_DECREF(tmp_import_from_5__module);
    tmp_import_from_5__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_5;
    exception_value = exception_keeper_value_5;
    exception_tb = exception_keeper_tb_5;
    exception_lineno = exception_keeper_lineno_5;

    goto frame_exception_exit_1;
    // End of try:
    try_end_5:;
    CHECK_OBJECT(tmp_import_from_5__module);
    Py_DECREF(tmp_import_from_5__module);
    tmp_import_from_5__module = NULL;
    {
        PyObject *tmp_assign_source_26;
        PyObject *tmp_import_name_from_17;
        PyObject *tmp_name_value_9;
        PyObject *tmp_globals_arg_value_9;
        PyObject *tmp_locals_arg_value_9;
        PyObject *tmp_fromlist_value_9;
        PyObject *tmp_level_value_9;
        tmp_name_value_9 = mod_consts[41];
        tmp_globals_arg_value_9 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_9 = Py_None;
        tmp_fromlist_value_9 = mod_consts[42];
        tmp_level_value_9 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 30;
        tmp_import_name_from_17 = IMPORT_MODULE5(tmp_name_value_9, tmp_globals_arg_value_9, tmp_locals_arg_value_9, tmp_fromlist_value_9, tmp_level_value_9);
        if (tmp_import_name_from_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 30;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_17)) {
            tmp_assign_source_26 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_17,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[43],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_26 = IMPORT_NAME(tmp_import_name_from_17, mod_consts[43]);
        }

        Py_DECREF(tmp_import_name_from_17);
        if (tmp_assign_source_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 30;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[43], tmp_assign_source_26);
    }
    {
        PyObject *tmp_assign_source_27;
        PyObject *tmp_name_value_10;
        PyObject *tmp_globals_arg_value_10;
        PyObject *tmp_locals_arg_value_10;
        PyObject *tmp_fromlist_value_10;
        PyObject *tmp_level_value_10;
        tmp_name_value_10 = mod_consts[44];
        tmp_globals_arg_value_10 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_10 = Py_None;
        tmp_fromlist_value_10 = mod_consts[45];
        tmp_level_value_10 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 31;
        tmp_assign_source_27 = IMPORT_MODULE5(tmp_name_value_10, tmp_globals_arg_value_10, tmp_locals_arg_value_10, tmp_fromlist_value_10, tmp_level_value_10);
        if (tmp_assign_source_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_6__module == NULL);
        tmp_import_from_6__module = tmp_assign_source_27;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_28;
        PyObject *tmp_import_name_from_18;
        CHECK_OBJECT(tmp_import_from_6__module);
        tmp_import_name_from_18 = tmp_import_from_6__module;
        if (PyModule_Check(tmp_import_name_from_18)) {
            tmp_assign_source_28 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_18,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[46],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_28 = IMPORT_NAME(tmp_import_name_from_18, mod_consts[46]);
        }

        if (tmp_assign_source_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto try_except_handler_6;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[46], tmp_assign_source_28);
    }
    {
        PyObject *tmp_assign_source_29;
        PyObject *tmp_import_name_from_19;
        CHECK_OBJECT(tmp_import_from_6__module);
        tmp_import_name_from_19 = tmp_import_from_6__module;
        if (PyModule_Check(tmp_import_name_from_19)) {
            tmp_assign_source_29 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_19,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[47],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_29 = IMPORT_NAME(tmp_import_name_from_19, mod_consts[47]);
        }

        if (tmp_assign_source_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto try_except_handler_6;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[47], tmp_assign_source_29);
    }
    {
        PyObject *tmp_assign_source_30;
        PyObject *tmp_import_name_from_20;
        CHECK_OBJECT(tmp_import_from_6__module);
        tmp_import_name_from_20 = tmp_import_from_6__module;
        if (PyModule_Check(tmp_import_name_from_20)) {
            tmp_assign_source_30 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_20,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[48],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_30 = IMPORT_NAME(tmp_import_name_from_20, mod_consts[48]);
        }

        if (tmp_assign_source_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto try_except_handler_6;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[48], tmp_assign_source_30);
    }
    {
        PyObject *tmp_assign_source_31;
        PyObject *tmp_import_name_from_21;
        CHECK_OBJECT(tmp_import_from_6__module);
        tmp_import_name_from_21 = tmp_import_from_6__module;
        if (PyModule_Check(tmp_import_name_from_21)) {
            tmp_assign_source_31 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_21,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[49],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_31 = IMPORT_NAME(tmp_import_name_from_21, mod_consts[49]);
        }

        if (tmp_assign_source_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto try_except_handler_6;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[49], tmp_assign_source_31);
    }
    {
        PyObject *tmp_assign_source_32;
        PyObject *tmp_import_name_from_22;
        CHECK_OBJECT(tmp_import_from_6__module);
        tmp_import_name_from_22 = tmp_import_from_6__module;
        if (PyModule_Check(tmp_import_name_from_22)) {
            tmp_assign_source_32 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_22,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[50],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_32 = IMPORT_NAME(tmp_import_name_from_22, mod_consts[50]);
        }

        if (tmp_assign_source_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto try_except_handler_6;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[50], tmp_assign_source_32);
    }
    {
        PyObject *tmp_assign_source_33;
        PyObject *tmp_import_name_from_23;
        CHECK_OBJECT(tmp_import_from_6__module);
        tmp_import_name_from_23 = tmp_import_from_6__module;
        if (PyModule_Check(tmp_import_name_from_23)) {
            tmp_assign_source_33 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_23,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[51],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_33 = IMPORT_NAME(tmp_import_name_from_23, mod_consts[51]);
        }

        if (tmp_assign_source_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto try_except_handler_6;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[51], tmp_assign_source_33);
    }
    goto try_end_6;
    // Exception handler code:
    try_except_handler_6:;
    exception_keeper_type_6 = exception_type;
    exception_keeper_value_6 = exception_value;
    exception_keeper_tb_6 = exception_tb;
    exception_keeper_lineno_6 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_6__module);
    Py_DECREF(tmp_import_from_6__module);
    tmp_import_from_6__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_6;
    exception_value = exception_keeper_value_6;
    exception_tb = exception_keeper_tb_6;
    exception_lineno = exception_keeper_lineno_6;

    goto frame_exception_exit_1;
    // End of try:
    try_end_6:;
    CHECK_OBJECT(tmp_import_from_6__module);
    Py_DECREF(tmp_import_from_6__module);
    tmp_import_from_6__module = NULL;
    {
        PyObject *tmp_assign_source_34;
        PyObject *tmp_import_name_from_24;
        PyObject *tmp_name_value_11;
        PyObject *tmp_globals_arg_value_11;
        PyObject *tmp_locals_arg_value_11;
        PyObject *tmp_fromlist_value_11;
        PyObject *tmp_level_value_11;
        tmp_name_value_11 = mod_consts[52];
        tmp_globals_arg_value_11 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_11 = Py_None;
        tmp_fromlist_value_11 = mod_consts[53];
        tmp_level_value_11 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 39;
        tmp_import_name_from_24 = IMPORT_MODULE5(tmp_name_value_11, tmp_globals_arg_value_11, tmp_locals_arg_value_11, tmp_fromlist_value_11, tmp_level_value_11);
        if (tmp_import_name_from_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 39;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_24)) {
            tmp_assign_source_34 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_24,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[54],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_34 = IMPORT_NAME(tmp_import_name_from_24, mod_consts[54]);
        }

        Py_DECREF(tmp_import_name_from_24);
        if (tmp_assign_source_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 39;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[54], tmp_assign_source_34);
    }
    {
        PyObject *tmp_assign_source_35;
        PyObject *tmp_import_name_from_25;
        PyObject *tmp_name_value_12;
        PyObject *tmp_globals_arg_value_12;
        PyObject *tmp_locals_arg_value_12;
        PyObject *tmp_fromlist_value_12;
        PyObject *tmp_level_value_12;
        tmp_name_value_12 = mod_consts[55];
        tmp_globals_arg_value_12 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_12 = Py_None;
        tmp_fromlist_value_12 = mod_consts[56];
        tmp_level_value_12 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 40;
        tmp_import_name_from_25 = IMPORT_MODULE5(tmp_name_value_12, tmp_globals_arg_value_12, tmp_locals_arg_value_12, tmp_fromlist_value_12, tmp_level_value_12);
        if (tmp_import_name_from_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 40;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_25)) {
            tmp_assign_source_35 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_25,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[57],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_35 = IMPORT_NAME(tmp_import_name_from_25, mod_consts[57]);
        }

        Py_DECREF(tmp_import_name_from_25);
        if (tmp_assign_source_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 40;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[57], tmp_assign_source_35);
    }
    {
        PyObject *tmp_assign_source_36;
        PyObject *tmp_import_name_from_26;
        PyObject *tmp_name_value_13;
        PyObject *tmp_globals_arg_value_13;
        PyObject *tmp_locals_arg_value_13;
        PyObject *tmp_fromlist_value_13;
        PyObject *tmp_level_value_13;
        tmp_name_value_13 = mod_consts[58];
        tmp_globals_arg_value_13 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_13 = Py_None;
        tmp_fromlist_value_13 = mod_consts[59];
        tmp_level_value_13 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 41;
        tmp_import_name_from_26 = IMPORT_MODULE5(tmp_name_value_13, tmp_globals_arg_value_13, tmp_locals_arg_value_13, tmp_fromlist_value_13, tmp_level_value_13);
        if (tmp_import_name_from_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 41;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_26)) {
            tmp_assign_source_36 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_26,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[60],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_36 = IMPORT_NAME(tmp_import_name_from_26, mod_consts[60]);
        }

        Py_DECREF(tmp_import_name_from_26);
        if (tmp_assign_source_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 41;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[60], tmp_assign_source_36);
    }
    {
        PyObject *tmp_assign_source_37;
        PyObject *tmp_import_name_from_27;
        PyObject *tmp_name_value_14;
        PyObject *tmp_globals_arg_value_14;
        PyObject *tmp_locals_arg_value_14;
        PyObject *tmp_fromlist_value_14;
        PyObject *tmp_level_value_14;
        tmp_name_value_14 = mod_consts[61];
        tmp_globals_arg_value_14 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_14 = Py_None;
        tmp_fromlist_value_14 = mod_consts[62];
        tmp_level_value_14 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 42;
        tmp_import_name_from_27 = IMPORT_MODULE5(tmp_name_value_14, tmp_globals_arg_value_14, tmp_locals_arg_value_14, tmp_fromlist_value_14, tmp_level_value_14);
        if (tmp_import_name_from_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 42;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_27)) {
            tmp_assign_source_37 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_27,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[63],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_37 = IMPORT_NAME(tmp_import_name_from_27, mod_consts[63]);
        }

        Py_DECREF(tmp_import_name_from_27);
        if (tmp_assign_source_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 42;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[63], tmp_assign_source_37);
    }
    {
        PyObject *tmp_assign_source_38;
        PyObject *tmp_import_name_from_28;
        PyObject *tmp_name_value_15;
        PyObject *tmp_globals_arg_value_15;
        PyObject *tmp_locals_arg_value_15;
        PyObject *tmp_fromlist_value_15;
        PyObject *tmp_level_value_15;
        tmp_name_value_15 = mod_consts[64];
        tmp_globals_arg_value_15 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_15 = Py_None;
        tmp_fromlist_value_15 = mod_consts[65];
        tmp_level_value_15 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 43;
        tmp_import_name_from_28 = IMPORT_MODULE5(tmp_name_value_15, tmp_globals_arg_value_15, tmp_locals_arg_value_15, tmp_fromlist_value_15, tmp_level_value_15);
        if (tmp_import_name_from_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 43;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_28)) {
            tmp_assign_source_38 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_28,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[66],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_38 = IMPORT_NAME(tmp_import_name_from_28, mod_consts[66]);
        }

        Py_DECREF(tmp_import_name_from_28);
        if (tmp_assign_source_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 43;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[66], tmp_assign_source_38);
    }
    {
        PyObject *tmp_assign_source_39;
        PyObject *tmp_import_name_from_29;
        PyObject *tmp_name_value_16;
        PyObject *tmp_globals_arg_value_16;
        PyObject *tmp_locals_arg_value_16;
        PyObject *tmp_fromlist_value_16;
        PyObject *tmp_level_value_16;
        tmp_name_value_16 = mod_consts[67];
        tmp_globals_arg_value_16 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_16 = Py_None;
        tmp_fromlist_value_16 = mod_consts[68];
        tmp_level_value_16 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 44;
        tmp_import_name_from_29 = IMPORT_MODULE5(tmp_name_value_16, tmp_globals_arg_value_16, tmp_locals_arg_value_16, tmp_fromlist_value_16, tmp_level_value_16);
        if (tmp_import_name_from_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 44;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_29)) {
            tmp_assign_source_39 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_29,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[69],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_39 = IMPORT_NAME(tmp_import_name_from_29, mod_consts[69]);
        }

        Py_DECREF(tmp_import_name_from_29);
        if (tmp_assign_source_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 44;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[69], tmp_assign_source_39);
    }
    {
        PyObject *tmp_assign_source_40;
        PyObject *tmp_name_value_17;
        PyObject *tmp_globals_arg_value_17;
        PyObject *tmp_locals_arg_value_17;
        PyObject *tmp_fromlist_value_17;
        PyObject *tmp_level_value_17;
        tmp_name_value_17 = mod_consts[70];
        tmp_globals_arg_value_17 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_17 = Py_None;
        tmp_fromlist_value_17 = mod_consts[71];
        tmp_level_value_17 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 45;
        tmp_assign_source_40 = IMPORT_MODULE5(tmp_name_value_17, tmp_globals_arg_value_17, tmp_locals_arg_value_17, tmp_fromlist_value_17, tmp_level_value_17);
        if (tmp_assign_source_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 45;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_7__module == NULL);
        tmp_import_from_7__module = tmp_assign_source_40;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_41;
        PyObject *tmp_import_name_from_30;
        CHECK_OBJECT(tmp_import_from_7__module);
        tmp_import_name_from_30 = tmp_import_from_7__module;
        if (PyModule_Check(tmp_import_name_from_30)) {
            tmp_assign_source_41 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_30,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[72],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_41 = IMPORT_NAME(tmp_import_name_from_30, mod_consts[72]);
        }

        if (tmp_assign_source_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 45;

            goto try_except_handler_7;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[72], tmp_assign_source_41);
    }
    {
        PyObject *tmp_assign_source_42;
        PyObject *tmp_import_name_from_31;
        CHECK_OBJECT(tmp_import_from_7__module);
        tmp_import_name_from_31 = tmp_import_from_7__module;
        if (PyModule_Check(tmp_import_name_from_31)) {
            tmp_assign_source_42 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_31,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[73],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_42 = IMPORT_NAME(tmp_import_name_from_31, mod_consts[73]);
        }

        if (tmp_assign_source_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 45;

            goto try_except_handler_7;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[73], tmp_assign_source_42);
    }
    goto try_end_7;
    // Exception handler code:
    try_except_handler_7:;
    exception_keeper_type_7 = exception_type;
    exception_keeper_value_7 = exception_value;
    exception_keeper_tb_7 = exception_tb;
    exception_keeper_lineno_7 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_7__module);
    Py_DECREF(tmp_import_from_7__module);
    tmp_import_from_7__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_7;
    exception_value = exception_keeper_value_7;
    exception_tb = exception_keeper_tb_7;
    exception_lineno = exception_keeper_lineno_7;

    goto frame_exception_exit_1;
    // End of try:
    try_end_7:;
    CHECK_OBJECT(tmp_import_from_7__module);
    Py_DECREF(tmp_import_from_7__module);
    tmp_import_from_7__module = NULL;
    {
        PyObject *tmp_assign_source_43;
        PyObject *tmp_import_name_from_32;
        PyObject *tmp_name_value_18;
        PyObject *tmp_globals_arg_value_18;
        PyObject *tmp_locals_arg_value_18;
        PyObject *tmp_fromlist_value_18;
        PyObject *tmp_level_value_18;
        tmp_name_value_18 = mod_consts[74];
        tmp_globals_arg_value_18 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_18 = Py_None;
        tmp_fromlist_value_18 = mod_consts[75];
        tmp_level_value_18 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 49;
        tmp_import_name_from_32 = IMPORT_MODULE5(tmp_name_value_18, tmp_globals_arg_value_18, tmp_locals_arg_value_18, tmp_fromlist_value_18, tmp_level_value_18);
        if (tmp_import_name_from_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 49;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_32)) {
            tmp_assign_source_43 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_32,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[76],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_43 = IMPORT_NAME(tmp_import_name_from_32, mod_consts[76]);
        }

        Py_DECREF(tmp_import_name_from_32);
        if (tmp_assign_source_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 49;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[76], tmp_assign_source_43);
    }
    {
        PyObject *tmp_assign_source_44;
        PyObject *tmp_import_name_from_33;
        PyObject *tmp_name_value_19;
        PyObject *tmp_globals_arg_value_19;
        PyObject *tmp_locals_arg_value_19;
        PyObject *tmp_fromlist_value_19;
        PyObject *tmp_level_value_19;
        tmp_name_value_19 = mod_consts[77];
        tmp_globals_arg_value_19 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_19 = Py_None;
        tmp_fromlist_value_19 = mod_consts[78];
        tmp_level_value_19 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 50;
        tmp_import_name_from_33 = IMPORT_MODULE5(tmp_name_value_19, tmp_globals_arg_value_19, tmp_locals_arg_value_19, tmp_fromlist_value_19, tmp_level_value_19);
        if (tmp_import_name_from_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 50;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_33)) {
            tmp_assign_source_44 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_33,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[79],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_44 = IMPORT_NAME(tmp_import_name_from_33, mod_consts[79]);
        }

        Py_DECREF(tmp_import_name_from_33);
        if (tmp_assign_source_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 50;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[79], tmp_assign_source_44);
    }
    {
        PyObject *tmp_assign_source_45;
        PyObject *tmp_import_name_from_34;
        PyObject *tmp_name_value_20;
        PyObject *tmp_globals_arg_value_20;
        PyObject *tmp_locals_arg_value_20;
        PyObject *tmp_fromlist_value_20;
        PyObject *tmp_level_value_20;
        tmp_name_value_20 = mod_consts[80];
        tmp_globals_arg_value_20 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_20 = Py_None;
        tmp_fromlist_value_20 = mod_consts[81];
        tmp_level_value_20 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 51;
        tmp_import_name_from_34 = IMPORT_MODULE5(tmp_name_value_20, tmp_globals_arg_value_20, tmp_locals_arg_value_20, tmp_fromlist_value_20, tmp_level_value_20);
        if (tmp_import_name_from_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 51;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_34)) {
            tmp_assign_source_45 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_34,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[82],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_45 = IMPORT_NAME(tmp_import_name_from_34, mod_consts[82]);
        }

        Py_DECREF(tmp_import_name_from_34);
        if (tmp_assign_source_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 51;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[82], tmp_assign_source_45);
    }
    {
        PyObject *tmp_assign_source_46;
        PyObject *tmp_import_name_from_35;
        PyObject *tmp_name_value_21;
        PyObject *tmp_globals_arg_value_21;
        PyObject *tmp_locals_arg_value_21;
        PyObject *tmp_fromlist_value_21;
        PyObject *tmp_level_value_21;
        tmp_name_value_21 = mod_consts[83];
        tmp_globals_arg_value_21 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_21 = Py_None;
        tmp_fromlist_value_21 = mod_consts[84];
        tmp_level_value_21 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 52;
        tmp_import_name_from_35 = IMPORT_MODULE5(tmp_name_value_21, tmp_globals_arg_value_21, tmp_locals_arg_value_21, tmp_fromlist_value_21, tmp_level_value_21);
        if (tmp_import_name_from_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 52;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_35)) {
            tmp_assign_source_46 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_35,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[85],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_46 = IMPORT_NAME(tmp_import_name_from_35, mod_consts[85]);
        }

        Py_DECREF(tmp_import_name_from_35);
        if (tmp_assign_source_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 52;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[85], tmp_assign_source_46);
    }
    {
        PyObject *tmp_assign_source_47;
        PyObject *tmp_import_name_from_36;
        PyObject *tmp_name_value_22;
        PyObject *tmp_globals_arg_value_22;
        PyObject *tmp_locals_arg_value_22;
        PyObject *tmp_fromlist_value_22;
        PyObject *tmp_level_value_22;
        tmp_name_value_22 = mod_consts[86];
        tmp_globals_arg_value_22 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_22 = Py_None;
        tmp_fromlist_value_22 = mod_consts[87];
        tmp_level_value_22 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 53;
        tmp_import_name_from_36 = IMPORT_MODULE5(tmp_name_value_22, tmp_globals_arg_value_22, tmp_locals_arg_value_22, tmp_fromlist_value_22, tmp_level_value_22);
        if (tmp_import_name_from_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 53;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_36)) {
            tmp_assign_source_47 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_36,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[88],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_47 = IMPORT_NAME(tmp_import_name_from_36, mod_consts[88]);
        }

        Py_DECREF(tmp_import_name_from_36);
        if (tmp_assign_source_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 53;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[88], tmp_assign_source_47);
    }
    {
        PyObject *tmp_assign_source_48;
        PyObject *tmp_import_name_from_37;
        PyObject *tmp_name_value_23;
        PyObject *tmp_globals_arg_value_23;
        PyObject *tmp_locals_arg_value_23;
        PyObject *tmp_fromlist_value_23;
        PyObject *tmp_level_value_23;
        tmp_name_value_23 = mod_consts[89];
        tmp_globals_arg_value_23 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_23 = Py_None;
        tmp_fromlist_value_23 = mod_consts[90];
        tmp_level_value_23 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 54;
        tmp_import_name_from_37 = IMPORT_MODULE5(tmp_name_value_23, tmp_globals_arg_value_23, tmp_locals_arg_value_23, tmp_fromlist_value_23, tmp_level_value_23);
        if (tmp_import_name_from_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 54;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_37)) {
            tmp_assign_source_48 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_37,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[91],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_48 = IMPORT_NAME(tmp_import_name_from_37, mod_consts[91]);
        }

        Py_DECREF(tmp_import_name_from_37);
        if (tmp_assign_source_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 54;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[91], tmp_assign_source_48);
    }
    {
        PyObject *tmp_assign_source_49;
        PyObject *tmp_import_name_from_38;
        PyObject *tmp_name_value_24;
        PyObject *tmp_globals_arg_value_24;
        PyObject *tmp_locals_arg_value_24;
        PyObject *tmp_fromlist_value_24;
        PyObject *tmp_level_value_24;
        tmp_name_value_24 = mod_consts[92];
        tmp_globals_arg_value_24 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_24 = Py_None;
        tmp_fromlist_value_24 = mod_consts[93];
        tmp_level_value_24 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 55;
        tmp_import_name_from_38 = IMPORT_MODULE5(tmp_name_value_24, tmp_globals_arg_value_24, tmp_locals_arg_value_24, tmp_fromlist_value_24, tmp_level_value_24);
        if (tmp_import_name_from_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 55;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_38)) {
            tmp_assign_source_49 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_38,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[94],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_49 = IMPORT_NAME(tmp_import_name_from_38, mod_consts[94]);
        }

        Py_DECREF(tmp_import_name_from_38);
        if (tmp_assign_source_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 55;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[94], tmp_assign_source_49);
    }
    {
        PyObject *tmp_assign_source_50;
        PyObject *tmp_import_name_from_39;
        PyObject *tmp_name_value_25;
        PyObject *tmp_globals_arg_value_25;
        PyObject *tmp_locals_arg_value_25;
        PyObject *tmp_fromlist_value_25;
        PyObject *tmp_level_value_25;
        tmp_name_value_25 = mod_consts[95];
        tmp_globals_arg_value_25 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_25 = Py_None;
        tmp_fromlist_value_25 = mod_consts[96];
        tmp_level_value_25 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 56;
        tmp_import_name_from_39 = IMPORT_MODULE5(tmp_name_value_25, tmp_globals_arg_value_25, tmp_locals_arg_value_25, tmp_fromlist_value_25, tmp_level_value_25);
        if (tmp_import_name_from_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 56;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_39)) {
            tmp_assign_source_50 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_39,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[97],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_50 = IMPORT_NAME(tmp_import_name_from_39, mod_consts[97]);
        }

        Py_DECREF(tmp_import_name_from_39);
        if (tmp_assign_source_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 56;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[97], tmp_assign_source_50);
    }
    {
        PyObject *tmp_assign_source_51;
        PyObject *tmp_name_value_26;
        PyObject *tmp_globals_arg_value_26;
        PyObject *tmp_locals_arg_value_26;
        PyObject *tmp_fromlist_value_26;
        PyObject *tmp_level_value_26;
        tmp_name_value_26 = mod_consts[98];
        tmp_globals_arg_value_26 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_26 = Py_None;
        tmp_fromlist_value_26 = mod_consts[99];
        tmp_level_value_26 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 57;
        tmp_assign_source_51 = IMPORT_MODULE5(tmp_name_value_26, tmp_globals_arg_value_26, tmp_locals_arg_value_26, tmp_fromlist_value_26, tmp_level_value_26);
        if (tmp_assign_source_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 57;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_8__module == NULL);
        tmp_import_from_8__module = tmp_assign_source_51;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_52;
        PyObject *tmp_import_name_from_40;
        CHECK_OBJECT(tmp_import_from_8__module);
        tmp_import_name_from_40 = tmp_import_from_8__module;
        if (PyModule_Check(tmp_import_name_from_40)) {
            tmp_assign_source_52 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_40,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[100],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_52 = IMPORT_NAME(tmp_import_name_from_40, mod_consts[100]);
        }

        if (tmp_assign_source_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 57;

            goto try_except_handler_8;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[100], tmp_assign_source_52);
    }
    {
        PyObject *tmp_assign_source_53;
        PyObject *tmp_import_name_from_41;
        CHECK_OBJECT(tmp_import_from_8__module);
        tmp_import_name_from_41 = tmp_import_from_8__module;
        if (PyModule_Check(tmp_import_name_from_41)) {
            tmp_assign_source_53 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_41,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[101],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_53 = IMPORT_NAME(tmp_import_name_from_41, mod_consts[101]);
        }

        if (tmp_assign_source_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 57;

            goto try_except_handler_8;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[101], tmp_assign_source_53);
    }
    goto try_end_8;
    // Exception handler code:
    try_except_handler_8:;
    exception_keeper_type_8 = exception_type;
    exception_keeper_value_8 = exception_value;
    exception_keeper_tb_8 = exception_tb;
    exception_keeper_lineno_8 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_8__module);
    Py_DECREF(tmp_import_from_8__module);
    tmp_import_from_8__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_8;
    exception_value = exception_keeper_value_8;
    exception_tb = exception_keeper_tb_8;
    exception_lineno = exception_keeper_lineno_8;

    goto frame_exception_exit_1;
    // End of try:
    try_end_8:;
    CHECK_OBJECT(tmp_import_from_8__module);
    Py_DECREF(tmp_import_from_8__module);
    tmp_import_from_8__module = NULL;
    {
        PyObject *tmp_assign_source_54;
        PyObject *tmp_import_name_from_42;
        PyObject *tmp_name_value_27;
        PyObject *tmp_globals_arg_value_27;
        PyObject *tmp_locals_arg_value_27;
        PyObject *tmp_fromlist_value_27;
        PyObject *tmp_level_value_27;
        tmp_name_value_27 = mod_consts[102];
        tmp_globals_arg_value_27 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_27 = Py_None;
        tmp_fromlist_value_27 = mod_consts[103];
        tmp_level_value_27 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 61;
        tmp_import_name_from_42 = IMPORT_MODULE5(tmp_name_value_27, tmp_globals_arg_value_27, tmp_locals_arg_value_27, tmp_fromlist_value_27, tmp_level_value_27);
        if (tmp_import_name_from_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 61;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_42)) {
            tmp_assign_source_54 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_42,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[104],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_54 = IMPORT_NAME(tmp_import_name_from_42, mod_consts[104]);
        }

        Py_DECREF(tmp_import_name_from_42);
        if (tmp_assign_source_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 61;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[104], tmp_assign_source_54);
    }
    {
        PyObject *tmp_assign_source_55;
        PyObject *tmp_import_name_from_43;
        PyObject *tmp_name_value_28;
        PyObject *tmp_globals_arg_value_28;
        PyObject *tmp_locals_arg_value_28;
        PyObject *tmp_fromlist_value_28;
        PyObject *tmp_level_value_28;
        tmp_name_value_28 = mod_consts[105];
        tmp_globals_arg_value_28 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_28 = Py_None;
        tmp_fromlist_value_28 = mod_consts[106];
        tmp_level_value_28 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 62;
        tmp_import_name_from_43 = IMPORT_MODULE5(tmp_name_value_28, tmp_globals_arg_value_28, tmp_locals_arg_value_28, tmp_fromlist_value_28, tmp_level_value_28);
        if (tmp_import_name_from_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 62;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_43)) {
            tmp_assign_source_55 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_43,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[107],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_55 = IMPORT_NAME(tmp_import_name_from_43, mod_consts[107]);
        }

        Py_DECREF(tmp_import_name_from_43);
        if (tmp_assign_source_55 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 62;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[107], tmp_assign_source_55);
    }
    {
        PyObject *tmp_assign_source_56;
        PyObject *tmp_import_name_from_44;
        PyObject *tmp_name_value_29;
        PyObject *tmp_globals_arg_value_29;
        PyObject *tmp_locals_arg_value_29;
        PyObject *tmp_fromlist_value_29;
        PyObject *tmp_level_value_29;
        tmp_name_value_29 = mod_consts[108];
        tmp_globals_arg_value_29 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_29 = Py_None;
        tmp_fromlist_value_29 = mod_consts[109];
        tmp_level_value_29 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 63;
        tmp_import_name_from_44 = IMPORT_MODULE5(tmp_name_value_29, tmp_globals_arg_value_29, tmp_locals_arg_value_29, tmp_fromlist_value_29, tmp_level_value_29);
        if (tmp_import_name_from_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 63;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_44)) {
            tmp_assign_source_56 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_44,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[110],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_56 = IMPORT_NAME(tmp_import_name_from_44, mod_consts[110]);
        }

        Py_DECREF(tmp_import_name_from_44);
        if (tmp_assign_source_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 63;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[110], tmp_assign_source_56);
    }
    {
        PyObject *tmp_assign_source_57;
        PyObject *tmp_import_name_from_45;
        PyObject *tmp_name_value_30;
        PyObject *tmp_globals_arg_value_30;
        PyObject *tmp_locals_arg_value_30;
        PyObject *tmp_fromlist_value_30;
        PyObject *tmp_level_value_30;
        tmp_name_value_30 = mod_consts[111];
        tmp_globals_arg_value_30 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_30 = Py_None;
        tmp_fromlist_value_30 = mod_consts[112];
        tmp_level_value_30 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 64;
        tmp_import_name_from_45 = IMPORT_MODULE5(tmp_name_value_30, tmp_globals_arg_value_30, tmp_locals_arg_value_30, tmp_fromlist_value_30, tmp_level_value_30);
        if (tmp_import_name_from_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 64;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_45)) {
            tmp_assign_source_57 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_45,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[113],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_57 = IMPORT_NAME(tmp_import_name_from_45, mod_consts[113]);
        }

        Py_DECREF(tmp_import_name_from_45);
        if (tmp_assign_source_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 64;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[113], tmp_assign_source_57);
    }
    {
        PyObject *tmp_assign_source_58;
        PyObject *tmp_name_value_31;
        PyObject *tmp_globals_arg_value_31;
        PyObject *tmp_locals_arg_value_31;
        PyObject *tmp_fromlist_value_31;
        PyObject *tmp_level_value_31;
        tmp_name_value_31 = mod_consts[114];
        tmp_globals_arg_value_31 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_31 = Py_None;
        tmp_fromlist_value_31 = mod_consts[115];
        tmp_level_value_31 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 65;
        tmp_assign_source_58 = IMPORT_MODULE5(tmp_name_value_31, tmp_globals_arg_value_31, tmp_locals_arg_value_31, tmp_fromlist_value_31, tmp_level_value_31);
        if (tmp_assign_source_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_9__module == NULL);
        tmp_import_from_9__module = tmp_assign_source_58;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_59;
        PyObject *tmp_import_name_from_46;
        CHECK_OBJECT(tmp_import_from_9__module);
        tmp_import_name_from_46 = tmp_import_from_9__module;
        if (PyModule_Check(tmp_import_name_from_46)) {
            tmp_assign_source_59 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_46,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[116],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_59 = IMPORT_NAME(tmp_import_name_from_46, mod_consts[116]);
        }

        if (tmp_assign_source_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;

            goto try_except_handler_9;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[116], tmp_assign_source_59);
    }
    {
        PyObject *tmp_assign_source_60;
        PyObject *tmp_import_name_from_47;
        CHECK_OBJECT(tmp_import_from_9__module);
        tmp_import_name_from_47 = tmp_import_from_9__module;
        if (PyModule_Check(tmp_import_name_from_47)) {
            tmp_assign_source_60 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_47,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[117],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_60 = IMPORT_NAME(tmp_import_name_from_47, mod_consts[117]);
        }

        if (tmp_assign_source_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;

            goto try_except_handler_9;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[117], tmp_assign_source_60);
    }
    {
        PyObject *tmp_assign_source_61;
        PyObject *tmp_import_name_from_48;
        CHECK_OBJECT(tmp_import_from_9__module);
        tmp_import_name_from_48 = tmp_import_from_9__module;
        if (PyModule_Check(tmp_import_name_from_48)) {
            tmp_assign_source_61 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_48,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[118],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_61 = IMPORT_NAME(tmp_import_name_from_48, mod_consts[118]);
        }

        if (tmp_assign_source_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;

            goto try_except_handler_9;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[118], tmp_assign_source_61);
    }
    goto try_end_9;
    // Exception handler code:
    try_except_handler_9:;
    exception_keeper_type_9 = exception_type;
    exception_keeper_value_9 = exception_value;
    exception_keeper_tb_9 = exception_tb;
    exception_keeper_lineno_9 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_9__module);
    Py_DECREF(tmp_import_from_9__module);
    tmp_import_from_9__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_9;
    exception_value = exception_keeper_value_9;
    exception_tb = exception_keeper_tb_9;
    exception_lineno = exception_keeper_lineno_9;

    goto frame_exception_exit_1;
    // End of try:
    try_end_9:;
    CHECK_OBJECT(tmp_import_from_9__module);
    Py_DECREF(tmp_import_from_9__module);
    tmp_import_from_9__module = NULL;
    {
        PyObject *tmp_assign_source_62;
        PyObject *tmp_name_value_32;
        PyObject *tmp_globals_arg_value_32;
        PyObject *tmp_locals_arg_value_32;
        PyObject *tmp_fromlist_value_32;
        PyObject *tmp_level_value_32;
        tmp_name_value_32 = mod_consts[119];
        tmp_globals_arg_value_32 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_32 = Py_None;
        tmp_fromlist_value_32 = mod_consts[120];
        tmp_level_value_32 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 70;
        tmp_assign_source_62 = IMPORT_MODULE5(tmp_name_value_32, tmp_globals_arg_value_32, tmp_locals_arg_value_32, tmp_fromlist_value_32, tmp_level_value_32);
        if (tmp_assign_source_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 70;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_10__module == NULL);
        tmp_import_from_10__module = tmp_assign_source_62;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_63;
        PyObject *tmp_import_name_from_49;
        CHECK_OBJECT(tmp_import_from_10__module);
        tmp_import_name_from_49 = tmp_import_from_10__module;
        if (PyModule_Check(tmp_import_name_from_49)) {
            tmp_assign_source_63 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_49,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[121],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_63 = IMPORT_NAME(tmp_import_name_from_49, mod_consts[121]);
        }

        if (tmp_assign_source_63 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 70;

            goto try_except_handler_10;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[121], tmp_assign_source_63);
    }
    {
        PyObject *tmp_assign_source_64;
        PyObject *tmp_import_name_from_50;
        CHECK_OBJECT(tmp_import_from_10__module);
        tmp_import_name_from_50 = tmp_import_from_10__module;
        if (PyModule_Check(tmp_import_name_from_50)) {
            tmp_assign_source_64 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_50,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[122],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_64 = IMPORT_NAME(tmp_import_name_from_50, mod_consts[122]);
        }

        if (tmp_assign_source_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 70;

            goto try_except_handler_10;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[122], tmp_assign_source_64);
    }
    {
        PyObject *tmp_assign_source_65;
        PyObject *tmp_import_name_from_51;
        CHECK_OBJECT(tmp_import_from_10__module);
        tmp_import_name_from_51 = tmp_import_from_10__module;
        if (PyModule_Check(tmp_import_name_from_51)) {
            tmp_assign_source_65 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_51,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[123],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_65 = IMPORT_NAME(tmp_import_name_from_51, mod_consts[123]);
        }

        if (tmp_assign_source_65 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 70;

            goto try_except_handler_10;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[123], tmp_assign_source_65);
    }
    goto try_end_10;
    // Exception handler code:
    try_except_handler_10:;
    exception_keeper_type_10 = exception_type;
    exception_keeper_value_10 = exception_value;
    exception_keeper_tb_10 = exception_tb;
    exception_keeper_lineno_10 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_10__module);
    Py_DECREF(tmp_import_from_10__module);
    tmp_import_from_10__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_10;
    exception_value = exception_keeper_value_10;
    exception_tb = exception_keeper_tb_10;
    exception_lineno = exception_keeper_lineno_10;

    goto frame_exception_exit_1;
    // End of try:
    try_end_10:;
    CHECK_OBJECT(tmp_import_from_10__module);
    Py_DECREF(tmp_import_from_10__module);
    tmp_import_from_10__module = NULL;
    {
        PyObject *tmp_assign_source_66;
        PyObject *tmp_import_name_from_52;
        PyObject *tmp_name_value_33;
        PyObject *tmp_globals_arg_value_33;
        PyObject *tmp_locals_arg_value_33;
        PyObject *tmp_fromlist_value_33;
        PyObject *tmp_level_value_33;
        tmp_name_value_33 = mod_consts[124];
        tmp_globals_arg_value_33 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_33 = Py_None;
        tmp_fromlist_value_33 = mod_consts[125];
        tmp_level_value_33 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 75;
        tmp_import_name_from_52 = IMPORT_MODULE5(tmp_name_value_33, tmp_globals_arg_value_33, tmp_locals_arg_value_33, tmp_fromlist_value_33, tmp_level_value_33);
        if (tmp_import_name_from_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 75;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_52)) {
            tmp_assign_source_66 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_52,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[126],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_66 = IMPORT_NAME(tmp_import_name_from_52, mod_consts[126]);
        }

        Py_DECREF(tmp_import_name_from_52);
        if (tmp_assign_source_66 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 75;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[126], tmp_assign_source_66);
    }
    {
        PyObject *tmp_assign_source_67;
        PyObject *tmp_name_value_34;
        PyObject *tmp_globals_arg_value_34;
        PyObject *tmp_locals_arg_value_34;
        PyObject *tmp_fromlist_value_34;
        PyObject *tmp_level_value_34;
        tmp_name_value_34 = mod_consts[127];
        tmp_globals_arg_value_34 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_34 = Py_None;
        tmp_fromlist_value_34 = mod_consts[128];
        tmp_level_value_34 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 76;
        tmp_assign_source_67 = IMPORT_MODULE5(tmp_name_value_34, tmp_globals_arg_value_34, tmp_locals_arg_value_34, tmp_fromlist_value_34, tmp_level_value_34);
        if (tmp_assign_source_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 76;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_11__module == NULL);
        tmp_import_from_11__module = tmp_assign_source_67;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_68;
        PyObject *tmp_import_name_from_53;
        CHECK_OBJECT(tmp_import_from_11__module);
        tmp_import_name_from_53 = tmp_import_from_11__module;
        if (PyModule_Check(tmp_import_name_from_53)) {
            tmp_assign_source_68 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_53,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[129],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_68 = IMPORT_NAME(tmp_import_name_from_53, mod_consts[129]);
        }

        if (tmp_assign_source_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 76;

            goto try_except_handler_11;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[129], tmp_assign_source_68);
    }
    {
        PyObject *tmp_assign_source_69;
        PyObject *tmp_import_name_from_54;
        CHECK_OBJECT(tmp_import_from_11__module);
        tmp_import_name_from_54 = tmp_import_from_11__module;
        if (PyModule_Check(tmp_import_name_from_54)) {
            tmp_assign_source_69 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_54,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[130],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_69 = IMPORT_NAME(tmp_import_name_from_54, mod_consts[130]);
        }

        if (tmp_assign_source_69 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 76;

            goto try_except_handler_11;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[130], tmp_assign_source_69);
    }
    goto try_end_11;
    // Exception handler code:
    try_except_handler_11:;
    exception_keeper_type_11 = exception_type;
    exception_keeper_value_11 = exception_value;
    exception_keeper_tb_11 = exception_tb;
    exception_keeper_lineno_11 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_11__module);
    Py_DECREF(tmp_import_from_11__module);
    tmp_import_from_11__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_11;
    exception_value = exception_keeper_value_11;
    exception_tb = exception_keeper_tb_11;
    exception_lineno = exception_keeper_lineno_11;

    goto frame_exception_exit_1;
    // End of try:
    try_end_11:;
    CHECK_OBJECT(tmp_import_from_11__module);
    Py_DECREF(tmp_import_from_11__module);
    tmp_import_from_11__module = NULL;
    {
        PyObject *tmp_assign_source_70;
        PyObject *tmp_import_name_from_55;
        PyObject *tmp_name_value_35;
        PyObject *tmp_globals_arg_value_35;
        PyObject *tmp_locals_arg_value_35;
        PyObject *tmp_fromlist_value_35;
        PyObject *tmp_level_value_35;
        tmp_name_value_35 = mod_consts[131];
        tmp_globals_arg_value_35 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_35 = Py_None;
        tmp_fromlist_value_35 = mod_consts[132];
        tmp_level_value_35 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 80;
        tmp_import_name_from_55 = IMPORT_MODULE5(tmp_name_value_35, tmp_globals_arg_value_35, tmp_locals_arg_value_35, tmp_fromlist_value_35, tmp_level_value_35);
        if (tmp_import_name_from_55 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 80;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_55)) {
            tmp_assign_source_70 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_55,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[133],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_70 = IMPORT_NAME(tmp_import_name_from_55, mod_consts[133]);
        }

        Py_DECREF(tmp_import_name_from_55);
        if (tmp_assign_source_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 80;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[133], tmp_assign_source_70);
    }
    {
        PyObject *tmp_assign_source_71;
        PyObject *tmp_import_name_from_56;
        PyObject *tmp_name_value_36;
        PyObject *tmp_globals_arg_value_36;
        PyObject *tmp_locals_arg_value_36;
        PyObject *tmp_fromlist_value_36;
        PyObject *tmp_level_value_36;
        tmp_name_value_36 = mod_consts[134];
        tmp_globals_arg_value_36 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_36 = Py_None;
        tmp_fromlist_value_36 = mod_consts[135];
        tmp_level_value_36 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 81;
        tmp_import_name_from_56 = IMPORT_MODULE5(tmp_name_value_36, tmp_globals_arg_value_36, tmp_locals_arg_value_36, tmp_fromlist_value_36, tmp_level_value_36);
        if (tmp_import_name_from_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_56)) {
            tmp_assign_source_71 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_56,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[136],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_71 = IMPORT_NAME(tmp_import_name_from_56, mod_consts[136]);
        }

        Py_DECREF(tmp_import_name_from_56);
        if (tmp_assign_source_71 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[136], tmp_assign_source_71);
    }
    {
        PyObject *tmp_assign_source_72;
        PyObject *tmp_import_name_from_57;
        PyObject *tmp_name_value_37;
        PyObject *tmp_globals_arg_value_37;
        PyObject *tmp_locals_arg_value_37;
        PyObject *tmp_fromlist_value_37;
        PyObject *tmp_level_value_37;
        tmp_name_value_37 = mod_consts[137];
        tmp_globals_arg_value_37 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_37 = Py_None;
        tmp_fromlist_value_37 = mod_consts[138];
        tmp_level_value_37 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 82;
        tmp_import_name_from_57 = IMPORT_MODULE5(tmp_name_value_37, tmp_globals_arg_value_37, tmp_locals_arg_value_37, tmp_fromlist_value_37, tmp_level_value_37);
        if (tmp_import_name_from_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 82;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_57)) {
            tmp_assign_source_72 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_57,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[139],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_72 = IMPORT_NAME(tmp_import_name_from_57, mod_consts[139]);
        }

        Py_DECREF(tmp_import_name_from_57);
        if (tmp_assign_source_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 82;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[139], tmp_assign_source_72);
    }
    {
        PyObject *tmp_assign_source_73;
        PyObject *tmp_import_name_from_58;
        PyObject *tmp_name_value_38;
        PyObject *tmp_globals_arg_value_38;
        PyObject *tmp_locals_arg_value_38;
        PyObject *tmp_fromlist_value_38;
        PyObject *tmp_level_value_38;
        tmp_name_value_38 = mod_consts[140];
        tmp_globals_arg_value_38 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_38 = Py_None;
        tmp_fromlist_value_38 = mod_consts[141];
        tmp_level_value_38 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 83;
        tmp_import_name_from_58 = IMPORT_MODULE5(tmp_name_value_38, tmp_globals_arg_value_38, tmp_locals_arg_value_38, tmp_fromlist_value_38, tmp_level_value_38);
        if (tmp_import_name_from_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 83;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_58)) {
            tmp_assign_source_73 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_58,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[142],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_73 = IMPORT_NAME(tmp_import_name_from_58, mod_consts[142]);
        }

        Py_DECREF(tmp_import_name_from_58);
        if (tmp_assign_source_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 83;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[142], tmp_assign_source_73);
    }
    {
        PyObject *tmp_assign_source_74;
        PyObject *tmp_import_name_from_59;
        PyObject *tmp_name_value_39;
        PyObject *tmp_globals_arg_value_39;
        PyObject *tmp_locals_arg_value_39;
        PyObject *tmp_fromlist_value_39;
        PyObject *tmp_level_value_39;
        tmp_name_value_39 = mod_consts[143];
        tmp_globals_arg_value_39 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_39 = Py_None;
        tmp_fromlist_value_39 = mod_consts[144];
        tmp_level_value_39 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 84;
        tmp_import_name_from_59 = IMPORT_MODULE5(tmp_name_value_39, tmp_globals_arg_value_39, tmp_locals_arg_value_39, tmp_fromlist_value_39, tmp_level_value_39);
        if (tmp_import_name_from_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_59)) {
            tmp_assign_source_74 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_59,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[145],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_74 = IMPORT_NAME(tmp_import_name_from_59, mod_consts[145]);
        }

        Py_DECREF(tmp_import_name_from_59);
        if (tmp_assign_source_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[145], tmp_assign_source_74);
    }
    {
        PyObject *tmp_assign_source_75;
        PyObject *tmp_name_value_40;
        PyObject *tmp_globals_arg_value_40;
        PyObject *tmp_locals_arg_value_40;
        PyObject *tmp_fromlist_value_40;
        PyObject *tmp_level_value_40;
        tmp_name_value_40 = mod_consts[146];
        tmp_globals_arg_value_40 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_40 = Py_None;
        tmp_fromlist_value_40 = mod_consts[147];
        tmp_level_value_40 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 85;
        tmp_assign_source_75 = IMPORT_MODULE5(tmp_name_value_40, tmp_globals_arg_value_40, tmp_locals_arg_value_40, tmp_fromlist_value_40, tmp_level_value_40);
        if (tmp_assign_source_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 85;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_12__module == NULL);
        tmp_import_from_12__module = tmp_assign_source_75;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_76;
        PyObject *tmp_import_name_from_60;
        CHECK_OBJECT(tmp_import_from_12__module);
        tmp_import_name_from_60 = tmp_import_from_12__module;
        if (PyModule_Check(tmp_import_name_from_60)) {
            tmp_assign_source_76 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_60,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[148],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_76 = IMPORT_NAME(tmp_import_name_from_60, mod_consts[148]);
        }

        if (tmp_assign_source_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 85;

            goto try_except_handler_12;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[148], tmp_assign_source_76);
    }
    {
        PyObject *tmp_assign_source_77;
        PyObject *tmp_import_name_from_61;
        CHECK_OBJECT(tmp_import_from_12__module);
        tmp_import_name_from_61 = tmp_import_from_12__module;
        if (PyModule_Check(tmp_import_name_from_61)) {
            tmp_assign_source_77 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_61,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[149],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_77 = IMPORT_NAME(tmp_import_name_from_61, mod_consts[149]);
        }

        if (tmp_assign_source_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 85;

            goto try_except_handler_12;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[149], tmp_assign_source_77);
    }
    goto try_end_12;
    // Exception handler code:
    try_except_handler_12:;
    exception_keeper_type_12 = exception_type;
    exception_keeper_value_12 = exception_value;
    exception_keeper_tb_12 = exception_tb;
    exception_keeper_lineno_12 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_12__module);
    Py_DECREF(tmp_import_from_12__module);
    tmp_import_from_12__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_12;
    exception_value = exception_keeper_value_12;
    exception_tb = exception_keeper_tb_12;
    exception_lineno = exception_keeper_lineno_12;

    goto frame_exception_exit_1;
    // End of try:
    try_end_12:;
    CHECK_OBJECT(tmp_import_from_12__module);
    Py_DECREF(tmp_import_from_12__module);
    tmp_import_from_12__module = NULL;
    {
        PyObject *tmp_assign_source_78;
        PyObject *tmp_name_value_41;
        PyObject *tmp_globals_arg_value_41;
        PyObject *tmp_locals_arg_value_41;
        PyObject *tmp_fromlist_value_41;
        PyObject *tmp_level_value_41;
        tmp_name_value_41 = mod_consts[150];
        tmp_globals_arg_value_41 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_41 = Py_None;
        tmp_fromlist_value_41 = mod_consts[151];
        tmp_level_value_41 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 86;
        tmp_assign_source_78 = IMPORT_MODULE5(tmp_name_value_41, tmp_globals_arg_value_41, tmp_locals_arg_value_41, tmp_fromlist_value_41, tmp_level_value_41);
        if (tmp_assign_source_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 86;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_13__module == NULL);
        tmp_import_from_13__module = tmp_assign_source_78;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_79;
        PyObject *tmp_import_name_from_62;
        CHECK_OBJECT(tmp_import_from_13__module);
        tmp_import_name_from_62 = tmp_import_from_13__module;
        if (PyModule_Check(tmp_import_name_from_62)) {
            tmp_assign_source_79 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_62,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[152],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_79 = IMPORT_NAME(tmp_import_name_from_62, mod_consts[152]);
        }

        if (tmp_assign_source_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 86;

            goto try_except_handler_13;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[152], tmp_assign_source_79);
    }
    {
        PyObject *tmp_assign_source_80;
        PyObject *tmp_import_name_from_63;
        CHECK_OBJECT(tmp_import_from_13__module);
        tmp_import_name_from_63 = tmp_import_from_13__module;
        if (PyModule_Check(tmp_import_name_from_63)) {
            tmp_assign_source_80 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_63,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[153],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_80 = IMPORT_NAME(tmp_import_name_from_63, mod_consts[153]);
        }

        if (tmp_assign_source_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 86;

            goto try_except_handler_13;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[153], tmp_assign_source_80);
    }
    {
        PyObject *tmp_assign_source_81;
        PyObject *tmp_import_name_from_64;
        CHECK_OBJECT(tmp_import_from_13__module);
        tmp_import_name_from_64 = tmp_import_from_13__module;
        if (PyModule_Check(tmp_import_name_from_64)) {
            tmp_assign_source_81 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_64,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[154],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_81 = IMPORT_NAME(tmp_import_name_from_64, mod_consts[154]);
        }

        if (tmp_assign_source_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 86;

            goto try_except_handler_13;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[154], tmp_assign_source_81);
    }
    {
        PyObject *tmp_assign_source_82;
        PyObject *tmp_import_name_from_65;
        CHECK_OBJECT(tmp_import_from_13__module);
        tmp_import_name_from_65 = tmp_import_from_13__module;
        if (PyModule_Check(tmp_import_name_from_65)) {
            tmp_assign_source_82 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_65,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[155],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_82 = IMPORT_NAME(tmp_import_name_from_65, mod_consts[155]);
        }

        if (tmp_assign_source_82 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 86;

            goto try_except_handler_13;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[155], tmp_assign_source_82);
    }
    goto try_end_13;
    // Exception handler code:
    try_except_handler_13:;
    exception_keeper_type_13 = exception_type;
    exception_keeper_value_13 = exception_value;
    exception_keeper_tb_13 = exception_tb;
    exception_keeper_lineno_13 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_13__module);
    Py_DECREF(tmp_import_from_13__module);
    tmp_import_from_13__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_13;
    exception_value = exception_keeper_value_13;
    exception_tb = exception_keeper_tb_13;
    exception_lineno = exception_keeper_lineno_13;

    goto frame_exception_exit_1;
    // End of try:
    try_end_13:;
    CHECK_OBJECT(tmp_import_from_13__module);
    Py_DECREF(tmp_import_from_13__module);
    tmp_import_from_13__module = NULL;
    {
        PyObject *tmp_assign_source_83;
        PyObject *tmp_import_name_from_66;
        PyObject *tmp_name_value_42;
        PyObject *tmp_globals_arg_value_42;
        PyObject *tmp_locals_arg_value_42;
        PyObject *tmp_fromlist_value_42;
        PyObject *tmp_level_value_42;
        tmp_name_value_42 = mod_consts[156];
        tmp_globals_arg_value_42 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_42 = Py_None;
        tmp_fromlist_value_42 = mod_consts[157];
        tmp_level_value_42 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 92;
        tmp_import_name_from_66 = IMPORT_MODULE5(tmp_name_value_42, tmp_globals_arg_value_42, tmp_locals_arg_value_42, tmp_fromlist_value_42, tmp_level_value_42);
        if (tmp_import_name_from_66 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 92;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_66)) {
            tmp_assign_source_83 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_66,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[158],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_83 = IMPORT_NAME(tmp_import_name_from_66, mod_consts[158]);
        }

        Py_DECREF(tmp_import_name_from_66);
        if (tmp_assign_source_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 92;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[158], tmp_assign_source_83);
    }
    {
        PyObject *tmp_assign_source_84;
        PyObject *tmp_import_name_from_67;
        PyObject *tmp_name_value_43;
        PyObject *tmp_globals_arg_value_43;
        PyObject *tmp_locals_arg_value_43;
        PyObject *tmp_fromlist_value_43;
        PyObject *tmp_level_value_43;
        tmp_name_value_43 = mod_consts[159];
        tmp_globals_arg_value_43 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_43 = Py_None;
        tmp_fromlist_value_43 = mod_consts[160];
        tmp_level_value_43 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 93;
        tmp_import_name_from_67 = IMPORT_MODULE5(tmp_name_value_43, tmp_globals_arg_value_43, tmp_locals_arg_value_43, tmp_fromlist_value_43, tmp_level_value_43);
        if (tmp_import_name_from_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 93;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_67)) {
            tmp_assign_source_84 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_67,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[161],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_84 = IMPORT_NAME(tmp_import_name_from_67, mod_consts[161]);
        }

        Py_DECREF(tmp_import_name_from_67);
        if (tmp_assign_source_84 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 93;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[161], tmp_assign_source_84);
    }
    {
        PyObject *tmp_assign_source_85;
        PyObject *tmp_import_name_from_68;
        PyObject *tmp_name_value_44;
        PyObject *tmp_globals_arg_value_44;
        PyObject *tmp_locals_arg_value_44;
        PyObject *tmp_fromlist_value_44;
        PyObject *tmp_level_value_44;
        tmp_name_value_44 = mod_consts[162];
        tmp_globals_arg_value_44 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_44 = Py_None;
        tmp_fromlist_value_44 = mod_consts[163];
        tmp_level_value_44 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 94;
        tmp_import_name_from_68 = IMPORT_MODULE5(tmp_name_value_44, tmp_globals_arg_value_44, tmp_locals_arg_value_44, tmp_fromlist_value_44, tmp_level_value_44);
        if (tmp_import_name_from_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 94;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_68)) {
            tmp_assign_source_85 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_68,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[164],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_85 = IMPORT_NAME(tmp_import_name_from_68, mod_consts[164]);
        }

        Py_DECREF(tmp_import_name_from_68);
        if (tmp_assign_source_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 94;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[164], tmp_assign_source_85);
    }
    {
        PyObject *tmp_assign_source_86;
        PyObject *tmp_name_value_45;
        PyObject *tmp_globals_arg_value_45;
        PyObject *tmp_locals_arg_value_45;
        PyObject *tmp_fromlist_value_45;
        PyObject *tmp_level_value_45;
        tmp_name_value_45 = mod_consts[165];
        tmp_globals_arg_value_45 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_45 = Py_None;
        tmp_fromlist_value_45 = mod_consts[166];
        tmp_level_value_45 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 95;
        tmp_assign_source_86 = IMPORT_MODULE5(tmp_name_value_45, tmp_globals_arg_value_45, tmp_locals_arg_value_45, tmp_fromlist_value_45, tmp_level_value_45);
        if (tmp_assign_source_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 95;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_14__module == NULL);
        tmp_import_from_14__module = tmp_assign_source_86;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_87;
        PyObject *tmp_import_name_from_69;
        CHECK_OBJECT(tmp_import_from_14__module);
        tmp_import_name_from_69 = tmp_import_from_14__module;
        if (PyModule_Check(tmp_import_name_from_69)) {
            tmp_assign_source_87 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_69,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[167],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_87 = IMPORT_NAME(tmp_import_name_from_69, mod_consts[167]);
        }

        if (tmp_assign_source_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 95;

            goto try_except_handler_14;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[167], tmp_assign_source_87);
    }
    {
        PyObject *tmp_assign_source_88;
        PyObject *tmp_import_name_from_70;
        CHECK_OBJECT(tmp_import_from_14__module);
        tmp_import_name_from_70 = tmp_import_from_14__module;
        if (PyModule_Check(tmp_import_name_from_70)) {
            tmp_assign_source_88 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_70,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[168],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_88 = IMPORT_NAME(tmp_import_name_from_70, mod_consts[168]);
        }

        if (tmp_assign_source_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 95;

            goto try_except_handler_14;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[168], tmp_assign_source_88);
    }
    {
        PyObject *tmp_assign_source_89;
        PyObject *tmp_import_name_from_71;
        CHECK_OBJECT(tmp_import_from_14__module);
        tmp_import_name_from_71 = tmp_import_from_14__module;
        if (PyModule_Check(tmp_import_name_from_71)) {
            tmp_assign_source_89 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_71,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[169],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_89 = IMPORT_NAME(tmp_import_name_from_71, mod_consts[169]);
        }

        if (tmp_assign_source_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 95;

            goto try_except_handler_14;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[169], tmp_assign_source_89);
    }
    goto try_end_14;
    // Exception handler code:
    try_except_handler_14:;
    exception_keeper_type_14 = exception_type;
    exception_keeper_value_14 = exception_value;
    exception_keeper_tb_14 = exception_tb;
    exception_keeper_lineno_14 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_14__module);
    Py_DECREF(tmp_import_from_14__module);
    tmp_import_from_14__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_14;
    exception_value = exception_keeper_value_14;
    exception_tb = exception_keeper_tb_14;
    exception_lineno = exception_keeper_lineno_14;

    goto frame_exception_exit_1;
    // End of try:
    try_end_14:;
    CHECK_OBJECT(tmp_import_from_14__module);
    Py_DECREF(tmp_import_from_14__module);
    tmp_import_from_14__module = NULL;
    {
        PyObject *tmp_assign_source_90;
        PyObject *tmp_name_value_46;
        PyObject *tmp_globals_arg_value_46;
        PyObject *tmp_locals_arg_value_46;
        PyObject *tmp_fromlist_value_46;
        PyObject *tmp_level_value_46;
        tmp_name_value_46 = mod_consts[170];
        tmp_globals_arg_value_46 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_46 = Py_None;
        tmp_fromlist_value_46 = mod_consts[171];
        tmp_level_value_46 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 96;
        tmp_assign_source_90 = IMPORT_MODULE5(tmp_name_value_46, tmp_globals_arg_value_46, tmp_locals_arg_value_46, tmp_fromlist_value_46, tmp_level_value_46);
        if (tmp_assign_source_90 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_15__module == NULL);
        tmp_import_from_15__module = tmp_assign_source_90;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_91;
        PyObject *tmp_import_name_from_72;
        CHECK_OBJECT(tmp_import_from_15__module);
        tmp_import_name_from_72 = tmp_import_from_15__module;
        if (PyModule_Check(tmp_import_name_from_72)) {
            tmp_assign_source_91 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_72,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[172],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_91 = IMPORT_NAME(tmp_import_name_from_72, mod_consts[172]);
        }

        if (tmp_assign_source_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto try_except_handler_15;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[172], tmp_assign_source_91);
    }
    {
        PyObject *tmp_assign_source_92;
        PyObject *tmp_import_name_from_73;
        CHECK_OBJECT(tmp_import_from_15__module);
        tmp_import_name_from_73 = tmp_import_from_15__module;
        if (PyModule_Check(tmp_import_name_from_73)) {
            tmp_assign_source_92 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_73,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[173],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_92 = IMPORT_NAME(tmp_import_name_from_73, mod_consts[173]);
        }

        if (tmp_assign_source_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto try_except_handler_15;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[173], tmp_assign_source_92);
    }
    {
        PyObject *tmp_assign_source_93;
        PyObject *tmp_import_name_from_74;
        CHECK_OBJECT(tmp_import_from_15__module);
        tmp_import_name_from_74 = tmp_import_from_15__module;
        if (PyModule_Check(tmp_import_name_from_74)) {
            tmp_assign_source_93 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_74,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[174],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_93 = IMPORT_NAME(tmp_import_name_from_74, mod_consts[174]);
        }

        if (tmp_assign_source_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto try_except_handler_15;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[174], tmp_assign_source_93);
    }
    {
        PyObject *tmp_assign_source_94;
        PyObject *tmp_import_name_from_75;
        CHECK_OBJECT(tmp_import_from_15__module);
        tmp_import_name_from_75 = tmp_import_from_15__module;
        if (PyModule_Check(tmp_import_name_from_75)) {
            tmp_assign_source_94 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_75,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[175],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_94 = IMPORT_NAME(tmp_import_name_from_75, mod_consts[175]);
        }

        if (tmp_assign_source_94 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto try_except_handler_15;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[175], tmp_assign_source_94);
    }
    {
        PyObject *tmp_assign_source_95;
        PyObject *tmp_import_name_from_76;
        CHECK_OBJECT(tmp_import_from_15__module);
        tmp_import_name_from_76 = tmp_import_from_15__module;
        if (PyModule_Check(tmp_import_name_from_76)) {
            tmp_assign_source_95 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_76,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[176],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_95 = IMPORT_NAME(tmp_import_name_from_76, mod_consts[176]);
        }

        if (tmp_assign_source_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto try_except_handler_15;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[176], tmp_assign_source_95);
    }
    {
        PyObject *tmp_assign_source_96;
        PyObject *tmp_import_name_from_77;
        CHECK_OBJECT(tmp_import_from_15__module);
        tmp_import_name_from_77 = tmp_import_from_15__module;
        if (PyModule_Check(tmp_import_name_from_77)) {
            tmp_assign_source_96 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_77,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[177],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_96 = IMPORT_NAME(tmp_import_name_from_77, mod_consts[177]);
        }

        if (tmp_assign_source_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto try_except_handler_15;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[177], tmp_assign_source_96);
    }
    goto try_end_15;
    // Exception handler code:
    try_except_handler_15:;
    exception_keeper_type_15 = exception_type;
    exception_keeper_value_15 = exception_value;
    exception_keeper_tb_15 = exception_tb;
    exception_keeper_lineno_15 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_15__module);
    Py_DECREF(tmp_import_from_15__module);
    tmp_import_from_15__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_15;
    exception_value = exception_keeper_value_15;
    exception_tb = exception_keeper_tb_15;
    exception_lineno = exception_keeper_lineno_15;

    goto frame_exception_exit_1;
    // End of try:
    try_end_15:;
    CHECK_OBJECT(tmp_import_from_15__module);
    Py_DECREF(tmp_import_from_15__module);
    tmp_import_from_15__module = NULL;
    {
        PyObject *tmp_assign_source_97;
        PyObject *tmp_import_name_from_78;
        PyObject *tmp_name_value_47;
        PyObject *tmp_globals_arg_value_47;
        PyObject *tmp_locals_arg_value_47;
        PyObject *tmp_fromlist_value_47;
        PyObject *tmp_level_value_47;
        tmp_name_value_47 = mod_consts[178];
        tmp_globals_arg_value_47 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_47 = Py_None;
        tmp_fromlist_value_47 = mod_consts[179];
        tmp_level_value_47 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 104;
        tmp_import_name_from_78 = IMPORT_MODULE5(tmp_name_value_47, tmp_globals_arg_value_47, tmp_locals_arg_value_47, tmp_fromlist_value_47, tmp_level_value_47);
        if (tmp_import_name_from_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 104;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_78)) {
            tmp_assign_source_97 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_78,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[180],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_97 = IMPORT_NAME(tmp_import_name_from_78, mod_consts[180]);
        }

        Py_DECREF(tmp_import_name_from_78);
        if (tmp_assign_source_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 104;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[180], tmp_assign_source_97);
    }
    {
        PyObject *tmp_assign_source_98;
        PyObject *tmp_import_name_from_79;
        PyObject *tmp_name_value_48;
        PyObject *tmp_globals_arg_value_48;
        PyObject *tmp_locals_arg_value_48;
        PyObject *tmp_fromlist_value_48;
        PyObject *tmp_level_value_48;
        tmp_name_value_48 = mod_consts[181];
        tmp_globals_arg_value_48 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_48 = Py_None;
        tmp_fromlist_value_48 = mod_consts[182];
        tmp_level_value_48 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 105;
        tmp_import_name_from_79 = IMPORT_MODULE5(tmp_name_value_48, tmp_globals_arg_value_48, tmp_locals_arg_value_48, tmp_fromlist_value_48, tmp_level_value_48);
        if (tmp_import_name_from_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 105;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_79)) {
            tmp_assign_source_98 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_79,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[183],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_98 = IMPORT_NAME(tmp_import_name_from_79, mod_consts[183]);
        }

        Py_DECREF(tmp_import_name_from_79);
        if (tmp_assign_source_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 105;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[183], tmp_assign_source_98);
    }
    {
        PyObject *tmp_assign_source_99;
        PyObject *tmp_import_name_from_80;
        PyObject *tmp_name_value_49;
        PyObject *tmp_globals_arg_value_49;
        PyObject *tmp_locals_arg_value_49;
        PyObject *tmp_fromlist_value_49;
        PyObject *tmp_level_value_49;
        tmp_name_value_49 = mod_consts[184];
        tmp_globals_arg_value_49 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_49 = Py_None;
        tmp_fromlist_value_49 = mod_consts[185];
        tmp_level_value_49 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 106;
        tmp_import_name_from_80 = IMPORT_MODULE5(tmp_name_value_49, tmp_globals_arg_value_49, tmp_locals_arg_value_49, tmp_fromlist_value_49, tmp_level_value_49);
        if (tmp_import_name_from_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 106;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_80)) {
            tmp_assign_source_99 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_80,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[186],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_99 = IMPORT_NAME(tmp_import_name_from_80, mod_consts[186]);
        }

        Py_DECREF(tmp_import_name_from_80);
        if (tmp_assign_source_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 106;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[186], tmp_assign_source_99);
    }
    {
        PyObject *tmp_assign_source_100;
        PyObject *tmp_import_name_from_81;
        PyObject *tmp_name_value_50;
        PyObject *tmp_globals_arg_value_50;
        PyObject *tmp_locals_arg_value_50;
        PyObject *tmp_fromlist_value_50;
        PyObject *tmp_level_value_50;
        tmp_name_value_50 = mod_consts[187];
        tmp_globals_arg_value_50 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_50 = Py_None;
        tmp_fromlist_value_50 = mod_consts[188];
        tmp_level_value_50 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 107;
        tmp_import_name_from_81 = IMPORT_MODULE5(tmp_name_value_50, tmp_globals_arg_value_50, tmp_locals_arg_value_50, tmp_fromlist_value_50, tmp_level_value_50);
        if (tmp_import_name_from_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 107;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_81)) {
            tmp_assign_source_100 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_81,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[189],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_100 = IMPORT_NAME(tmp_import_name_from_81, mod_consts[189]);
        }

        Py_DECREF(tmp_import_name_from_81);
        if (tmp_assign_source_100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 107;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[189], tmp_assign_source_100);
    }
    {
        PyObject *tmp_assign_source_101;
        PyObject *tmp_import_name_from_82;
        PyObject *tmp_name_value_51;
        PyObject *tmp_globals_arg_value_51;
        PyObject *tmp_locals_arg_value_51;
        PyObject *tmp_fromlist_value_51;
        PyObject *tmp_level_value_51;
        tmp_name_value_51 = mod_consts[190];
        tmp_globals_arg_value_51 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_51 = Py_None;
        tmp_fromlist_value_51 = mod_consts[191];
        tmp_level_value_51 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 108;
        tmp_import_name_from_82 = IMPORT_MODULE5(tmp_name_value_51, tmp_globals_arg_value_51, tmp_locals_arg_value_51, tmp_fromlist_value_51, tmp_level_value_51);
        if (tmp_import_name_from_82 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_82)) {
            tmp_assign_source_101 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_82,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[192],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_101 = IMPORT_NAME(tmp_import_name_from_82, mod_consts[192]);
        }

        Py_DECREF(tmp_import_name_from_82);
        if (tmp_assign_source_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[192], tmp_assign_source_101);
    }
    {
        PyObject *tmp_assign_source_102;
        PyObject *tmp_import_name_from_83;
        PyObject *tmp_name_value_52;
        PyObject *tmp_globals_arg_value_52;
        PyObject *tmp_locals_arg_value_52;
        PyObject *tmp_fromlist_value_52;
        PyObject *tmp_level_value_52;
        tmp_name_value_52 = mod_consts[193];
        tmp_globals_arg_value_52 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_52 = Py_None;
        tmp_fromlist_value_52 = mod_consts[194];
        tmp_level_value_52 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 109;
        tmp_import_name_from_83 = IMPORT_MODULE5(tmp_name_value_52, tmp_globals_arg_value_52, tmp_locals_arg_value_52, tmp_fromlist_value_52, tmp_level_value_52);
        if (tmp_import_name_from_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 109;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_83)) {
            tmp_assign_source_102 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_83,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[195],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_102 = IMPORT_NAME(tmp_import_name_from_83, mod_consts[195]);
        }

        Py_DECREF(tmp_import_name_from_83);
        if (tmp_assign_source_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 109;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[195], tmp_assign_source_102);
    }
    {
        PyObject *tmp_assign_source_103;
        PyObject *tmp_name_value_53;
        PyObject *tmp_globals_arg_value_53;
        PyObject *tmp_locals_arg_value_53;
        PyObject *tmp_fromlist_value_53;
        PyObject *tmp_level_value_53;
        tmp_name_value_53 = mod_consts[196];
        tmp_globals_arg_value_53 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_53 = Py_None;
        tmp_fromlist_value_53 = mod_consts[197];
        tmp_level_value_53 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 110;
        tmp_assign_source_103 = IMPORT_MODULE5(tmp_name_value_53, tmp_globals_arg_value_53, tmp_locals_arg_value_53, tmp_fromlist_value_53, tmp_level_value_53);
        if (tmp_assign_source_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 110;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_16__module == NULL);
        tmp_import_from_16__module = tmp_assign_source_103;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_104;
        PyObject *tmp_import_name_from_84;
        CHECK_OBJECT(tmp_import_from_16__module);
        tmp_import_name_from_84 = tmp_import_from_16__module;
        if (PyModule_Check(tmp_import_name_from_84)) {
            tmp_assign_source_104 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_84,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[198],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_104 = IMPORT_NAME(tmp_import_name_from_84, mod_consts[198]);
        }

        if (tmp_assign_source_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 110;

            goto try_except_handler_16;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[198], tmp_assign_source_104);
    }
    {
        PyObject *tmp_assign_source_105;
        PyObject *tmp_import_name_from_85;
        CHECK_OBJECT(tmp_import_from_16__module);
        tmp_import_name_from_85 = tmp_import_from_16__module;
        if (PyModule_Check(tmp_import_name_from_85)) {
            tmp_assign_source_105 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_85,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[199],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_105 = IMPORT_NAME(tmp_import_name_from_85, mod_consts[199]);
        }

        if (tmp_assign_source_105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 110;

            goto try_except_handler_16;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[199], tmp_assign_source_105);
    }
    {
        PyObject *tmp_assign_source_106;
        PyObject *tmp_import_name_from_86;
        CHECK_OBJECT(tmp_import_from_16__module);
        tmp_import_name_from_86 = tmp_import_from_16__module;
        if (PyModule_Check(tmp_import_name_from_86)) {
            tmp_assign_source_106 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_86,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[200],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_106 = IMPORT_NAME(tmp_import_name_from_86, mod_consts[200]);
        }

        if (tmp_assign_source_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 110;

            goto try_except_handler_16;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[200], tmp_assign_source_106);
    }
    goto try_end_16;
    // Exception handler code:
    try_except_handler_16:;
    exception_keeper_type_16 = exception_type;
    exception_keeper_value_16 = exception_value;
    exception_keeper_tb_16 = exception_tb;
    exception_keeper_lineno_16 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_16__module);
    Py_DECREF(tmp_import_from_16__module);
    tmp_import_from_16__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_16;
    exception_value = exception_keeper_value_16;
    exception_tb = exception_keeper_tb_16;
    exception_lineno = exception_keeper_lineno_16;

    goto frame_exception_exit_1;
    // End of try:
    try_end_16:;
    CHECK_OBJECT(tmp_import_from_16__module);
    Py_DECREF(tmp_import_from_16__module);
    tmp_import_from_16__module = NULL;
    {
        PyObject *tmp_assign_source_107;
        PyObject *tmp_import_name_from_87;
        PyObject *tmp_name_value_54;
        PyObject *tmp_globals_arg_value_54;
        PyObject *tmp_locals_arg_value_54;
        PyObject *tmp_fromlist_value_54;
        PyObject *tmp_level_value_54;
        tmp_name_value_54 = mod_consts[201];
        tmp_globals_arg_value_54 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_54 = Py_None;
        tmp_fromlist_value_54 = mod_consts[202];
        tmp_level_value_54 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 115;
        tmp_import_name_from_87 = IMPORT_MODULE5(tmp_name_value_54, tmp_globals_arg_value_54, tmp_locals_arg_value_54, tmp_fromlist_value_54, tmp_level_value_54);
        if (tmp_import_name_from_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 115;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_87)) {
            tmp_assign_source_107 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_87,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[203],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_107 = IMPORT_NAME(tmp_import_name_from_87, mod_consts[203]);
        }

        Py_DECREF(tmp_import_name_from_87);
        if (tmp_assign_source_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 115;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[203], tmp_assign_source_107);
    }
    {
        PyObject *tmp_assign_source_108;
        PyObject *tmp_import_name_from_88;
        PyObject *tmp_name_value_55;
        PyObject *tmp_globals_arg_value_55;
        PyObject *tmp_locals_arg_value_55;
        PyObject *tmp_fromlist_value_55;
        PyObject *tmp_level_value_55;
        tmp_name_value_55 = mod_consts[204];
        tmp_globals_arg_value_55 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_55 = Py_None;
        tmp_fromlist_value_55 = mod_consts[205];
        tmp_level_value_55 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 116;
        tmp_import_name_from_88 = IMPORT_MODULE5(tmp_name_value_55, tmp_globals_arg_value_55, tmp_locals_arg_value_55, tmp_fromlist_value_55, tmp_level_value_55);
        if (tmp_import_name_from_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 116;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_88)) {
            tmp_assign_source_108 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_88,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[206],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_108 = IMPORT_NAME(tmp_import_name_from_88, mod_consts[206]);
        }

        Py_DECREF(tmp_import_name_from_88);
        if (tmp_assign_source_108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 116;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[206], tmp_assign_source_108);
    }
    {
        PyObject *tmp_assign_source_109;
        PyObject *tmp_import_name_from_89;
        PyObject *tmp_name_value_56;
        PyObject *tmp_globals_arg_value_56;
        PyObject *tmp_locals_arg_value_56;
        PyObject *tmp_fromlist_value_56;
        PyObject *tmp_level_value_56;
        tmp_name_value_56 = mod_consts[207];
        tmp_globals_arg_value_56 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_56 = Py_None;
        tmp_fromlist_value_56 = mod_consts[208];
        tmp_level_value_56 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 117;
        tmp_import_name_from_89 = IMPORT_MODULE5(tmp_name_value_56, tmp_globals_arg_value_56, tmp_locals_arg_value_56, tmp_fromlist_value_56, tmp_level_value_56);
        if (tmp_import_name_from_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 117;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_89)) {
            tmp_assign_source_109 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_89,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[209],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_109 = IMPORT_NAME(tmp_import_name_from_89, mod_consts[209]);
        }

        Py_DECREF(tmp_import_name_from_89);
        if (tmp_assign_source_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 117;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[209], tmp_assign_source_109);
    }
    {
        PyObject *tmp_assign_source_110;
        PyObject *tmp_name_value_57;
        PyObject *tmp_globals_arg_value_57;
        PyObject *tmp_locals_arg_value_57;
        PyObject *tmp_fromlist_value_57;
        PyObject *tmp_level_value_57;
        tmp_name_value_57 = mod_consts[210];
        tmp_globals_arg_value_57 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_57 = Py_None;
        tmp_fromlist_value_57 = mod_consts[211];
        tmp_level_value_57 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 118;
        tmp_assign_source_110 = IMPORT_MODULE5(tmp_name_value_57, tmp_globals_arg_value_57, tmp_locals_arg_value_57, tmp_fromlist_value_57, tmp_level_value_57);
        if (tmp_assign_source_110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 118;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_17__module == NULL);
        tmp_import_from_17__module = tmp_assign_source_110;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_111;
        PyObject *tmp_import_name_from_90;
        CHECK_OBJECT(tmp_import_from_17__module);
        tmp_import_name_from_90 = tmp_import_from_17__module;
        if (PyModule_Check(tmp_import_name_from_90)) {
            tmp_assign_source_111 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_90,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[212],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_111 = IMPORT_NAME(tmp_import_name_from_90, mod_consts[212]);
        }

        if (tmp_assign_source_111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 118;

            goto try_except_handler_17;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[212], tmp_assign_source_111);
    }
    {
        PyObject *tmp_assign_source_112;
        PyObject *tmp_import_name_from_91;
        CHECK_OBJECT(tmp_import_from_17__module);
        tmp_import_name_from_91 = tmp_import_from_17__module;
        if (PyModule_Check(tmp_import_name_from_91)) {
            tmp_assign_source_112 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_91,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[213],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_112 = IMPORT_NAME(tmp_import_name_from_91, mod_consts[213]);
        }

        if (tmp_assign_source_112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 118;

            goto try_except_handler_17;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[213], tmp_assign_source_112);
    }
    {
        PyObject *tmp_assign_source_113;
        PyObject *tmp_import_name_from_92;
        CHECK_OBJECT(tmp_import_from_17__module);
        tmp_import_name_from_92 = tmp_import_from_17__module;
        if (PyModule_Check(tmp_import_name_from_92)) {
            tmp_assign_source_113 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_92,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[214],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_113 = IMPORT_NAME(tmp_import_name_from_92, mod_consts[214]);
        }

        if (tmp_assign_source_113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 118;

            goto try_except_handler_17;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[214], tmp_assign_source_113);
    }
    {
        PyObject *tmp_assign_source_114;
        PyObject *tmp_import_name_from_93;
        CHECK_OBJECT(tmp_import_from_17__module);
        tmp_import_name_from_93 = tmp_import_from_17__module;
        if (PyModule_Check(tmp_import_name_from_93)) {
            tmp_assign_source_114 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_93,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[215],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_114 = IMPORT_NAME(tmp_import_name_from_93, mod_consts[215]);
        }

        if (tmp_assign_source_114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 118;

            goto try_except_handler_17;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[215], tmp_assign_source_114);
    }
    {
        PyObject *tmp_assign_source_115;
        PyObject *tmp_import_name_from_94;
        CHECK_OBJECT(tmp_import_from_17__module);
        tmp_import_name_from_94 = tmp_import_from_17__module;
        if (PyModule_Check(tmp_import_name_from_94)) {
            tmp_assign_source_115 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_94,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[216],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_115 = IMPORT_NAME(tmp_import_name_from_94, mod_consts[216]);
        }

        if (tmp_assign_source_115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 118;

            goto try_except_handler_17;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[216], tmp_assign_source_115);
    }
    goto try_end_17;
    // Exception handler code:
    try_except_handler_17:;
    exception_keeper_type_17 = exception_type;
    exception_keeper_value_17 = exception_value;
    exception_keeper_tb_17 = exception_tb;
    exception_keeper_lineno_17 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_17__module);
    Py_DECREF(tmp_import_from_17__module);
    tmp_import_from_17__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_17;
    exception_value = exception_keeper_value_17;
    exception_tb = exception_keeper_tb_17;
    exception_lineno = exception_keeper_lineno_17;

    goto frame_exception_exit_1;
    // End of try:
    try_end_17:;
    CHECK_OBJECT(tmp_import_from_17__module);
    Py_DECREF(tmp_import_from_17__module);
    tmp_import_from_17__module = NULL;
    {
        PyObject *tmp_assign_source_116;
        PyObject *tmp_import_name_from_95;
        PyObject *tmp_name_value_58;
        PyObject *tmp_globals_arg_value_58;
        PyObject *tmp_locals_arg_value_58;
        PyObject *tmp_fromlist_value_58;
        PyObject *tmp_level_value_58;
        tmp_name_value_58 = mod_consts[217];
        tmp_globals_arg_value_58 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_58 = Py_None;
        tmp_fromlist_value_58 = mod_consts[218];
        tmp_level_value_58 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 125;
        tmp_import_name_from_95 = IMPORT_MODULE5(tmp_name_value_58, tmp_globals_arg_value_58, tmp_locals_arg_value_58, tmp_fromlist_value_58, tmp_level_value_58);
        if (tmp_import_name_from_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 125;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_95)) {
            tmp_assign_source_116 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_95,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[219],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_116 = IMPORT_NAME(tmp_import_name_from_95, mod_consts[219]);
        }

        Py_DECREF(tmp_import_name_from_95);
        if (tmp_assign_source_116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 125;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[219], tmp_assign_source_116);
    }
    {
        PyObject *tmp_assign_source_117;
        PyObject *tmp_name_value_59;
        PyObject *tmp_globals_arg_value_59;
        PyObject *tmp_locals_arg_value_59;
        PyObject *tmp_fromlist_value_59;
        PyObject *tmp_level_value_59;
        tmp_name_value_59 = mod_consts[220];
        tmp_globals_arg_value_59 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_59 = Py_None;
        tmp_fromlist_value_59 = mod_consts[221];
        tmp_level_value_59 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 126;
        tmp_assign_source_117 = IMPORT_MODULE5(tmp_name_value_59, tmp_globals_arg_value_59, tmp_locals_arg_value_59, tmp_fromlist_value_59, tmp_level_value_59);
        if (tmp_assign_source_117 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 126;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_18__module == NULL);
        tmp_import_from_18__module = tmp_assign_source_117;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_118;
        PyObject *tmp_import_name_from_96;
        CHECK_OBJECT(tmp_import_from_18__module);
        tmp_import_name_from_96 = tmp_import_from_18__module;
        if (PyModule_Check(tmp_import_name_from_96)) {
            tmp_assign_source_118 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_96,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[222],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_118 = IMPORT_NAME(tmp_import_name_from_96, mod_consts[222]);
        }

        if (tmp_assign_source_118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 126;

            goto try_except_handler_18;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[222], tmp_assign_source_118);
    }
    {
        PyObject *tmp_assign_source_119;
        PyObject *tmp_import_name_from_97;
        CHECK_OBJECT(tmp_import_from_18__module);
        tmp_import_name_from_97 = tmp_import_from_18__module;
        if (PyModule_Check(tmp_import_name_from_97)) {
            tmp_assign_source_119 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_97,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[223],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_119 = IMPORT_NAME(tmp_import_name_from_97, mod_consts[223]);
        }

        if (tmp_assign_source_119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 126;

            goto try_except_handler_18;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[223], tmp_assign_source_119);
    }
    goto try_end_18;
    // Exception handler code:
    try_except_handler_18:;
    exception_keeper_type_18 = exception_type;
    exception_keeper_value_18 = exception_value;
    exception_keeper_tb_18 = exception_tb;
    exception_keeper_lineno_18 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_18__module);
    Py_DECREF(tmp_import_from_18__module);
    tmp_import_from_18__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_18;
    exception_value = exception_keeper_value_18;
    exception_tb = exception_keeper_tb_18;
    exception_lineno = exception_keeper_lineno_18;

    goto frame_exception_exit_1;
    // End of try:
    try_end_18:;
    CHECK_OBJECT(tmp_import_from_18__module);
    Py_DECREF(tmp_import_from_18__module);
    tmp_import_from_18__module = NULL;
    {
        PyObject *tmp_assign_source_120;
        PyObject *tmp_import_name_from_98;
        PyObject *tmp_name_value_60;
        PyObject *tmp_globals_arg_value_60;
        PyObject *tmp_locals_arg_value_60;
        PyObject *tmp_fromlist_value_60;
        PyObject *tmp_level_value_60;
        tmp_name_value_60 = mod_consts[224];
        tmp_globals_arg_value_60 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_60 = Py_None;
        tmp_fromlist_value_60 = mod_consts[225];
        tmp_level_value_60 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 130;
        tmp_import_name_from_98 = IMPORT_MODULE5(tmp_name_value_60, tmp_globals_arg_value_60, tmp_locals_arg_value_60, tmp_fromlist_value_60, tmp_level_value_60);
        if (tmp_import_name_from_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 130;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_98)) {
            tmp_assign_source_120 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_98,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[226],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_120 = IMPORT_NAME(tmp_import_name_from_98, mod_consts[226]);
        }

        Py_DECREF(tmp_import_name_from_98);
        if (tmp_assign_source_120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 130;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[226], tmp_assign_source_120);
    }
    {
        PyObject *tmp_assign_source_121;
        PyObject *tmp_name_value_61;
        PyObject *tmp_globals_arg_value_61;
        PyObject *tmp_locals_arg_value_61;
        PyObject *tmp_fromlist_value_61;
        PyObject *tmp_level_value_61;
        tmp_name_value_61 = mod_consts[227];
        tmp_globals_arg_value_61 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_61 = Py_None;
        tmp_fromlist_value_61 = mod_consts[228];
        tmp_level_value_61 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 131;
        tmp_assign_source_121 = IMPORT_MODULE5(tmp_name_value_61, tmp_globals_arg_value_61, tmp_locals_arg_value_61, tmp_fromlist_value_61, tmp_level_value_61);
        if (tmp_assign_source_121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 131;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_19__module == NULL);
        tmp_import_from_19__module = tmp_assign_source_121;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_122;
        PyObject *tmp_import_name_from_99;
        CHECK_OBJECT(tmp_import_from_19__module);
        tmp_import_name_from_99 = tmp_import_from_19__module;
        if (PyModule_Check(tmp_import_name_from_99)) {
            tmp_assign_source_122 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_99,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[229],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_122 = IMPORT_NAME(tmp_import_name_from_99, mod_consts[229]);
        }

        if (tmp_assign_source_122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 131;

            goto try_except_handler_19;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[229], tmp_assign_source_122);
    }
    {
        PyObject *tmp_assign_source_123;
        PyObject *tmp_import_name_from_100;
        CHECK_OBJECT(tmp_import_from_19__module);
        tmp_import_name_from_100 = tmp_import_from_19__module;
        if (PyModule_Check(tmp_import_name_from_100)) {
            tmp_assign_source_123 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_100,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[230],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_123 = IMPORT_NAME(tmp_import_name_from_100, mod_consts[230]);
        }

        if (tmp_assign_source_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 131;

            goto try_except_handler_19;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[230], tmp_assign_source_123);
    }
    goto try_end_19;
    // Exception handler code:
    try_except_handler_19:;
    exception_keeper_type_19 = exception_type;
    exception_keeper_value_19 = exception_value;
    exception_keeper_tb_19 = exception_tb;
    exception_keeper_lineno_19 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_19__module);
    Py_DECREF(tmp_import_from_19__module);
    tmp_import_from_19__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_19;
    exception_value = exception_keeper_value_19;
    exception_tb = exception_keeper_tb_19;
    exception_lineno = exception_keeper_lineno_19;

    goto frame_exception_exit_1;
    // End of try:
    try_end_19:;
    CHECK_OBJECT(tmp_import_from_19__module);
    Py_DECREF(tmp_import_from_19__module);
    tmp_import_from_19__module = NULL;
    {
        PyObject *tmp_assign_source_124;
        PyObject *tmp_import_name_from_101;
        PyObject *tmp_name_value_62;
        PyObject *tmp_globals_arg_value_62;
        PyObject *tmp_locals_arg_value_62;
        PyObject *tmp_fromlist_value_62;
        PyObject *tmp_level_value_62;
        tmp_name_value_62 = mod_consts[231];
        tmp_globals_arg_value_62 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_62 = Py_None;
        tmp_fromlist_value_62 = mod_consts[232];
        tmp_level_value_62 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 135;
        tmp_import_name_from_101 = IMPORT_MODULE5(tmp_name_value_62, tmp_globals_arg_value_62, tmp_locals_arg_value_62, tmp_fromlist_value_62, tmp_level_value_62);
        if (tmp_import_name_from_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_101)) {
            tmp_assign_source_124 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_101,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[233],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_124 = IMPORT_NAME(tmp_import_name_from_101, mod_consts[233]);
        }

        Py_DECREF(tmp_import_name_from_101);
        if (tmp_assign_source_124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[233], tmp_assign_source_124);
    }
    {
        PyObject *tmp_assign_source_125;
        PyObject *tmp_import_name_from_102;
        PyObject *tmp_name_value_63;
        PyObject *tmp_globals_arg_value_63;
        PyObject *tmp_locals_arg_value_63;
        PyObject *tmp_fromlist_value_63;
        PyObject *tmp_level_value_63;
        tmp_name_value_63 = mod_consts[234];
        tmp_globals_arg_value_63 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_63 = Py_None;
        tmp_fromlist_value_63 = mod_consts[235];
        tmp_level_value_63 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 136;
        tmp_import_name_from_102 = IMPORT_MODULE5(tmp_name_value_63, tmp_globals_arg_value_63, tmp_locals_arg_value_63, tmp_fromlist_value_63, tmp_level_value_63);
        if (tmp_import_name_from_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 136;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_102)) {
            tmp_assign_source_125 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_102,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[236],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_125 = IMPORT_NAME(tmp_import_name_from_102, mod_consts[236]);
        }

        Py_DECREF(tmp_import_name_from_102);
        if (tmp_assign_source_125 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 136;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[236], tmp_assign_source_125);
    }
    {
        PyObject *tmp_assign_source_126;
        PyObject *tmp_import_name_from_103;
        PyObject *tmp_name_value_64;
        PyObject *tmp_globals_arg_value_64;
        PyObject *tmp_locals_arg_value_64;
        PyObject *tmp_fromlist_value_64;
        PyObject *tmp_level_value_64;
        tmp_name_value_64 = mod_consts[237];
        tmp_globals_arg_value_64 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_64 = Py_None;
        tmp_fromlist_value_64 = mod_consts[238];
        tmp_level_value_64 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 137;
        tmp_import_name_from_103 = IMPORT_MODULE5(tmp_name_value_64, tmp_globals_arg_value_64, tmp_locals_arg_value_64, tmp_fromlist_value_64, tmp_level_value_64);
        if (tmp_import_name_from_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 137;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_103)) {
            tmp_assign_source_126 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_103,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[239],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_126 = IMPORT_NAME(tmp_import_name_from_103, mod_consts[239]);
        }

        Py_DECREF(tmp_import_name_from_103);
        if (tmp_assign_source_126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 137;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[239], tmp_assign_source_126);
    }
    {
        PyObject *tmp_assign_source_127;
        PyObject *tmp_import_name_from_104;
        PyObject *tmp_name_value_65;
        PyObject *tmp_globals_arg_value_65;
        PyObject *tmp_locals_arg_value_65;
        PyObject *tmp_fromlist_value_65;
        PyObject *tmp_level_value_65;
        tmp_name_value_65 = mod_consts[240];
        tmp_globals_arg_value_65 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_65 = Py_None;
        tmp_fromlist_value_65 = mod_consts[241];
        tmp_level_value_65 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 138;
        tmp_import_name_from_104 = IMPORT_MODULE5(tmp_name_value_65, tmp_globals_arg_value_65, tmp_locals_arg_value_65, tmp_fromlist_value_65, tmp_level_value_65);
        if (tmp_import_name_from_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 138;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_104)) {
            tmp_assign_source_127 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_104,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[242],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_127 = IMPORT_NAME(tmp_import_name_from_104, mod_consts[242]);
        }

        Py_DECREF(tmp_import_name_from_104);
        if (tmp_assign_source_127 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 138;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[242], tmp_assign_source_127);
    }
    {
        PyObject *tmp_assign_source_128;
        PyObject *tmp_import_name_from_105;
        PyObject *tmp_name_value_66;
        PyObject *tmp_globals_arg_value_66;
        PyObject *tmp_locals_arg_value_66;
        PyObject *tmp_fromlist_value_66;
        PyObject *tmp_level_value_66;
        tmp_name_value_66 = mod_consts[243];
        tmp_globals_arg_value_66 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_66 = Py_None;
        tmp_fromlist_value_66 = mod_consts[244];
        tmp_level_value_66 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 139;
        tmp_import_name_from_105 = IMPORT_MODULE5(tmp_name_value_66, tmp_globals_arg_value_66, tmp_locals_arg_value_66, tmp_fromlist_value_66, tmp_level_value_66);
        if (tmp_import_name_from_105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 139;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_105)) {
            tmp_assign_source_128 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_105,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[245],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_128 = IMPORT_NAME(tmp_import_name_from_105, mod_consts[245]);
        }

        Py_DECREF(tmp_import_name_from_105);
        if (tmp_assign_source_128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 139;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[245], tmp_assign_source_128);
    }
    {
        PyObject *tmp_assign_source_129;
        PyObject *tmp_import_name_from_106;
        PyObject *tmp_name_value_67;
        PyObject *tmp_globals_arg_value_67;
        PyObject *tmp_locals_arg_value_67;
        PyObject *tmp_fromlist_value_67;
        PyObject *tmp_level_value_67;
        tmp_name_value_67 = mod_consts[246];
        tmp_globals_arg_value_67 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_67 = Py_None;
        tmp_fromlist_value_67 = mod_consts[247];
        tmp_level_value_67 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 140;
        tmp_import_name_from_106 = IMPORT_MODULE5(tmp_name_value_67, tmp_globals_arg_value_67, tmp_locals_arg_value_67, tmp_fromlist_value_67, tmp_level_value_67);
        if (tmp_import_name_from_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 140;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_106)) {
            tmp_assign_source_129 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_106,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[248],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_129 = IMPORT_NAME(tmp_import_name_from_106, mod_consts[248]);
        }

        Py_DECREF(tmp_import_name_from_106);
        if (tmp_assign_source_129 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 140;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[248], tmp_assign_source_129);
    }
    {
        PyObject *tmp_assign_source_130;
        PyObject *tmp_name_value_68;
        PyObject *tmp_globals_arg_value_68;
        PyObject *tmp_locals_arg_value_68;
        PyObject *tmp_fromlist_value_68;
        PyObject *tmp_level_value_68;
        tmp_name_value_68 = mod_consts[249];
        tmp_globals_arg_value_68 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_68 = Py_None;
        tmp_fromlist_value_68 = mod_consts[250];
        tmp_level_value_68 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 141;
        tmp_assign_source_130 = IMPORT_MODULE5(tmp_name_value_68, tmp_globals_arg_value_68, tmp_locals_arg_value_68, tmp_fromlist_value_68, tmp_level_value_68);
        if (tmp_assign_source_130 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 141;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_20__module == NULL);
        tmp_import_from_20__module = tmp_assign_source_130;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_131;
        PyObject *tmp_import_name_from_107;
        CHECK_OBJECT(tmp_import_from_20__module);
        tmp_import_name_from_107 = tmp_import_from_20__module;
        if (PyModule_Check(tmp_import_name_from_107)) {
            tmp_assign_source_131 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_107,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[251],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_131 = IMPORT_NAME(tmp_import_name_from_107, mod_consts[251]);
        }

        if (tmp_assign_source_131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 141;

            goto try_except_handler_20;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[251], tmp_assign_source_131);
    }
    {
        PyObject *tmp_assign_source_132;
        PyObject *tmp_import_name_from_108;
        CHECK_OBJECT(tmp_import_from_20__module);
        tmp_import_name_from_108 = tmp_import_from_20__module;
        if (PyModule_Check(tmp_import_name_from_108)) {
            tmp_assign_source_132 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_108,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[252],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_132 = IMPORT_NAME(tmp_import_name_from_108, mod_consts[252]);
        }

        if (tmp_assign_source_132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 141;

            goto try_except_handler_20;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[252], tmp_assign_source_132);
    }
    goto try_end_20;
    // Exception handler code:
    try_except_handler_20:;
    exception_keeper_type_20 = exception_type;
    exception_keeper_value_20 = exception_value;
    exception_keeper_tb_20 = exception_tb;
    exception_keeper_lineno_20 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_20__module);
    Py_DECREF(tmp_import_from_20__module);
    tmp_import_from_20__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_20;
    exception_value = exception_keeper_value_20;
    exception_tb = exception_keeper_tb_20;
    exception_lineno = exception_keeper_lineno_20;

    goto frame_exception_exit_1;
    // End of try:
    try_end_20:;
    CHECK_OBJECT(tmp_import_from_20__module);
    Py_DECREF(tmp_import_from_20__module);
    tmp_import_from_20__module = NULL;
    {
        PyObject *tmp_assign_source_133;
        PyObject *tmp_import_name_from_109;
        PyObject *tmp_name_value_69;
        PyObject *tmp_globals_arg_value_69;
        PyObject *tmp_locals_arg_value_69;
        PyObject *tmp_fromlist_value_69;
        PyObject *tmp_level_value_69;
        tmp_name_value_69 = mod_consts[253];
        tmp_globals_arg_value_69 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_69 = Py_None;
        tmp_fromlist_value_69 = mod_consts[254];
        tmp_level_value_69 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 145;
        tmp_import_name_from_109 = IMPORT_MODULE5(tmp_name_value_69, tmp_globals_arg_value_69, tmp_locals_arg_value_69, tmp_fromlist_value_69, tmp_level_value_69);
        if (tmp_import_name_from_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 145;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_109)) {
            tmp_assign_source_133 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_109,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[255],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_133 = IMPORT_NAME(tmp_import_name_from_109, mod_consts[255]);
        }

        Py_DECREF(tmp_import_name_from_109);
        if (tmp_assign_source_133 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 145;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[255], tmp_assign_source_133);
    }
    {
        PyObject *tmp_assign_source_134;
        PyObject *tmp_import_name_from_110;
        PyObject *tmp_name_value_70;
        PyObject *tmp_globals_arg_value_70;
        PyObject *tmp_locals_arg_value_70;
        PyObject *tmp_fromlist_value_70;
        PyObject *tmp_level_value_70;
        tmp_name_value_70 = mod_consts[256];
        tmp_globals_arg_value_70 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_70 = Py_None;
        tmp_fromlist_value_70 = mod_consts[257];
        tmp_level_value_70 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 146;
        tmp_import_name_from_110 = IMPORT_MODULE5(tmp_name_value_70, tmp_globals_arg_value_70, tmp_locals_arg_value_70, tmp_fromlist_value_70, tmp_level_value_70);
        if (tmp_import_name_from_110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 146;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_110)) {
            tmp_assign_source_134 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_110,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[258],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_134 = IMPORT_NAME(tmp_import_name_from_110, mod_consts[258]);
        }

        Py_DECREF(tmp_import_name_from_110);
        if (tmp_assign_source_134 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 146;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[258], tmp_assign_source_134);
    }
    {
        PyObject *tmp_assign_source_135;
        PyObject *tmp_name_value_71;
        PyObject *tmp_globals_arg_value_71;
        PyObject *tmp_locals_arg_value_71;
        PyObject *tmp_fromlist_value_71;
        PyObject *tmp_level_value_71;
        tmp_name_value_71 = mod_consts[259];
        tmp_globals_arg_value_71 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_71 = Py_None;
        tmp_fromlist_value_71 = mod_consts[260];
        tmp_level_value_71 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 147;
        tmp_assign_source_135 = IMPORT_MODULE5(tmp_name_value_71, tmp_globals_arg_value_71, tmp_locals_arg_value_71, tmp_fromlist_value_71, tmp_level_value_71);
        if (tmp_assign_source_135 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 147;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_21__module == NULL);
        tmp_import_from_21__module = tmp_assign_source_135;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_136;
        PyObject *tmp_import_name_from_111;
        CHECK_OBJECT(tmp_import_from_21__module);
        tmp_import_name_from_111 = tmp_import_from_21__module;
        if (PyModule_Check(tmp_import_name_from_111)) {
            tmp_assign_source_136 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_111,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[261],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_136 = IMPORT_NAME(tmp_import_name_from_111, mod_consts[261]);
        }

        if (tmp_assign_source_136 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 147;

            goto try_except_handler_21;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[261], tmp_assign_source_136);
    }
    {
        PyObject *tmp_assign_source_137;
        PyObject *tmp_import_name_from_112;
        CHECK_OBJECT(tmp_import_from_21__module);
        tmp_import_name_from_112 = tmp_import_from_21__module;
        if (PyModule_Check(tmp_import_name_from_112)) {
            tmp_assign_source_137 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_112,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[262],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_137 = IMPORT_NAME(tmp_import_name_from_112, mod_consts[262]);
        }

        if (tmp_assign_source_137 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 147;

            goto try_except_handler_21;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[262], tmp_assign_source_137);
    }
    goto try_end_21;
    // Exception handler code:
    try_except_handler_21:;
    exception_keeper_type_21 = exception_type;
    exception_keeper_value_21 = exception_value;
    exception_keeper_tb_21 = exception_tb;
    exception_keeper_lineno_21 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_21__module);
    Py_DECREF(tmp_import_from_21__module);
    tmp_import_from_21__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_21;
    exception_value = exception_keeper_value_21;
    exception_tb = exception_keeper_tb_21;
    exception_lineno = exception_keeper_lineno_21;

    goto frame_exception_exit_1;
    // End of try:
    try_end_21:;
    CHECK_OBJECT(tmp_import_from_21__module);
    Py_DECREF(tmp_import_from_21__module);
    tmp_import_from_21__module = NULL;
    {
        PyObject *tmp_assign_source_138;
        PyObject *tmp_import_name_from_113;
        PyObject *tmp_name_value_72;
        PyObject *tmp_globals_arg_value_72;
        PyObject *tmp_locals_arg_value_72;
        PyObject *tmp_fromlist_value_72;
        PyObject *tmp_level_value_72;
        tmp_name_value_72 = mod_consts[263];
        tmp_globals_arg_value_72 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_72 = Py_None;
        tmp_fromlist_value_72 = mod_consts[264];
        tmp_level_value_72 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 151;
        tmp_import_name_from_113 = IMPORT_MODULE5(tmp_name_value_72, tmp_globals_arg_value_72, tmp_locals_arg_value_72, tmp_fromlist_value_72, tmp_level_value_72);
        if (tmp_import_name_from_113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 151;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_113)) {
            tmp_assign_source_138 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_113,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[265],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_138 = IMPORT_NAME(tmp_import_name_from_113, mod_consts[265]);
        }

        Py_DECREF(tmp_import_name_from_113);
        if (tmp_assign_source_138 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 151;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[265], tmp_assign_source_138);
    }
    {
        PyObject *tmp_assign_source_139;
        PyObject *tmp_import_name_from_114;
        PyObject *tmp_name_value_73;
        PyObject *tmp_globals_arg_value_73;
        PyObject *tmp_locals_arg_value_73;
        PyObject *tmp_fromlist_value_73;
        PyObject *tmp_level_value_73;
        tmp_name_value_73 = mod_consts[266];
        tmp_globals_arg_value_73 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_73 = Py_None;
        tmp_fromlist_value_73 = mod_consts[267];
        tmp_level_value_73 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 152;
        tmp_import_name_from_114 = IMPORT_MODULE5(tmp_name_value_73, tmp_globals_arg_value_73, tmp_locals_arg_value_73, tmp_fromlist_value_73, tmp_level_value_73);
        if (tmp_import_name_from_114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 152;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_114)) {
            tmp_assign_source_139 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_114,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[268],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_139 = IMPORT_NAME(tmp_import_name_from_114, mod_consts[268]);
        }

        Py_DECREF(tmp_import_name_from_114);
        if (tmp_assign_source_139 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 152;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[268], tmp_assign_source_139);
    }
    {
        PyObject *tmp_assign_source_140;
        PyObject *tmp_import_name_from_115;
        PyObject *tmp_name_value_74;
        PyObject *tmp_globals_arg_value_74;
        PyObject *tmp_locals_arg_value_74;
        PyObject *tmp_fromlist_value_74;
        PyObject *tmp_level_value_74;
        tmp_name_value_74 = mod_consts[269];
        tmp_globals_arg_value_74 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_74 = Py_None;
        tmp_fromlist_value_74 = mod_consts[270];
        tmp_level_value_74 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 153;
        tmp_import_name_from_115 = IMPORT_MODULE5(tmp_name_value_74, tmp_globals_arg_value_74, tmp_locals_arg_value_74, tmp_fromlist_value_74, tmp_level_value_74);
        if (tmp_import_name_from_115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 153;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_115)) {
            tmp_assign_source_140 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_115,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[271],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_140 = IMPORT_NAME(tmp_import_name_from_115, mod_consts[271]);
        }

        Py_DECREF(tmp_import_name_from_115);
        if (tmp_assign_source_140 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 153;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[271], tmp_assign_source_140);
    }
    {
        PyObject *tmp_assign_source_141;
        PyObject *tmp_import_name_from_116;
        PyObject *tmp_name_value_75;
        PyObject *tmp_globals_arg_value_75;
        PyObject *tmp_locals_arg_value_75;
        PyObject *tmp_fromlist_value_75;
        PyObject *tmp_level_value_75;
        tmp_name_value_75 = mod_consts[272];
        tmp_globals_arg_value_75 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_75 = Py_None;
        tmp_fromlist_value_75 = mod_consts[273];
        tmp_level_value_75 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 154;
        tmp_import_name_from_116 = IMPORT_MODULE5(tmp_name_value_75, tmp_globals_arg_value_75, tmp_locals_arg_value_75, tmp_fromlist_value_75, tmp_level_value_75);
        if (tmp_import_name_from_116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 154;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_116)) {
            tmp_assign_source_141 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_116,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[274],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_141 = IMPORT_NAME(tmp_import_name_from_116, mod_consts[274]);
        }

        Py_DECREF(tmp_import_name_from_116);
        if (tmp_assign_source_141 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 154;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[274], tmp_assign_source_141);
    }
    {
        PyObject *tmp_assign_source_142;
        PyObject *tmp_name_value_76;
        PyObject *tmp_globals_arg_value_76;
        PyObject *tmp_locals_arg_value_76;
        PyObject *tmp_fromlist_value_76;
        PyObject *tmp_level_value_76;
        tmp_name_value_76 = mod_consts[275];
        tmp_globals_arg_value_76 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_76 = Py_None;
        tmp_fromlist_value_76 = mod_consts[276];
        tmp_level_value_76 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 155;
        tmp_assign_source_142 = IMPORT_MODULE5(tmp_name_value_76, tmp_globals_arg_value_76, tmp_locals_arg_value_76, tmp_fromlist_value_76, tmp_level_value_76);
        if (tmp_assign_source_142 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 155;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_22__module == NULL);
        tmp_import_from_22__module = tmp_assign_source_142;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_143;
        PyObject *tmp_import_name_from_117;
        CHECK_OBJECT(tmp_import_from_22__module);
        tmp_import_name_from_117 = tmp_import_from_22__module;
        if (PyModule_Check(tmp_import_name_from_117)) {
            tmp_assign_source_143 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_117,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[277],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_143 = IMPORT_NAME(tmp_import_name_from_117, mod_consts[277]);
        }

        if (tmp_assign_source_143 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 155;

            goto try_except_handler_22;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[277], tmp_assign_source_143);
    }
    {
        PyObject *tmp_assign_source_144;
        PyObject *tmp_import_name_from_118;
        CHECK_OBJECT(tmp_import_from_22__module);
        tmp_import_name_from_118 = tmp_import_from_22__module;
        if (PyModule_Check(tmp_import_name_from_118)) {
            tmp_assign_source_144 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_118,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[278],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_144 = IMPORT_NAME(tmp_import_name_from_118, mod_consts[278]);
        }

        if (tmp_assign_source_144 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 155;

            goto try_except_handler_22;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[278], tmp_assign_source_144);
    }
    goto try_end_22;
    // Exception handler code:
    try_except_handler_22:;
    exception_keeper_type_22 = exception_type;
    exception_keeper_value_22 = exception_value;
    exception_keeper_tb_22 = exception_tb;
    exception_keeper_lineno_22 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_22__module);
    Py_DECREF(tmp_import_from_22__module);
    tmp_import_from_22__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_22;
    exception_value = exception_keeper_value_22;
    exception_tb = exception_keeper_tb_22;
    exception_lineno = exception_keeper_lineno_22;

    goto frame_exception_exit_1;
    // End of try:
    try_end_22:;
    CHECK_OBJECT(tmp_import_from_22__module);
    Py_DECREF(tmp_import_from_22__module);
    tmp_import_from_22__module = NULL;
    {
        PyObject *tmp_assign_source_145;
        PyObject *tmp_import_name_from_119;
        PyObject *tmp_name_value_77;
        PyObject *tmp_globals_arg_value_77;
        PyObject *tmp_locals_arg_value_77;
        PyObject *tmp_fromlist_value_77;
        PyObject *tmp_level_value_77;
        tmp_name_value_77 = mod_consts[279];
        tmp_globals_arg_value_77 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_77 = Py_None;
        tmp_fromlist_value_77 = mod_consts[280];
        tmp_level_value_77 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 159;
        tmp_import_name_from_119 = IMPORT_MODULE5(tmp_name_value_77, tmp_globals_arg_value_77, tmp_locals_arg_value_77, tmp_fromlist_value_77, tmp_level_value_77);
        if (tmp_import_name_from_119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 159;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_119)) {
            tmp_assign_source_145 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_119,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[281],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_145 = IMPORT_NAME(tmp_import_name_from_119, mod_consts[281]);
        }

        Py_DECREF(tmp_import_name_from_119);
        if (tmp_assign_source_145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 159;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[281], tmp_assign_source_145);
    }
    {
        PyObject *tmp_assign_source_146;
        PyObject *tmp_import_name_from_120;
        PyObject *tmp_name_value_78;
        PyObject *tmp_globals_arg_value_78;
        PyObject *tmp_locals_arg_value_78;
        PyObject *tmp_fromlist_value_78;
        PyObject *tmp_level_value_78;
        tmp_name_value_78 = mod_consts[282];
        tmp_globals_arg_value_78 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_78 = Py_None;
        tmp_fromlist_value_78 = mod_consts[283];
        tmp_level_value_78 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 160;
        tmp_import_name_from_120 = IMPORT_MODULE5(tmp_name_value_78, tmp_globals_arg_value_78, tmp_locals_arg_value_78, tmp_fromlist_value_78, tmp_level_value_78);
        if (tmp_import_name_from_120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 160;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_120)) {
            tmp_assign_source_146 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_120,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[284],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_146 = IMPORT_NAME(tmp_import_name_from_120, mod_consts[284]);
        }

        Py_DECREF(tmp_import_name_from_120);
        if (tmp_assign_source_146 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 160;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[284], tmp_assign_source_146);
    }
    {
        PyObject *tmp_assign_source_147;
        PyObject *tmp_import_name_from_121;
        PyObject *tmp_name_value_79;
        PyObject *tmp_globals_arg_value_79;
        PyObject *tmp_locals_arg_value_79;
        PyObject *tmp_fromlist_value_79;
        PyObject *tmp_level_value_79;
        tmp_name_value_79 = mod_consts[285];
        tmp_globals_arg_value_79 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_79 = Py_None;
        tmp_fromlist_value_79 = mod_consts[286];
        tmp_level_value_79 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 161;
        tmp_import_name_from_121 = IMPORT_MODULE5(tmp_name_value_79, tmp_globals_arg_value_79, tmp_locals_arg_value_79, tmp_fromlist_value_79, tmp_level_value_79);
        if (tmp_import_name_from_121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_121)) {
            tmp_assign_source_147 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_121,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[287],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_147 = IMPORT_NAME(tmp_import_name_from_121, mod_consts[287]);
        }

        Py_DECREF(tmp_import_name_from_121);
        if (tmp_assign_source_147 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 161;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[287], tmp_assign_source_147);
    }
    {
        PyObject *tmp_assign_source_148;
        PyObject *tmp_import_name_from_122;
        PyObject *tmp_name_value_80;
        PyObject *tmp_globals_arg_value_80;
        PyObject *tmp_locals_arg_value_80;
        PyObject *tmp_fromlist_value_80;
        PyObject *tmp_level_value_80;
        tmp_name_value_80 = mod_consts[288];
        tmp_globals_arg_value_80 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_80 = Py_None;
        tmp_fromlist_value_80 = mod_consts[289];
        tmp_level_value_80 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 162;
        tmp_import_name_from_122 = IMPORT_MODULE5(tmp_name_value_80, tmp_globals_arg_value_80, tmp_locals_arg_value_80, tmp_fromlist_value_80, tmp_level_value_80);
        if (tmp_import_name_from_122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 162;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_122)) {
            tmp_assign_source_148 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_122,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[290],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_148 = IMPORT_NAME(tmp_import_name_from_122, mod_consts[290]);
        }

        Py_DECREF(tmp_import_name_from_122);
        if (tmp_assign_source_148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 162;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[290], tmp_assign_source_148);
    }
    {
        PyObject *tmp_assign_source_149;
        PyObject *tmp_import_name_from_123;
        PyObject *tmp_name_value_81;
        PyObject *tmp_globals_arg_value_81;
        PyObject *tmp_locals_arg_value_81;
        PyObject *tmp_fromlist_value_81;
        PyObject *tmp_level_value_81;
        tmp_name_value_81 = mod_consts[291];
        tmp_globals_arg_value_81 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_81 = Py_None;
        tmp_fromlist_value_81 = mod_consts[292];
        tmp_level_value_81 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 163;
        tmp_import_name_from_123 = IMPORT_MODULE5(tmp_name_value_81, tmp_globals_arg_value_81, tmp_locals_arg_value_81, tmp_fromlist_value_81, tmp_level_value_81);
        if (tmp_import_name_from_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 163;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_123)) {
            tmp_assign_source_149 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_123,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[293],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_149 = IMPORT_NAME(tmp_import_name_from_123, mod_consts[293]);
        }

        Py_DECREF(tmp_import_name_from_123);
        if (tmp_assign_source_149 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 163;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[293], tmp_assign_source_149);
    }
    {
        PyObject *tmp_assign_source_150;
        PyObject *tmp_name_value_82;
        PyObject *tmp_globals_arg_value_82;
        PyObject *tmp_locals_arg_value_82;
        PyObject *tmp_fromlist_value_82;
        PyObject *tmp_level_value_82;
        tmp_name_value_82 = mod_consts[294];
        tmp_globals_arg_value_82 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_82 = Py_None;
        tmp_fromlist_value_82 = mod_consts[295];
        tmp_level_value_82 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 164;
        tmp_assign_source_150 = IMPORT_MODULE5(tmp_name_value_82, tmp_globals_arg_value_82, tmp_locals_arg_value_82, tmp_fromlist_value_82, tmp_level_value_82);
        if (tmp_assign_source_150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 164;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_23__module == NULL);
        tmp_import_from_23__module = tmp_assign_source_150;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_151;
        PyObject *tmp_import_name_from_124;
        CHECK_OBJECT(tmp_import_from_23__module);
        tmp_import_name_from_124 = tmp_import_from_23__module;
        if (PyModule_Check(tmp_import_name_from_124)) {
            tmp_assign_source_151 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_124,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[296],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_151 = IMPORT_NAME(tmp_import_name_from_124, mod_consts[296]);
        }

        if (tmp_assign_source_151 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 164;

            goto try_except_handler_23;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[296], tmp_assign_source_151);
    }
    {
        PyObject *tmp_assign_source_152;
        PyObject *tmp_import_name_from_125;
        CHECK_OBJECT(tmp_import_from_23__module);
        tmp_import_name_from_125 = tmp_import_from_23__module;
        if (PyModule_Check(tmp_import_name_from_125)) {
            tmp_assign_source_152 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_125,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[297],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_152 = IMPORT_NAME(tmp_import_name_from_125, mod_consts[297]);
        }

        if (tmp_assign_source_152 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 164;

            goto try_except_handler_23;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[297], tmp_assign_source_152);
    }
    {
        PyObject *tmp_assign_source_153;
        PyObject *tmp_import_name_from_126;
        CHECK_OBJECT(tmp_import_from_23__module);
        tmp_import_name_from_126 = tmp_import_from_23__module;
        if (PyModule_Check(tmp_import_name_from_126)) {
            tmp_assign_source_153 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_126,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[298],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_153 = IMPORT_NAME(tmp_import_name_from_126, mod_consts[298]);
        }

        if (tmp_assign_source_153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 164;

            goto try_except_handler_23;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[298], tmp_assign_source_153);
    }
    {
        PyObject *tmp_assign_source_154;
        PyObject *tmp_import_name_from_127;
        CHECK_OBJECT(tmp_import_from_23__module);
        tmp_import_name_from_127 = tmp_import_from_23__module;
        if (PyModule_Check(tmp_import_name_from_127)) {
            tmp_assign_source_154 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_127,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[299],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_154 = IMPORT_NAME(tmp_import_name_from_127, mod_consts[299]);
        }

        if (tmp_assign_source_154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 164;

            goto try_except_handler_23;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[299], tmp_assign_source_154);
    }
    goto try_end_23;
    // Exception handler code:
    try_except_handler_23:;
    exception_keeper_type_23 = exception_type;
    exception_keeper_value_23 = exception_value;
    exception_keeper_tb_23 = exception_tb;
    exception_keeper_lineno_23 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_23__module);
    Py_DECREF(tmp_import_from_23__module);
    tmp_import_from_23__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_23;
    exception_value = exception_keeper_value_23;
    exception_tb = exception_keeper_tb_23;
    exception_lineno = exception_keeper_lineno_23;

    goto frame_exception_exit_1;
    // End of try:
    try_end_23:;
    CHECK_OBJECT(tmp_import_from_23__module);
    Py_DECREF(tmp_import_from_23__module);
    tmp_import_from_23__module = NULL;
    {
        PyObject *tmp_assign_source_155;
        PyObject *tmp_name_value_83;
        PyObject *tmp_globals_arg_value_83;
        PyObject *tmp_locals_arg_value_83;
        PyObject *tmp_fromlist_value_83;
        PyObject *tmp_level_value_83;
        tmp_name_value_83 = mod_consts[300];
        tmp_globals_arg_value_83 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_83 = Py_None;
        tmp_fromlist_value_83 = mod_consts[301];
        tmp_level_value_83 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 170;
        tmp_assign_source_155 = IMPORT_MODULE5(tmp_name_value_83, tmp_globals_arg_value_83, tmp_locals_arg_value_83, tmp_fromlist_value_83, tmp_level_value_83);
        if (tmp_assign_source_155 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 170;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_24__module == NULL);
        tmp_import_from_24__module = tmp_assign_source_155;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_156;
        PyObject *tmp_import_name_from_128;
        CHECK_OBJECT(tmp_import_from_24__module);
        tmp_import_name_from_128 = tmp_import_from_24__module;
        if (PyModule_Check(tmp_import_name_from_128)) {
            tmp_assign_source_156 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_128,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[302],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_156 = IMPORT_NAME(tmp_import_name_from_128, mod_consts[302]);
        }

        if (tmp_assign_source_156 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 170;

            goto try_except_handler_24;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[302], tmp_assign_source_156);
    }
    {
        PyObject *tmp_assign_source_157;
        PyObject *tmp_import_name_from_129;
        CHECK_OBJECT(tmp_import_from_24__module);
        tmp_import_name_from_129 = tmp_import_from_24__module;
        if (PyModule_Check(tmp_import_name_from_129)) {
            tmp_assign_source_157 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_129,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[303],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_157 = IMPORT_NAME(tmp_import_name_from_129, mod_consts[303]);
        }

        if (tmp_assign_source_157 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 170;

            goto try_except_handler_24;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[303], tmp_assign_source_157);
    }
    goto try_end_24;
    // Exception handler code:
    try_except_handler_24:;
    exception_keeper_type_24 = exception_type;
    exception_keeper_value_24 = exception_value;
    exception_keeper_tb_24 = exception_tb;
    exception_keeper_lineno_24 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_24__module);
    Py_DECREF(tmp_import_from_24__module);
    tmp_import_from_24__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_24;
    exception_value = exception_keeper_value_24;
    exception_tb = exception_keeper_tb_24;
    exception_lineno = exception_keeper_lineno_24;

    goto frame_exception_exit_1;
    // End of try:
    try_end_24:;
    CHECK_OBJECT(tmp_import_from_24__module);
    Py_DECREF(tmp_import_from_24__module);
    tmp_import_from_24__module = NULL;
    {
        PyObject *tmp_assign_source_158;
        PyObject *tmp_import_name_from_130;
        PyObject *tmp_name_value_84;
        PyObject *tmp_globals_arg_value_84;
        PyObject *tmp_locals_arg_value_84;
        PyObject *tmp_fromlist_value_84;
        PyObject *tmp_level_value_84;
        tmp_name_value_84 = mod_consts[304];
        tmp_globals_arg_value_84 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_84 = Py_None;
        tmp_fromlist_value_84 = mod_consts[305];
        tmp_level_value_84 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 174;
        tmp_import_name_from_130 = IMPORT_MODULE5(tmp_name_value_84, tmp_globals_arg_value_84, tmp_locals_arg_value_84, tmp_fromlist_value_84, tmp_level_value_84);
        if (tmp_import_name_from_130 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 174;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_130)) {
            tmp_assign_source_158 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_130,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[306],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_158 = IMPORT_NAME(tmp_import_name_from_130, mod_consts[306]);
        }

        Py_DECREF(tmp_import_name_from_130);
        if (tmp_assign_source_158 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 174;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[306], tmp_assign_source_158);
    }
    {
        PyObject *tmp_assign_source_159;
        PyObject *tmp_name_value_85;
        PyObject *tmp_globals_arg_value_85;
        PyObject *tmp_locals_arg_value_85;
        PyObject *tmp_fromlist_value_85;
        PyObject *tmp_level_value_85;
        tmp_name_value_85 = mod_consts[307];
        tmp_globals_arg_value_85 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_85 = Py_None;
        tmp_fromlist_value_85 = mod_consts[308];
        tmp_level_value_85 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 175;
        tmp_assign_source_159 = IMPORT_MODULE5(tmp_name_value_85, tmp_globals_arg_value_85, tmp_locals_arg_value_85, tmp_fromlist_value_85, tmp_level_value_85);
        if (tmp_assign_source_159 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 175;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_25__module == NULL);
        tmp_import_from_25__module = tmp_assign_source_159;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_160;
        PyObject *tmp_import_name_from_131;
        CHECK_OBJECT(tmp_import_from_25__module);
        tmp_import_name_from_131 = tmp_import_from_25__module;
        if (PyModule_Check(tmp_import_name_from_131)) {
            tmp_assign_source_160 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_131,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[309],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_160 = IMPORT_NAME(tmp_import_name_from_131, mod_consts[309]);
        }

        if (tmp_assign_source_160 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 175;

            goto try_except_handler_25;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[309], tmp_assign_source_160);
    }
    {
        PyObject *tmp_assign_source_161;
        PyObject *tmp_import_name_from_132;
        CHECK_OBJECT(tmp_import_from_25__module);
        tmp_import_name_from_132 = tmp_import_from_25__module;
        if (PyModule_Check(tmp_import_name_from_132)) {
            tmp_assign_source_161 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_132,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[310],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_161 = IMPORT_NAME(tmp_import_name_from_132, mod_consts[310]);
        }

        if (tmp_assign_source_161 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 175;

            goto try_except_handler_25;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[310], tmp_assign_source_161);
    }
    {
        PyObject *tmp_assign_source_162;
        PyObject *tmp_import_name_from_133;
        CHECK_OBJECT(tmp_import_from_25__module);
        tmp_import_name_from_133 = tmp_import_from_25__module;
        if (PyModule_Check(tmp_import_name_from_133)) {
            tmp_assign_source_162 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_133,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[311],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_162 = IMPORT_NAME(tmp_import_name_from_133, mod_consts[311]);
        }

        if (tmp_assign_source_162 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 175;

            goto try_except_handler_25;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[311], tmp_assign_source_162);
    }
    {
        PyObject *tmp_assign_source_163;
        PyObject *tmp_import_name_from_134;
        CHECK_OBJECT(tmp_import_from_25__module);
        tmp_import_name_from_134 = tmp_import_from_25__module;
        if (PyModule_Check(tmp_import_name_from_134)) {
            tmp_assign_source_163 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_134,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[312],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_163 = IMPORT_NAME(tmp_import_name_from_134, mod_consts[312]);
        }

        if (tmp_assign_source_163 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 175;

            goto try_except_handler_25;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[312], tmp_assign_source_163);
    }
    {
        PyObject *tmp_assign_source_164;
        PyObject *tmp_import_name_from_135;
        CHECK_OBJECT(tmp_import_from_25__module);
        tmp_import_name_from_135 = tmp_import_from_25__module;
        if (PyModule_Check(tmp_import_name_from_135)) {
            tmp_assign_source_164 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_135,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[313],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_164 = IMPORT_NAME(tmp_import_name_from_135, mod_consts[313]);
        }

        if (tmp_assign_source_164 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 175;

            goto try_except_handler_25;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[313], tmp_assign_source_164);
    }
    goto try_end_25;
    // Exception handler code:
    try_except_handler_25:;
    exception_keeper_type_25 = exception_type;
    exception_keeper_value_25 = exception_value;
    exception_keeper_tb_25 = exception_tb;
    exception_keeper_lineno_25 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_25__module);
    Py_DECREF(tmp_import_from_25__module);
    tmp_import_from_25__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_25;
    exception_value = exception_keeper_value_25;
    exception_tb = exception_keeper_tb_25;
    exception_lineno = exception_keeper_lineno_25;

    goto frame_exception_exit_1;
    // End of try:
    try_end_25:;
    CHECK_OBJECT(tmp_import_from_25__module);
    Py_DECREF(tmp_import_from_25__module);
    tmp_import_from_25__module = NULL;
    {
        PyObject *tmp_assign_source_165;
        PyObject *tmp_import_name_from_136;
        PyObject *tmp_name_value_86;
        PyObject *tmp_globals_arg_value_86;
        PyObject *tmp_locals_arg_value_86;
        PyObject *tmp_fromlist_value_86;
        PyObject *tmp_level_value_86;
        tmp_name_value_86 = mod_consts[314];
        tmp_globals_arg_value_86 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_86 = Py_None;
        tmp_fromlist_value_86 = mod_consts[315];
        tmp_level_value_86 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 182;
        tmp_import_name_from_136 = IMPORT_MODULE5(tmp_name_value_86, tmp_globals_arg_value_86, tmp_locals_arg_value_86, tmp_fromlist_value_86, tmp_level_value_86);
        if (tmp_import_name_from_136 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 182;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_136)) {
            tmp_assign_source_165 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_136,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[316],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_165 = IMPORT_NAME(tmp_import_name_from_136, mod_consts[316]);
        }

        Py_DECREF(tmp_import_name_from_136);
        if (tmp_assign_source_165 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 182;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[316], tmp_assign_source_165);
    }
    {
        PyObject *tmp_assign_source_166;
        PyObject *tmp_name_value_87;
        PyObject *tmp_globals_arg_value_87;
        PyObject *tmp_locals_arg_value_87;
        PyObject *tmp_fromlist_value_87;
        PyObject *tmp_level_value_87;
        tmp_name_value_87 = mod_consts[317];
        tmp_globals_arg_value_87 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_87 = Py_None;
        tmp_fromlist_value_87 = mod_consts[318];
        tmp_level_value_87 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 183;
        tmp_assign_source_166 = IMPORT_MODULE5(tmp_name_value_87, tmp_globals_arg_value_87, tmp_locals_arg_value_87, tmp_fromlist_value_87, tmp_level_value_87);
        if (tmp_assign_source_166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 183;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_26__module == NULL);
        tmp_import_from_26__module = tmp_assign_source_166;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_167;
        PyObject *tmp_import_name_from_137;
        CHECK_OBJECT(tmp_import_from_26__module);
        tmp_import_name_from_137 = tmp_import_from_26__module;
        if (PyModule_Check(tmp_import_name_from_137)) {
            tmp_assign_source_167 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_137,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[319],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_167 = IMPORT_NAME(tmp_import_name_from_137, mod_consts[319]);
        }

        if (tmp_assign_source_167 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 183;

            goto try_except_handler_26;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[319], tmp_assign_source_167);
    }
    {
        PyObject *tmp_assign_source_168;
        PyObject *tmp_import_name_from_138;
        CHECK_OBJECT(tmp_import_from_26__module);
        tmp_import_name_from_138 = tmp_import_from_26__module;
        if (PyModule_Check(tmp_import_name_from_138)) {
            tmp_assign_source_168 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_138,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[320],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_168 = IMPORT_NAME(tmp_import_name_from_138, mod_consts[320]);
        }

        if (tmp_assign_source_168 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 183;

            goto try_except_handler_26;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[320], tmp_assign_source_168);
    }
    goto try_end_26;
    // Exception handler code:
    try_except_handler_26:;
    exception_keeper_type_26 = exception_type;
    exception_keeper_value_26 = exception_value;
    exception_keeper_tb_26 = exception_tb;
    exception_keeper_lineno_26 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_26__module);
    Py_DECREF(tmp_import_from_26__module);
    tmp_import_from_26__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_26;
    exception_value = exception_keeper_value_26;
    exception_tb = exception_keeper_tb_26;
    exception_lineno = exception_keeper_lineno_26;

    goto frame_exception_exit_1;
    // End of try:
    try_end_26:;
    CHECK_OBJECT(tmp_import_from_26__module);
    Py_DECREF(tmp_import_from_26__module);
    tmp_import_from_26__module = NULL;
    {
        PyObject *tmp_assign_source_169;
        PyObject *tmp_import_name_from_139;
        PyObject *tmp_name_value_88;
        PyObject *tmp_globals_arg_value_88;
        PyObject *tmp_locals_arg_value_88;
        PyObject *tmp_fromlist_value_88;
        PyObject *tmp_level_value_88;
        tmp_name_value_88 = mod_consts[321];
        tmp_globals_arg_value_88 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_88 = Py_None;
        tmp_fromlist_value_88 = mod_consts[322];
        tmp_level_value_88 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 187;
        tmp_import_name_from_139 = IMPORT_MODULE5(tmp_name_value_88, tmp_globals_arg_value_88, tmp_locals_arg_value_88, tmp_fromlist_value_88, tmp_level_value_88);
        if (tmp_import_name_from_139 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 187;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_139)) {
            tmp_assign_source_169 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_139,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[323],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_169 = IMPORT_NAME(tmp_import_name_from_139, mod_consts[323]);
        }

        Py_DECREF(tmp_import_name_from_139);
        if (tmp_assign_source_169 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 187;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[323], tmp_assign_source_169);
    }
    {
        PyObject *tmp_assign_source_170;
        PyObject *tmp_name_value_89;
        PyObject *tmp_globals_arg_value_89;
        PyObject *tmp_locals_arg_value_89;
        PyObject *tmp_fromlist_value_89;
        PyObject *tmp_level_value_89;
        tmp_name_value_89 = mod_consts[324];
        tmp_globals_arg_value_89 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_89 = Py_None;
        tmp_fromlist_value_89 = mod_consts[325];
        tmp_level_value_89 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 188;
        tmp_assign_source_170 = IMPORT_MODULE5(tmp_name_value_89, tmp_globals_arg_value_89, tmp_locals_arg_value_89, tmp_fromlist_value_89, tmp_level_value_89);
        if (tmp_assign_source_170 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 188;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_27__module == NULL);
        tmp_import_from_27__module = tmp_assign_source_170;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_171;
        PyObject *tmp_import_name_from_140;
        CHECK_OBJECT(tmp_import_from_27__module);
        tmp_import_name_from_140 = tmp_import_from_27__module;
        if (PyModule_Check(tmp_import_name_from_140)) {
            tmp_assign_source_171 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_140,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[326],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_171 = IMPORT_NAME(tmp_import_name_from_140, mod_consts[326]);
        }

        if (tmp_assign_source_171 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 188;

            goto try_except_handler_27;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[326], tmp_assign_source_171);
    }
    {
        PyObject *tmp_assign_source_172;
        PyObject *tmp_import_name_from_141;
        CHECK_OBJECT(tmp_import_from_27__module);
        tmp_import_name_from_141 = tmp_import_from_27__module;
        if (PyModule_Check(tmp_import_name_from_141)) {
            tmp_assign_source_172 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_141,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[327],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_172 = IMPORT_NAME(tmp_import_name_from_141, mod_consts[327]);
        }

        if (tmp_assign_source_172 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 188;

            goto try_except_handler_27;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[327], tmp_assign_source_172);
    }
    {
        PyObject *tmp_assign_source_173;
        PyObject *tmp_import_name_from_142;
        CHECK_OBJECT(tmp_import_from_27__module);
        tmp_import_name_from_142 = tmp_import_from_27__module;
        if (PyModule_Check(tmp_import_name_from_142)) {
            tmp_assign_source_173 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_142,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[328],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_173 = IMPORT_NAME(tmp_import_name_from_142, mod_consts[328]);
        }

        if (tmp_assign_source_173 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 188;

            goto try_except_handler_27;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[328], tmp_assign_source_173);
    }
    goto try_end_27;
    // Exception handler code:
    try_except_handler_27:;
    exception_keeper_type_27 = exception_type;
    exception_keeper_value_27 = exception_value;
    exception_keeper_tb_27 = exception_tb;
    exception_keeper_lineno_27 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_27__module);
    Py_DECREF(tmp_import_from_27__module);
    tmp_import_from_27__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_27;
    exception_value = exception_keeper_value_27;
    exception_tb = exception_keeper_tb_27;
    exception_lineno = exception_keeper_lineno_27;

    goto frame_exception_exit_1;
    // End of try:
    try_end_27:;
    CHECK_OBJECT(tmp_import_from_27__module);
    Py_DECREF(tmp_import_from_27__module);
    tmp_import_from_27__module = NULL;
    {
        PyObject *tmp_assign_source_174;
        PyObject *tmp_name_value_90;
        PyObject *tmp_globals_arg_value_90;
        PyObject *tmp_locals_arg_value_90;
        PyObject *tmp_fromlist_value_90;
        PyObject *tmp_level_value_90;
        tmp_name_value_90 = mod_consts[329];
        tmp_globals_arg_value_90 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_90 = Py_None;
        tmp_fromlist_value_90 = mod_consts[330];
        tmp_level_value_90 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 193;
        tmp_assign_source_174 = IMPORT_MODULE5(tmp_name_value_90, tmp_globals_arg_value_90, tmp_locals_arg_value_90, tmp_fromlist_value_90, tmp_level_value_90);
        if (tmp_assign_source_174 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 193;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_28__module == NULL);
        tmp_import_from_28__module = tmp_assign_source_174;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_175;
        PyObject *tmp_import_name_from_143;
        CHECK_OBJECT(tmp_import_from_28__module);
        tmp_import_name_from_143 = tmp_import_from_28__module;
        if (PyModule_Check(tmp_import_name_from_143)) {
            tmp_assign_source_175 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_143,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[331],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_175 = IMPORT_NAME(tmp_import_name_from_143, mod_consts[331]);
        }

        if (tmp_assign_source_175 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 193;

            goto try_except_handler_28;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[331], tmp_assign_source_175);
    }
    {
        PyObject *tmp_assign_source_176;
        PyObject *tmp_import_name_from_144;
        CHECK_OBJECT(tmp_import_from_28__module);
        tmp_import_name_from_144 = tmp_import_from_28__module;
        if (PyModule_Check(tmp_import_name_from_144)) {
            tmp_assign_source_176 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_144,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[332],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_176 = IMPORT_NAME(tmp_import_name_from_144, mod_consts[332]);
        }

        if (tmp_assign_source_176 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 193;

            goto try_except_handler_28;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[332], tmp_assign_source_176);
    }
    {
        PyObject *tmp_assign_source_177;
        PyObject *tmp_import_name_from_145;
        CHECK_OBJECT(tmp_import_from_28__module);
        tmp_import_name_from_145 = tmp_import_from_28__module;
        if (PyModule_Check(tmp_import_name_from_145)) {
            tmp_assign_source_177 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_145,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[333],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_177 = IMPORT_NAME(tmp_import_name_from_145, mod_consts[333]);
        }

        if (tmp_assign_source_177 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 193;

            goto try_except_handler_28;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[333], tmp_assign_source_177);
    }
    goto try_end_28;
    // Exception handler code:
    try_except_handler_28:;
    exception_keeper_type_28 = exception_type;
    exception_keeper_value_28 = exception_value;
    exception_keeper_tb_28 = exception_tb;
    exception_keeper_lineno_28 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_28__module);
    Py_DECREF(tmp_import_from_28__module);
    tmp_import_from_28__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_28;
    exception_value = exception_keeper_value_28;
    exception_tb = exception_keeper_tb_28;
    exception_lineno = exception_keeper_lineno_28;

    goto frame_exception_exit_1;
    // End of try:
    try_end_28:;
    CHECK_OBJECT(tmp_import_from_28__module);
    Py_DECREF(tmp_import_from_28__module);
    tmp_import_from_28__module = NULL;
    {
        PyObject *tmp_assign_source_178;
        PyObject *tmp_name_value_91;
        PyObject *tmp_globals_arg_value_91;
        PyObject *tmp_locals_arg_value_91;
        PyObject *tmp_fromlist_value_91;
        PyObject *tmp_level_value_91;
        tmp_name_value_91 = mod_consts[334];
        tmp_globals_arg_value_91 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_91 = Py_None;
        tmp_fromlist_value_91 = mod_consts[335];
        tmp_level_value_91 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 198;
        tmp_assign_source_178 = IMPORT_MODULE5(tmp_name_value_91, tmp_globals_arg_value_91, tmp_locals_arg_value_91, tmp_fromlist_value_91, tmp_level_value_91);
        if (tmp_assign_source_178 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 198;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_29__module == NULL);
        tmp_import_from_29__module = tmp_assign_source_178;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_179;
        PyObject *tmp_import_name_from_146;
        CHECK_OBJECT(tmp_import_from_29__module);
        tmp_import_name_from_146 = tmp_import_from_29__module;
        if (PyModule_Check(tmp_import_name_from_146)) {
            tmp_assign_source_179 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_146,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[336],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_179 = IMPORT_NAME(tmp_import_name_from_146, mod_consts[336]);
        }

        if (tmp_assign_source_179 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 198;

            goto try_except_handler_29;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[336], tmp_assign_source_179);
    }
    {
        PyObject *tmp_assign_source_180;
        PyObject *tmp_import_name_from_147;
        CHECK_OBJECT(tmp_import_from_29__module);
        tmp_import_name_from_147 = tmp_import_from_29__module;
        if (PyModule_Check(tmp_import_name_from_147)) {
            tmp_assign_source_180 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_147,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[337],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_180 = IMPORT_NAME(tmp_import_name_from_147, mod_consts[337]);
        }

        if (tmp_assign_source_180 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 198;

            goto try_except_handler_29;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[337], tmp_assign_source_180);
    }
    goto try_end_29;
    // Exception handler code:
    try_except_handler_29:;
    exception_keeper_type_29 = exception_type;
    exception_keeper_value_29 = exception_value;
    exception_keeper_tb_29 = exception_tb;
    exception_keeper_lineno_29 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_29__module);
    Py_DECREF(tmp_import_from_29__module);
    tmp_import_from_29__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_29;
    exception_value = exception_keeper_value_29;
    exception_tb = exception_keeper_tb_29;
    exception_lineno = exception_keeper_lineno_29;

    goto frame_exception_exit_1;
    // End of try:
    try_end_29:;
    CHECK_OBJECT(tmp_import_from_29__module);
    Py_DECREF(tmp_import_from_29__module);
    tmp_import_from_29__module = NULL;
    {
        PyObject *tmp_assign_source_181;
        PyObject *tmp_import_name_from_148;
        PyObject *tmp_name_value_92;
        PyObject *tmp_globals_arg_value_92;
        PyObject *tmp_locals_arg_value_92;
        PyObject *tmp_fromlist_value_92;
        PyObject *tmp_level_value_92;
        tmp_name_value_92 = mod_consts[338];
        tmp_globals_arg_value_92 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_92 = Py_None;
        tmp_fromlist_value_92 = mod_consts[339];
        tmp_level_value_92 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 202;
        tmp_import_name_from_148 = IMPORT_MODULE5(tmp_name_value_92, tmp_globals_arg_value_92, tmp_locals_arg_value_92, tmp_fromlist_value_92, tmp_level_value_92);
        if (tmp_import_name_from_148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 202;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_148)) {
            tmp_assign_source_181 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_148,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[340],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_181 = IMPORT_NAME(tmp_import_name_from_148, mod_consts[340]);
        }

        Py_DECREF(tmp_import_name_from_148);
        if (tmp_assign_source_181 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 202;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[340], tmp_assign_source_181);
    }
    {
        PyObject *tmp_assign_source_182;
        PyObject *tmp_import_name_from_149;
        PyObject *tmp_name_value_93;
        PyObject *tmp_globals_arg_value_93;
        PyObject *tmp_locals_arg_value_93;
        PyObject *tmp_fromlist_value_93;
        PyObject *tmp_level_value_93;
        tmp_name_value_93 = mod_consts[341];
        tmp_globals_arg_value_93 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_93 = Py_None;
        tmp_fromlist_value_93 = mod_consts[342];
        tmp_level_value_93 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 203;
        tmp_import_name_from_149 = IMPORT_MODULE5(tmp_name_value_93, tmp_globals_arg_value_93, tmp_locals_arg_value_93, tmp_fromlist_value_93, tmp_level_value_93);
        if (tmp_import_name_from_149 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 203;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_149)) {
            tmp_assign_source_182 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_149,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[343],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_182 = IMPORT_NAME(tmp_import_name_from_149, mod_consts[343]);
        }

        Py_DECREF(tmp_import_name_from_149);
        if (tmp_assign_source_182 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 203;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[343], tmp_assign_source_182);
    }
    {
        PyObject *tmp_assign_source_183;
        PyObject *tmp_import_name_from_150;
        PyObject *tmp_name_value_94;
        PyObject *tmp_globals_arg_value_94;
        PyObject *tmp_locals_arg_value_94;
        PyObject *tmp_fromlist_value_94;
        PyObject *tmp_level_value_94;
        tmp_name_value_94 = mod_consts[344];
        tmp_globals_arg_value_94 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_94 = Py_None;
        tmp_fromlist_value_94 = mod_consts[345];
        tmp_level_value_94 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 204;
        tmp_import_name_from_150 = IMPORT_MODULE5(tmp_name_value_94, tmp_globals_arg_value_94, tmp_locals_arg_value_94, tmp_fromlist_value_94, tmp_level_value_94);
        if (tmp_import_name_from_150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 204;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_150)) {
            tmp_assign_source_183 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_150,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[346],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_183 = IMPORT_NAME(tmp_import_name_from_150, mod_consts[346]);
        }

        Py_DECREF(tmp_import_name_from_150);
        if (tmp_assign_source_183 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 204;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[346], tmp_assign_source_183);
    }
    {
        PyObject *tmp_assign_source_184;
        PyObject *tmp_name_value_95;
        PyObject *tmp_globals_arg_value_95;
        PyObject *tmp_locals_arg_value_95;
        PyObject *tmp_fromlist_value_95;
        PyObject *tmp_level_value_95;
        tmp_name_value_95 = mod_consts[347];
        tmp_globals_arg_value_95 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_95 = Py_None;
        tmp_fromlist_value_95 = mod_consts[348];
        tmp_level_value_95 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 205;
        tmp_assign_source_184 = IMPORT_MODULE5(tmp_name_value_95, tmp_globals_arg_value_95, tmp_locals_arg_value_95, tmp_fromlist_value_95, tmp_level_value_95);
        if (tmp_assign_source_184 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 205;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_30__module == NULL);
        tmp_import_from_30__module = tmp_assign_source_184;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_185;
        PyObject *tmp_import_name_from_151;
        CHECK_OBJECT(tmp_import_from_30__module);
        tmp_import_name_from_151 = tmp_import_from_30__module;
        if (PyModule_Check(tmp_import_name_from_151)) {
            tmp_assign_source_185 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_151,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[349],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_185 = IMPORT_NAME(tmp_import_name_from_151, mod_consts[349]);
        }

        if (tmp_assign_source_185 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 205;

            goto try_except_handler_30;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[349], tmp_assign_source_185);
    }
    {
        PyObject *tmp_assign_source_186;
        PyObject *tmp_import_name_from_152;
        CHECK_OBJECT(tmp_import_from_30__module);
        tmp_import_name_from_152 = tmp_import_from_30__module;
        if (PyModule_Check(tmp_import_name_from_152)) {
            tmp_assign_source_186 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_152,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[350],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_186 = IMPORT_NAME(tmp_import_name_from_152, mod_consts[350]);
        }

        if (tmp_assign_source_186 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 205;

            goto try_except_handler_30;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[350], tmp_assign_source_186);
    }
    goto try_end_30;
    // Exception handler code:
    try_except_handler_30:;
    exception_keeper_type_30 = exception_type;
    exception_keeper_value_30 = exception_value;
    exception_keeper_tb_30 = exception_tb;
    exception_keeper_lineno_30 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_30__module);
    Py_DECREF(tmp_import_from_30__module);
    tmp_import_from_30__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_30;
    exception_value = exception_keeper_value_30;
    exception_tb = exception_keeper_tb_30;
    exception_lineno = exception_keeper_lineno_30;

    goto frame_exception_exit_1;
    // End of try:
    try_end_30:;
    CHECK_OBJECT(tmp_import_from_30__module);
    Py_DECREF(tmp_import_from_30__module);
    tmp_import_from_30__module = NULL;
    {
        PyObject *tmp_assign_source_187;
        PyObject *tmp_import_name_from_153;
        PyObject *tmp_name_value_96;
        PyObject *tmp_globals_arg_value_96;
        PyObject *tmp_locals_arg_value_96;
        PyObject *tmp_fromlist_value_96;
        PyObject *tmp_level_value_96;
        tmp_name_value_96 = mod_consts[351];
        tmp_globals_arg_value_96 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_96 = Py_None;
        tmp_fromlist_value_96 = mod_consts[352];
        tmp_level_value_96 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 209;
        tmp_import_name_from_153 = IMPORT_MODULE5(tmp_name_value_96, tmp_globals_arg_value_96, tmp_locals_arg_value_96, tmp_fromlist_value_96, tmp_level_value_96);
        if (tmp_import_name_from_153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 209;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_153)) {
            tmp_assign_source_187 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_153,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[353],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_187 = IMPORT_NAME(tmp_import_name_from_153, mod_consts[353]);
        }

        Py_DECREF(tmp_import_name_from_153);
        if (tmp_assign_source_187 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 209;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[353], tmp_assign_source_187);
    }
    {
        PyObject *tmp_assign_source_188;
        PyObject *tmp_import_name_from_154;
        PyObject *tmp_name_value_97;
        PyObject *tmp_globals_arg_value_97;
        PyObject *tmp_locals_arg_value_97;
        PyObject *tmp_fromlist_value_97;
        PyObject *tmp_level_value_97;
        tmp_name_value_97 = mod_consts[354];
        tmp_globals_arg_value_97 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_97 = Py_None;
        tmp_fromlist_value_97 = mod_consts[355];
        tmp_level_value_97 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 210;
        tmp_import_name_from_154 = IMPORT_MODULE5(tmp_name_value_97, tmp_globals_arg_value_97, tmp_locals_arg_value_97, tmp_fromlist_value_97, tmp_level_value_97);
        if (tmp_import_name_from_154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 210;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_154)) {
            tmp_assign_source_188 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_154,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[356],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_188 = IMPORT_NAME(tmp_import_name_from_154, mod_consts[356]);
        }

        Py_DECREF(tmp_import_name_from_154);
        if (tmp_assign_source_188 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 210;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[356], tmp_assign_source_188);
    }
    {
        PyObject *tmp_assign_source_189;
        PyObject *tmp_import_name_from_155;
        PyObject *tmp_name_value_98;
        PyObject *tmp_globals_arg_value_98;
        PyObject *tmp_locals_arg_value_98;
        PyObject *tmp_fromlist_value_98;
        PyObject *tmp_level_value_98;
        tmp_name_value_98 = mod_consts[357];
        tmp_globals_arg_value_98 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_98 = Py_None;
        tmp_fromlist_value_98 = mod_consts[358];
        tmp_level_value_98 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 211;
        tmp_import_name_from_155 = IMPORT_MODULE5(tmp_name_value_98, tmp_globals_arg_value_98, tmp_locals_arg_value_98, tmp_fromlist_value_98, tmp_level_value_98);
        if (tmp_import_name_from_155 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 211;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_155)) {
            tmp_assign_source_189 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_155,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[359],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_189 = IMPORT_NAME(tmp_import_name_from_155, mod_consts[359]);
        }

        Py_DECREF(tmp_import_name_from_155);
        if (tmp_assign_source_189 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 211;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[359], tmp_assign_source_189);
    }
    {
        PyObject *tmp_assign_source_190;
        PyObject *tmp_import_name_from_156;
        PyObject *tmp_name_value_99;
        PyObject *tmp_globals_arg_value_99;
        PyObject *tmp_locals_arg_value_99;
        PyObject *tmp_fromlist_value_99;
        PyObject *tmp_level_value_99;
        tmp_name_value_99 = mod_consts[360];
        tmp_globals_arg_value_99 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_99 = Py_None;
        tmp_fromlist_value_99 = mod_consts[361];
        tmp_level_value_99 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 212;
        tmp_import_name_from_156 = IMPORT_MODULE5(tmp_name_value_99, tmp_globals_arg_value_99, tmp_locals_arg_value_99, tmp_fromlist_value_99, tmp_level_value_99);
        if (tmp_import_name_from_156 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_156)) {
            tmp_assign_source_190 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_156,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[362],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_190 = IMPORT_NAME(tmp_import_name_from_156, mod_consts[362]);
        }

        Py_DECREF(tmp_import_name_from_156);
        if (tmp_assign_source_190 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 212;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[362], tmp_assign_source_190);
    }
    {
        PyObject *tmp_assign_source_191;
        PyObject *tmp_name_value_100;
        PyObject *tmp_globals_arg_value_100;
        PyObject *tmp_locals_arg_value_100;
        PyObject *tmp_fromlist_value_100;
        PyObject *tmp_level_value_100;
        tmp_name_value_100 = mod_consts[363];
        tmp_globals_arg_value_100 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_100 = Py_None;
        tmp_fromlist_value_100 = mod_consts[364];
        tmp_level_value_100 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 213;
        tmp_assign_source_191 = IMPORT_MODULE5(tmp_name_value_100, tmp_globals_arg_value_100, tmp_locals_arg_value_100, tmp_fromlist_value_100, tmp_level_value_100);
        if (tmp_assign_source_191 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 213;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_31__module == NULL);
        tmp_import_from_31__module = tmp_assign_source_191;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_192;
        PyObject *tmp_import_name_from_157;
        CHECK_OBJECT(tmp_import_from_31__module);
        tmp_import_name_from_157 = tmp_import_from_31__module;
        if (PyModule_Check(tmp_import_name_from_157)) {
            tmp_assign_source_192 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_157,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[365],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_192 = IMPORT_NAME(tmp_import_name_from_157, mod_consts[365]);
        }

        if (tmp_assign_source_192 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 213;

            goto try_except_handler_31;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[365], tmp_assign_source_192);
    }
    {
        PyObject *tmp_assign_source_193;
        PyObject *tmp_import_name_from_158;
        CHECK_OBJECT(tmp_import_from_31__module);
        tmp_import_name_from_158 = tmp_import_from_31__module;
        if (PyModule_Check(tmp_import_name_from_158)) {
            tmp_assign_source_193 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_158,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[366],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_193 = IMPORT_NAME(tmp_import_name_from_158, mod_consts[366]);
        }

        if (tmp_assign_source_193 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 213;

            goto try_except_handler_31;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[366], tmp_assign_source_193);
    }
    goto try_end_31;
    // Exception handler code:
    try_except_handler_31:;
    exception_keeper_type_31 = exception_type;
    exception_keeper_value_31 = exception_value;
    exception_keeper_tb_31 = exception_tb;
    exception_keeper_lineno_31 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_31__module);
    Py_DECREF(tmp_import_from_31__module);
    tmp_import_from_31__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_31;
    exception_value = exception_keeper_value_31;
    exception_tb = exception_keeper_tb_31;
    exception_lineno = exception_keeper_lineno_31;

    goto frame_exception_exit_1;
    // End of try:
    try_end_31:;
    CHECK_OBJECT(tmp_import_from_31__module);
    Py_DECREF(tmp_import_from_31__module);
    tmp_import_from_31__module = NULL;
    {
        PyObject *tmp_assign_source_194;
        PyObject *tmp_import_name_from_159;
        PyObject *tmp_name_value_101;
        PyObject *tmp_globals_arg_value_101;
        PyObject *tmp_locals_arg_value_101;
        PyObject *tmp_fromlist_value_101;
        PyObject *tmp_level_value_101;
        tmp_name_value_101 = mod_consts[367];
        tmp_globals_arg_value_101 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_101 = Py_None;
        tmp_fromlist_value_101 = mod_consts[368];
        tmp_level_value_101 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 217;
        tmp_import_name_from_159 = IMPORT_MODULE5(tmp_name_value_101, tmp_globals_arg_value_101, tmp_locals_arg_value_101, tmp_fromlist_value_101, tmp_level_value_101);
        if (tmp_import_name_from_159 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 217;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_159)) {
            tmp_assign_source_194 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_159,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[369],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_194 = IMPORT_NAME(tmp_import_name_from_159, mod_consts[369]);
        }

        Py_DECREF(tmp_import_name_from_159);
        if (tmp_assign_source_194 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 217;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[369], tmp_assign_source_194);
    }
    {
        PyObject *tmp_assign_source_195;
        PyObject *tmp_import_name_from_160;
        PyObject *tmp_name_value_102;
        PyObject *tmp_globals_arg_value_102;
        PyObject *tmp_locals_arg_value_102;
        PyObject *tmp_fromlist_value_102;
        PyObject *tmp_level_value_102;
        tmp_name_value_102 = mod_consts[370];
        tmp_globals_arg_value_102 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_102 = Py_None;
        tmp_fromlist_value_102 = mod_consts[371];
        tmp_level_value_102 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 218;
        tmp_import_name_from_160 = IMPORT_MODULE5(tmp_name_value_102, tmp_globals_arg_value_102, tmp_locals_arg_value_102, tmp_fromlist_value_102, tmp_level_value_102);
        if (tmp_import_name_from_160 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 218;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_160)) {
            tmp_assign_source_195 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_160,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[372],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_195 = IMPORT_NAME(tmp_import_name_from_160, mod_consts[372]);
        }

        Py_DECREF(tmp_import_name_from_160);
        if (tmp_assign_source_195 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 218;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[372], tmp_assign_source_195);
    }
    {
        PyObject *tmp_assign_source_196;
        PyObject *tmp_name_value_103;
        PyObject *tmp_globals_arg_value_103;
        PyObject *tmp_locals_arg_value_103;
        PyObject *tmp_fromlist_value_103;
        PyObject *tmp_level_value_103;
        tmp_name_value_103 = mod_consts[373];
        tmp_globals_arg_value_103 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_103 = Py_None;
        tmp_fromlist_value_103 = mod_consts[374];
        tmp_level_value_103 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 219;
        tmp_assign_source_196 = IMPORT_MODULE5(tmp_name_value_103, tmp_globals_arg_value_103, tmp_locals_arg_value_103, tmp_fromlist_value_103, tmp_level_value_103);
        if (tmp_assign_source_196 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 219;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_32__module == NULL);
        tmp_import_from_32__module = tmp_assign_source_196;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_197;
        PyObject *tmp_import_name_from_161;
        CHECK_OBJECT(tmp_import_from_32__module);
        tmp_import_name_from_161 = tmp_import_from_32__module;
        if (PyModule_Check(tmp_import_name_from_161)) {
            tmp_assign_source_197 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_161,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[375],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_197 = IMPORT_NAME(tmp_import_name_from_161, mod_consts[375]);
        }

        if (tmp_assign_source_197 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 219;

            goto try_except_handler_32;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[375], tmp_assign_source_197);
    }
    {
        PyObject *tmp_assign_source_198;
        PyObject *tmp_import_name_from_162;
        CHECK_OBJECT(tmp_import_from_32__module);
        tmp_import_name_from_162 = tmp_import_from_32__module;
        if (PyModule_Check(tmp_import_name_from_162)) {
            tmp_assign_source_198 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_162,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[376],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_198 = IMPORT_NAME(tmp_import_name_from_162, mod_consts[376]);
        }

        if (tmp_assign_source_198 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 219;

            goto try_except_handler_32;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[376], tmp_assign_source_198);
    }
    goto try_end_32;
    // Exception handler code:
    try_except_handler_32:;
    exception_keeper_type_32 = exception_type;
    exception_keeper_value_32 = exception_value;
    exception_keeper_tb_32 = exception_tb;
    exception_keeper_lineno_32 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_32__module);
    Py_DECREF(tmp_import_from_32__module);
    tmp_import_from_32__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_32;
    exception_value = exception_keeper_value_32;
    exception_tb = exception_keeper_tb_32;
    exception_lineno = exception_keeper_lineno_32;

    goto frame_exception_exit_1;
    // End of try:
    try_end_32:;
    CHECK_OBJECT(tmp_import_from_32__module);
    Py_DECREF(tmp_import_from_32__module);
    tmp_import_from_32__module = NULL;
    {
        PyObject *tmp_assign_source_199;
        PyObject *tmp_import_name_from_163;
        PyObject *tmp_name_value_104;
        PyObject *tmp_globals_arg_value_104;
        PyObject *tmp_locals_arg_value_104;
        PyObject *tmp_fromlist_value_104;
        PyObject *tmp_level_value_104;
        tmp_name_value_104 = mod_consts[377];
        tmp_globals_arg_value_104 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_104 = Py_None;
        tmp_fromlist_value_104 = mod_consts[378];
        tmp_level_value_104 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 223;
        tmp_import_name_from_163 = IMPORT_MODULE5(tmp_name_value_104, tmp_globals_arg_value_104, tmp_locals_arg_value_104, tmp_fromlist_value_104, tmp_level_value_104);
        if (tmp_import_name_from_163 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 223;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_163)) {
            tmp_assign_source_199 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_163,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[379],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_199 = IMPORT_NAME(tmp_import_name_from_163, mod_consts[379]);
        }

        Py_DECREF(tmp_import_name_from_163);
        if (tmp_assign_source_199 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 223;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[379], tmp_assign_source_199);
    }
    {
        PyObject *tmp_assign_source_200;
        PyObject *tmp_import_name_from_164;
        PyObject *tmp_name_value_105;
        PyObject *tmp_globals_arg_value_105;
        PyObject *tmp_locals_arg_value_105;
        PyObject *tmp_fromlist_value_105;
        PyObject *tmp_level_value_105;
        tmp_name_value_105 = mod_consts[380];
        tmp_globals_arg_value_105 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_105 = Py_None;
        tmp_fromlist_value_105 = mod_consts[381];
        tmp_level_value_105 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 224;
        tmp_import_name_from_164 = IMPORT_MODULE5(tmp_name_value_105, tmp_globals_arg_value_105, tmp_locals_arg_value_105, tmp_fromlist_value_105, tmp_level_value_105);
        if (tmp_import_name_from_164 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 224;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_164)) {
            tmp_assign_source_200 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_164,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[382],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_200 = IMPORT_NAME(tmp_import_name_from_164, mod_consts[382]);
        }

        Py_DECREF(tmp_import_name_from_164);
        if (tmp_assign_source_200 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 224;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[382], tmp_assign_source_200);
    }
    {
        PyObject *tmp_assign_source_201;
        PyObject *tmp_import_name_from_165;
        PyObject *tmp_name_value_106;
        PyObject *tmp_globals_arg_value_106;
        PyObject *tmp_locals_arg_value_106;
        PyObject *tmp_fromlist_value_106;
        PyObject *tmp_level_value_106;
        tmp_name_value_106 = mod_consts[383];
        tmp_globals_arg_value_106 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_106 = Py_None;
        tmp_fromlist_value_106 = mod_consts[384];
        tmp_level_value_106 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 225;
        tmp_import_name_from_165 = IMPORT_MODULE5(tmp_name_value_106, tmp_globals_arg_value_106, tmp_locals_arg_value_106, tmp_fromlist_value_106, tmp_level_value_106);
        if (tmp_import_name_from_165 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 225;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_165)) {
            tmp_assign_source_201 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_165,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[385],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_201 = IMPORT_NAME(tmp_import_name_from_165, mod_consts[385]);
        }

        Py_DECREF(tmp_import_name_from_165);
        if (tmp_assign_source_201 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 225;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[385], tmp_assign_source_201);
    }
    {
        PyObject *tmp_assign_source_202;
        PyObject *tmp_import_name_from_166;
        PyObject *tmp_name_value_107;
        PyObject *tmp_globals_arg_value_107;
        PyObject *tmp_locals_arg_value_107;
        PyObject *tmp_fromlist_value_107;
        PyObject *tmp_level_value_107;
        tmp_name_value_107 = mod_consts[386];
        tmp_globals_arg_value_107 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_107 = Py_None;
        tmp_fromlist_value_107 = mod_consts[387];
        tmp_level_value_107 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 226;
        tmp_import_name_from_166 = IMPORT_MODULE5(tmp_name_value_107, tmp_globals_arg_value_107, tmp_locals_arg_value_107, tmp_fromlist_value_107, tmp_level_value_107);
        if (tmp_import_name_from_166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 226;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_166)) {
            tmp_assign_source_202 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_166,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[388],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_202 = IMPORT_NAME(tmp_import_name_from_166, mod_consts[388]);
        }

        Py_DECREF(tmp_import_name_from_166);
        if (tmp_assign_source_202 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 226;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[388], tmp_assign_source_202);
    }
    {
        PyObject *tmp_assign_source_203;
        PyObject *tmp_import_name_from_167;
        PyObject *tmp_name_value_108;
        PyObject *tmp_globals_arg_value_108;
        PyObject *tmp_locals_arg_value_108;
        PyObject *tmp_fromlist_value_108;
        PyObject *tmp_level_value_108;
        tmp_name_value_108 = mod_consts[389];
        tmp_globals_arg_value_108 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_108 = Py_None;
        tmp_fromlist_value_108 = mod_consts[390];
        tmp_level_value_108 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 227;
        tmp_import_name_from_167 = IMPORT_MODULE5(tmp_name_value_108, tmp_globals_arg_value_108, tmp_locals_arg_value_108, tmp_fromlist_value_108, tmp_level_value_108);
        if (tmp_import_name_from_167 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 227;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_167)) {
            tmp_assign_source_203 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_167,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[391],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_203 = IMPORT_NAME(tmp_import_name_from_167, mod_consts[391]);
        }

        Py_DECREF(tmp_import_name_from_167);
        if (tmp_assign_source_203 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 227;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[391], tmp_assign_source_203);
    }
    {
        PyObject *tmp_assign_source_204;
        PyObject *tmp_import_name_from_168;
        PyObject *tmp_name_value_109;
        PyObject *tmp_globals_arg_value_109;
        PyObject *tmp_locals_arg_value_109;
        PyObject *tmp_fromlist_value_109;
        PyObject *tmp_level_value_109;
        tmp_name_value_109 = mod_consts[392];
        tmp_globals_arg_value_109 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_109 = Py_None;
        tmp_fromlist_value_109 = mod_consts[393];
        tmp_level_value_109 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 228;
        tmp_import_name_from_168 = IMPORT_MODULE5(tmp_name_value_109, tmp_globals_arg_value_109, tmp_locals_arg_value_109, tmp_fromlist_value_109, tmp_level_value_109);
        if (tmp_import_name_from_168 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_168)) {
            tmp_assign_source_204 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_168,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[394],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_204 = IMPORT_NAME(tmp_import_name_from_168, mod_consts[394]);
        }

        Py_DECREF(tmp_import_name_from_168);
        if (tmp_assign_source_204 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 228;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[394], tmp_assign_source_204);
    }
    {
        PyObject *tmp_assign_source_205;
        PyObject *tmp_import_name_from_169;
        PyObject *tmp_name_value_110;
        PyObject *tmp_globals_arg_value_110;
        PyObject *tmp_locals_arg_value_110;
        PyObject *tmp_fromlist_value_110;
        PyObject *tmp_level_value_110;
        tmp_name_value_110 = mod_consts[395];
        tmp_globals_arg_value_110 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_110 = Py_None;
        tmp_fromlist_value_110 = mod_consts[396];
        tmp_level_value_110 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 229;
        tmp_import_name_from_169 = IMPORT_MODULE5(tmp_name_value_110, tmp_globals_arg_value_110, tmp_locals_arg_value_110, tmp_fromlist_value_110, tmp_level_value_110);
        if (tmp_import_name_from_169 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 229;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_169)) {
            tmp_assign_source_205 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_169,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[397],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_205 = IMPORT_NAME(tmp_import_name_from_169, mod_consts[397]);
        }

        Py_DECREF(tmp_import_name_from_169);
        if (tmp_assign_source_205 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 229;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[397], tmp_assign_source_205);
    }
    {
        PyObject *tmp_assign_source_206;
        PyObject *tmp_import_name_from_170;
        PyObject *tmp_name_value_111;
        PyObject *tmp_globals_arg_value_111;
        PyObject *tmp_locals_arg_value_111;
        PyObject *tmp_fromlist_value_111;
        PyObject *tmp_level_value_111;
        tmp_name_value_111 = mod_consts[398];
        tmp_globals_arg_value_111 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_111 = Py_None;
        tmp_fromlist_value_111 = mod_consts[399];
        tmp_level_value_111 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 230;
        tmp_import_name_from_170 = IMPORT_MODULE5(tmp_name_value_111, tmp_globals_arg_value_111, tmp_locals_arg_value_111, tmp_fromlist_value_111, tmp_level_value_111);
        if (tmp_import_name_from_170 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 230;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_170)) {
            tmp_assign_source_206 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_170,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[400],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_206 = IMPORT_NAME(tmp_import_name_from_170, mod_consts[400]);
        }

        Py_DECREF(tmp_import_name_from_170);
        if (tmp_assign_source_206 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 230;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[400], tmp_assign_source_206);
    }
    {
        PyObject *tmp_assign_source_207;
        PyObject *tmp_import_name_from_171;
        PyObject *tmp_name_value_112;
        PyObject *tmp_globals_arg_value_112;
        PyObject *tmp_locals_arg_value_112;
        PyObject *tmp_fromlist_value_112;
        PyObject *tmp_level_value_112;
        tmp_name_value_112 = mod_consts[401];
        tmp_globals_arg_value_112 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_112 = Py_None;
        tmp_fromlist_value_112 = mod_consts[402];
        tmp_level_value_112 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 231;
        tmp_import_name_from_171 = IMPORT_MODULE5(tmp_name_value_112, tmp_globals_arg_value_112, tmp_locals_arg_value_112, tmp_fromlist_value_112, tmp_level_value_112);
        if (tmp_import_name_from_171 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 231;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_171)) {
            tmp_assign_source_207 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_171,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[403],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_207 = IMPORT_NAME(tmp_import_name_from_171, mod_consts[403]);
        }

        Py_DECREF(tmp_import_name_from_171);
        if (tmp_assign_source_207 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 231;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[403], tmp_assign_source_207);
    }
    {
        PyObject *tmp_assign_source_208;
        PyObject *tmp_import_name_from_172;
        PyObject *tmp_name_value_113;
        PyObject *tmp_globals_arg_value_113;
        PyObject *tmp_locals_arg_value_113;
        PyObject *tmp_fromlist_value_113;
        PyObject *tmp_level_value_113;
        tmp_name_value_113 = mod_consts[404];
        tmp_globals_arg_value_113 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_113 = Py_None;
        tmp_fromlist_value_113 = mod_consts[405];
        tmp_level_value_113 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 232;
        tmp_import_name_from_172 = IMPORT_MODULE5(tmp_name_value_113, tmp_globals_arg_value_113, tmp_locals_arg_value_113, tmp_fromlist_value_113, tmp_level_value_113);
        if (tmp_import_name_from_172 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 232;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_172)) {
            tmp_assign_source_208 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_172,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[406],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_208 = IMPORT_NAME(tmp_import_name_from_172, mod_consts[406]);
        }

        Py_DECREF(tmp_import_name_from_172);
        if (tmp_assign_source_208 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 232;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[406], tmp_assign_source_208);
    }
    {
        PyObject *tmp_assign_source_209;
        PyObject *tmp_import_name_from_173;
        PyObject *tmp_name_value_114;
        PyObject *tmp_globals_arg_value_114;
        PyObject *tmp_locals_arg_value_114;
        PyObject *tmp_fromlist_value_114;
        PyObject *tmp_level_value_114;
        tmp_name_value_114 = mod_consts[407];
        tmp_globals_arg_value_114 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_114 = Py_None;
        tmp_fromlist_value_114 = mod_consts[408];
        tmp_level_value_114 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 233;
        tmp_import_name_from_173 = IMPORT_MODULE5(tmp_name_value_114, tmp_globals_arg_value_114, tmp_locals_arg_value_114, tmp_fromlist_value_114, tmp_level_value_114);
        if (tmp_import_name_from_173 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 233;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_173)) {
            tmp_assign_source_209 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_173,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[409],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_209 = IMPORT_NAME(tmp_import_name_from_173, mod_consts[409]);
        }

        Py_DECREF(tmp_import_name_from_173);
        if (tmp_assign_source_209 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 233;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[409], tmp_assign_source_209);
    }
    {
        PyObject *tmp_assign_source_210;
        PyObject *tmp_name_value_115;
        PyObject *tmp_globals_arg_value_115;
        PyObject *tmp_locals_arg_value_115;
        PyObject *tmp_fromlist_value_115;
        PyObject *tmp_level_value_115;
        tmp_name_value_115 = mod_consts[410];
        tmp_globals_arg_value_115 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_115 = Py_None;
        tmp_fromlist_value_115 = mod_consts[411];
        tmp_level_value_115 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 234;
        tmp_assign_source_210 = IMPORT_MODULE5(tmp_name_value_115, tmp_globals_arg_value_115, tmp_locals_arg_value_115, tmp_fromlist_value_115, tmp_level_value_115);
        if (tmp_assign_source_210 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 234;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_33__module == NULL);
        tmp_import_from_33__module = tmp_assign_source_210;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_211;
        PyObject *tmp_import_name_from_174;
        CHECK_OBJECT(tmp_import_from_33__module);
        tmp_import_name_from_174 = tmp_import_from_33__module;
        if (PyModule_Check(tmp_import_name_from_174)) {
            tmp_assign_source_211 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_174,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[412],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_211 = IMPORT_NAME(tmp_import_name_from_174, mod_consts[412]);
        }

        if (tmp_assign_source_211 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 234;

            goto try_except_handler_33;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[412], tmp_assign_source_211);
    }
    {
        PyObject *tmp_assign_source_212;
        PyObject *tmp_import_name_from_175;
        CHECK_OBJECT(tmp_import_from_33__module);
        tmp_import_name_from_175 = tmp_import_from_33__module;
        if (PyModule_Check(tmp_import_name_from_175)) {
            tmp_assign_source_212 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_175,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[413],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_212 = IMPORT_NAME(tmp_import_name_from_175, mod_consts[413]);
        }

        if (tmp_assign_source_212 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 234;

            goto try_except_handler_33;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[413], tmp_assign_source_212);
    }
    goto try_end_33;
    // Exception handler code:
    try_except_handler_33:;
    exception_keeper_type_33 = exception_type;
    exception_keeper_value_33 = exception_value;
    exception_keeper_tb_33 = exception_tb;
    exception_keeper_lineno_33 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_33__module);
    Py_DECREF(tmp_import_from_33__module);
    tmp_import_from_33__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_33;
    exception_value = exception_keeper_value_33;
    exception_tb = exception_keeper_tb_33;
    exception_lineno = exception_keeper_lineno_33;

    goto frame_exception_exit_1;
    // End of try:
    try_end_33:;
    CHECK_OBJECT(tmp_import_from_33__module);
    Py_DECREF(tmp_import_from_33__module);
    tmp_import_from_33__module = NULL;
    {
        PyObject *tmp_assign_source_213;
        PyObject *tmp_name_value_116;
        PyObject *tmp_globals_arg_value_116;
        PyObject *tmp_locals_arg_value_116;
        PyObject *tmp_fromlist_value_116;
        PyObject *tmp_level_value_116;
        tmp_name_value_116 = mod_consts[414];
        tmp_globals_arg_value_116 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_116 = Py_None;
        tmp_fromlist_value_116 = mod_consts[415];
        tmp_level_value_116 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 238;
        tmp_assign_source_213 = IMPORT_MODULE5(tmp_name_value_116, tmp_globals_arg_value_116, tmp_locals_arg_value_116, tmp_fromlist_value_116, tmp_level_value_116);
        if (tmp_assign_source_213 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 238;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_34__module == NULL);
        tmp_import_from_34__module = tmp_assign_source_213;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_214;
        PyObject *tmp_import_name_from_176;
        CHECK_OBJECT(tmp_import_from_34__module);
        tmp_import_name_from_176 = tmp_import_from_34__module;
        if (PyModule_Check(tmp_import_name_from_176)) {
            tmp_assign_source_214 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_176,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[416],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_214 = IMPORT_NAME(tmp_import_name_from_176, mod_consts[416]);
        }

        if (tmp_assign_source_214 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 238;

            goto try_except_handler_34;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[416], tmp_assign_source_214);
    }
    {
        PyObject *tmp_assign_source_215;
        PyObject *tmp_import_name_from_177;
        CHECK_OBJECT(tmp_import_from_34__module);
        tmp_import_name_from_177 = tmp_import_from_34__module;
        if (PyModule_Check(tmp_import_name_from_177)) {
            tmp_assign_source_215 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_177,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[417],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_215 = IMPORT_NAME(tmp_import_name_from_177, mod_consts[417]);
        }

        if (tmp_assign_source_215 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 238;

            goto try_except_handler_34;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[417], tmp_assign_source_215);
    }
    {
        PyObject *tmp_assign_source_216;
        PyObject *tmp_import_name_from_178;
        CHECK_OBJECT(tmp_import_from_34__module);
        tmp_import_name_from_178 = tmp_import_from_34__module;
        if (PyModule_Check(tmp_import_name_from_178)) {
            tmp_assign_source_216 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_178,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[418],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_216 = IMPORT_NAME(tmp_import_name_from_178, mod_consts[418]);
        }

        if (tmp_assign_source_216 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 238;

            goto try_except_handler_34;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[418], tmp_assign_source_216);
    }
    goto try_end_34;
    // Exception handler code:
    try_except_handler_34:;
    exception_keeper_type_34 = exception_type;
    exception_keeper_value_34 = exception_value;
    exception_keeper_tb_34 = exception_tb;
    exception_keeper_lineno_34 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_34__module);
    Py_DECREF(tmp_import_from_34__module);
    tmp_import_from_34__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_34;
    exception_value = exception_keeper_value_34;
    exception_tb = exception_keeper_tb_34;
    exception_lineno = exception_keeper_lineno_34;

    goto frame_exception_exit_1;
    // End of try:
    try_end_34:;
    CHECK_OBJECT(tmp_import_from_34__module);
    Py_DECREF(tmp_import_from_34__module);
    tmp_import_from_34__module = NULL;
    {
        PyObject *tmp_assign_source_217;
        PyObject *tmp_import_name_from_179;
        PyObject *tmp_name_value_117;
        PyObject *tmp_globals_arg_value_117;
        PyObject *tmp_locals_arg_value_117;
        PyObject *tmp_fromlist_value_117;
        PyObject *tmp_level_value_117;
        tmp_name_value_117 = mod_consts[419];
        tmp_globals_arg_value_117 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_117 = Py_None;
        tmp_fromlist_value_117 = mod_consts[420];
        tmp_level_value_117 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 243;
        tmp_import_name_from_179 = IMPORT_MODULE5(tmp_name_value_117, tmp_globals_arg_value_117, tmp_locals_arg_value_117, tmp_fromlist_value_117, tmp_level_value_117);
        if (tmp_import_name_from_179 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 243;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_179)) {
            tmp_assign_source_217 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_179,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[421],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_217 = IMPORT_NAME(tmp_import_name_from_179, mod_consts[421]);
        }

        Py_DECREF(tmp_import_name_from_179);
        if (tmp_assign_source_217 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 243;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[421], tmp_assign_source_217);
    }
    {
        PyObject *tmp_assign_source_218;
        PyObject *tmp_name_value_118;
        PyObject *tmp_globals_arg_value_118;
        PyObject *tmp_locals_arg_value_118;
        PyObject *tmp_fromlist_value_118;
        PyObject *tmp_level_value_118;
        tmp_name_value_118 = mod_consts[422];
        tmp_globals_arg_value_118 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_118 = Py_None;
        tmp_fromlist_value_118 = mod_consts[423];
        tmp_level_value_118 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 244;
        tmp_assign_source_218 = IMPORT_MODULE5(tmp_name_value_118, tmp_globals_arg_value_118, tmp_locals_arg_value_118, tmp_fromlist_value_118, tmp_level_value_118);
        if (tmp_assign_source_218 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 244;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_35__module == NULL);
        tmp_import_from_35__module = tmp_assign_source_218;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_219;
        PyObject *tmp_import_name_from_180;
        CHECK_OBJECT(tmp_import_from_35__module);
        tmp_import_name_from_180 = tmp_import_from_35__module;
        if (PyModule_Check(tmp_import_name_from_180)) {
            tmp_assign_source_219 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_180,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[424],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_219 = IMPORT_NAME(tmp_import_name_from_180, mod_consts[424]);
        }

        if (tmp_assign_source_219 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 244;

            goto try_except_handler_35;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[424], tmp_assign_source_219);
    }
    {
        PyObject *tmp_assign_source_220;
        PyObject *tmp_import_name_from_181;
        CHECK_OBJECT(tmp_import_from_35__module);
        tmp_import_name_from_181 = tmp_import_from_35__module;
        if (PyModule_Check(tmp_import_name_from_181)) {
            tmp_assign_source_220 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_181,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[425],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_220 = IMPORT_NAME(tmp_import_name_from_181, mod_consts[425]);
        }

        if (tmp_assign_source_220 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 244;

            goto try_except_handler_35;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[425], tmp_assign_source_220);
    }
    goto try_end_35;
    // Exception handler code:
    try_except_handler_35:;
    exception_keeper_type_35 = exception_type;
    exception_keeper_value_35 = exception_value;
    exception_keeper_tb_35 = exception_tb;
    exception_keeper_lineno_35 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_35__module);
    Py_DECREF(tmp_import_from_35__module);
    tmp_import_from_35__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_35;
    exception_value = exception_keeper_value_35;
    exception_tb = exception_keeper_tb_35;
    exception_lineno = exception_keeper_lineno_35;

    goto frame_exception_exit_1;
    // End of try:
    try_end_35:;
    CHECK_OBJECT(tmp_import_from_35__module);
    Py_DECREF(tmp_import_from_35__module);
    tmp_import_from_35__module = NULL;
    {
        PyObject *tmp_assign_source_221;
        PyObject *tmp_name_value_119;
        PyObject *tmp_globals_arg_value_119;
        PyObject *tmp_locals_arg_value_119;
        PyObject *tmp_fromlist_value_119;
        PyObject *tmp_level_value_119;
        tmp_name_value_119 = mod_consts[426];
        tmp_globals_arg_value_119 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_119 = Py_None;
        tmp_fromlist_value_119 = mod_consts[427];
        tmp_level_value_119 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 248;
        tmp_assign_source_221 = IMPORT_MODULE5(tmp_name_value_119, tmp_globals_arg_value_119, tmp_locals_arg_value_119, tmp_fromlist_value_119, tmp_level_value_119);
        if (tmp_assign_source_221 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 248;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_36__module == NULL);
        tmp_import_from_36__module = tmp_assign_source_221;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_222;
        PyObject *tmp_import_name_from_182;
        CHECK_OBJECT(tmp_import_from_36__module);
        tmp_import_name_from_182 = tmp_import_from_36__module;
        if (PyModule_Check(tmp_import_name_from_182)) {
            tmp_assign_source_222 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_182,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[428],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_222 = IMPORT_NAME(tmp_import_name_from_182, mod_consts[428]);
        }

        if (tmp_assign_source_222 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 248;

            goto try_except_handler_36;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[428], tmp_assign_source_222);
    }
    {
        PyObject *tmp_assign_source_223;
        PyObject *tmp_import_name_from_183;
        CHECK_OBJECT(tmp_import_from_36__module);
        tmp_import_name_from_183 = tmp_import_from_36__module;
        if (PyModule_Check(tmp_import_name_from_183)) {
            tmp_assign_source_223 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_183,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[429],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_223 = IMPORT_NAME(tmp_import_name_from_183, mod_consts[429]);
        }

        if (tmp_assign_source_223 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 248;

            goto try_except_handler_36;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[429], tmp_assign_source_223);
    }
    goto try_end_36;
    // Exception handler code:
    try_except_handler_36:;
    exception_keeper_type_36 = exception_type;
    exception_keeper_value_36 = exception_value;
    exception_keeper_tb_36 = exception_tb;
    exception_keeper_lineno_36 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_36__module);
    Py_DECREF(tmp_import_from_36__module);
    tmp_import_from_36__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_36;
    exception_value = exception_keeper_value_36;
    exception_tb = exception_keeper_tb_36;
    exception_lineno = exception_keeper_lineno_36;

    goto frame_exception_exit_1;
    // End of try:
    try_end_36:;
    CHECK_OBJECT(tmp_import_from_36__module);
    Py_DECREF(tmp_import_from_36__module);
    tmp_import_from_36__module = NULL;
    {
        PyObject *tmp_assign_source_224;
        PyObject *tmp_name_value_120;
        PyObject *tmp_globals_arg_value_120;
        PyObject *tmp_locals_arg_value_120;
        PyObject *tmp_fromlist_value_120;
        PyObject *tmp_level_value_120;
        tmp_name_value_120 = mod_consts[430];
        tmp_globals_arg_value_120 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_120 = Py_None;
        tmp_fromlist_value_120 = mod_consts[431];
        tmp_level_value_120 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 249;
        tmp_assign_source_224 = IMPORT_MODULE5(tmp_name_value_120, tmp_globals_arg_value_120, tmp_locals_arg_value_120, tmp_fromlist_value_120, tmp_level_value_120);
        if (tmp_assign_source_224 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 249;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_37__module == NULL);
        tmp_import_from_37__module = tmp_assign_source_224;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_225;
        PyObject *tmp_import_name_from_184;
        CHECK_OBJECT(tmp_import_from_37__module);
        tmp_import_name_from_184 = tmp_import_from_37__module;
        if (PyModule_Check(tmp_import_name_from_184)) {
            tmp_assign_source_225 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_184,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[432],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_225 = IMPORT_NAME(tmp_import_name_from_184, mod_consts[432]);
        }

        if (tmp_assign_source_225 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 249;

            goto try_except_handler_37;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[432], tmp_assign_source_225);
    }
    {
        PyObject *tmp_assign_source_226;
        PyObject *tmp_import_name_from_185;
        CHECK_OBJECT(tmp_import_from_37__module);
        tmp_import_name_from_185 = tmp_import_from_37__module;
        if (PyModule_Check(tmp_import_name_from_185)) {
            tmp_assign_source_226 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_185,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[433],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_226 = IMPORT_NAME(tmp_import_name_from_185, mod_consts[433]);
        }

        if (tmp_assign_source_226 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 249;

            goto try_except_handler_37;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[433], tmp_assign_source_226);
    }
    goto try_end_37;
    // Exception handler code:
    try_except_handler_37:;
    exception_keeper_type_37 = exception_type;
    exception_keeper_value_37 = exception_value;
    exception_keeper_tb_37 = exception_tb;
    exception_keeper_lineno_37 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_37__module);
    Py_DECREF(tmp_import_from_37__module);
    tmp_import_from_37__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_37;
    exception_value = exception_keeper_value_37;
    exception_tb = exception_keeper_tb_37;
    exception_lineno = exception_keeper_lineno_37;

    goto frame_exception_exit_1;
    // End of try:
    try_end_37:;
    CHECK_OBJECT(tmp_import_from_37__module);
    Py_DECREF(tmp_import_from_37__module);
    tmp_import_from_37__module = NULL;
    {
        PyObject *tmp_assign_source_227;
        PyObject *tmp_import_name_from_186;
        PyObject *tmp_name_value_121;
        PyObject *tmp_globals_arg_value_121;
        PyObject *tmp_locals_arg_value_121;
        PyObject *tmp_fromlist_value_121;
        PyObject *tmp_level_value_121;
        tmp_name_value_121 = mod_consts[434];
        tmp_globals_arg_value_121 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_121 = Py_None;
        tmp_fromlist_value_121 = mod_consts[435];
        tmp_level_value_121 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 253;
        tmp_import_name_from_186 = IMPORT_MODULE5(tmp_name_value_121, tmp_globals_arg_value_121, tmp_locals_arg_value_121, tmp_fromlist_value_121, tmp_level_value_121);
        if (tmp_import_name_from_186 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 253;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_186)) {
            tmp_assign_source_227 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_186,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[436],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_227 = IMPORT_NAME(tmp_import_name_from_186, mod_consts[436]);
        }

        Py_DECREF(tmp_import_name_from_186);
        if (tmp_assign_source_227 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 253;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[436], tmp_assign_source_227);
    }
    {
        PyObject *tmp_assign_source_228;
        PyObject *tmp_import_name_from_187;
        PyObject *tmp_name_value_122;
        PyObject *tmp_globals_arg_value_122;
        PyObject *tmp_locals_arg_value_122;
        PyObject *tmp_fromlist_value_122;
        PyObject *tmp_level_value_122;
        tmp_name_value_122 = mod_consts[437];
        tmp_globals_arg_value_122 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_122 = Py_None;
        tmp_fromlist_value_122 = mod_consts[438];
        tmp_level_value_122 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 254;
        tmp_import_name_from_187 = IMPORT_MODULE5(tmp_name_value_122, tmp_globals_arg_value_122, tmp_locals_arg_value_122, tmp_fromlist_value_122, tmp_level_value_122);
        if (tmp_import_name_from_187 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 254;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_187)) {
            tmp_assign_source_228 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_187,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[439],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_228 = IMPORT_NAME(tmp_import_name_from_187, mod_consts[439]);
        }

        Py_DECREF(tmp_import_name_from_187);
        if (tmp_assign_source_228 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 254;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[439], tmp_assign_source_228);
    }
    {
        PyObject *tmp_assign_source_229;
        PyObject *tmp_import_name_from_188;
        PyObject *tmp_name_value_123;
        PyObject *tmp_globals_arg_value_123;
        PyObject *tmp_locals_arg_value_123;
        PyObject *tmp_fromlist_value_123;
        PyObject *tmp_level_value_123;
        tmp_name_value_123 = mod_consts[440];
        tmp_globals_arg_value_123 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_123 = Py_None;
        tmp_fromlist_value_123 = mod_consts[441];
        tmp_level_value_123 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 255;
        tmp_import_name_from_188 = IMPORT_MODULE5(tmp_name_value_123, tmp_globals_arg_value_123, tmp_locals_arg_value_123, tmp_fromlist_value_123, tmp_level_value_123);
        if (tmp_import_name_from_188 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 255;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_188)) {
            tmp_assign_source_229 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_188,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[442],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_229 = IMPORT_NAME(tmp_import_name_from_188, mod_consts[442]);
        }

        Py_DECREF(tmp_import_name_from_188);
        if (tmp_assign_source_229 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 255;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[442], tmp_assign_source_229);
    }
    {
        PyObject *tmp_assign_source_230;
        PyObject *tmp_import_name_from_189;
        PyObject *tmp_name_value_124;
        PyObject *tmp_globals_arg_value_124;
        PyObject *tmp_locals_arg_value_124;
        PyObject *tmp_fromlist_value_124;
        PyObject *tmp_level_value_124;
        tmp_name_value_124 = mod_consts[443];
        tmp_globals_arg_value_124 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_124 = Py_None;
        tmp_fromlist_value_124 = mod_consts[444];
        tmp_level_value_124 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 256;
        tmp_import_name_from_189 = IMPORT_MODULE5(tmp_name_value_124, tmp_globals_arg_value_124, tmp_locals_arg_value_124, tmp_fromlist_value_124, tmp_level_value_124);
        if (tmp_import_name_from_189 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 256;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_189)) {
            tmp_assign_source_230 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_189,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[445],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_230 = IMPORT_NAME(tmp_import_name_from_189, mod_consts[445]);
        }

        Py_DECREF(tmp_import_name_from_189);
        if (tmp_assign_source_230 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 256;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[445], tmp_assign_source_230);
    }
    {
        PyObject *tmp_assign_source_231;
        PyObject *tmp_import_name_from_190;
        PyObject *tmp_name_value_125;
        PyObject *tmp_globals_arg_value_125;
        PyObject *tmp_locals_arg_value_125;
        PyObject *tmp_fromlist_value_125;
        PyObject *tmp_level_value_125;
        tmp_name_value_125 = mod_consts[446];
        tmp_globals_arg_value_125 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_125 = Py_None;
        tmp_fromlist_value_125 = mod_consts[447];
        tmp_level_value_125 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 257;
        tmp_import_name_from_190 = IMPORT_MODULE5(tmp_name_value_125, tmp_globals_arg_value_125, tmp_locals_arg_value_125, tmp_fromlist_value_125, tmp_level_value_125);
        if (tmp_import_name_from_190 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 257;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_190)) {
            tmp_assign_source_231 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_190,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[448],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_231 = IMPORT_NAME(tmp_import_name_from_190, mod_consts[448]);
        }

        Py_DECREF(tmp_import_name_from_190);
        if (tmp_assign_source_231 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 257;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[448], tmp_assign_source_231);
    }
    {
        PyObject *tmp_assign_source_232;
        PyObject *tmp_import_name_from_191;
        PyObject *tmp_name_value_126;
        PyObject *tmp_globals_arg_value_126;
        PyObject *tmp_locals_arg_value_126;
        PyObject *tmp_fromlist_value_126;
        PyObject *tmp_level_value_126;
        tmp_name_value_126 = mod_consts[449];
        tmp_globals_arg_value_126 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_126 = Py_None;
        tmp_fromlist_value_126 = mod_consts[450];
        tmp_level_value_126 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 258;
        tmp_import_name_from_191 = IMPORT_MODULE5(tmp_name_value_126, tmp_globals_arg_value_126, tmp_locals_arg_value_126, tmp_fromlist_value_126, tmp_level_value_126);
        if (tmp_import_name_from_191 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 258;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_191)) {
            tmp_assign_source_232 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_191,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[451],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_232 = IMPORT_NAME(tmp_import_name_from_191, mod_consts[451]);
        }

        Py_DECREF(tmp_import_name_from_191);
        if (tmp_assign_source_232 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 258;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[451], tmp_assign_source_232);
    }
    {
        PyObject *tmp_assign_source_233;
        PyObject *tmp_name_value_127;
        PyObject *tmp_globals_arg_value_127;
        PyObject *tmp_locals_arg_value_127;
        PyObject *tmp_fromlist_value_127;
        PyObject *tmp_level_value_127;
        tmp_name_value_127 = mod_consts[452];
        tmp_globals_arg_value_127 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_127 = Py_None;
        tmp_fromlist_value_127 = mod_consts[453];
        tmp_level_value_127 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 259;
        tmp_assign_source_233 = IMPORT_MODULE5(tmp_name_value_127, tmp_globals_arg_value_127, tmp_locals_arg_value_127, tmp_fromlist_value_127, tmp_level_value_127);
        if (tmp_assign_source_233 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 259;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_38__module == NULL);
        tmp_import_from_38__module = tmp_assign_source_233;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_234;
        PyObject *tmp_import_name_from_192;
        CHECK_OBJECT(tmp_import_from_38__module);
        tmp_import_name_from_192 = tmp_import_from_38__module;
        if (PyModule_Check(tmp_import_name_from_192)) {
            tmp_assign_source_234 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_192,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[454],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_234 = IMPORT_NAME(tmp_import_name_from_192, mod_consts[454]);
        }

        if (tmp_assign_source_234 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 259;

            goto try_except_handler_38;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[454], tmp_assign_source_234);
    }
    {
        PyObject *tmp_assign_source_235;
        PyObject *tmp_import_name_from_193;
        CHECK_OBJECT(tmp_import_from_38__module);
        tmp_import_name_from_193 = tmp_import_from_38__module;
        if (PyModule_Check(tmp_import_name_from_193)) {
            tmp_assign_source_235 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_193,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[455],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_235 = IMPORT_NAME(tmp_import_name_from_193, mod_consts[455]);
        }

        if (tmp_assign_source_235 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 259;

            goto try_except_handler_38;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[455], tmp_assign_source_235);
    }
    goto try_end_38;
    // Exception handler code:
    try_except_handler_38:;
    exception_keeper_type_38 = exception_type;
    exception_keeper_value_38 = exception_value;
    exception_keeper_tb_38 = exception_tb;
    exception_keeper_lineno_38 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_38__module);
    Py_DECREF(tmp_import_from_38__module);
    tmp_import_from_38__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_38;
    exception_value = exception_keeper_value_38;
    exception_tb = exception_keeper_tb_38;
    exception_lineno = exception_keeper_lineno_38;

    goto frame_exception_exit_1;
    // End of try:
    try_end_38:;
    CHECK_OBJECT(tmp_import_from_38__module);
    Py_DECREF(tmp_import_from_38__module);
    tmp_import_from_38__module = NULL;
    {
        PyObject *tmp_assign_source_236;
        PyObject *tmp_import_name_from_194;
        PyObject *tmp_name_value_128;
        PyObject *tmp_globals_arg_value_128;
        PyObject *tmp_locals_arg_value_128;
        PyObject *tmp_fromlist_value_128;
        PyObject *tmp_level_value_128;
        tmp_name_value_128 = mod_consts[456];
        tmp_globals_arg_value_128 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_128 = Py_None;
        tmp_fromlist_value_128 = mod_consts[457];
        tmp_level_value_128 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 263;
        tmp_import_name_from_194 = IMPORT_MODULE5(tmp_name_value_128, tmp_globals_arg_value_128, tmp_locals_arg_value_128, tmp_fromlist_value_128, tmp_level_value_128);
        if (tmp_import_name_from_194 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 263;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_194)) {
            tmp_assign_source_236 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_194,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[458],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_236 = IMPORT_NAME(tmp_import_name_from_194, mod_consts[458]);
        }

        Py_DECREF(tmp_import_name_from_194);
        if (tmp_assign_source_236 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 263;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[458], tmp_assign_source_236);
    }
    {
        PyObject *tmp_assign_source_237;
        PyObject *tmp_import_name_from_195;
        PyObject *tmp_name_value_129;
        PyObject *tmp_globals_arg_value_129;
        PyObject *tmp_locals_arg_value_129;
        PyObject *tmp_fromlist_value_129;
        PyObject *tmp_level_value_129;
        tmp_name_value_129 = mod_consts[459];
        tmp_globals_arg_value_129 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_129 = Py_None;
        tmp_fromlist_value_129 = mod_consts[460];
        tmp_level_value_129 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 264;
        tmp_import_name_from_195 = IMPORT_MODULE5(tmp_name_value_129, tmp_globals_arg_value_129, tmp_locals_arg_value_129, tmp_fromlist_value_129, tmp_level_value_129);
        if (tmp_import_name_from_195 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 264;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_195)) {
            tmp_assign_source_237 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_195,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[461],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_237 = IMPORT_NAME(tmp_import_name_from_195, mod_consts[461]);
        }

        Py_DECREF(tmp_import_name_from_195);
        if (tmp_assign_source_237 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 264;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[461], tmp_assign_source_237);
    }
    {
        PyObject *tmp_assign_source_238;
        PyObject *tmp_import_name_from_196;
        PyObject *tmp_name_value_130;
        PyObject *tmp_globals_arg_value_130;
        PyObject *tmp_locals_arg_value_130;
        PyObject *tmp_fromlist_value_130;
        PyObject *tmp_level_value_130;
        tmp_name_value_130 = mod_consts[462];
        tmp_globals_arg_value_130 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_130 = Py_None;
        tmp_fromlist_value_130 = mod_consts[463];
        tmp_level_value_130 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 265;
        tmp_import_name_from_196 = IMPORT_MODULE5(tmp_name_value_130, tmp_globals_arg_value_130, tmp_locals_arg_value_130, tmp_fromlist_value_130, tmp_level_value_130);
        if (tmp_import_name_from_196 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 265;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_196)) {
            tmp_assign_source_238 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_196,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[464],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_238 = IMPORT_NAME(tmp_import_name_from_196, mod_consts[464]);
        }

        Py_DECREF(tmp_import_name_from_196);
        if (tmp_assign_source_238 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 265;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[464], tmp_assign_source_238);
    }
    {
        PyObject *tmp_assign_source_239;
        PyObject *tmp_import_name_from_197;
        PyObject *tmp_name_value_131;
        PyObject *tmp_globals_arg_value_131;
        PyObject *tmp_locals_arg_value_131;
        PyObject *tmp_fromlist_value_131;
        PyObject *tmp_level_value_131;
        tmp_name_value_131 = mod_consts[465];
        tmp_globals_arg_value_131 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_131 = Py_None;
        tmp_fromlist_value_131 = mod_consts[466];
        tmp_level_value_131 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 266;
        tmp_import_name_from_197 = IMPORT_MODULE5(tmp_name_value_131, tmp_globals_arg_value_131, tmp_locals_arg_value_131, tmp_fromlist_value_131, tmp_level_value_131);
        if (tmp_import_name_from_197 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 266;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_197)) {
            tmp_assign_source_239 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_197,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[467],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_239 = IMPORT_NAME(tmp_import_name_from_197, mod_consts[467]);
        }

        Py_DECREF(tmp_import_name_from_197);
        if (tmp_assign_source_239 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 266;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[467], tmp_assign_source_239);
    }
    {
        PyObject *tmp_assign_source_240;
        PyObject *tmp_import_name_from_198;
        PyObject *tmp_name_value_132;
        PyObject *tmp_globals_arg_value_132;
        PyObject *tmp_locals_arg_value_132;
        PyObject *tmp_fromlist_value_132;
        PyObject *tmp_level_value_132;
        tmp_name_value_132 = mod_consts[468];
        tmp_globals_arg_value_132 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_132 = Py_None;
        tmp_fromlist_value_132 = mod_consts[469];
        tmp_level_value_132 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 267;
        tmp_import_name_from_198 = IMPORT_MODULE5(tmp_name_value_132, tmp_globals_arg_value_132, tmp_locals_arg_value_132, tmp_fromlist_value_132, tmp_level_value_132);
        if (tmp_import_name_from_198 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 267;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_198)) {
            tmp_assign_source_240 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_198,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[470],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_240 = IMPORT_NAME(tmp_import_name_from_198, mod_consts[470]);
        }

        Py_DECREF(tmp_import_name_from_198);
        if (tmp_assign_source_240 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 267;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[470], tmp_assign_source_240);
    }
    {
        PyObject *tmp_assign_source_241;
        PyObject *tmp_name_value_133;
        PyObject *tmp_globals_arg_value_133;
        PyObject *tmp_locals_arg_value_133;
        PyObject *tmp_fromlist_value_133;
        PyObject *tmp_level_value_133;
        tmp_name_value_133 = mod_consts[471];
        tmp_globals_arg_value_133 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_133 = Py_None;
        tmp_fromlist_value_133 = mod_consts[472];
        tmp_level_value_133 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 268;
        tmp_assign_source_241 = IMPORT_MODULE5(tmp_name_value_133, tmp_globals_arg_value_133, tmp_locals_arg_value_133, tmp_fromlist_value_133, tmp_level_value_133);
        if (tmp_assign_source_241 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 268;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_39__module == NULL);
        tmp_import_from_39__module = tmp_assign_source_241;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_242;
        PyObject *tmp_import_name_from_199;
        CHECK_OBJECT(tmp_import_from_39__module);
        tmp_import_name_from_199 = tmp_import_from_39__module;
        if (PyModule_Check(tmp_import_name_from_199)) {
            tmp_assign_source_242 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_199,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[473],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_242 = IMPORT_NAME(tmp_import_name_from_199, mod_consts[473]);
        }

        if (tmp_assign_source_242 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 268;

            goto try_except_handler_39;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[473], tmp_assign_source_242);
    }
    {
        PyObject *tmp_assign_source_243;
        PyObject *tmp_import_name_from_200;
        CHECK_OBJECT(tmp_import_from_39__module);
        tmp_import_name_from_200 = tmp_import_from_39__module;
        if (PyModule_Check(tmp_import_name_from_200)) {
            tmp_assign_source_243 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_200,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[474],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_243 = IMPORT_NAME(tmp_import_name_from_200, mod_consts[474]);
        }

        if (tmp_assign_source_243 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 268;

            goto try_except_handler_39;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[474], tmp_assign_source_243);
    }
    goto try_end_39;
    // Exception handler code:
    try_except_handler_39:;
    exception_keeper_type_39 = exception_type;
    exception_keeper_value_39 = exception_value;
    exception_keeper_tb_39 = exception_tb;
    exception_keeper_lineno_39 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_39__module);
    Py_DECREF(tmp_import_from_39__module);
    tmp_import_from_39__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_39;
    exception_value = exception_keeper_value_39;
    exception_tb = exception_keeper_tb_39;
    exception_lineno = exception_keeper_lineno_39;

    goto frame_exception_exit_1;
    // End of try:
    try_end_39:;
    CHECK_OBJECT(tmp_import_from_39__module);
    Py_DECREF(tmp_import_from_39__module);
    tmp_import_from_39__module = NULL;
    {
        PyObject *tmp_assign_source_244;
        PyObject *tmp_import_name_from_201;
        PyObject *tmp_name_value_134;
        PyObject *tmp_globals_arg_value_134;
        PyObject *tmp_locals_arg_value_134;
        PyObject *tmp_fromlist_value_134;
        PyObject *tmp_level_value_134;
        tmp_name_value_134 = mod_consts[475];
        tmp_globals_arg_value_134 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_134 = Py_None;
        tmp_fromlist_value_134 = mod_consts[476];
        tmp_level_value_134 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 272;
        tmp_import_name_from_201 = IMPORT_MODULE5(tmp_name_value_134, tmp_globals_arg_value_134, tmp_locals_arg_value_134, tmp_fromlist_value_134, tmp_level_value_134);
        if (tmp_import_name_from_201 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 272;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_201)) {
            tmp_assign_source_244 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_201,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[477],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_244 = IMPORT_NAME(tmp_import_name_from_201, mod_consts[477]);
        }

        Py_DECREF(tmp_import_name_from_201);
        if (tmp_assign_source_244 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 272;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[477], tmp_assign_source_244);
    }
    {
        PyObject *tmp_assign_source_245;
        PyObject *tmp_import_name_from_202;
        PyObject *tmp_name_value_135;
        PyObject *tmp_globals_arg_value_135;
        PyObject *tmp_locals_arg_value_135;
        PyObject *tmp_fromlist_value_135;
        PyObject *tmp_level_value_135;
        tmp_name_value_135 = mod_consts[478];
        tmp_globals_arg_value_135 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_135 = Py_None;
        tmp_fromlist_value_135 = mod_consts[479];
        tmp_level_value_135 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 273;
        tmp_import_name_from_202 = IMPORT_MODULE5(tmp_name_value_135, tmp_globals_arg_value_135, tmp_locals_arg_value_135, tmp_fromlist_value_135, tmp_level_value_135);
        if (tmp_import_name_from_202 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 273;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_202)) {
            tmp_assign_source_245 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_202,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[480],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_245 = IMPORT_NAME(tmp_import_name_from_202, mod_consts[480]);
        }

        Py_DECREF(tmp_import_name_from_202);
        if (tmp_assign_source_245 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 273;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[480], tmp_assign_source_245);
    }
    {
        PyObject *tmp_assign_source_246;
        PyObject *tmp_name_value_136;
        PyObject *tmp_globals_arg_value_136;
        PyObject *tmp_locals_arg_value_136;
        PyObject *tmp_fromlist_value_136;
        PyObject *tmp_level_value_136;
        tmp_name_value_136 = mod_consts[481];
        tmp_globals_arg_value_136 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_136 = Py_None;
        tmp_fromlist_value_136 = mod_consts[482];
        tmp_level_value_136 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 274;
        tmp_assign_source_246 = IMPORT_MODULE5(tmp_name_value_136, tmp_globals_arg_value_136, tmp_locals_arg_value_136, tmp_fromlist_value_136, tmp_level_value_136);
        if (tmp_assign_source_246 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 274;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_40__module == NULL);
        tmp_import_from_40__module = tmp_assign_source_246;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_247;
        PyObject *tmp_import_name_from_203;
        CHECK_OBJECT(tmp_import_from_40__module);
        tmp_import_name_from_203 = tmp_import_from_40__module;
        if (PyModule_Check(tmp_import_name_from_203)) {
            tmp_assign_source_247 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_203,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[483],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_247 = IMPORT_NAME(tmp_import_name_from_203, mod_consts[483]);
        }

        if (tmp_assign_source_247 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 274;

            goto try_except_handler_40;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[483], tmp_assign_source_247);
    }
    {
        PyObject *tmp_assign_source_248;
        PyObject *tmp_import_name_from_204;
        CHECK_OBJECT(tmp_import_from_40__module);
        tmp_import_name_from_204 = tmp_import_from_40__module;
        if (PyModule_Check(tmp_import_name_from_204)) {
            tmp_assign_source_248 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_204,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[484],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_248 = IMPORT_NAME(tmp_import_name_from_204, mod_consts[484]);
        }

        if (tmp_assign_source_248 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 274;

            goto try_except_handler_40;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[484], tmp_assign_source_248);
    }
    {
        PyObject *tmp_assign_source_249;
        PyObject *tmp_import_name_from_205;
        CHECK_OBJECT(tmp_import_from_40__module);
        tmp_import_name_from_205 = tmp_import_from_40__module;
        if (PyModule_Check(tmp_import_name_from_205)) {
            tmp_assign_source_249 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_205,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[485],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_249 = IMPORT_NAME(tmp_import_name_from_205, mod_consts[485]);
        }

        if (tmp_assign_source_249 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 274;

            goto try_except_handler_40;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[485], tmp_assign_source_249);
    }
    goto try_end_40;
    // Exception handler code:
    try_except_handler_40:;
    exception_keeper_type_40 = exception_type;
    exception_keeper_value_40 = exception_value;
    exception_keeper_tb_40 = exception_tb;
    exception_keeper_lineno_40 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_40__module);
    Py_DECREF(tmp_import_from_40__module);
    tmp_import_from_40__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_40;
    exception_value = exception_keeper_value_40;
    exception_tb = exception_keeper_tb_40;
    exception_lineno = exception_keeper_lineno_40;

    goto frame_exception_exit_1;
    // End of try:
    try_end_40:;
    CHECK_OBJECT(tmp_import_from_40__module);
    Py_DECREF(tmp_import_from_40__module);
    tmp_import_from_40__module = NULL;
    {
        PyObject *tmp_assign_source_250;
        PyObject *tmp_name_value_137;
        PyObject *tmp_globals_arg_value_137;
        PyObject *tmp_locals_arg_value_137;
        PyObject *tmp_fromlist_value_137;
        PyObject *tmp_level_value_137;
        tmp_name_value_137 = mod_consts[486];
        tmp_globals_arg_value_137 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_137 = Py_None;
        tmp_fromlist_value_137 = mod_consts[487];
        tmp_level_value_137 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 279;
        tmp_assign_source_250 = IMPORT_MODULE5(tmp_name_value_137, tmp_globals_arg_value_137, tmp_locals_arg_value_137, tmp_fromlist_value_137, tmp_level_value_137);
        if (tmp_assign_source_250 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 279;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_41__module == NULL);
        tmp_import_from_41__module = tmp_assign_source_250;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_251;
        PyObject *tmp_import_name_from_206;
        CHECK_OBJECT(tmp_import_from_41__module);
        tmp_import_name_from_206 = tmp_import_from_41__module;
        if (PyModule_Check(tmp_import_name_from_206)) {
            tmp_assign_source_251 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_206,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[488],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_251 = IMPORT_NAME(tmp_import_name_from_206, mod_consts[488]);
        }

        if (tmp_assign_source_251 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 279;

            goto try_except_handler_41;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[488], tmp_assign_source_251);
    }
    {
        PyObject *tmp_assign_source_252;
        PyObject *tmp_import_name_from_207;
        CHECK_OBJECT(tmp_import_from_41__module);
        tmp_import_name_from_207 = tmp_import_from_41__module;
        if (PyModule_Check(tmp_import_name_from_207)) {
            tmp_assign_source_252 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_207,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[489],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_252 = IMPORT_NAME(tmp_import_name_from_207, mod_consts[489]);
        }

        if (tmp_assign_source_252 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 279;

            goto try_except_handler_41;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[489], tmp_assign_source_252);
    }
    {
        PyObject *tmp_assign_source_253;
        PyObject *tmp_import_name_from_208;
        CHECK_OBJECT(tmp_import_from_41__module);
        tmp_import_name_from_208 = tmp_import_from_41__module;
        if (PyModule_Check(tmp_import_name_from_208)) {
            tmp_assign_source_253 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_208,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[490],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_253 = IMPORT_NAME(tmp_import_name_from_208, mod_consts[490]);
        }

        if (tmp_assign_source_253 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 279;

            goto try_except_handler_41;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[490], tmp_assign_source_253);
    }
    {
        PyObject *tmp_assign_source_254;
        PyObject *tmp_import_name_from_209;
        CHECK_OBJECT(tmp_import_from_41__module);
        tmp_import_name_from_209 = tmp_import_from_41__module;
        if (PyModule_Check(tmp_import_name_from_209)) {
            tmp_assign_source_254 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_209,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[491],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_254 = IMPORT_NAME(tmp_import_name_from_209, mod_consts[491]);
        }

        if (tmp_assign_source_254 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 279;

            goto try_except_handler_41;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[491], tmp_assign_source_254);
    }
    goto try_end_41;
    // Exception handler code:
    try_except_handler_41:;
    exception_keeper_type_41 = exception_type;
    exception_keeper_value_41 = exception_value;
    exception_keeper_tb_41 = exception_tb;
    exception_keeper_lineno_41 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_41__module);
    Py_DECREF(tmp_import_from_41__module);
    tmp_import_from_41__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_41;
    exception_value = exception_keeper_value_41;
    exception_tb = exception_keeper_tb_41;
    exception_lineno = exception_keeper_lineno_41;

    goto frame_exception_exit_1;
    // End of try:
    try_end_41:;
    CHECK_OBJECT(tmp_import_from_41__module);
    Py_DECREF(tmp_import_from_41__module);
    tmp_import_from_41__module = NULL;
    {
        PyObject *tmp_assign_source_255;
        PyObject *tmp_import_name_from_210;
        PyObject *tmp_name_value_138;
        PyObject *tmp_globals_arg_value_138;
        PyObject *tmp_locals_arg_value_138;
        PyObject *tmp_fromlist_value_138;
        PyObject *tmp_level_value_138;
        tmp_name_value_138 = mod_consts[492];
        tmp_globals_arg_value_138 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_138 = Py_None;
        tmp_fromlist_value_138 = mod_consts[493];
        tmp_level_value_138 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 285;
        tmp_import_name_from_210 = IMPORT_MODULE5(tmp_name_value_138, tmp_globals_arg_value_138, tmp_locals_arg_value_138, tmp_fromlist_value_138, tmp_level_value_138);
        if (tmp_import_name_from_210 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 285;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_210)) {
            tmp_assign_source_255 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_210,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[494],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_255 = IMPORT_NAME(tmp_import_name_from_210, mod_consts[494]);
        }

        Py_DECREF(tmp_import_name_from_210);
        if (tmp_assign_source_255 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 285;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[494], tmp_assign_source_255);
    }
    {
        PyObject *tmp_assign_source_256;
        PyObject *tmp_import_name_from_211;
        PyObject *tmp_name_value_139;
        PyObject *tmp_globals_arg_value_139;
        PyObject *tmp_locals_arg_value_139;
        PyObject *tmp_fromlist_value_139;
        PyObject *tmp_level_value_139;
        tmp_name_value_139 = mod_consts[495];
        tmp_globals_arg_value_139 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_139 = Py_None;
        tmp_fromlist_value_139 = mod_consts[496];
        tmp_level_value_139 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 286;
        tmp_import_name_from_211 = IMPORT_MODULE5(tmp_name_value_139, tmp_globals_arg_value_139, tmp_locals_arg_value_139, tmp_fromlist_value_139, tmp_level_value_139);
        if (tmp_import_name_from_211 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 286;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_211)) {
            tmp_assign_source_256 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_211,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[497],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_256 = IMPORT_NAME(tmp_import_name_from_211, mod_consts[497]);
        }

        Py_DECREF(tmp_import_name_from_211);
        if (tmp_assign_source_256 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 286;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[497], tmp_assign_source_256);
    }
    {
        PyObject *tmp_assign_source_257;
        PyObject *tmp_import_name_from_212;
        PyObject *tmp_name_value_140;
        PyObject *tmp_globals_arg_value_140;
        PyObject *tmp_locals_arg_value_140;
        PyObject *tmp_fromlist_value_140;
        PyObject *tmp_level_value_140;
        tmp_name_value_140 = mod_consts[498];
        tmp_globals_arg_value_140 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_140 = Py_None;
        tmp_fromlist_value_140 = mod_consts[499];
        tmp_level_value_140 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 287;
        tmp_import_name_from_212 = IMPORT_MODULE5(tmp_name_value_140, tmp_globals_arg_value_140, tmp_locals_arg_value_140, tmp_fromlist_value_140, tmp_level_value_140);
        if (tmp_import_name_from_212 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 287;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_212)) {
            tmp_assign_source_257 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_212,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[500],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_257 = IMPORT_NAME(tmp_import_name_from_212, mod_consts[500]);
        }

        Py_DECREF(tmp_import_name_from_212);
        if (tmp_assign_source_257 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 287;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[500], tmp_assign_source_257);
    }
    {
        PyObject *tmp_assign_source_258;
        PyObject *tmp_import_name_from_213;
        PyObject *tmp_name_value_141;
        PyObject *tmp_globals_arg_value_141;
        PyObject *tmp_locals_arg_value_141;
        PyObject *tmp_fromlist_value_141;
        PyObject *tmp_level_value_141;
        tmp_name_value_141 = mod_consts[501];
        tmp_globals_arg_value_141 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_141 = Py_None;
        tmp_fromlist_value_141 = mod_consts[502];
        tmp_level_value_141 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 288;
        tmp_import_name_from_213 = IMPORT_MODULE5(tmp_name_value_141, tmp_globals_arg_value_141, tmp_locals_arg_value_141, tmp_fromlist_value_141, tmp_level_value_141);
        if (tmp_import_name_from_213 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_213)) {
            tmp_assign_source_258 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_213,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[503],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_258 = IMPORT_NAME(tmp_import_name_from_213, mod_consts[503]);
        }

        Py_DECREF(tmp_import_name_from_213);
        if (tmp_assign_source_258 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 288;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[503], tmp_assign_source_258);
    }
    {
        PyObject *tmp_assign_source_259;
        PyObject *tmp_import_name_from_214;
        PyObject *tmp_name_value_142;
        PyObject *tmp_globals_arg_value_142;
        PyObject *tmp_locals_arg_value_142;
        PyObject *tmp_fromlist_value_142;
        PyObject *tmp_level_value_142;
        tmp_name_value_142 = mod_consts[504];
        tmp_globals_arg_value_142 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_142 = Py_None;
        tmp_fromlist_value_142 = mod_consts[505];
        tmp_level_value_142 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 289;
        tmp_import_name_from_214 = IMPORT_MODULE5(tmp_name_value_142, tmp_globals_arg_value_142, tmp_locals_arg_value_142, tmp_fromlist_value_142, tmp_level_value_142);
        if (tmp_import_name_from_214 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 289;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_214)) {
            tmp_assign_source_259 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_214,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[506],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_259 = IMPORT_NAME(tmp_import_name_from_214, mod_consts[506]);
        }

        Py_DECREF(tmp_import_name_from_214);
        if (tmp_assign_source_259 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 289;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[506], tmp_assign_source_259);
    }
    {
        PyObject *tmp_assign_source_260;
        PyObject *tmp_import_name_from_215;
        PyObject *tmp_name_value_143;
        PyObject *tmp_globals_arg_value_143;
        PyObject *tmp_locals_arg_value_143;
        PyObject *tmp_fromlist_value_143;
        PyObject *tmp_level_value_143;
        tmp_name_value_143 = mod_consts[507];
        tmp_globals_arg_value_143 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_143 = Py_None;
        tmp_fromlist_value_143 = mod_consts[508];
        tmp_level_value_143 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 290;
        tmp_import_name_from_215 = IMPORT_MODULE5(tmp_name_value_143, tmp_globals_arg_value_143, tmp_locals_arg_value_143, tmp_fromlist_value_143, tmp_level_value_143);
        if (tmp_import_name_from_215 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 290;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_215)) {
            tmp_assign_source_260 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_215,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[509],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_260 = IMPORT_NAME(tmp_import_name_from_215, mod_consts[509]);
        }

        Py_DECREF(tmp_import_name_from_215);
        if (tmp_assign_source_260 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 290;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[509], tmp_assign_source_260);
    }
    {
        PyObject *tmp_assign_source_261;
        PyObject *tmp_import_name_from_216;
        PyObject *tmp_name_value_144;
        PyObject *tmp_globals_arg_value_144;
        PyObject *tmp_locals_arg_value_144;
        PyObject *tmp_fromlist_value_144;
        PyObject *tmp_level_value_144;
        tmp_name_value_144 = mod_consts[510];
        tmp_globals_arg_value_144 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_144 = Py_None;
        tmp_fromlist_value_144 = mod_consts[511];
        tmp_level_value_144 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 291;
        tmp_import_name_from_216 = IMPORT_MODULE5(tmp_name_value_144, tmp_globals_arg_value_144, tmp_locals_arg_value_144, tmp_fromlist_value_144, tmp_level_value_144);
        if (tmp_import_name_from_216 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 291;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_216)) {
            tmp_assign_source_261 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_216,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[512],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_261 = IMPORT_NAME(tmp_import_name_from_216, mod_consts[512]);
        }

        Py_DECREF(tmp_import_name_from_216);
        if (tmp_assign_source_261 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 291;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[512], tmp_assign_source_261);
    }
    {
        PyObject *tmp_assign_source_262;
        PyObject *tmp_import_name_from_217;
        PyObject *tmp_name_value_145;
        PyObject *tmp_globals_arg_value_145;
        PyObject *tmp_locals_arg_value_145;
        PyObject *tmp_fromlist_value_145;
        PyObject *tmp_level_value_145;
        tmp_name_value_145 = mod_consts[513];
        tmp_globals_arg_value_145 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_145 = Py_None;
        tmp_fromlist_value_145 = mod_consts[514];
        tmp_level_value_145 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 292;
        tmp_import_name_from_217 = IMPORT_MODULE5(tmp_name_value_145, tmp_globals_arg_value_145, tmp_locals_arg_value_145, tmp_fromlist_value_145, tmp_level_value_145);
        if (tmp_import_name_from_217 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_217)) {
            tmp_assign_source_262 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_217,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[515],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_262 = IMPORT_NAME(tmp_import_name_from_217, mod_consts[515]);
        }

        Py_DECREF(tmp_import_name_from_217);
        if (tmp_assign_source_262 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 292;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[515], tmp_assign_source_262);
    }
    {
        PyObject *tmp_assign_source_263;
        PyObject *tmp_name_value_146;
        PyObject *tmp_globals_arg_value_146;
        PyObject *tmp_locals_arg_value_146;
        PyObject *tmp_fromlist_value_146;
        PyObject *tmp_level_value_146;
        tmp_name_value_146 = mod_consts[516];
        tmp_globals_arg_value_146 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_146 = Py_None;
        tmp_fromlist_value_146 = mod_consts[517];
        tmp_level_value_146 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 293;
        tmp_assign_source_263 = IMPORT_MODULE5(tmp_name_value_146, tmp_globals_arg_value_146, tmp_locals_arg_value_146, tmp_fromlist_value_146, tmp_level_value_146);
        if (tmp_assign_source_263 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 293;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_42__module == NULL);
        tmp_import_from_42__module = tmp_assign_source_263;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_264;
        PyObject *tmp_import_name_from_218;
        CHECK_OBJECT(tmp_import_from_42__module);
        tmp_import_name_from_218 = tmp_import_from_42__module;
        if (PyModule_Check(tmp_import_name_from_218)) {
            tmp_assign_source_264 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_218,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[518],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_264 = IMPORT_NAME(tmp_import_name_from_218, mod_consts[518]);
        }

        if (tmp_assign_source_264 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 293;

            goto try_except_handler_42;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[518], tmp_assign_source_264);
    }
    {
        PyObject *tmp_assign_source_265;
        PyObject *tmp_import_name_from_219;
        CHECK_OBJECT(tmp_import_from_42__module);
        tmp_import_name_from_219 = tmp_import_from_42__module;
        if (PyModule_Check(tmp_import_name_from_219)) {
            tmp_assign_source_265 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_219,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[519],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_265 = IMPORT_NAME(tmp_import_name_from_219, mod_consts[519]);
        }

        if (tmp_assign_source_265 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 293;

            goto try_except_handler_42;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[519], tmp_assign_source_265);
    }
    goto try_end_42;
    // Exception handler code:
    try_except_handler_42:;
    exception_keeper_type_42 = exception_type;
    exception_keeper_value_42 = exception_value;
    exception_keeper_tb_42 = exception_tb;
    exception_keeper_lineno_42 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_42__module);
    Py_DECREF(tmp_import_from_42__module);
    tmp_import_from_42__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_42;
    exception_value = exception_keeper_value_42;
    exception_tb = exception_keeper_tb_42;
    exception_lineno = exception_keeper_lineno_42;

    goto frame_exception_exit_1;
    // End of try:
    try_end_42:;
    CHECK_OBJECT(tmp_import_from_42__module);
    Py_DECREF(tmp_import_from_42__module);
    tmp_import_from_42__module = NULL;
    {
        PyObject *tmp_assign_source_266;
        PyObject *tmp_name_value_147;
        PyObject *tmp_globals_arg_value_147;
        PyObject *tmp_locals_arg_value_147;
        PyObject *tmp_fromlist_value_147;
        PyObject *tmp_level_value_147;
        tmp_name_value_147 = mod_consts[520];
        tmp_globals_arg_value_147 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_147 = Py_None;
        tmp_fromlist_value_147 = mod_consts[521];
        tmp_level_value_147 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 297;
        tmp_assign_source_266 = IMPORT_MODULE5(tmp_name_value_147, tmp_globals_arg_value_147, tmp_locals_arg_value_147, tmp_fromlist_value_147, tmp_level_value_147);
        if (tmp_assign_source_266 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 297;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_43__module == NULL);
        tmp_import_from_43__module = tmp_assign_source_266;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_267;
        PyObject *tmp_import_name_from_220;
        CHECK_OBJECT(tmp_import_from_43__module);
        tmp_import_name_from_220 = tmp_import_from_43__module;
        if (PyModule_Check(tmp_import_name_from_220)) {
            tmp_assign_source_267 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_220,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[522],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_267 = IMPORT_NAME(tmp_import_name_from_220, mod_consts[522]);
        }

        if (tmp_assign_source_267 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 297;

            goto try_except_handler_43;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[522], tmp_assign_source_267);
    }
    {
        PyObject *tmp_assign_source_268;
        PyObject *tmp_import_name_from_221;
        CHECK_OBJECT(tmp_import_from_43__module);
        tmp_import_name_from_221 = tmp_import_from_43__module;
        if (PyModule_Check(tmp_import_name_from_221)) {
            tmp_assign_source_268 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_221,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[523],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_268 = IMPORT_NAME(tmp_import_name_from_221, mod_consts[523]);
        }

        if (tmp_assign_source_268 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 297;

            goto try_except_handler_43;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[523], tmp_assign_source_268);
    }
    {
        PyObject *tmp_assign_source_269;
        PyObject *tmp_import_name_from_222;
        CHECK_OBJECT(tmp_import_from_43__module);
        tmp_import_name_from_222 = tmp_import_from_43__module;
        if (PyModule_Check(tmp_import_name_from_222)) {
            tmp_assign_source_269 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_222,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[524],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_269 = IMPORT_NAME(tmp_import_name_from_222, mod_consts[524]);
        }

        if (tmp_assign_source_269 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 297;

            goto try_except_handler_43;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[524], tmp_assign_source_269);
    }
    goto try_end_43;
    // Exception handler code:
    try_except_handler_43:;
    exception_keeper_type_43 = exception_type;
    exception_keeper_value_43 = exception_value;
    exception_keeper_tb_43 = exception_tb;
    exception_keeper_lineno_43 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_43__module);
    Py_DECREF(tmp_import_from_43__module);
    tmp_import_from_43__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_43;
    exception_value = exception_keeper_value_43;
    exception_tb = exception_keeper_tb_43;
    exception_lineno = exception_keeper_lineno_43;

    goto frame_exception_exit_1;
    // End of try:
    try_end_43:;
    CHECK_OBJECT(tmp_import_from_43__module);
    Py_DECREF(tmp_import_from_43__module);
    tmp_import_from_43__module = NULL;
    {
        PyObject *tmp_assign_source_270;
        PyObject *tmp_import_name_from_223;
        PyObject *tmp_name_value_148;
        PyObject *tmp_globals_arg_value_148;
        PyObject *tmp_locals_arg_value_148;
        PyObject *tmp_fromlist_value_148;
        PyObject *tmp_level_value_148;
        tmp_name_value_148 = mod_consts[525];
        tmp_globals_arg_value_148 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_148 = Py_None;
        tmp_fromlist_value_148 = mod_consts[526];
        tmp_level_value_148 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 302;
        tmp_import_name_from_223 = IMPORT_MODULE5(tmp_name_value_148, tmp_globals_arg_value_148, tmp_locals_arg_value_148, tmp_fromlist_value_148, tmp_level_value_148);
        if (tmp_import_name_from_223 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 302;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_223)) {
            tmp_assign_source_270 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_223,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[527],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_270 = IMPORT_NAME(tmp_import_name_from_223, mod_consts[527]);
        }

        Py_DECREF(tmp_import_name_from_223);
        if (tmp_assign_source_270 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 302;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[527], tmp_assign_source_270);
    }
    {
        PyObject *tmp_assign_source_271;
        PyObject *tmp_import_name_from_224;
        PyObject *tmp_name_value_149;
        PyObject *tmp_globals_arg_value_149;
        PyObject *tmp_locals_arg_value_149;
        PyObject *tmp_fromlist_value_149;
        PyObject *tmp_level_value_149;
        tmp_name_value_149 = mod_consts[528];
        tmp_globals_arg_value_149 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_149 = Py_None;
        tmp_fromlist_value_149 = mod_consts[529];
        tmp_level_value_149 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 303;
        tmp_import_name_from_224 = IMPORT_MODULE5(tmp_name_value_149, tmp_globals_arg_value_149, tmp_locals_arg_value_149, tmp_fromlist_value_149, tmp_level_value_149);
        if (tmp_import_name_from_224 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 303;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_224)) {
            tmp_assign_source_271 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_224,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[530],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_271 = IMPORT_NAME(tmp_import_name_from_224, mod_consts[530]);
        }

        Py_DECREF(tmp_import_name_from_224);
        if (tmp_assign_source_271 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 303;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[530], tmp_assign_source_271);
    }
    {
        PyObject *tmp_assign_source_272;
        PyObject *tmp_import_name_from_225;
        PyObject *tmp_name_value_150;
        PyObject *tmp_globals_arg_value_150;
        PyObject *tmp_locals_arg_value_150;
        PyObject *tmp_fromlist_value_150;
        PyObject *tmp_level_value_150;
        tmp_name_value_150 = mod_consts[531];
        tmp_globals_arg_value_150 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_150 = Py_None;
        tmp_fromlist_value_150 = mod_consts[532];
        tmp_level_value_150 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 304;
        tmp_import_name_from_225 = IMPORT_MODULE5(tmp_name_value_150, tmp_globals_arg_value_150, tmp_locals_arg_value_150, tmp_fromlist_value_150, tmp_level_value_150);
        if (tmp_import_name_from_225 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 304;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_225)) {
            tmp_assign_source_272 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_225,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[533],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_272 = IMPORT_NAME(tmp_import_name_from_225, mod_consts[533]);
        }

        Py_DECREF(tmp_import_name_from_225);
        if (tmp_assign_source_272 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 304;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[533], tmp_assign_source_272);
    }
    {
        PyObject *tmp_assign_source_273;
        PyObject *tmp_name_value_151;
        PyObject *tmp_globals_arg_value_151;
        PyObject *tmp_locals_arg_value_151;
        PyObject *tmp_fromlist_value_151;
        PyObject *tmp_level_value_151;
        tmp_name_value_151 = mod_consts[534];
        tmp_globals_arg_value_151 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_151 = Py_None;
        tmp_fromlist_value_151 = mod_consts[535];
        tmp_level_value_151 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 305;
        tmp_assign_source_273 = IMPORT_MODULE5(tmp_name_value_151, tmp_globals_arg_value_151, tmp_locals_arg_value_151, tmp_fromlist_value_151, tmp_level_value_151);
        if (tmp_assign_source_273 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 305;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_44__module == NULL);
        tmp_import_from_44__module = tmp_assign_source_273;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_274;
        PyObject *tmp_import_name_from_226;
        CHECK_OBJECT(tmp_import_from_44__module);
        tmp_import_name_from_226 = tmp_import_from_44__module;
        if (PyModule_Check(tmp_import_name_from_226)) {
            tmp_assign_source_274 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_226,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[536],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_274 = IMPORT_NAME(tmp_import_name_from_226, mod_consts[536]);
        }

        if (tmp_assign_source_274 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 305;

            goto try_except_handler_44;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[536], tmp_assign_source_274);
    }
    {
        PyObject *tmp_assign_source_275;
        PyObject *tmp_import_name_from_227;
        CHECK_OBJECT(tmp_import_from_44__module);
        tmp_import_name_from_227 = tmp_import_from_44__module;
        if (PyModule_Check(tmp_import_name_from_227)) {
            tmp_assign_source_275 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_227,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[537],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_275 = IMPORT_NAME(tmp_import_name_from_227, mod_consts[537]);
        }

        if (tmp_assign_source_275 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 305;

            goto try_except_handler_44;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[537], tmp_assign_source_275);
    }
    goto try_end_44;
    // Exception handler code:
    try_except_handler_44:;
    exception_keeper_type_44 = exception_type;
    exception_keeper_value_44 = exception_value;
    exception_keeper_tb_44 = exception_tb;
    exception_keeper_lineno_44 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_44__module);
    Py_DECREF(tmp_import_from_44__module);
    tmp_import_from_44__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_44;
    exception_value = exception_keeper_value_44;
    exception_tb = exception_keeper_tb_44;
    exception_lineno = exception_keeper_lineno_44;

    goto frame_exception_exit_1;
    // End of try:
    try_end_44:;
    CHECK_OBJECT(tmp_import_from_44__module);
    Py_DECREF(tmp_import_from_44__module);
    tmp_import_from_44__module = NULL;
    {
        PyObject *tmp_assign_source_276;
        PyObject *tmp_import_name_from_228;
        PyObject *tmp_name_value_152;
        PyObject *tmp_globals_arg_value_152;
        PyObject *tmp_locals_arg_value_152;
        PyObject *tmp_fromlist_value_152;
        PyObject *tmp_level_value_152;
        tmp_name_value_152 = mod_consts[538];
        tmp_globals_arg_value_152 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_152 = Py_None;
        tmp_fromlist_value_152 = mod_consts[539];
        tmp_level_value_152 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 309;
        tmp_import_name_from_228 = IMPORT_MODULE5(tmp_name_value_152, tmp_globals_arg_value_152, tmp_locals_arg_value_152, tmp_fromlist_value_152, tmp_level_value_152);
        if (tmp_import_name_from_228 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 309;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_228)) {
            tmp_assign_source_276 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_228,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[540],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_276 = IMPORT_NAME(tmp_import_name_from_228, mod_consts[540]);
        }

        Py_DECREF(tmp_import_name_from_228);
        if (tmp_assign_source_276 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 309;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[540], tmp_assign_source_276);
    }
    {
        PyObject *tmp_assign_source_277;
        PyObject *tmp_import_name_from_229;
        PyObject *tmp_name_value_153;
        PyObject *tmp_globals_arg_value_153;
        PyObject *tmp_locals_arg_value_153;
        PyObject *tmp_fromlist_value_153;
        PyObject *tmp_level_value_153;
        tmp_name_value_153 = mod_consts[541];
        tmp_globals_arg_value_153 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_153 = Py_None;
        tmp_fromlist_value_153 = mod_consts[542];
        tmp_level_value_153 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 310;
        tmp_import_name_from_229 = IMPORT_MODULE5(tmp_name_value_153, tmp_globals_arg_value_153, tmp_locals_arg_value_153, tmp_fromlist_value_153, tmp_level_value_153);
        if (tmp_import_name_from_229 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 310;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_229)) {
            tmp_assign_source_277 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_229,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[543],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_277 = IMPORT_NAME(tmp_import_name_from_229, mod_consts[543]);
        }

        Py_DECREF(tmp_import_name_from_229);
        if (tmp_assign_source_277 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 310;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[543], tmp_assign_source_277);
    }
    {
        PyObject *tmp_assign_source_278;
        PyObject *tmp_import_name_from_230;
        PyObject *tmp_name_value_154;
        PyObject *tmp_globals_arg_value_154;
        PyObject *tmp_locals_arg_value_154;
        PyObject *tmp_fromlist_value_154;
        PyObject *tmp_level_value_154;
        tmp_name_value_154 = mod_consts[544];
        tmp_globals_arg_value_154 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_154 = Py_None;
        tmp_fromlist_value_154 = mod_consts[545];
        tmp_level_value_154 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 311;
        tmp_import_name_from_230 = IMPORT_MODULE5(tmp_name_value_154, tmp_globals_arg_value_154, tmp_locals_arg_value_154, tmp_fromlist_value_154, tmp_level_value_154);
        if (tmp_import_name_from_230 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 311;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_230)) {
            tmp_assign_source_278 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_230,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[546],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_278 = IMPORT_NAME(tmp_import_name_from_230, mod_consts[546]);
        }

        Py_DECREF(tmp_import_name_from_230);
        if (tmp_assign_source_278 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 311;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[546], tmp_assign_source_278);
    }
    {
        PyObject *tmp_assign_source_279;
        PyObject *tmp_import_name_from_231;
        PyObject *tmp_name_value_155;
        PyObject *tmp_globals_arg_value_155;
        PyObject *tmp_locals_arg_value_155;
        PyObject *tmp_fromlist_value_155;
        PyObject *tmp_level_value_155;
        tmp_name_value_155 = mod_consts[547];
        tmp_globals_arg_value_155 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_155 = Py_None;
        tmp_fromlist_value_155 = mod_consts[548];
        tmp_level_value_155 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 312;
        tmp_import_name_from_231 = IMPORT_MODULE5(tmp_name_value_155, tmp_globals_arg_value_155, tmp_locals_arg_value_155, tmp_fromlist_value_155, tmp_level_value_155);
        if (tmp_import_name_from_231 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 312;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_231)) {
            tmp_assign_source_279 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_231,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[549],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_279 = IMPORT_NAME(tmp_import_name_from_231, mod_consts[549]);
        }

        Py_DECREF(tmp_import_name_from_231);
        if (tmp_assign_source_279 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 312;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[549], tmp_assign_source_279);
    }
    {
        PyObject *tmp_assign_source_280;
        PyObject *tmp_import_name_from_232;
        PyObject *tmp_name_value_156;
        PyObject *tmp_globals_arg_value_156;
        PyObject *tmp_locals_arg_value_156;
        PyObject *tmp_fromlist_value_156;
        PyObject *tmp_level_value_156;
        tmp_name_value_156 = mod_consts[550];
        tmp_globals_arg_value_156 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_156 = Py_None;
        tmp_fromlist_value_156 = mod_consts[551];
        tmp_level_value_156 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 313;
        tmp_import_name_from_232 = IMPORT_MODULE5(tmp_name_value_156, tmp_globals_arg_value_156, tmp_locals_arg_value_156, tmp_fromlist_value_156, tmp_level_value_156);
        if (tmp_import_name_from_232 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 313;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_232)) {
            tmp_assign_source_280 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_232,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[552],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_280 = IMPORT_NAME(tmp_import_name_from_232, mod_consts[552]);
        }

        Py_DECREF(tmp_import_name_from_232);
        if (tmp_assign_source_280 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 313;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[552], tmp_assign_source_280);
    }
    {
        PyObject *tmp_assign_source_281;
        PyObject *tmp_name_value_157;
        PyObject *tmp_globals_arg_value_157;
        PyObject *tmp_locals_arg_value_157;
        PyObject *tmp_fromlist_value_157;
        PyObject *tmp_level_value_157;
        tmp_name_value_157 = mod_consts[553];
        tmp_globals_arg_value_157 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_157 = Py_None;
        tmp_fromlist_value_157 = mod_consts[554];
        tmp_level_value_157 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 314;
        tmp_assign_source_281 = IMPORT_MODULE5(tmp_name_value_157, tmp_globals_arg_value_157, tmp_locals_arg_value_157, tmp_fromlist_value_157, tmp_level_value_157);
        if (tmp_assign_source_281 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 314;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_45__module == NULL);
        tmp_import_from_45__module = tmp_assign_source_281;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_282;
        PyObject *tmp_import_name_from_233;
        CHECK_OBJECT(tmp_import_from_45__module);
        tmp_import_name_from_233 = tmp_import_from_45__module;
        if (PyModule_Check(tmp_import_name_from_233)) {
            tmp_assign_source_282 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_233,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[555],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_282 = IMPORT_NAME(tmp_import_name_from_233, mod_consts[555]);
        }

        if (tmp_assign_source_282 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 314;

            goto try_except_handler_45;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[555], tmp_assign_source_282);
    }
    {
        PyObject *tmp_assign_source_283;
        PyObject *tmp_import_name_from_234;
        CHECK_OBJECT(tmp_import_from_45__module);
        tmp_import_name_from_234 = tmp_import_from_45__module;
        if (PyModule_Check(tmp_import_name_from_234)) {
            tmp_assign_source_283 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_234,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[556],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_283 = IMPORT_NAME(tmp_import_name_from_234, mod_consts[556]);
        }

        if (tmp_assign_source_283 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 314;

            goto try_except_handler_45;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[556], tmp_assign_source_283);
    }
    goto try_end_45;
    // Exception handler code:
    try_except_handler_45:;
    exception_keeper_type_45 = exception_type;
    exception_keeper_value_45 = exception_value;
    exception_keeper_tb_45 = exception_tb;
    exception_keeper_lineno_45 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_45__module);
    Py_DECREF(tmp_import_from_45__module);
    tmp_import_from_45__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_45;
    exception_value = exception_keeper_value_45;
    exception_tb = exception_keeper_tb_45;
    exception_lineno = exception_keeper_lineno_45;

    goto frame_exception_exit_1;
    // End of try:
    try_end_45:;
    CHECK_OBJECT(tmp_import_from_45__module);
    Py_DECREF(tmp_import_from_45__module);
    tmp_import_from_45__module = NULL;
    {
        PyObject *tmp_assign_source_284;
        PyObject *tmp_import_name_from_235;
        PyObject *tmp_name_value_158;
        PyObject *tmp_globals_arg_value_158;
        PyObject *tmp_locals_arg_value_158;
        PyObject *tmp_fromlist_value_158;
        PyObject *tmp_level_value_158;
        tmp_name_value_158 = mod_consts[557];
        tmp_globals_arg_value_158 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_158 = Py_None;
        tmp_fromlist_value_158 = mod_consts[558];
        tmp_level_value_158 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 318;
        tmp_import_name_from_235 = IMPORT_MODULE5(tmp_name_value_158, tmp_globals_arg_value_158, tmp_locals_arg_value_158, tmp_fromlist_value_158, tmp_level_value_158);
        if (tmp_import_name_from_235 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 318;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_235)) {
            tmp_assign_source_284 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_235,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[559],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_284 = IMPORT_NAME(tmp_import_name_from_235, mod_consts[559]);
        }

        Py_DECREF(tmp_import_name_from_235);
        if (tmp_assign_source_284 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 318;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[559], tmp_assign_source_284);
    }
    {
        PyObject *tmp_assign_source_285;
        PyObject *tmp_import_name_from_236;
        PyObject *tmp_name_value_159;
        PyObject *tmp_globals_arg_value_159;
        PyObject *tmp_locals_arg_value_159;
        PyObject *tmp_fromlist_value_159;
        PyObject *tmp_level_value_159;
        tmp_name_value_159 = mod_consts[560];
        tmp_globals_arg_value_159 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_159 = Py_None;
        tmp_fromlist_value_159 = mod_consts[561];
        tmp_level_value_159 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 319;
        tmp_import_name_from_236 = IMPORT_MODULE5(tmp_name_value_159, tmp_globals_arg_value_159, tmp_locals_arg_value_159, tmp_fromlist_value_159, tmp_level_value_159);
        if (tmp_import_name_from_236 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 319;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_236)) {
            tmp_assign_source_285 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_236,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[562],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_285 = IMPORT_NAME(tmp_import_name_from_236, mod_consts[562]);
        }

        Py_DECREF(tmp_import_name_from_236);
        if (tmp_assign_source_285 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 319;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[562], tmp_assign_source_285);
    }
    {
        PyObject *tmp_assign_source_286;
        PyObject *tmp_import_name_from_237;
        PyObject *tmp_name_value_160;
        PyObject *tmp_globals_arg_value_160;
        PyObject *tmp_locals_arg_value_160;
        PyObject *tmp_fromlist_value_160;
        PyObject *tmp_level_value_160;
        tmp_name_value_160 = mod_consts[563];
        tmp_globals_arg_value_160 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_160 = Py_None;
        tmp_fromlist_value_160 = mod_consts[564];
        tmp_level_value_160 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 320;
        tmp_import_name_from_237 = IMPORT_MODULE5(tmp_name_value_160, tmp_globals_arg_value_160, tmp_locals_arg_value_160, tmp_fromlist_value_160, tmp_level_value_160);
        if (tmp_import_name_from_237 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 320;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_237)) {
            tmp_assign_source_286 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_237,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[565],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_286 = IMPORT_NAME(tmp_import_name_from_237, mod_consts[565]);
        }

        Py_DECREF(tmp_import_name_from_237);
        if (tmp_assign_source_286 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 320;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[565], tmp_assign_source_286);
    }
    {
        PyObject *tmp_assign_source_287;
        PyObject *tmp_import_name_from_238;
        PyObject *tmp_name_value_161;
        PyObject *tmp_globals_arg_value_161;
        PyObject *tmp_locals_arg_value_161;
        PyObject *tmp_fromlist_value_161;
        PyObject *tmp_level_value_161;
        tmp_name_value_161 = mod_consts[566];
        tmp_globals_arg_value_161 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_161 = Py_None;
        tmp_fromlist_value_161 = mod_consts[567];
        tmp_level_value_161 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 321;
        tmp_import_name_from_238 = IMPORT_MODULE5(tmp_name_value_161, tmp_globals_arg_value_161, tmp_locals_arg_value_161, tmp_fromlist_value_161, tmp_level_value_161);
        if (tmp_import_name_from_238 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 321;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_238)) {
            tmp_assign_source_287 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_238,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[568],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_287 = IMPORT_NAME(tmp_import_name_from_238, mod_consts[568]);
        }

        Py_DECREF(tmp_import_name_from_238);
        if (tmp_assign_source_287 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 321;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[568], tmp_assign_source_287);
    }
    {
        PyObject *tmp_assign_source_288;
        PyObject *tmp_import_name_from_239;
        PyObject *tmp_name_value_162;
        PyObject *tmp_globals_arg_value_162;
        PyObject *tmp_locals_arg_value_162;
        PyObject *tmp_fromlist_value_162;
        PyObject *tmp_level_value_162;
        tmp_name_value_162 = mod_consts[569];
        tmp_globals_arg_value_162 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_162 = Py_None;
        tmp_fromlist_value_162 = mod_consts[570];
        tmp_level_value_162 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 322;
        tmp_import_name_from_239 = IMPORT_MODULE5(tmp_name_value_162, tmp_globals_arg_value_162, tmp_locals_arg_value_162, tmp_fromlist_value_162, tmp_level_value_162);
        if (tmp_import_name_from_239 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 322;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_239)) {
            tmp_assign_source_288 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_239,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[571],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_288 = IMPORT_NAME(tmp_import_name_from_239, mod_consts[571]);
        }

        Py_DECREF(tmp_import_name_from_239);
        if (tmp_assign_source_288 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 322;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[571], tmp_assign_source_288);
    }
    {
        PyObject *tmp_assign_source_289;
        PyObject *tmp_name_value_163;
        PyObject *tmp_globals_arg_value_163;
        PyObject *tmp_locals_arg_value_163;
        PyObject *tmp_fromlist_value_163;
        PyObject *tmp_level_value_163;
        tmp_name_value_163 = mod_consts[572];
        tmp_globals_arg_value_163 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_163 = Py_None;
        tmp_fromlist_value_163 = mod_consts[573];
        tmp_level_value_163 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 323;
        tmp_assign_source_289 = IMPORT_MODULE5(tmp_name_value_163, tmp_globals_arg_value_163, tmp_locals_arg_value_163, tmp_fromlist_value_163, tmp_level_value_163);
        if (tmp_assign_source_289 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_46__module == NULL);
        tmp_import_from_46__module = tmp_assign_source_289;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_290;
        PyObject *tmp_import_name_from_240;
        CHECK_OBJECT(tmp_import_from_46__module);
        tmp_import_name_from_240 = tmp_import_from_46__module;
        if (PyModule_Check(tmp_import_name_from_240)) {
            tmp_assign_source_290 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_240,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[574],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_290 = IMPORT_NAME(tmp_import_name_from_240, mod_consts[574]);
        }

        if (tmp_assign_source_290 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;

            goto try_except_handler_46;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[574], tmp_assign_source_290);
    }
    {
        PyObject *tmp_assign_source_291;
        PyObject *tmp_import_name_from_241;
        CHECK_OBJECT(tmp_import_from_46__module);
        tmp_import_name_from_241 = tmp_import_from_46__module;
        if (PyModule_Check(tmp_import_name_from_241)) {
            tmp_assign_source_291 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_241,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[575],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_291 = IMPORT_NAME(tmp_import_name_from_241, mod_consts[575]);
        }

        if (tmp_assign_source_291 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 323;

            goto try_except_handler_46;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[575], tmp_assign_source_291);
    }
    goto try_end_46;
    // Exception handler code:
    try_except_handler_46:;
    exception_keeper_type_46 = exception_type;
    exception_keeper_value_46 = exception_value;
    exception_keeper_tb_46 = exception_tb;
    exception_keeper_lineno_46 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_46__module);
    Py_DECREF(tmp_import_from_46__module);
    tmp_import_from_46__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_46;
    exception_value = exception_keeper_value_46;
    exception_tb = exception_keeper_tb_46;
    exception_lineno = exception_keeper_lineno_46;

    goto frame_exception_exit_1;
    // End of try:
    try_end_46:;
    CHECK_OBJECT(tmp_import_from_46__module);
    Py_DECREF(tmp_import_from_46__module);
    tmp_import_from_46__module = NULL;
    {
        PyObject *tmp_assign_source_292;
        PyObject *tmp_import_name_from_242;
        PyObject *tmp_name_value_164;
        PyObject *tmp_globals_arg_value_164;
        PyObject *tmp_locals_arg_value_164;
        PyObject *tmp_fromlist_value_164;
        PyObject *tmp_level_value_164;
        tmp_name_value_164 = mod_consts[576];
        tmp_globals_arg_value_164 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_164 = Py_None;
        tmp_fromlist_value_164 = mod_consts[577];
        tmp_level_value_164 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 327;
        tmp_import_name_from_242 = IMPORT_MODULE5(tmp_name_value_164, tmp_globals_arg_value_164, tmp_locals_arg_value_164, tmp_fromlist_value_164, tmp_level_value_164);
        if (tmp_import_name_from_242 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 327;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_242)) {
            tmp_assign_source_292 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_242,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[578],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_292 = IMPORT_NAME(tmp_import_name_from_242, mod_consts[578]);
        }

        Py_DECREF(tmp_import_name_from_242);
        if (tmp_assign_source_292 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 327;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[578], tmp_assign_source_292);
    }
    {
        PyObject *tmp_assign_source_293;
        PyObject *tmp_import_name_from_243;
        PyObject *tmp_name_value_165;
        PyObject *tmp_globals_arg_value_165;
        PyObject *tmp_locals_arg_value_165;
        PyObject *tmp_fromlist_value_165;
        PyObject *tmp_level_value_165;
        tmp_name_value_165 = mod_consts[579];
        tmp_globals_arg_value_165 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_165 = Py_None;
        tmp_fromlist_value_165 = mod_consts[580];
        tmp_level_value_165 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 328;
        tmp_import_name_from_243 = IMPORT_MODULE5(tmp_name_value_165, tmp_globals_arg_value_165, tmp_locals_arg_value_165, tmp_fromlist_value_165, tmp_level_value_165);
        if (tmp_import_name_from_243 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 328;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_243)) {
            tmp_assign_source_293 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_243,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[581],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_293 = IMPORT_NAME(tmp_import_name_from_243, mod_consts[581]);
        }

        Py_DECREF(tmp_import_name_from_243);
        if (tmp_assign_source_293 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 328;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[581], tmp_assign_source_293);
    }
    {
        PyObject *tmp_assign_source_294;
        PyObject *tmp_import_name_from_244;
        PyObject *tmp_name_value_166;
        PyObject *tmp_globals_arg_value_166;
        PyObject *tmp_locals_arg_value_166;
        PyObject *tmp_fromlist_value_166;
        PyObject *tmp_level_value_166;
        tmp_name_value_166 = mod_consts[582];
        tmp_globals_arg_value_166 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_166 = Py_None;
        tmp_fromlist_value_166 = mod_consts[583];
        tmp_level_value_166 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 329;
        tmp_import_name_from_244 = IMPORT_MODULE5(tmp_name_value_166, tmp_globals_arg_value_166, tmp_locals_arg_value_166, tmp_fromlist_value_166, tmp_level_value_166);
        if (tmp_import_name_from_244 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 329;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_244)) {
            tmp_assign_source_294 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_244,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[584],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_294 = IMPORT_NAME(tmp_import_name_from_244, mod_consts[584]);
        }

        Py_DECREF(tmp_import_name_from_244);
        if (tmp_assign_source_294 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 329;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[584], tmp_assign_source_294);
    }
    {
        PyObject *tmp_assign_source_295;
        PyObject *tmp_name_value_167;
        PyObject *tmp_globals_arg_value_167;
        PyObject *tmp_locals_arg_value_167;
        PyObject *tmp_fromlist_value_167;
        PyObject *tmp_level_value_167;
        tmp_name_value_167 = mod_consts[585];
        tmp_globals_arg_value_167 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_167 = Py_None;
        tmp_fromlist_value_167 = mod_consts[586];
        tmp_level_value_167 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 330;
        tmp_assign_source_295 = IMPORT_MODULE5(tmp_name_value_167, tmp_globals_arg_value_167, tmp_locals_arg_value_167, tmp_fromlist_value_167, tmp_level_value_167);
        if (tmp_assign_source_295 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 330;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_47__module == NULL);
        tmp_import_from_47__module = tmp_assign_source_295;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_296;
        PyObject *tmp_import_name_from_245;
        CHECK_OBJECT(tmp_import_from_47__module);
        tmp_import_name_from_245 = tmp_import_from_47__module;
        if (PyModule_Check(tmp_import_name_from_245)) {
            tmp_assign_source_296 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_245,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[587],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_296 = IMPORT_NAME(tmp_import_name_from_245, mod_consts[587]);
        }

        if (tmp_assign_source_296 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 330;

            goto try_except_handler_47;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[587], tmp_assign_source_296);
    }
    {
        PyObject *tmp_assign_source_297;
        PyObject *tmp_import_name_from_246;
        CHECK_OBJECT(tmp_import_from_47__module);
        tmp_import_name_from_246 = tmp_import_from_47__module;
        if (PyModule_Check(tmp_import_name_from_246)) {
            tmp_assign_source_297 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_246,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[588],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_297 = IMPORT_NAME(tmp_import_name_from_246, mod_consts[588]);
        }

        if (tmp_assign_source_297 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 330;

            goto try_except_handler_47;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[588], tmp_assign_source_297);
    }
    goto try_end_47;
    // Exception handler code:
    try_except_handler_47:;
    exception_keeper_type_47 = exception_type;
    exception_keeper_value_47 = exception_value;
    exception_keeper_tb_47 = exception_tb;
    exception_keeper_lineno_47 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_47__module);
    Py_DECREF(tmp_import_from_47__module);
    tmp_import_from_47__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_47;
    exception_value = exception_keeper_value_47;
    exception_tb = exception_keeper_tb_47;
    exception_lineno = exception_keeper_lineno_47;

    goto frame_exception_exit_1;
    // End of try:
    try_end_47:;
    CHECK_OBJECT(tmp_import_from_47__module);
    Py_DECREF(tmp_import_from_47__module);
    tmp_import_from_47__module = NULL;
    {
        PyObject *tmp_assign_source_298;
        PyObject *tmp_import_name_from_247;
        PyObject *tmp_name_value_168;
        PyObject *tmp_globals_arg_value_168;
        PyObject *tmp_locals_arg_value_168;
        PyObject *tmp_fromlist_value_168;
        PyObject *tmp_level_value_168;
        tmp_name_value_168 = mod_consts[589];
        tmp_globals_arg_value_168 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_168 = Py_None;
        tmp_fromlist_value_168 = mod_consts[590];
        tmp_level_value_168 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 334;
        tmp_import_name_from_247 = IMPORT_MODULE5(tmp_name_value_168, tmp_globals_arg_value_168, tmp_locals_arg_value_168, tmp_fromlist_value_168, tmp_level_value_168);
        if (tmp_import_name_from_247 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 334;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_247)) {
            tmp_assign_source_298 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_247,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[591],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_298 = IMPORT_NAME(tmp_import_name_from_247, mod_consts[591]);
        }

        Py_DECREF(tmp_import_name_from_247);
        if (tmp_assign_source_298 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 334;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[591], tmp_assign_source_298);
    }
    {
        PyObject *tmp_assign_source_299;
        PyObject *tmp_import_name_from_248;
        PyObject *tmp_name_value_169;
        PyObject *tmp_globals_arg_value_169;
        PyObject *tmp_locals_arg_value_169;
        PyObject *tmp_fromlist_value_169;
        PyObject *tmp_level_value_169;
        tmp_name_value_169 = mod_consts[592];
        tmp_globals_arg_value_169 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_169 = Py_None;
        tmp_fromlist_value_169 = mod_consts[593];
        tmp_level_value_169 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 335;
        tmp_import_name_from_248 = IMPORT_MODULE5(tmp_name_value_169, tmp_globals_arg_value_169, tmp_locals_arg_value_169, tmp_fromlist_value_169, tmp_level_value_169);
        if (tmp_import_name_from_248 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 335;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_248)) {
            tmp_assign_source_299 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_248,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[594],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_299 = IMPORT_NAME(tmp_import_name_from_248, mod_consts[594]);
        }

        Py_DECREF(tmp_import_name_from_248);
        if (tmp_assign_source_299 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 335;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[594], tmp_assign_source_299);
    }
    {
        PyObject *tmp_assign_source_300;
        PyObject *tmp_import_name_from_249;
        PyObject *tmp_name_value_170;
        PyObject *tmp_globals_arg_value_170;
        PyObject *tmp_locals_arg_value_170;
        PyObject *tmp_fromlist_value_170;
        PyObject *tmp_level_value_170;
        tmp_name_value_170 = mod_consts[595];
        tmp_globals_arg_value_170 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_170 = Py_None;
        tmp_fromlist_value_170 = mod_consts[596];
        tmp_level_value_170 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 336;
        tmp_import_name_from_249 = IMPORT_MODULE5(tmp_name_value_170, tmp_globals_arg_value_170, tmp_locals_arg_value_170, tmp_fromlist_value_170, tmp_level_value_170);
        if (tmp_import_name_from_249 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 336;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_249)) {
            tmp_assign_source_300 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_249,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[597],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_300 = IMPORT_NAME(tmp_import_name_from_249, mod_consts[597]);
        }

        Py_DECREF(tmp_import_name_from_249);
        if (tmp_assign_source_300 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 336;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[597], tmp_assign_source_300);
    }
    {
        PyObject *tmp_assign_source_301;
        PyObject *tmp_import_name_from_250;
        PyObject *tmp_name_value_171;
        PyObject *tmp_globals_arg_value_171;
        PyObject *tmp_locals_arg_value_171;
        PyObject *tmp_fromlist_value_171;
        PyObject *tmp_level_value_171;
        tmp_name_value_171 = mod_consts[598];
        tmp_globals_arg_value_171 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_171 = Py_None;
        tmp_fromlist_value_171 = mod_consts[599];
        tmp_level_value_171 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 337;
        tmp_import_name_from_250 = IMPORT_MODULE5(tmp_name_value_171, tmp_globals_arg_value_171, tmp_locals_arg_value_171, tmp_fromlist_value_171, tmp_level_value_171);
        if (tmp_import_name_from_250 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 337;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_250)) {
            tmp_assign_source_301 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_250,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[600],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_301 = IMPORT_NAME(tmp_import_name_from_250, mod_consts[600]);
        }

        Py_DECREF(tmp_import_name_from_250);
        if (tmp_assign_source_301 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 337;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[600], tmp_assign_source_301);
    }
    {
        PyObject *tmp_assign_source_302;
        PyObject *tmp_name_value_172;
        PyObject *tmp_globals_arg_value_172;
        PyObject *tmp_locals_arg_value_172;
        PyObject *tmp_fromlist_value_172;
        PyObject *tmp_level_value_172;
        tmp_name_value_172 = mod_consts[601];
        tmp_globals_arg_value_172 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_172 = Py_None;
        tmp_fromlist_value_172 = mod_consts[602];
        tmp_level_value_172 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 338;
        tmp_assign_source_302 = IMPORT_MODULE5(tmp_name_value_172, tmp_globals_arg_value_172, tmp_locals_arg_value_172, tmp_fromlist_value_172, tmp_level_value_172);
        if (tmp_assign_source_302 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 338;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_48__module == NULL);
        tmp_import_from_48__module = tmp_assign_source_302;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_303;
        PyObject *tmp_import_name_from_251;
        CHECK_OBJECT(tmp_import_from_48__module);
        tmp_import_name_from_251 = tmp_import_from_48__module;
        if (PyModule_Check(tmp_import_name_from_251)) {
            tmp_assign_source_303 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_251,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[603],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_303 = IMPORT_NAME(tmp_import_name_from_251, mod_consts[603]);
        }

        if (tmp_assign_source_303 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 338;

            goto try_except_handler_48;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[603], tmp_assign_source_303);
    }
    {
        PyObject *tmp_assign_source_304;
        PyObject *tmp_import_name_from_252;
        CHECK_OBJECT(tmp_import_from_48__module);
        tmp_import_name_from_252 = tmp_import_from_48__module;
        if (PyModule_Check(tmp_import_name_from_252)) {
            tmp_assign_source_304 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_252,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[604],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_304 = IMPORT_NAME(tmp_import_name_from_252, mod_consts[604]);
        }

        if (tmp_assign_source_304 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 338;

            goto try_except_handler_48;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[604], tmp_assign_source_304);
    }
    {
        PyObject *tmp_assign_source_305;
        PyObject *tmp_import_name_from_253;
        CHECK_OBJECT(tmp_import_from_48__module);
        tmp_import_name_from_253 = tmp_import_from_48__module;
        if (PyModule_Check(tmp_import_name_from_253)) {
            tmp_assign_source_305 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_253,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[605],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_305 = IMPORT_NAME(tmp_import_name_from_253, mod_consts[605]);
        }

        if (tmp_assign_source_305 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 338;

            goto try_except_handler_48;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[605], tmp_assign_source_305);
    }
    goto try_end_48;
    // Exception handler code:
    try_except_handler_48:;
    exception_keeper_type_48 = exception_type;
    exception_keeper_value_48 = exception_value;
    exception_keeper_tb_48 = exception_tb;
    exception_keeper_lineno_48 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_48__module);
    Py_DECREF(tmp_import_from_48__module);
    tmp_import_from_48__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_48;
    exception_value = exception_keeper_value_48;
    exception_tb = exception_keeper_tb_48;
    exception_lineno = exception_keeper_lineno_48;

    goto frame_exception_exit_1;
    // End of try:
    try_end_48:;
    CHECK_OBJECT(tmp_import_from_48__module);
    Py_DECREF(tmp_import_from_48__module);
    tmp_import_from_48__module = NULL;
    {
        PyObject *tmp_assign_source_306;
        PyObject *tmp_import_name_from_254;
        PyObject *tmp_name_value_173;
        PyObject *tmp_globals_arg_value_173;
        PyObject *tmp_locals_arg_value_173;
        PyObject *tmp_fromlist_value_173;
        PyObject *tmp_level_value_173;
        tmp_name_value_173 = mod_consts[606];
        tmp_globals_arg_value_173 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_173 = Py_None;
        tmp_fromlist_value_173 = mod_consts[607];
        tmp_level_value_173 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 343;
        tmp_import_name_from_254 = IMPORT_MODULE5(tmp_name_value_173, tmp_globals_arg_value_173, tmp_locals_arg_value_173, tmp_fromlist_value_173, tmp_level_value_173);
        if (tmp_import_name_from_254 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 343;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_254)) {
            tmp_assign_source_306 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_254,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[608],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_306 = IMPORT_NAME(tmp_import_name_from_254, mod_consts[608]);
        }

        Py_DECREF(tmp_import_name_from_254);
        if (tmp_assign_source_306 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 343;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[608], tmp_assign_source_306);
    }
    {
        PyObject *tmp_assign_source_307;
        PyObject *tmp_import_name_from_255;
        PyObject *tmp_name_value_174;
        PyObject *tmp_globals_arg_value_174;
        PyObject *tmp_locals_arg_value_174;
        PyObject *tmp_fromlist_value_174;
        PyObject *tmp_level_value_174;
        tmp_name_value_174 = mod_consts[609];
        tmp_globals_arg_value_174 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_174 = Py_None;
        tmp_fromlist_value_174 = mod_consts[610];
        tmp_level_value_174 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 344;
        tmp_import_name_from_255 = IMPORT_MODULE5(tmp_name_value_174, tmp_globals_arg_value_174, tmp_locals_arg_value_174, tmp_fromlist_value_174, tmp_level_value_174);
        if (tmp_import_name_from_255 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 344;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_255)) {
            tmp_assign_source_307 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_255,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[611],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_307 = IMPORT_NAME(tmp_import_name_from_255, mod_consts[611]);
        }

        Py_DECREF(tmp_import_name_from_255);
        if (tmp_assign_source_307 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 344;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[611], tmp_assign_source_307);
    }
    {
        PyObject *tmp_assign_source_308;
        PyObject *tmp_import_name_from_256;
        PyObject *tmp_name_value_175;
        PyObject *tmp_globals_arg_value_175;
        PyObject *tmp_locals_arg_value_175;
        PyObject *tmp_fromlist_value_175;
        PyObject *tmp_level_value_175;
        tmp_name_value_175 = mod_consts[612];
        tmp_globals_arg_value_175 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_175 = Py_None;
        tmp_fromlist_value_175 = mod_consts[613];
        tmp_level_value_175 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 345;
        tmp_import_name_from_256 = IMPORT_MODULE5(tmp_name_value_175, tmp_globals_arg_value_175, tmp_locals_arg_value_175, tmp_fromlist_value_175, tmp_level_value_175);
        if (tmp_import_name_from_256 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 345;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_256)) {
            tmp_assign_source_308 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_256,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[614],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_308 = IMPORT_NAME(tmp_import_name_from_256, mod_consts[614]);
        }

        Py_DECREF(tmp_import_name_from_256);
        if (tmp_assign_source_308 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 345;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[614], tmp_assign_source_308);
    }
    {
        PyObject *tmp_assign_source_309;
        PyObject *tmp_import_name_from_257;
        PyObject *tmp_name_value_176;
        PyObject *tmp_globals_arg_value_176;
        PyObject *tmp_locals_arg_value_176;
        PyObject *tmp_fromlist_value_176;
        PyObject *tmp_level_value_176;
        tmp_name_value_176 = mod_consts[615];
        tmp_globals_arg_value_176 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_176 = Py_None;
        tmp_fromlist_value_176 = mod_consts[616];
        tmp_level_value_176 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 346;
        tmp_import_name_from_257 = IMPORT_MODULE5(tmp_name_value_176, tmp_globals_arg_value_176, tmp_locals_arg_value_176, tmp_fromlist_value_176, tmp_level_value_176);
        if (tmp_import_name_from_257 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 346;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_257)) {
            tmp_assign_source_309 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_257,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[617],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_309 = IMPORT_NAME(tmp_import_name_from_257, mod_consts[617]);
        }

        Py_DECREF(tmp_import_name_from_257);
        if (tmp_assign_source_309 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 346;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[617], tmp_assign_source_309);
    }
    {
        PyObject *tmp_assign_source_310;
        PyObject *tmp_import_name_from_258;
        PyObject *tmp_name_value_177;
        PyObject *tmp_globals_arg_value_177;
        PyObject *tmp_locals_arg_value_177;
        PyObject *tmp_fromlist_value_177;
        PyObject *tmp_level_value_177;
        tmp_name_value_177 = mod_consts[618];
        tmp_globals_arg_value_177 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_177 = Py_None;
        tmp_fromlist_value_177 = mod_consts[619];
        tmp_level_value_177 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 347;
        tmp_import_name_from_258 = IMPORT_MODULE5(tmp_name_value_177, tmp_globals_arg_value_177, tmp_locals_arg_value_177, tmp_fromlist_value_177, tmp_level_value_177);
        if (tmp_import_name_from_258 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 347;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_258)) {
            tmp_assign_source_310 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_258,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[620],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_310 = IMPORT_NAME(tmp_import_name_from_258, mod_consts[620]);
        }

        Py_DECREF(tmp_import_name_from_258);
        if (tmp_assign_source_310 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 347;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[620], tmp_assign_source_310);
    }
    {
        PyObject *tmp_assign_source_311;
        PyObject *tmp_import_name_from_259;
        PyObject *tmp_name_value_178;
        PyObject *tmp_globals_arg_value_178;
        PyObject *tmp_locals_arg_value_178;
        PyObject *tmp_fromlist_value_178;
        PyObject *tmp_level_value_178;
        tmp_name_value_178 = mod_consts[621];
        tmp_globals_arg_value_178 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_178 = Py_None;
        tmp_fromlist_value_178 = mod_consts[622];
        tmp_level_value_178 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 348;
        tmp_import_name_from_259 = IMPORT_MODULE5(tmp_name_value_178, tmp_globals_arg_value_178, tmp_locals_arg_value_178, tmp_fromlist_value_178, tmp_level_value_178);
        if (tmp_import_name_from_259 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 348;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_259)) {
            tmp_assign_source_311 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_259,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[623],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_311 = IMPORT_NAME(tmp_import_name_from_259, mod_consts[623]);
        }

        Py_DECREF(tmp_import_name_from_259);
        if (tmp_assign_source_311 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 348;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[623], tmp_assign_source_311);
    }
    {
        PyObject *tmp_assign_source_312;
        PyObject *tmp_name_value_179;
        PyObject *tmp_globals_arg_value_179;
        PyObject *tmp_locals_arg_value_179;
        PyObject *tmp_fromlist_value_179;
        PyObject *tmp_level_value_179;
        tmp_name_value_179 = mod_consts[624];
        tmp_globals_arg_value_179 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_179 = Py_None;
        tmp_fromlist_value_179 = mod_consts[625];
        tmp_level_value_179 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 349;
        tmp_assign_source_312 = IMPORT_MODULE5(tmp_name_value_179, tmp_globals_arg_value_179, tmp_locals_arg_value_179, tmp_fromlist_value_179, tmp_level_value_179);
        if (tmp_assign_source_312 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 349;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_49__module == NULL);
        tmp_import_from_49__module = tmp_assign_source_312;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_313;
        PyObject *tmp_import_name_from_260;
        CHECK_OBJECT(tmp_import_from_49__module);
        tmp_import_name_from_260 = tmp_import_from_49__module;
        if (PyModule_Check(tmp_import_name_from_260)) {
            tmp_assign_source_313 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_260,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[626],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_313 = IMPORT_NAME(tmp_import_name_from_260, mod_consts[626]);
        }

        if (tmp_assign_source_313 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 349;

            goto try_except_handler_49;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[626], tmp_assign_source_313);
    }
    {
        PyObject *tmp_assign_source_314;
        PyObject *tmp_import_name_from_261;
        CHECK_OBJECT(tmp_import_from_49__module);
        tmp_import_name_from_261 = tmp_import_from_49__module;
        if (PyModule_Check(tmp_import_name_from_261)) {
            tmp_assign_source_314 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_261,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[627],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_314 = IMPORT_NAME(tmp_import_name_from_261, mod_consts[627]);
        }

        if (tmp_assign_source_314 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 349;

            goto try_except_handler_49;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[627], tmp_assign_source_314);
    }
    {
        PyObject *tmp_assign_source_315;
        PyObject *tmp_import_name_from_262;
        CHECK_OBJECT(tmp_import_from_49__module);
        tmp_import_name_from_262 = tmp_import_from_49__module;
        if (PyModule_Check(tmp_import_name_from_262)) {
            tmp_assign_source_315 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_262,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[628],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_315 = IMPORT_NAME(tmp_import_name_from_262, mod_consts[628]);
        }

        if (tmp_assign_source_315 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 349;

            goto try_except_handler_49;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[628], tmp_assign_source_315);
    }
    goto try_end_49;
    // Exception handler code:
    try_except_handler_49:;
    exception_keeper_type_49 = exception_type;
    exception_keeper_value_49 = exception_value;
    exception_keeper_tb_49 = exception_tb;
    exception_keeper_lineno_49 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_49__module);
    Py_DECREF(tmp_import_from_49__module);
    tmp_import_from_49__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_49;
    exception_value = exception_keeper_value_49;
    exception_tb = exception_keeper_tb_49;
    exception_lineno = exception_keeper_lineno_49;

    goto frame_exception_exit_1;
    // End of try:
    try_end_49:;
    CHECK_OBJECT(tmp_import_from_49__module);
    Py_DECREF(tmp_import_from_49__module);
    tmp_import_from_49__module = NULL;
    {
        PyObject *tmp_assign_source_316;
        PyObject *tmp_import_name_from_263;
        PyObject *tmp_name_value_180;
        PyObject *tmp_globals_arg_value_180;
        PyObject *tmp_locals_arg_value_180;
        PyObject *tmp_fromlist_value_180;
        PyObject *tmp_level_value_180;
        tmp_name_value_180 = mod_consts[629];
        tmp_globals_arg_value_180 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_180 = Py_None;
        tmp_fromlist_value_180 = mod_consts[630];
        tmp_level_value_180 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 354;
        tmp_import_name_from_263 = IMPORT_MODULE5(tmp_name_value_180, tmp_globals_arg_value_180, tmp_locals_arg_value_180, tmp_fromlist_value_180, tmp_level_value_180);
        if (tmp_import_name_from_263 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 354;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_263)) {
            tmp_assign_source_316 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_263,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[631],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_316 = IMPORT_NAME(tmp_import_name_from_263, mod_consts[631]);
        }

        Py_DECREF(tmp_import_name_from_263);
        if (tmp_assign_source_316 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 354;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[631], tmp_assign_source_316);
    }
    {
        PyObject *tmp_assign_source_317;
        PyObject *tmp_import_name_from_264;
        PyObject *tmp_name_value_181;
        PyObject *tmp_globals_arg_value_181;
        PyObject *tmp_locals_arg_value_181;
        PyObject *tmp_fromlist_value_181;
        PyObject *tmp_level_value_181;
        tmp_name_value_181 = mod_consts[632];
        tmp_globals_arg_value_181 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_181 = Py_None;
        tmp_fromlist_value_181 = mod_consts[633];
        tmp_level_value_181 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 355;
        tmp_import_name_from_264 = IMPORT_MODULE5(tmp_name_value_181, tmp_globals_arg_value_181, tmp_locals_arg_value_181, tmp_fromlist_value_181, tmp_level_value_181);
        if (tmp_import_name_from_264 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 355;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_264)) {
            tmp_assign_source_317 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_264,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[634],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_317 = IMPORT_NAME(tmp_import_name_from_264, mod_consts[634]);
        }

        Py_DECREF(tmp_import_name_from_264);
        if (tmp_assign_source_317 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 355;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[634], tmp_assign_source_317);
    }
    {
        PyObject *tmp_assign_source_318;
        PyObject *tmp_import_name_from_265;
        PyObject *tmp_name_value_182;
        PyObject *tmp_globals_arg_value_182;
        PyObject *tmp_locals_arg_value_182;
        PyObject *tmp_fromlist_value_182;
        PyObject *tmp_level_value_182;
        tmp_name_value_182 = mod_consts[635];
        tmp_globals_arg_value_182 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_182 = Py_None;
        tmp_fromlist_value_182 = mod_consts[636];
        tmp_level_value_182 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 356;
        tmp_import_name_from_265 = IMPORT_MODULE5(tmp_name_value_182, tmp_globals_arg_value_182, tmp_locals_arg_value_182, tmp_fromlist_value_182, tmp_level_value_182);
        if (tmp_import_name_from_265 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 356;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_265)) {
            tmp_assign_source_318 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_265,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[637],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_318 = IMPORT_NAME(tmp_import_name_from_265, mod_consts[637]);
        }

        Py_DECREF(tmp_import_name_from_265);
        if (tmp_assign_source_318 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 356;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[637], tmp_assign_source_318);
    }
    {
        PyObject *tmp_assign_source_319;
        PyObject *tmp_import_name_from_266;
        PyObject *tmp_name_value_183;
        PyObject *tmp_globals_arg_value_183;
        PyObject *tmp_locals_arg_value_183;
        PyObject *tmp_fromlist_value_183;
        PyObject *tmp_level_value_183;
        tmp_name_value_183 = mod_consts[638];
        tmp_globals_arg_value_183 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_183 = Py_None;
        tmp_fromlist_value_183 = mod_consts[639];
        tmp_level_value_183 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 357;
        tmp_import_name_from_266 = IMPORT_MODULE5(tmp_name_value_183, tmp_globals_arg_value_183, tmp_locals_arg_value_183, tmp_fromlist_value_183, tmp_level_value_183);
        if (tmp_import_name_from_266 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 357;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_266)) {
            tmp_assign_source_319 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_266,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[640],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_319 = IMPORT_NAME(tmp_import_name_from_266, mod_consts[640]);
        }

        Py_DECREF(tmp_import_name_from_266);
        if (tmp_assign_source_319 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 357;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[640], tmp_assign_source_319);
    }
    {
        PyObject *tmp_assign_source_320;
        PyObject *tmp_import_name_from_267;
        PyObject *tmp_name_value_184;
        PyObject *tmp_globals_arg_value_184;
        PyObject *tmp_locals_arg_value_184;
        PyObject *tmp_fromlist_value_184;
        PyObject *tmp_level_value_184;
        tmp_name_value_184 = mod_consts[641];
        tmp_globals_arg_value_184 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_184 = Py_None;
        tmp_fromlist_value_184 = mod_consts[642];
        tmp_level_value_184 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 358;
        tmp_import_name_from_267 = IMPORT_MODULE5(tmp_name_value_184, tmp_globals_arg_value_184, tmp_locals_arg_value_184, tmp_fromlist_value_184, tmp_level_value_184);
        if (tmp_import_name_from_267 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 358;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_267)) {
            tmp_assign_source_320 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_267,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[643],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_320 = IMPORT_NAME(tmp_import_name_from_267, mod_consts[643]);
        }

        Py_DECREF(tmp_import_name_from_267);
        if (tmp_assign_source_320 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 358;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[643], tmp_assign_source_320);
    }
    {
        PyObject *tmp_assign_source_321;
        PyObject *tmp_import_name_from_268;
        PyObject *tmp_name_value_185;
        PyObject *tmp_globals_arg_value_185;
        PyObject *tmp_locals_arg_value_185;
        PyObject *tmp_fromlist_value_185;
        PyObject *tmp_level_value_185;
        tmp_name_value_185 = mod_consts[644];
        tmp_globals_arg_value_185 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_185 = Py_None;
        tmp_fromlist_value_185 = mod_consts[645];
        tmp_level_value_185 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 359;
        tmp_import_name_from_268 = IMPORT_MODULE5(tmp_name_value_185, tmp_globals_arg_value_185, tmp_locals_arg_value_185, tmp_fromlist_value_185, tmp_level_value_185);
        if (tmp_import_name_from_268 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_268)) {
            tmp_assign_source_321 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_268,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[646],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_321 = IMPORT_NAME(tmp_import_name_from_268, mod_consts[646]);
        }

        Py_DECREF(tmp_import_name_from_268);
        if (tmp_assign_source_321 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 359;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[646], tmp_assign_source_321);
    }
    {
        PyObject *tmp_assign_source_322;
        PyObject *tmp_name_value_186;
        PyObject *tmp_globals_arg_value_186;
        PyObject *tmp_locals_arg_value_186;
        PyObject *tmp_fromlist_value_186;
        PyObject *tmp_level_value_186;
        tmp_name_value_186 = mod_consts[647];
        tmp_globals_arg_value_186 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_186 = Py_None;
        tmp_fromlist_value_186 = mod_consts[648];
        tmp_level_value_186 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 360;
        tmp_assign_source_322 = IMPORT_MODULE5(tmp_name_value_186, tmp_globals_arg_value_186, tmp_locals_arg_value_186, tmp_fromlist_value_186, tmp_level_value_186);
        if (tmp_assign_source_322 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 360;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_50__module == NULL);
        tmp_import_from_50__module = tmp_assign_source_322;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_323;
        PyObject *tmp_import_name_from_269;
        CHECK_OBJECT(tmp_import_from_50__module);
        tmp_import_name_from_269 = tmp_import_from_50__module;
        if (PyModule_Check(tmp_import_name_from_269)) {
            tmp_assign_source_323 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_269,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[649],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_323 = IMPORT_NAME(tmp_import_name_from_269, mod_consts[649]);
        }

        if (tmp_assign_source_323 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 360;

            goto try_except_handler_50;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[649], tmp_assign_source_323);
    }
    {
        PyObject *tmp_assign_source_324;
        PyObject *tmp_import_name_from_270;
        CHECK_OBJECT(tmp_import_from_50__module);
        tmp_import_name_from_270 = tmp_import_from_50__module;
        if (PyModule_Check(tmp_import_name_from_270)) {
            tmp_assign_source_324 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_270,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[650],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_324 = IMPORT_NAME(tmp_import_name_from_270, mod_consts[650]);
        }

        if (tmp_assign_source_324 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 360;

            goto try_except_handler_50;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[650], tmp_assign_source_324);
    }
    goto try_end_50;
    // Exception handler code:
    try_except_handler_50:;
    exception_keeper_type_50 = exception_type;
    exception_keeper_value_50 = exception_value;
    exception_keeper_tb_50 = exception_tb;
    exception_keeper_lineno_50 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_50__module);
    Py_DECREF(tmp_import_from_50__module);
    tmp_import_from_50__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_50;
    exception_value = exception_keeper_value_50;
    exception_tb = exception_keeper_tb_50;
    exception_lineno = exception_keeper_lineno_50;

    goto frame_exception_exit_1;
    // End of try:
    try_end_50:;
    CHECK_OBJECT(tmp_import_from_50__module);
    Py_DECREF(tmp_import_from_50__module);
    tmp_import_from_50__module = NULL;
    {
        PyObject *tmp_assign_source_325;
        PyObject *tmp_import_name_from_271;
        PyObject *tmp_name_value_187;
        PyObject *tmp_globals_arg_value_187;
        PyObject *tmp_locals_arg_value_187;
        PyObject *tmp_fromlist_value_187;
        PyObject *tmp_level_value_187;
        tmp_name_value_187 = mod_consts[651];
        tmp_globals_arg_value_187 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_187 = Py_None;
        tmp_fromlist_value_187 = mod_consts[652];
        tmp_level_value_187 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 364;
        tmp_import_name_from_271 = IMPORT_MODULE5(tmp_name_value_187, tmp_globals_arg_value_187, tmp_locals_arg_value_187, tmp_fromlist_value_187, tmp_level_value_187);
        if (tmp_import_name_from_271 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 364;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_271)) {
            tmp_assign_source_325 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_271,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[653],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_325 = IMPORT_NAME(tmp_import_name_from_271, mod_consts[653]);
        }

        Py_DECREF(tmp_import_name_from_271);
        if (tmp_assign_source_325 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 364;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[653], tmp_assign_source_325);
    }
    {
        PyObject *tmp_assign_source_326;
        PyObject *tmp_name_value_188;
        PyObject *tmp_globals_arg_value_188;
        PyObject *tmp_locals_arg_value_188;
        PyObject *tmp_fromlist_value_188;
        PyObject *tmp_level_value_188;
        tmp_name_value_188 = mod_consts[654];
        tmp_globals_arg_value_188 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_188 = Py_None;
        tmp_fromlist_value_188 = mod_consts[655];
        tmp_level_value_188 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 365;
        tmp_assign_source_326 = IMPORT_MODULE5(tmp_name_value_188, tmp_globals_arg_value_188, tmp_locals_arg_value_188, tmp_fromlist_value_188, tmp_level_value_188);
        if (tmp_assign_source_326 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_51__module == NULL);
        tmp_import_from_51__module = tmp_assign_source_326;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_327;
        PyObject *tmp_import_name_from_272;
        CHECK_OBJECT(tmp_import_from_51__module);
        tmp_import_name_from_272 = tmp_import_from_51__module;
        if (PyModule_Check(tmp_import_name_from_272)) {
            tmp_assign_source_327 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_272,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[656],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_327 = IMPORT_NAME(tmp_import_name_from_272, mod_consts[656]);
        }

        if (tmp_assign_source_327 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;

            goto try_except_handler_51;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[656], tmp_assign_source_327);
    }
    {
        PyObject *tmp_assign_source_328;
        PyObject *tmp_import_name_from_273;
        CHECK_OBJECT(tmp_import_from_51__module);
        tmp_import_name_from_273 = tmp_import_from_51__module;
        if (PyModule_Check(tmp_import_name_from_273)) {
            tmp_assign_source_328 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_273,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[657],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_328 = IMPORT_NAME(tmp_import_name_from_273, mod_consts[657]);
        }

        if (tmp_assign_source_328 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 365;

            goto try_except_handler_51;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[657], tmp_assign_source_328);
    }
    goto try_end_51;
    // Exception handler code:
    try_except_handler_51:;
    exception_keeper_type_51 = exception_type;
    exception_keeper_value_51 = exception_value;
    exception_keeper_tb_51 = exception_tb;
    exception_keeper_lineno_51 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_51__module);
    Py_DECREF(tmp_import_from_51__module);
    tmp_import_from_51__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_51;
    exception_value = exception_keeper_value_51;
    exception_tb = exception_keeper_tb_51;
    exception_lineno = exception_keeper_lineno_51;

    goto frame_exception_exit_1;
    // End of try:
    try_end_51:;
    CHECK_OBJECT(tmp_import_from_51__module);
    Py_DECREF(tmp_import_from_51__module);
    tmp_import_from_51__module = NULL;
    {
        PyObject *tmp_assign_source_329;
        PyObject *tmp_import_name_from_274;
        PyObject *tmp_name_value_189;
        PyObject *tmp_globals_arg_value_189;
        PyObject *tmp_locals_arg_value_189;
        PyObject *tmp_fromlist_value_189;
        PyObject *tmp_level_value_189;
        tmp_name_value_189 = mod_consts[658];
        tmp_globals_arg_value_189 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_189 = Py_None;
        tmp_fromlist_value_189 = mod_consts[659];
        tmp_level_value_189 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 369;
        tmp_import_name_from_274 = IMPORT_MODULE5(tmp_name_value_189, tmp_globals_arg_value_189, tmp_locals_arg_value_189, tmp_fromlist_value_189, tmp_level_value_189);
        if (tmp_import_name_from_274 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 369;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_274)) {
            tmp_assign_source_329 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_274,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[660],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_329 = IMPORT_NAME(tmp_import_name_from_274, mod_consts[660]);
        }

        Py_DECREF(tmp_import_name_from_274);
        if (tmp_assign_source_329 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 369;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[660], tmp_assign_source_329);
    }
    {
        PyObject *tmp_assign_source_330;
        PyObject *tmp_name_value_190;
        PyObject *tmp_globals_arg_value_190;
        PyObject *tmp_locals_arg_value_190;
        PyObject *tmp_fromlist_value_190;
        PyObject *tmp_level_value_190;
        tmp_name_value_190 = mod_consts[661];
        tmp_globals_arg_value_190 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_190 = Py_None;
        tmp_fromlist_value_190 = mod_consts[662];
        tmp_level_value_190 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 370;
        tmp_assign_source_330 = IMPORT_MODULE5(tmp_name_value_190, tmp_globals_arg_value_190, tmp_locals_arg_value_190, tmp_fromlist_value_190, tmp_level_value_190);
        if (tmp_assign_source_330 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 370;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_52__module == NULL);
        tmp_import_from_52__module = tmp_assign_source_330;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_331;
        PyObject *tmp_import_name_from_275;
        CHECK_OBJECT(tmp_import_from_52__module);
        tmp_import_name_from_275 = tmp_import_from_52__module;
        if (PyModule_Check(tmp_import_name_from_275)) {
            tmp_assign_source_331 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_275,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[663],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_331 = IMPORT_NAME(tmp_import_name_from_275, mod_consts[663]);
        }

        if (tmp_assign_source_331 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 370;

            goto try_except_handler_52;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[663], tmp_assign_source_331);
    }
    {
        PyObject *tmp_assign_source_332;
        PyObject *tmp_import_name_from_276;
        CHECK_OBJECT(tmp_import_from_52__module);
        tmp_import_name_from_276 = tmp_import_from_52__module;
        if (PyModule_Check(tmp_import_name_from_276)) {
            tmp_assign_source_332 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_276,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[664],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_332 = IMPORT_NAME(tmp_import_name_from_276, mod_consts[664]);
        }

        if (tmp_assign_source_332 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 370;

            goto try_except_handler_52;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[664], tmp_assign_source_332);
    }
    goto try_end_52;
    // Exception handler code:
    try_except_handler_52:;
    exception_keeper_type_52 = exception_type;
    exception_keeper_value_52 = exception_value;
    exception_keeper_tb_52 = exception_tb;
    exception_keeper_lineno_52 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_52__module);
    Py_DECREF(tmp_import_from_52__module);
    tmp_import_from_52__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_52;
    exception_value = exception_keeper_value_52;
    exception_tb = exception_keeper_tb_52;
    exception_lineno = exception_keeper_lineno_52;

    goto frame_exception_exit_1;
    // End of try:
    try_end_52:;
    CHECK_OBJECT(tmp_import_from_52__module);
    Py_DECREF(tmp_import_from_52__module);
    tmp_import_from_52__module = NULL;
    {
        PyObject *tmp_assign_source_333;
        PyObject *tmp_import_name_from_277;
        PyObject *tmp_name_value_191;
        PyObject *tmp_globals_arg_value_191;
        PyObject *tmp_locals_arg_value_191;
        PyObject *tmp_fromlist_value_191;
        PyObject *tmp_level_value_191;
        tmp_name_value_191 = mod_consts[665];
        tmp_globals_arg_value_191 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_191 = Py_None;
        tmp_fromlist_value_191 = mod_consts[666];
        tmp_level_value_191 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 374;
        tmp_import_name_from_277 = IMPORT_MODULE5(tmp_name_value_191, tmp_globals_arg_value_191, tmp_locals_arg_value_191, tmp_fromlist_value_191, tmp_level_value_191);
        if (tmp_import_name_from_277 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 374;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_277)) {
            tmp_assign_source_333 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_277,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[667],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_333 = IMPORT_NAME(tmp_import_name_from_277, mod_consts[667]);
        }

        Py_DECREF(tmp_import_name_from_277);
        if (tmp_assign_source_333 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 374;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[667], tmp_assign_source_333);
    }
    {
        PyObject *tmp_assign_source_334;
        PyObject *tmp_import_name_from_278;
        PyObject *tmp_name_value_192;
        PyObject *tmp_globals_arg_value_192;
        PyObject *tmp_locals_arg_value_192;
        PyObject *tmp_fromlist_value_192;
        PyObject *tmp_level_value_192;
        tmp_name_value_192 = mod_consts[668];
        tmp_globals_arg_value_192 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_192 = Py_None;
        tmp_fromlist_value_192 = mod_consts[669];
        tmp_level_value_192 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 375;
        tmp_import_name_from_278 = IMPORT_MODULE5(tmp_name_value_192, tmp_globals_arg_value_192, tmp_locals_arg_value_192, tmp_fromlist_value_192, tmp_level_value_192);
        if (tmp_import_name_from_278 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 375;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_278)) {
            tmp_assign_source_334 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_278,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[670],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_334 = IMPORT_NAME(tmp_import_name_from_278, mod_consts[670]);
        }

        Py_DECREF(tmp_import_name_from_278);
        if (tmp_assign_source_334 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 375;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[670], tmp_assign_source_334);
    }
    {
        PyObject *tmp_assign_source_335;
        PyObject *tmp_import_name_from_279;
        PyObject *tmp_name_value_193;
        PyObject *tmp_globals_arg_value_193;
        PyObject *tmp_locals_arg_value_193;
        PyObject *tmp_fromlist_value_193;
        PyObject *tmp_level_value_193;
        tmp_name_value_193 = mod_consts[671];
        tmp_globals_arg_value_193 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_193 = Py_None;
        tmp_fromlist_value_193 = mod_consts[672];
        tmp_level_value_193 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 376;
        tmp_import_name_from_279 = IMPORT_MODULE5(tmp_name_value_193, tmp_globals_arg_value_193, tmp_locals_arg_value_193, tmp_fromlist_value_193, tmp_level_value_193);
        if (tmp_import_name_from_279 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 376;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_279)) {
            tmp_assign_source_335 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_279,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[673],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_335 = IMPORT_NAME(tmp_import_name_from_279, mod_consts[673]);
        }

        Py_DECREF(tmp_import_name_from_279);
        if (tmp_assign_source_335 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 376;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[673], tmp_assign_source_335);
    }
    {
        PyObject *tmp_assign_source_336;
        PyObject *tmp_import_name_from_280;
        PyObject *tmp_name_value_194;
        PyObject *tmp_globals_arg_value_194;
        PyObject *tmp_locals_arg_value_194;
        PyObject *tmp_fromlist_value_194;
        PyObject *tmp_level_value_194;
        tmp_name_value_194 = mod_consts[674];
        tmp_globals_arg_value_194 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_194 = Py_None;
        tmp_fromlist_value_194 = mod_consts[675];
        tmp_level_value_194 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 377;
        tmp_import_name_from_280 = IMPORT_MODULE5(tmp_name_value_194, tmp_globals_arg_value_194, tmp_locals_arg_value_194, tmp_fromlist_value_194, tmp_level_value_194);
        if (tmp_import_name_from_280 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 377;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_280)) {
            tmp_assign_source_336 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_280,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[676],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_336 = IMPORT_NAME(tmp_import_name_from_280, mod_consts[676]);
        }

        Py_DECREF(tmp_import_name_from_280);
        if (tmp_assign_source_336 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 377;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[676], tmp_assign_source_336);
    }
    {
        PyObject *tmp_assign_source_337;
        PyObject *tmp_import_name_from_281;
        PyObject *tmp_name_value_195;
        PyObject *tmp_globals_arg_value_195;
        PyObject *tmp_locals_arg_value_195;
        PyObject *tmp_fromlist_value_195;
        PyObject *tmp_level_value_195;
        tmp_name_value_195 = mod_consts[677];
        tmp_globals_arg_value_195 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_195 = Py_None;
        tmp_fromlist_value_195 = mod_consts[678];
        tmp_level_value_195 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 378;
        tmp_import_name_from_281 = IMPORT_MODULE5(tmp_name_value_195, tmp_globals_arg_value_195, tmp_locals_arg_value_195, tmp_fromlist_value_195, tmp_level_value_195);
        if (tmp_import_name_from_281 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 378;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_281)) {
            tmp_assign_source_337 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_281,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[679],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_337 = IMPORT_NAME(tmp_import_name_from_281, mod_consts[679]);
        }

        Py_DECREF(tmp_import_name_from_281);
        if (tmp_assign_source_337 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 378;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[679], tmp_assign_source_337);
    }
    {
        PyObject *tmp_assign_source_338;
        PyObject *tmp_import_name_from_282;
        PyObject *tmp_name_value_196;
        PyObject *tmp_globals_arg_value_196;
        PyObject *tmp_locals_arg_value_196;
        PyObject *tmp_fromlist_value_196;
        PyObject *tmp_level_value_196;
        tmp_name_value_196 = mod_consts[680];
        tmp_globals_arg_value_196 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_196 = Py_None;
        tmp_fromlist_value_196 = mod_consts[681];
        tmp_level_value_196 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 379;
        tmp_import_name_from_282 = IMPORT_MODULE5(tmp_name_value_196, tmp_globals_arg_value_196, tmp_locals_arg_value_196, tmp_fromlist_value_196, tmp_level_value_196);
        if (tmp_import_name_from_282 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 379;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_282)) {
            tmp_assign_source_338 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_282,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[682],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_338 = IMPORT_NAME(tmp_import_name_from_282, mod_consts[682]);
        }

        Py_DECREF(tmp_import_name_from_282);
        if (tmp_assign_source_338 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 379;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[682], tmp_assign_source_338);
    }
    {
        PyObject *tmp_assign_source_339;
        PyObject *tmp_import_name_from_283;
        PyObject *tmp_name_value_197;
        PyObject *tmp_globals_arg_value_197;
        PyObject *tmp_locals_arg_value_197;
        PyObject *tmp_fromlist_value_197;
        PyObject *tmp_level_value_197;
        tmp_name_value_197 = mod_consts[683];
        tmp_globals_arg_value_197 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_197 = Py_None;
        tmp_fromlist_value_197 = mod_consts[684];
        tmp_level_value_197 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 380;
        tmp_import_name_from_283 = IMPORT_MODULE5(tmp_name_value_197, tmp_globals_arg_value_197, tmp_locals_arg_value_197, tmp_fromlist_value_197, tmp_level_value_197);
        if (tmp_import_name_from_283 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 380;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_283)) {
            tmp_assign_source_339 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_283,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[685],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_339 = IMPORT_NAME(tmp_import_name_from_283, mod_consts[685]);
        }

        Py_DECREF(tmp_import_name_from_283);
        if (tmp_assign_source_339 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 380;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[685], tmp_assign_source_339);
    }
    {
        PyObject *tmp_assign_source_340;
        PyObject *tmp_import_name_from_284;
        PyObject *tmp_name_value_198;
        PyObject *tmp_globals_arg_value_198;
        PyObject *tmp_locals_arg_value_198;
        PyObject *tmp_fromlist_value_198;
        PyObject *tmp_level_value_198;
        tmp_name_value_198 = mod_consts[686];
        tmp_globals_arg_value_198 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_198 = Py_None;
        tmp_fromlist_value_198 = mod_consts[687];
        tmp_level_value_198 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 381;
        tmp_import_name_from_284 = IMPORT_MODULE5(tmp_name_value_198, tmp_globals_arg_value_198, tmp_locals_arg_value_198, tmp_fromlist_value_198, tmp_level_value_198);
        if (tmp_import_name_from_284 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 381;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_284)) {
            tmp_assign_source_340 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_284,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[688],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_340 = IMPORT_NAME(tmp_import_name_from_284, mod_consts[688]);
        }

        Py_DECREF(tmp_import_name_from_284);
        if (tmp_assign_source_340 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 381;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[688], tmp_assign_source_340);
    }
    {
        PyObject *tmp_assign_source_341;
        PyObject *tmp_name_value_199;
        PyObject *tmp_globals_arg_value_199;
        PyObject *tmp_locals_arg_value_199;
        PyObject *tmp_fromlist_value_199;
        PyObject *tmp_level_value_199;
        tmp_name_value_199 = mod_consts[689];
        tmp_globals_arg_value_199 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_199 = Py_None;
        tmp_fromlist_value_199 = mod_consts[690];
        tmp_level_value_199 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 382;
        tmp_assign_source_341 = IMPORT_MODULE5(tmp_name_value_199, tmp_globals_arg_value_199, tmp_locals_arg_value_199, tmp_fromlist_value_199, tmp_level_value_199);
        if (tmp_assign_source_341 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 382;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_53__module == NULL);
        tmp_import_from_53__module = tmp_assign_source_341;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_342;
        PyObject *tmp_import_name_from_285;
        CHECK_OBJECT(tmp_import_from_53__module);
        tmp_import_name_from_285 = tmp_import_from_53__module;
        if (PyModule_Check(tmp_import_name_from_285)) {
            tmp_assign_source_342 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_285,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[691],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_342 = IMPORT_NAME(tmp_import_name_from_285, mod_consts[691]);
        }

        if (tmp_assign_source_342 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 382;

            goto try_except_handler_53;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[691], tmp_assign_source_342);
    }
    {
        PyObject *tmp_assign_source_343;
        PyObject *tmp_import_name_from_286;
        CHECK_OBJECT(tmp_import_from_53__module);
        tmp_import_name_from_286 = tmp_import_from_53__module;
        if (PyModule_Check(tmp_import_name_from_286)) {
            tmp_assign_source_343 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_286,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[692],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_343 = IMPORT_NAME(tmp_import_name_from_286, mod_consts[692]);
        }

        if (tmp_assign_source_343 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 382;

            goto try_except_handler_53;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[692], tmp_assign_source_343);
    }
    {
        PyObject *tmp_assign_source_344;
        PyObject *tmp_import_name_from_287;
        CHECK_OBJECT(tmp_import_from_53__module);
        tmp_import_name_from_287 = tmp_import_from_53__module;
        if (PyModule_Check(tmp_import_name_from_287)) {
            tmp_assign_source_344 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_287,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[693],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_344 = IMPORT_NAME(tmp_import_name_from_287, mod_consts[693]);
        }

        if (tmp_assign_source_344 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 382;

            goto try_except_handler_53;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[693], tmp_assign_source_344);
    }
    {
        PyObject *tmp_assign_source_345;
        PyObject *tmp_import_name_from_288;
        CHECK_OBJECT(tmp_import_from_53__module);
        tmp_import_name_from_288 = tmp_import_from_53__module;
        if (PyModule_Check(tmp_import_name_from_288)) {
            tmp_assign_source_345 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_288,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[694],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_345 = IMPORT_NAME(tmp_import_name_from_288, mod_consts[694]);
        }

        if (tmp_assign_source_345 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 382;

            goto try_except_handler_53;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[694], tmp_assign_source_345);
    }
    goto try_end_53;
    // Exception handler code:
    try_except_handler_53:;
    exception_keeper_type_53 = exception_type;
    exception_keeper_value_53 = exception_value;
    exception_keeper_tb_53 = exception_tb;
    exception_keeper_lineno_53 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_53__module);
    Py_DECREF(tmp_import_from_53__module);
    tmp_import_from_53__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_53;
    exception_value = exception_keeper_value_53;
    exception_tb = exception_keeper_tb_53;
    exception_lineno = exception_keeper_lineno_53;

    goto frame_exception_exit_1;
    // End of try:
    try_end_53:;
    CHECK_OBJECT(tmp_import_from_53__module);
    Py_DECREF(tmp_import_from_53__module);
    tmp_import_from_53__module = NULL;
    {
        PyObject *tmp_assign_source_346;
        PyObject *tmp_import_name_from_289;
        PyObject *tmp_name_value_200;
        PyObject *tmp_globals_arg_value_200;
        PyObject *tmp_locals_arg_value_200;
        PyObject *tmp_fromlist_value_200;
        PyObject *tmp_level_value_200;
        tmp_name_value_200 = mod_consts[695];
        tmp_globals_arg_value_200 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_200 = Py_None;
        tmp_fromlist_value_200 = mod_consts[696];
        tmp_level_value_200 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 388;
        tmp_import_name_from_289 = IMPORT_MODULE5(tmp_name_value_200, tmp_globals_arg_value_200, tmp_locals_arg_value_200, tmp_fromlist_value_200, tmp_level_value_200);
        if (tmp_import_name_from_289 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 388;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_289)) {
            tmp_assign_source_346 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_289,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[697],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_346 = IMPORT_NAME(tmp_import_name_from_289, mod_consts[697]);
        }

        Py_DECREF(tmp_import_name_from_289);
        if (tmp_assign_source_346 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 388;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[697], tmp_assign_source_346);
    }
    {
        PyObject *tmp_assign_source_347;
        PyObject *tmp_name_value_201;
        PyObject *tmp_globals_arg_value_201;
        PyObject *tmp_locals_arg_value_201;
        PyObject *tmp_fromlist_value_201;
        PyObject *tmp_level_value_201;
        tmp_name_value_201 = mod_consts[698];
        tmp_globals_arg_value_201 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_201 = Py_None;
        tmp_fromlist_value_201 = mod_consts[699];
        tmp_level_value_201 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 389;
        tmp_assign_source_347 = IMPORT_MODULE5(tmp_name_value_201, tmp_globals_arg_value_201, tmp_locals_arg_value_201, tmp_fromlist_value_201, tmp_level_value_201);
        if (tmp_assign_source_347 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 389;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_54__module == NULL);
        tmp_import_from_54__module = tmp_assign_source_347;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_348;
        PyObject *tmp_import_name_from_290;
        CHECK_OBJECT(tmp_import_from_54__module);
        tmp_import_name_from_290 = tmp_import_from_54__module;
        if (PyModule_Check(tmp_import_name_from_290)) {
            tmp_assign_source_348 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_290,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[700],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_348 = IMPORT_NAME(tmp_import_name_from_290, mod_consts[700]);
        }

        if (tmp_assign_source_348 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 389;

            goto try_except_handler_54;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[700], tmp_assign_source_348);
    }
    {
        PyObject *tmp_assign_source_349;
        PyObject *tmp_import_name_from_291;
        CHECK_OBJECT(tmp_import_from_54__module);
        tmp_import_name_from_291 = tmp_import_from_54__module;
        if (PyModule_Check(tmp_import_name_from_291)) {
            tmp_assign_source_349 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_291,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[701],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_349 = IMPORT_NAME(tmp_import_name_from_291, mod_consts[701]);
        }

        if (tmp_assign_source_349 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 389;

            goto try_except_handler_54;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[701], tmp_assign_source_349);
    }
    goto try_end_54;
    // Exception handler code:
    try_except_handler_54:;
    exception_keeper_type_54 = exception_type;
    exception_keeper_value_54 = exception_value;
    exception_keeper_tb_54 = exception_tb;
    exception_keeper_lineno_54 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_54__module);
    Py_DECREF(tmp_import_from_54__module);
    tmp_import_from_54__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_54;
    exception_value = exception_keeper_value_54;
    exception_tb = exception_keeper_tb_54;
    exception_lineno = exception_keeper_lineno_54;

    goto frame_exception_exit_1;
    // End of try:
    try_end_54:;
    CHECK_OBJECT(tmp_import_from_54__module);
    Py_DECREF(tmp_import_from_54__module);
    tmp_import_from_54__module = NULL;
    {
        PyObject *tmp_assign_source_350;
        PyObject *tmp_import_name_from_292;
        PyObject *tmp_name_value_202;
        PyObject *tmp_globals_arg_value_202;
        PyObject *tmp_locals_arg_value_202;
        PyObject *tmp_fromlist_value_202;
        PyObject *tmp_level_value_202;
        tmp_name_value_202 = mod_consts[702];
        tmp_globals_arg_value_202 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_202 = Py_None;
        tmp_fromlist_value_202 = mod_consts[703];
        tmp_level_value_202 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 393;
        tmp_import_name_from_292 = IMPORT_MODULE5(tmp_name_value_202, tmp_globals_arg_value_202, tmp_locals_arg_value_202, tmp_fromlist_value_202, tmp_level_value_202);
        if (tmp_import_name_from_292 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 393;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_292)) {
            tmp_assign_source_350 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_292,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[704],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_350 = IMPORT_NAME(tmp_import_name_from_292, mod_consts[704]);
        }

        Py_DECREF(tmp_import_name_from_292);
        if (tmp_assign_source_350 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 393;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[704], tmp_assign_source_350);
    }
    {
        PyObject *tmp_assign_source_351;
        PyObject *tmp_name_value_203;
        PyObject *tmp_globals_arg_value_203;
        PyObject *tmp_locals_arg_value_203;
        PyObject *tmp_fromlist_value_203;
        PyObject *tmp_level_value_203;
        tmp_name_value_203 = mod_consts[705];
        tmp_globals_arg_value_203 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_203 = Py_None;
        tmp_fromlist_value_203 = mod_consts[706];
        tmp_level_value_203 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 394;
        tmp_assign_source_351 = IMPORT_MODULE5(tmp_name_value_203, tmp_globals_arg_value_203, tmp_locals_arg_value_203, tmp_fromlist_value_203, tmp_level_value_203);
        if (tmp_assign_source_351 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 394;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_55__module == NULL);
        tmp_import_from_55__module = tmp_assign_source_351;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_352;
        PyObject *tmp_import_name_from_293;
        CHECK_OBJECT(tmp_import_from_55__module);
        tmp_import_name_from_293 = tmp_import_from_55__module;
        if (PyModule_Check(tmp_import_name_from_293)) {
            tmp_assign_source_352 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_293,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[707],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_352 = IMPORT_NAME(tmp_import_name_from_293, mod_consts[707]);
        }

        if (tmp_assign_source_352 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 394;

            goto try_except_handler_55;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[707], tmp_assign_source_352);
    }
    {
        PyObject *tmp_assign_source_353;
        PyObject *tmp_import_name_from_294;
        CHECK_OBJECT(tmp_import_from_55__module);
        tmp_import_name_from_294 = tmp_import_from_55__module;
        if (PyModule_Check(tmp_import_name_from_294)) {
            tmp_assign_source_353 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_294,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[708],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_353 = IMPORT_NAME(tmp_import_name_from_294, mod_consts[708]);
        }

        if (tmp_assign_source_353 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 394;

            goto try_except_handler_55;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[708], tmp_assign_source_353);
    }
    goto try_end_55;
    // Exception handler code:
    try_except_handler_55:;
    exception_keeper_type_55 = exception_type;
    exception_keeper_value_55 = exception_value;
    exception_keeper_tb_55 = exception_tb;
    exception_keeper_lineno_55 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_55__module);
    Py_DECREF(tmp_import_from_55__module);
    tmp_import_from_55__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_55;
    exception_value = exception_keeper_value_55;
    exception_tb = exception_keeper_tb_55;
    exception_lineno = exception_keeper_lineno_55;

    goto frame_exception_exit_1;
    // End of try:
    try_end_55:;
    CHECK_OBJECT(tmp_import_from_55__module);
    Py_DECREF(tmp_import_from_55__module);
    tmp_import_from_55__module = NULL;
    {
        PyObject *tmp_assign_source_354;
        PyObject *tmp_import_name_from_295;
        PyObject *tmp_name_value_204;
        PyObject *tmp_globals_arg_value_204;
        PyObject *tmp_locals_arg_value_204;
        PyObject *tmp_fromlist_value_204;
        PyObject *tmp_level_value_204;
        tmp_name_value_204 = mod_consts[709];
        tmp_globals_arg_value_204 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_204 = Py_None;
        tmp_fromlist_value_204 = mod_consts[710];
        tmp_level_value_204 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 398;
        tmp_import_name_from_295 = IMPORT_MODULE5(tmp_name_value_204, tmp_globals_arg_value_204, tmp_locals_arg_value_204, tmp_fromlist_value_204, tmp_level_value_204);
        if (tmp_import_name_from_295 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 398;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_295)) {
            tmp_assign_source_354 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_295,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[711],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_354 = IMPORT_NAME(tmp_import_name_from_295, mod_consts[711]);
        }

        Py_DECREF(tmp_import_name_from_295);
        if (tmp_assign_source_354 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 398;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[711], tmp_assign_source_354);
    }
    {
        PyObject *tmp_assign_source_355;
        PyObject *tmp_import_name_from_296;
        PyObject *tmp_name_value_205;
        PyObject *tmp_globals_arg_value_205;
        PyObject *tmp_locals_arg_value_205;
        PyObject *tmp_fromlist_value_205;
        PyObject *tmp_level_value_205;
        tmp_name_value_205 = mod_consts[712];
        tmp_globals_arg_value_205 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_205 = Py_None;
        tmp_fromlist_value_205 = mod_consts[713];
        tmp_level_value_205 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 399;
        tmp_import_name_from_296 = IMPORT_MODULE5(tmp_name_value_205, tmp_globals_arg_value_205, tmp_locals_arg_value_205, tmp_fromlist_value_205, tmp_level_value_205);
        if (tmp_import_name_from_296 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 399;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_296)) {
            tmp_assign_source_355 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_296,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[714],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_355 = IMPORT_NAME(tmp_import_name_from_296, mod_consts[714]);
        }

        Py_DECREF(tmp_import_name_from_296);
        if (tmp_assign_source_355 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 399;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[714], tmp_assign_source_355);
    }
    {
        PyObject *tmp_assign_source_356;
        PyObject *tmp_import_name_from_297;
        PyObject *tmp_name_value_206;
        PyObject *tmp_globals_arg_value_206;
        PyObject *tmp_locals_arg_value_206;
        PyObject *tmp_fromlist_value_206;
        PyObject *tmp_level_value_206;
        tmp_name_value_206 = mod_consts[715];
        tmp_globals_arg_value_206 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_206 = Py_None;
        tmp_fromlist_value_206 = mod_consts[716];
        tmp_level_value_206 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 400;
        tmp_import_name_from_297 = IMPORT_MODULE5(tmp_name_value_206, tmp_globals_arg_value_206, tmp_locals_arg_value_206, tmp_fromlist_value_206, tmp_level_value_206);
        if (tmp_import_name_from_297 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 400;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_297)) {
            tmp_assign_source_356 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_297,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[717],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_356 = IMPORT_NAME(tmp_import_name_from_297, mod_consts[717]);
        }

        Py_DECREF(tmp_import_name_from_297);
        if (tmp_assign_source_356 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 400;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[717], tmp_assign_source_356);
    }
    {
        PyObject *tmp_assign_source_357;
        PyObject *tmp_name_value_207;
        PyObject *tmp_globals_arg_value_207;
        PyObject *tmp_locals_arg_value_207;
        PyObject *tmp_fromlist_value_207;
        PyObject *tmp_level_value_207;
        tmp_name_value_207 = mod_consts[718];
        tmp_globals_arg_value_207 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_207 = Py_None;
        tmp_fromlist_value_207 = mod_consts[719];
        tmp_level_value_207 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 401;
        tmp_assign_source_357 = IMPORT_MODULE5(tmp_name_value_207, tmp_globals_arg_value_207, tmp_locals_arg_value_207, tmp_fromlist_value_207, tmp_level_value_207);
        if (tmp_assign_source_357 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_56__module == NULL);
        tmp_import_from_56__module = tmp_assign_source_357;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_358;
        PyObject *tmp_import_name_from_298;
        CHECK_OBJECT(tmp_import_from_56__module);
        tmp_import_name_from_298 = tmp_import_from_56__module;
        if (PyModule_Check(tmp_import_name_from_298)) {
            tmp_assign_source_358 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_298,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[720],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_358 = IMPORT_NAME(tmp_import_name_from_298, mod_consts[720]);
        }

        if (tmp_assign_source_358 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;

            goto try_except_handler_56;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[720], tmp_assign_source_358);
    }
    {
        PyObject *tmp_assign_source_359;
        PyObject *tmp_import_name_from_299;
        CHECK_OBJECT(tmp_import_from_56__module);
        tmp_import_name_from_299 = tmp_import_from_56__module;
        if (PyModule_Check(tmp_import_name_from_299)) {
            tmp_assign_source_359 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_299,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[721],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_359 = IMPORT_NAME(tmp_import_name_from_299, mod_consts[721]);
        }

        if (tmp_assign_source_359 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;

            goto try_except_handler_56;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[721], tmp_assign_source_359);
    }
    {
        PyObject *tmp_assign_source_360;
        PyObject *tmp_import_name_from_300;
        CHECK_OBJECT(tmp_import_from_56__module);
        tmp_import_name_from_300 = tmp_import_from_56__module;
        if (PyModule_Check(tmp_import_name_from_300)) {
            tmp_assign_source_360 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_300,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[722],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_360 = IMPORT_NAME(tmp_import_name_from_300, mod_consts[722]);
        }

        if (tmp_assign_source_360 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;

            goto try_except_handler_56;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[722], tmp_assign_source_360);
    }
    {
        PyObject *tmp_assign_source_361;
        PyObject *tmp_import_name_from_301;
        CHECK_OBJECT(tmp_import_from_56__module);
        tmp_import_name_from_301 = tmp_import_from_56__module;
        if (PyModule_Check(tmp_import_name_from_301)) {
            tmp_assign_source_361 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_301,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[723],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_361 = IMPORT_NAME(tmp_import_name_from_301, mod_consts[723]);
        }

        if (tmp_assign_source_361 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;

            goto try_except_handler_56;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[723], tmp_assign_source_361);
    }
    {
        PyObject *tmp_assign_source_362;
        PyObject *tmp_import_name_from_302;
        CHECK_OBJECT(tmp_import_from_56__module);
        tmp_import_name_from_302 = tmp_import_from_56__module;
        if (PyModule_Check(tmp_import_name_from_302)) {
            tmp_assign_source_362 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_302,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[724],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_362 = IMPORT_NAME(tmp_import_name_from_302, mod_consts[724]);
        }

        if (tmp_assign_source_362 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;

            goto try_except_handler_56;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[724], tmp_assign_source_362);
    }
    {
        PyObject *tmp_assign_source_363;
        PyObject *tmp_import_name_from_303;
        CHECK_OBJECT(tmp_import_from_56__module);
        tmp_import_name_from_303 = tmp_import_from_56__module;
        if (PyModule_Check(tmp_import_name_from_303)) {
            tmp_assign_source_363 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_303,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[725],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_363 = IMPORT_NAME(tmp_import_name_from_303, mod_consts[725]);
        }

        if (tmp_assign_source_363 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;

            goto try_except_handler_56;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[725], tmp_assign_source_363);
    }
    {
        PyObject *tmp_assign_source_364;
        PyObject *tmp_import_name_from_304;
        CHECK_OBJECT(tmp_import_from_56__module);
        tmp_import_name_from_304 = tmp_import_from_56__module;
        if (PyModule_Check(tmp_import_name_from_304)) {
            tmp_assign_source_364 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_304,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[726],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_364 = IMPORT_NAME(tmp_import_name_from_304, mod_consts[726]);
        }

        if (tmp_assign_source_364 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;

            goto try_except_handler_56;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[726], tmp_assign_source_364);
    }
    {
        PyObject *tmp_assign_source_365;
        PyObject *tmp_import_name_from_305;
        CHECK_OBJECT(tmp_import_from_56__module);
        tmp_import_name_from_305 = tmp_import_from_56__module;
        if (PyModule_Check(tmp_import_name_from_305)) {
            tmp_assign_source_365 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_305,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[727],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_365 = IMPORT_NAME(tmp_import_name_from_305, mod_consts[727]);
        }

        if (tmp_assign_source_365 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 401;

            goto try_except_handler_56;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[727], tmp_assign_source_365);
    }
    goto try_end_56;
    // Exception handler code:
    try_except_handler_56:;
    exception_keeper_type_56 = exception_type;
    exception_keeper_value_56 = exception_value;
    exception_keeper_tb_56 = exception_tb;
    exception_keeper_lineno_56 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_56__module);
    Py_DECREF(tmp_import_from_56__module);
    tmp_import_from_56__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_56;
    exception_value = exception_keeper_value_56;
    exception_tb = exception_keeper_tb_56;
    exception_lineno = exception_keeper_lineno_56;

    goto frame_exception_exit_1;
    // End of try:
    try_end_56:;
    CHECK_OBJECT(tmp_import_from_56__module);
    Py_DECREF(tmp_import_from_56__module);
    tmp_import_from_56__module = NULL;
    {
        PyObject *tmp_assign_source_366;
        PyObject *tmp_import_name_from_306;
        PyObject *tmp_name_value_208;
        PyObject *tmp_globals_arg_value_208;
        PyObject *tmp_locals_arg_value_208;
        PyObject *tmp_fromlist_value_208;
        PyObject *tmp_level_value_208;
        tmp_name_value_208 = mod_consts[728];
        tmp_globals_arg_value_208 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_208 = Py_None;
        tmp_fromlist_value_208 = mod_consts[729];
        tmp_level_value_208 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 411;
        tmp_import_name_from_306 = IMPORT_MODULE5(tmp_name_value_208, tmp_globals_arg_value_208, tmp_locals_arg_value_208, tmp_fromlist_value_208, tmp_level_value_208);
        if (tmp_import_name_from_306 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 411;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_306)) {
            tmp_assign_source_366 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_306,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[730],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_366 = IMPORT_NAME(tmp_import_name_from_306, mod_consts[730]);
        }

        Py_DECREF(tmp_import_name_from_306);
        if (tmp_assign_source_366 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 411;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[730], tmp_assign_source_366);
    }
    {
        PyObject *tmp_assign_source_367;
        PyObject *tmp_import_name_from_307;
        PyObject *tmp_name_value_209;
        PyObject *tmp_globals_arg_value_209;
        PyObject *tmp_locals_arg_value_209;
        PyObject *tmp_fromlist_value_209;
        PyObject *tmp_level_value_209;
        tmp_name_value_209 = mod_consts[731];
        tmp_globals_arg_value_209 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_209 = Py_None;
        tmp_fromlist_value_209 = mod_consts[732];
        tmp_level_value_209 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 412;
        tmp_import_name_from_307 = IMPORT_MODULE5(tmp_name_value_209, tmp_globals_arg_value_209, tmp_locals_arg_value_209, tmp_fromlist_value_209, tmp_level_value_209);
        if (tmp_import_name_from_307 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 412;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_307)) {
            tmp_assign_source_367 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_307,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[733],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_367 = IMPORT_NAME(tmp_import_name_from_307, mod_consts[733]);
        }

        Py_DECREF(tmp_import_name_from_307);
        if (tmp_assign_source_367 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 412;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[733], tmp_assign_source_367);
    }
    {
        PyObject *tmp_assign_source_368;
        PyObject *tmp_import_name_from_308;
        PyObject *tmp_name_value_210;
        PyObject *tmp_globals_arg_value_210;
        PyObject *tmp_locals_arg_value_210;
        PyObject *tmp_fromlist_value_210;
        PyObject *tmp_level_value_210;
        tmp_name_value_210 = mod_consts[734];
        tmp_globals_arg_value_210 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_210 = Py_None;
        tmp_fromlist_value_210 = mod_consts[735];
        tmp_level_value_210 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 413;
        tmp_import_name_from_308 = IMPORT_MODULE5(tmp_name_value_210, tmp_globals_arg_value_210, tmp_locals_arg_value_210, tmp_fromlist_value_210, tmp_level_value_210);
        if (tmp_import_name_from_308 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 413;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_308)) {
            tmp_assign_source_368 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_308,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[736],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_368 = IMPORT_NAME(tmp_import_name_from_308, mod_consts[736]);
        }

        Py_DECREF(tmp_import_name_from_308);
        if (tmp_assign_source_368 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 413;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[736], tmp_assign_source_368);
    }
    {
        PyObject *tmp_assign_source_369;
        PyObject *tmp_name_value_211;
        PyObject *tmp_globals_arg_value_211;
        PyObject *tmp_locals_arg_value_211;
        PyObject *tmp_fromlist_value_211;
        PyObject *tmp_level_value_211;
        tmp_name_value_211 = mod_consts[737];
        tmp_globals_arg_value_211 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_211 = Py_None;
        tmp_fromlist_value_211 = mod_consts[738];
        tmp_level_value_211 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 414;
        tmp_assign_source_369 = IMPORT_MODULE5(tmp_name_value_211, tmp_globals_arg_value_211, tmp_locals_arg_value_211, tmp_fromlist_value_211, tmp_level_value_211);
        if (tmp_assign_source_369 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 414;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_57__module == NULL);
        tmp_import_from_57__module = tmp_assign_source_369;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_370;
        PyObject *tmp_import_name_from_309;
        CHECK_OBJECT(tmp_import_from_57__module);
        tmp_import_name_from_309 = tmp_import_from_57__module;
        if (PyModule_Check(tmp_import_name_from_309)) {
            tmp_assign_source_370 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_309,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[739],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_370 = IMPORT_NAME(tmp_import_name_from_309, mod_consts[739]);
        }

        if (tmp_assign_source_370 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 414;

            goto try_except_handler_57;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[739], tmp_assign_source_370);
    }
    {
        PyObject *tmp_assign_source_371;
        PyObject *tmp_import_name_from_310;
        CHECK_OBJECT(tmp_import_from_57__module);
        tmp_import_name_from_310 = tmp_import_from_57__module;
        if (PyModule_Check(tmp_import_name_from_310)) {
            tmp_assign_source_371 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_310,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[740],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_371 = IMPORT_NAME(tmp_import_name_from_310, mod_consts[740]);
        }

        if (tmp_assign_source_371 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 414;

            goto try_except_handler_57;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[740], tmp_assign_source_371);
    }
    {
        PyObject *tmp_assign_source_372;
        PyObject *tmp_import_name_from_311;
        CHECK_OBJECT(tmp_import_from_57__module);
        tmp_import_name_from_311 = tmp_import_from_57__module;
        if (PyModule_Check(tmp_import_name_from_311)) {
            tmp_assign_source_372 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_311,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[741],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_372 = IMPORT_NAME(tmp_import_name_from_311, mod_consts[741]);
        }

        if (tmp_assign_source_372 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 414;

            goto try_except_handler_57;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[741], tmp_assign_source_372);
    }
    goto try_end_57;
    // Exception handler code:
    try_except_handler_57:;
    exception_keeper_type_57 = exception_type;
    exception_keeper_value_57 = exception_value;
    exception_keeper_tb_57 = exception_tb;
    exception_keeper_lineno_57 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_57__module);
    Py_DECREF(tmp_import_from_57__module);
    tmp_import_from_57__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_57;
    exception_value = exception_keeper_value_57;
    exception_tb = exception_keeper_tb_57;
    exception_lineno = exception_keeper_lineno_57;

    goto frame_exception_exit_1;
    // End of try:
    try_end_57:;
    CHECK_OBJECT(tmp_import_from_57__module);
    Py_DECREF(tmp_import_from_57__module);
    tmp_import_from_57__module = NULL;
    {
        PyObject *tmp_assign_source_373;
        PyObject *tmp_import_name_from_312;
        PyObject *tmp_name_value_212;
        PyObject *tmp_globals_arg_value_212;
        PyObject *tmp_locals_arg_value_212;
        PyObject *tmp_fromlist_value_212;
        PyObject *tmp_level_value_212;
        tmp_name_value_212 = mod_consts[742];
        tmp_globals_arg_value_212 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_212 = Py_None;
        tmp_fromlist_value_212 = mod_consts[743];
        tmp_level_value_212 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 419;
        tmp_import_name_from_312 = IMPORT_MODULE5(tmp_name_value_212, tmp_globals_arg_value_212, tmp_locals_arg_value_212, tmp_fromlist_value_212, tmp_level_value_212);
        if (tmp_import_name_from_312 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 419;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_312)) {
            tmp_assign_source_373 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_312,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[744],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_373 = IMPORT_NAME(tmp_import_name_from_312, mod_consts[744]);
        }

        Py_DECREF(tmp_import_name_from_312);
        if (tmp_assign_source_373 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 419;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[744], tmp_assign_source_373);
    }
    {
        PyObject *tmp_assign_source_374;
        PyObject *tmp_import_name_from_313;
        PyObject *tmp_name_value_213;
        PyObject *tmp_globals_arg_value_213;
        PyObject *tmp_locals_arg_value_213;
        PyObject *tmp_fromlist_value_213;
        PyObject *tmp_level_value_213;
        tmp_name_value_213 = mod_consts[745];
        tmp_globals_arg_value_213 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_213 = Py_None;
        tmp_fromlist_value_213 = mod_consts[746];
        tmp_level_value_213 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 420;
        tmp_import_name_from_313 = IMPORT_MODULE5(tmp_name_value_213, tmp_globals_arg_value_213, tmp_locals_arg_value_213, tmp_fromlist_value_213, tmp_level_value_213);
        if (tmp_import_name_from_313 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 420;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_313)) {
            tmp_assign_source_374 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_313,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[747],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_374 = IMPORT_NAME(tmp_import_name_from_313, mod_consts[747]);
        }

        Py_DECREF(tmp_import_name_from_313);
        if (tmp_assign_source_374 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 420;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[747], tmp_assign_source_374);
    }
    {
        PyObject *tmp_assign_source_375;
        PyObject *tmp_import_name_from_314;
        PyObject *tmp_name_value_214;
        PyObject *tmp_globals_arg_value_214;
        PyObject *tmp_locals_arg_value_214;
        PyObject *tmp_fromlist_value_214;
        PyObject *tmp_level_value_214;
        tmp_name_value_214 = mod_consts[748];
        tmp_globals_arg_value_214 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_214 = Py_None;
        tmp_fromlist_value_214 = mod_consts[749];
        tmp_level_value_214 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 421;
        tmp_import_name_from_314 = IMPORT_MODULE5(tmp_name_value_214, tmp_globals_arg_value_214, tmp_locals_arg_value_214, tmp_fromlist_value_214, tmp_level_value_214);
        if (tmp_import_name_from_314 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 421;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_314)) {
            tmp_assign_source_375 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_314,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[750],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_375 = IMPORT_NAME(tmp_import_name_from_314, mod_consts[750]);
        }

        Py_DECREF(tmp_import_name_from_314);
        if (tmp_assign_source_375 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 421;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[750], tmp_assign_source_375);
    }
    {
        PyObject *tmp_assign_source_376;
        PyObject *tmp_import_name_from_315;
        PyObject *tmp_name_value_215;
        PyObject *tmp_globals_arg_value_215;
        PyObject *tmp_locals_arg_value_215;
        PyObject *tmp_fromlist_value_215;
        PyObject *tmp_level_value_215;
        tmp_name_value_215 = mod_consts[751];
        tmp_globals_arg_value_215 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_215 = Py_None;
        tmp_fromlist_value_215 = mod_consts[752];
        tmp_level_value_215 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 422;
        tmp_import_name_from_315 = IMPORT_MODULE5(tmp_name_value_215, tmp_globals_arg_value_215, tmp_locals_arg_value_215, tmp_fromlist_value_215, tmp_level_value_215);
        if (tmp_import_name_from_315 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 422;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_315)) {
            tmp_assign_source_376 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_315,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[753],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_376 = IMPORT_NAME(tmp_import_name_from_315, mod_consts[753]);
        }

        Py_DECREF(tmp_import_name_from_315);
        if (tmp_assign_source_376 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 422;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[753], tmp_assign_source_376);
    }
    {
        PyObject *tmp_assign_source_377;
        PyObject *tmp_import_name_from_316;
        PyObject *tmp_name_value_216;
        PyObject *tmp_globals_arg_value_216;
        PyObject *tmp_locals_arg_value_216;
        PyObject *tmp_fromlist_value_216;
        PyObject *tmp_level_value_216;
        tmp_name_value_216 = mod_consts[754];
        tmp_globals_arg_value_216 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_216 = Py_None;
        tmp_fromlist_value_216 = mod_consts[755];
        tmp_level_value_216 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 423;
        tmp_import_name_from_316 = IMPORT_MODULE5(tmp_name_value_216, tmp_globals_arg_value_216, tmp_locals_arg_value_216, tmp_fromlist_value_216, tmp_level_value_216);
        if (tmp_import_name_from_316 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 423;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_316)) {
            tmp_assign_source_377 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_316,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[756],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_377 = IMPORT_NAME(tmp_import_name_from_316, mod_consts[756]);
        }

        Py_DECREF(tmp_import_name_from_316);
        if (tmp_assign_source_377 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 423;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[756], tmp_assign_source_377);
    }
    {
        PyObject *tmp_assign_source_378;
        PyObject *tmp_import_name_from_317;
        PyObject *tmp_name_value_217;
        PyObject *tmp_globals_arg_value_217;
        PyObject *tmp_locals_arg_value_217;
        PyObject *tmp_fromlist_value_217;
        PyObject *tmp_level_value_217;
        tmp_name_value_217 = mod_consts[757];
        tmp_globals_arg_value_217 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_217 = Py_None;
        tmp_fromlist_value_217 = mod_consts[758];
        tmp_level_value_217 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 424;
        tmp_import_name_from_317 = IMPORT_MODULE5(tmp_name_value_217, tmp_globals_arg_value_217, tmp_locals_arg_value_217, tmp_fromlist_value_217, tmp_level_value_217);
        if (tmp_import_name_from_317 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 424;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_317)) {
            tmp_assign_source_378 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_317,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[759],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_378 = IMPORT_NAME(tmp_import_name_from_317, mod_consts[759]);
        }

        Py_DECREF(tmp_import_name_from_317);
        if (tmp_assign_source_378 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 424;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[759], tmp_assign_source_378);
    }
    {
        PyObject *tmp_assign_source_379;
        PyObject *tmp_import_name_from_318;
        PyObject *tmp_name_value_218;
        PyObject *tmp_globals_arg_value_218;
        PyObject *tmp_locals_arg_value_218;
        PyObject *tmp_fromlist_value_218;
        PyObject *tmp_level_value_218;
        tmp_name_value_218 = mod_consts[760];
        tmp_globals_arg_value_218 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_218 = Py_None;
        tmp_fromlist_value_218 = mod_consts[761];
        tmp_level_value_218 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 425;
        tmp_import_name_from_318 = IMPORT_MODULE5(tmp_name_value_218, tmp_globals_arg_value_218, tmp_locals_arg_value_218, tmp_fromlist_value_218, tmp_level_value_218);
        if (tmp_import_name_from_318 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 425;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_318)) {
            tmp_assign_source_379 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_318,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[762],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_379 = IMPORT_NAME(tmp_import_name_from_318, mod_consts[762]);
        }

        Py_DECREF(tmp_import_name_from_318);
        if (tmp_assign_source_379 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 425;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[762], tmp_assign_source_379);
    }
    {
        PyObject *tmp_assign_source_380;
        PyObject *tmp_import_name_from_319;
        PyObject *tmp_name_value_219;
        PyObject *tmp_globals_arg_value_219;
        PyObject *tmp_locals_arg_value_219;
        PyObject *tmp_fromlist_value_219;
        PyObject *tmp_level_value_219;
        tmp_name_value_219 = mod_consts[763];
        tmp_globals_arg_value_219 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_219 = Py_None;
        tmp_fromlist_value_219 = mod_consts[764];
        tmp_level_value_219 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 426;
        tmp_import_name_from_319 = IMPORT_MODULE5(tmp_name_value_219, tmp_globals_arg_value_219, tmp_locals_arg_value_219, tmp_fromlist_value_219, tmp_level_value_219);
        if (tmp_import_name_from_319 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 426;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_319)) {
            tmp_assign_source_380 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_319,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[765],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_380 = IMPORT_NAME(tmp_import_name_from_319, mod_consts[765]);
        }

        Py_DECREF(tmp_import_name_from_319);
        if (tmp_assign_source_380 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 426;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[765], tmp_assign_source_380);
    }
    {
        PyObject *tmp_assign_source_381;
        PyObject *tmp_import_name_from_320;
        PyObject *tmp_name_value_220;
        PyObject *tmp_globals_arg_value_220;
        PyObject *tmp_locals_arg_value_220;
        PyObject *tmp_fromlist_value_220;
        PyObject *tmp_level_value_220;
        tmp_name_value_220 = mod_consts[766];
        tmp_globals_arg_value_220 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_220 = Py_None;
        tmp_fromlist_value_220 = mod_consts[767];
        tmp_level_value_220 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 427;
        tmp_import_name_from_320 = IMPORT_MODULE5(tmp_name_value_220, tmp_globals_arg_value_220, tmp_locals_arg_value_220, tmp_fromlist_value_220, tmp_level_value_220);
        if (tmp_import_name_from_320 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 427;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_320)) {
            tmp_assign_source_381 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_320,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[768],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_381 = IMPORT_NAME(tmp_import_name_from_320, mod_consts[768]);
        }

        Py_DECREF(tmp_import_name_from_320);
        if (tmp_assign_source_381 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 427;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[768], tmp_assign_source_381);
    }
    {
        PyObject *tmp_assign_source_382;
        PyObject *tmp_import_name_from_321;
        PyObject *tmp_name_value_221;
        PyObject *tmp_globals_arg_value_221;
        PyObject *tmp_locals_arg_value_221;
        PyObject *tmp_fromlist_value_221;
        PyObject *tmp_level_value_221;
        tmp_name_value_221 = mod_consts[769];
        tmp_globals_arg_value_221 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_221 = Py_None;
        tmp_fromlist_value_221 = mod_consts[770];
        tmp_level_value_221 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 428;
        tmp_import_name_from_321 = IMPORT_MODULE5(tmp_name_value_221, tmp_globals_arg_value_221, tmp_locals_arg_value_221, tmp_fromlist_value_221, tmp_level_value_221);
        if (tmp_import_name_from_321 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 428;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_321)) {
            tmp_assign_source_382 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_321,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[771],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_382 = IMPORT_NAME(tmp_import_name_from_321, mod_consts[771]);
        }

        Py_DECREF(tmp_import_name_from_321);
        if (tmp_assign_source_382 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 428;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[771], tmp_assign_source_382);
    }
    {
        PyObject *tmp_assign_source_383;
        PyObject *tmp_import_name_from_322;
        PyObject *tmp_name_value_222;
        PyObject *tmp_globals_arg_value_222;
        PyObject *tmp_locals_arg_value_222;
        PyObject *tmp_fromlist_value_222;
        PyObject *tmp_level_value_222;
        tmp_name_value_222 = mod_consts[772];
        tmp_globals_arg_value_222 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_222 = Py_None;
        tmp_fromlist_value_222 = mod_consts[773];
        tmp_level_value_222 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 429;
        tmp_import_name_from_322 = IMPORT_MODULE5(tmp_name_value_222, tmp_globals_arg_value_222, tmp_locals_arg_value_222, tmp_fromlist_value_222, tmp_level_value_222);
        if (tmp_import_name_from_322 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 429;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_322)) {
            tmp_assign_source_383 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_322,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[774],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_383 = IMPORT_NAME(tmp_import_name_from_322, mod_consts[774]);
        }

        Py_DECREF(tmp_import_name_from_322);
        if (tmp_assign_source_383 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 429;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[774], tmp_assign_source_383);
    }
    {
        PyObject *tmp_assign_source_384;
        PyObject *tmp_import_name_from_323;
        PyObject *tmp_name_value_223;
        PyObject *tmp_globals_arg_value_223;
        PyObject *tmp_locals_arg_value_223;
        PyObject *tmp_fromlist_value_223;
        PyObject *tmp_level_value_223;
        tmp_name_value_223 = mod_consts[775];
        tmp_globals_arg_value_223 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_223 = Py_None;
        tmp_fromlist_value_223 = mod_consts[776];
        tmp_level_value_223 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 430;
        tmp_import_name_from_323 = IMPORT_MODULE5(tmp_name_value_223, tmp_globals_arg_value_223, tmp_locals_arg_value_223, tmp_fromlist_value_223, tmp_level_value_223);
        if (tmp_import_name_from_323 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 430;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_323)) {
            tmp_assign_source_384 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_323,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[777],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_384 = IMPORT_NAME(tmp_import_name_from_323, mod_consts[777]);
        }

        Py_DECREF(tmp_import_name_from_323);
        if (tmp_assign_source_384 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 430;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[777], tmp_assign_source_384);
    }
    {
        PyObject *tmp_assign_source_385;
        PyObject *tmp_import_name_from_324;
        PyObject *tmp_name_value_224;
        PyObject *tmp_globals_arg_value_224;
        PyObject *tmp_locals_arg_value_224;
        PyObject *tmp_fromlist_value_224;
        PyObject *tmp_level_value_224;
        tmp_name_value_224 = mod_consts[778];
        tmp_globals_arg_value_224 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_224 = Py_None;
        tmp_fromlist_value_224 = mod_consts[779];
        tmp_level_value_224 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 431;
        tmp_import_name_from_324 = IMPORT_MODULE5(tmp_name_value_224, tmp_globals_arg_value_224, tmp_locals_arg_value_224, tmp_fromlist_value_224, tmp_level_value_224);
        if (tmp_import_name_from_324 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 431;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_324)) {
            tmp_assign_source_385 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_324,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[780],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_385 = IMPORT_NAME(tmp_import_name_from_324, mod_consts[780]);
        }

        Py_DECREF(tmp_import_name_from_324);
        if (tmp_assign_source_385 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 431;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[780], tmp_assign_source_385);
    }
    {
        PyObject *tmp_assign_source_386;
        PyObject *tmp_import_name_from_325;
        PyObject *tmp_name_value_225;
        PyObject *tmp_globals_arg_value_225;
        PyObject *tmp_locals_arg_value_225;
        PyObject *tmp_fromlist_value_225;
        PyObject *tmp_level_value_225;
        tmp_name_value_225 = mod_consts[781];
        tmp_globals_arg_value_225 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_225 = Py_None;
        tmp_fromlist_value_225 = mod_consts[782];
        tmp_level_value_225 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 432;
        tmp_import_name_from_325 = IMPORT_MODULE5(tmp_name_value_225, tmp_globals_arg_value_225, tmp_locals_arg_value_225, tmp_fromlist_value_225, tmp_level_value_225);
        if (tmp_import_name_from_325 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 432;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_325)) {
            tmp_assign_source_386 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_325,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[783],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_386 = IMPORT_NAME(tmp_import_name_from_325, mod_consts[783]);
        }

        Py_DECREF(tmp_import_name_from_325);
        if (tmp_assign_source_386 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 432;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[783], tmp_assign_source_386);
    }
    {
        PyObject *tmp_assign_source_387;
        PyObject *tmp_import_name_from_326;
        PyObject *tmp_name_value_226;
        PyObject *tmp_globals_arg_value_226;
        PyObject *tmp_locals_arg_value_226;
        PyObject *tmp_fromlist_value_226;
        PyObject *tmp_level_value_226;
        tmp_name_value_226 = mod_consts[784];
        tmp_globals_arg_value_226 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_226 = Py_None;
        tmp_fromlist_value_226 = mod_consts[785];
        tmp_level_value_226 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 433;
        tmp_import_name_from_326 = IMPORT_MODULE5(tmp_name_value_226, tmp_globals_arg_value_226, tmp_locals_arg_value_226, tmp_fromlist_value_226, tmp_level_value_226);
        if (tmp_import_name_from_326 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 433;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_326)) {
            tmp_assign_source_387 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_326,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[786],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_387 = IMPORT_NAME(tmp_import_name_from_326, mod_consts[786]);
        }

        Py_DECREF(tmp_import_name_from_326);
        if (tmp_assign_source_387 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 433;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[786], tmp_assign_source_387);
    }
    {
        PyObject *tmp_assign_source_388;
        PyObject *tmp_import_name_from_327;
        PyObject *tmp_name_value_227;
        PyObject *tmp_globals_arg_value_227;
        PyObject *tmp_locals_arg_value_227;
        PyObject *tmp_fromlist_value_227;
        PyObject *tmp_level_value_227;
        tmp_name_value_227 = mod_consts[787];
        tmp_globals_arg_value_227 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_227 = Py_None;
        tmp_fromlist_value_227 = mod_consts[788];
        tmp_level_value_227 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 434;
        tmp_import_name_from_327 = IMPORT_MODULE5(tmp_name_value_227, tmp_globals_arg_value_227, tmp_locals_arg_value_227, tmp_fromlist_value_227, tmp_level_value_227);
        if (tmp_import_name_from_327 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 434;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_327)) {
            tmp_assign_source_388 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_327,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[789],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_388 = IMPORT_NAME(tmp_import_name_from_327, mod_consts[789]);
        }

        Py_DECREF(tmp_import_name_from_327);
        if (tmp_assign_source_388 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 434;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[789], tmp_assign_source_388);
    }
    {
        PyObject *tmp_assign_source_389;
        PyObject *tmp_import_name_from_328;
        PyObject *tmp_name_value_228;
        PyObject *tmp_globals_arg_value_228;
        PyObject *tmp_locals_arg_value_228;
        PyObject *tmp_fromlist_value_228;
        PyObject *tmp_level_value_228;
        tmp_name_value_228 = mod_consts[790];
        tmp_globals_arg_value_228 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_228 = Py_None;
        tmp_fromlist_value_228 = mod_consts[791];
        tmp_level_value_228 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 435;
        tmp_import_name_from_328 = IMPORT_MODULE5(tmp_name_value_228, tmp_globals_arg_value_228, tmp_locals_arg_value_228, tmp_fromlist_value_228, tmp_level_value_228);
        if (tmp_import_name_from_328 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 435;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_328)) {
            tmp_assign_source_389 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_328,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[792],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_389 = IMPORT_NAME(tmp_import_name_from_328, mod_consts[792]);
        }

        Py_DECREF(tmp_import_name_from_328);
        if (tmp_assign_source_389 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 435;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[792], tmp_assign_source_389);
    }
    {
        PyObject *tmp_assign_source_390;
        PyObject *tmp_name_value_229;
        PyObject *tmp_globals_arg_value_229;
        PyObject *tmp_locals_arg_value_229;
        PyObject *tmp_fromlist_value_229;
        PyObject *tmp_level_value_229;
        tmp_name_value_229 = mod_consts[793];
        tmp_globals_arg_value_229 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_229 = Py_None;
        tmp_fromlist_value_229 = mod_consts[794];
        tmp_level_value_229 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 436;
        tmp_assign_source_390 = IMPORT_MODULE5(tmp_name_value_229, tmp_globals_arg_value_229, tmp_locals_arg_value_229, tmp_fromlist_value_229, tmp_level_value_229);
        if (tmp_assign_source_390 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 436;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_58__module == NULL);
        tmp_import_from_58__module = tmp_assign_source_390;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_391;
        PyObject *tmp_import_name_from_329;
        CHECK_OBJECT(tmp_import_from_58__module);
        tmp_import_name_from_329 = tmp_import_from_58__module;
        if (PyModule_Check(tmp_import_name_from_329)) {
            tmp_assign_source_391 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_329,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[795],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_391 = IMPORT_NAME(tmp_import_name_from_329, mod_consts[795]);
        }

        if (tmp_assign_source_391 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 436;

            goto try_except_handler_58;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[795], tmp_assign_source_391);
    }
    {
        PyObject *tmp_assign_source_392;
        PyObject *tmp_import_name_from_330;
        CHECK_OBJECT(tmp_import_from_58__module);
        tmp_import_name_from_330 = tmp_import_from_58__module;
        if (PyModule_Check(tmp_import_name_from_330)) {
            tmp_assign_source_392 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_330,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[796],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_392 = IMPORT_NAME(tmp_import_name_from_330, mod_consts[796]);
        }

        if (tmp_assign_source_392 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 436;

            goto try_except_handler_58;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[796], tmp_assign_source_392);
    }
    goto try_end_58;
    // Exception handler code:
    try_except_handler_58:;
    exception_keeper_type_58 = exception_type;
    exception_keeper_value_58 = exception_value;
    exception_keeper_tb_58 = exception_tb;
    exception_keeper_lineno_58 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_58__module);
    Py_DECREF(tmp_import_from_58__module);
    tmp_import_from_58__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_58;
    exception_value = exception_keeper_value_58;
    exception_tb = exception_keeper_tb_58;
    exception_lineno = exception_keeper_lineno_58;

    goto frame_exception_exit_1;
    // End of try:
    try_end_58:;
    CHECK_OBJECT(tmp_import_from_58__module);
    Py_DECREF(tmp_import_from_58__module);
    tmp_import_from_58__module = NULL;
    {
        PyObject *tmp_assign_source_393;
        PyObject *tmp_import_name_from_331;
        PyObject *tmp_name_value_230;
        PyObject *tmp_globals_arg_value_230;
        PyObject *tmp_locals_arg_value_230;
        PyObject *tmp_fromlist_value_230;
        PyObject *tmp_level_value_230;
        tmp_name_value_230 = mod_consts[797];
        tmp_globals_arg_value_230 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_230 = Py_None;
        tmp_fromlist_value_230 = mod_consts[798];
        tmp_level_value_230 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 440;
        tmp_import_name_from_331 = IMPORT_MODULE5(tmp_name_value_230, tmp_globals_arg_value_230, tmp_locals_arg_value_230, tmp_fromlist_value_230, tmp_level_value_230);
        if (tmp_import_name_from_331 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 440;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_331)) {
            tmp_assign_source_393 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_331,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[799],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_393 = IMPORT_NAME(tmp_import_name_from_331, mod_consts[799]);
        }

        Py_DECREF(tmp_import_name_from_331);
        if (tmp_assign_source_393 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 440;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[799], tmp_assign_source_393);
    }
    {
        PyObject *tmp_assign_source_394;
        PyObject *tmp_import_name_from_332;
        PyObject *tmp_name_value_231;
        PyObject *tmp_globals_arg_value_231;
        PyObject *tmp_locals_arg_value_231;
        PyObject *tmp_fromlist_value_231;
        PyObject *tmp_level_value_231;
        tmp_name_value_231 = mod_consts[800];
        tmp_globals_arg_value_231 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_231 = Py_None;
        tmp_fromlist_value_231 = mod_consts[801];
        tmp_level_value_231 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 441;
        tmp_import_name_from_332 = IMPORT_MODULE5(tmp_name_value_231, tmp_globals_arg_value_231, tmp_locals_arg_value_231, tmp_fromlist_value_231, tmp_level_value_231);
        if (tmp_import_name_from_332 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 441;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_332)) {
            tmp_assign_source_394 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_332,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[802],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_394 = IMPORT_NAME(tmp_import_name_from_332, mod_consts[802]);
        }

        Py_DECREF(tmp_import_name_from_332);
        if (tmp_assign_source_394 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 441;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[802], tmp_assign_source_394);
    }
    {
        PyObject *tmp_assign_source_395;
        PyObject *tmp_import_name_from_333;
        PyObject *tmp_name_value_232;
        PyObject *tmp_globals_arg_value_232;
        PyObject *tmp_locals_arg_value_232;
        PyObject *tmp_fromlist_value_232;
        PyObject *tmp_level_value_232;
        tmp_name_value_232 = mod_consts[803];
        tmp_globals_arg_value_232 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_232 = Py_None;
        tmp_fromlist_value_232 = mod_consts[804];
        tmp_level_value_232 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 442;
        tmp_import_name_from_333 = IMPORT_MODULE5(tmp_name_value_232, tmp_globals_arg_value_232, tmp_locals_arg_value_232, tmp_fromlist_value_232, tmp_level_value_232);
        if (tmp_import_name_from_333 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 442;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_333)) {
            tmp_assign_source_395 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_333,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[805],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_395 = IMPORT_NAME(tmp_import_name_from_333, mod_consts[805]);
        }

        Py_DECREF(tmp_import_name_from_333);
        if (tmp_assign_source_395 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 442;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[805], tmp_assign_source_395);
    }
    {
        PyObject *tmp_assign_source_396;
        PyObject *tmp_import_name_from_334;
        PyObject *tmp_name_value_233;
        PyObject *tmp_globals_arg_value_233;
        PyObject *tmp_locals_arg_value_233;
        PyObject *tmp_fromlist_value_233;
        PyObject *tmp_level_value_233;
        tmp_name_value_233 = mod_consts[806];
        tmp_globals_arg_value_233 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_233 = Py_None;
        tmp_fromlist_value_233 = mod_consts[807];
        tmp_level_value_233 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 443;
        tmp_import_name_from_334 = IMPORT_MODULE5(tmp_name_value_233, tmp_globals_arg_value_233, tmp_locals_arg_value_233, tmp_fromlist_value_233, tmp_level_value_233);
        if (tmp_import_name_from_334 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 443;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_334)) {
            tmp_assign_source_396 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_334,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[808],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_396 = IMPORT_NAME(tmp_import_name_from_334, mod_consts[808]);
        }

        Py_DECREF(tmp_import_name_from_334);
        if (tmp_assign_source_396 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 443;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[808], tmp_assign_source_396);
    }
    {
        PyObject *tmp_assign_source_397;
        PyObject *tmp_name_value_234;
        PyObject *tmp_globals_arg_value_234;
        PyObject *tmp_locals_arg_value_234;
        PyObject *tmp_fromlist_value_234;
        PyObject *tmp_level_value_234;
        tmp_name_value_234 = mod_consts[809];
        tmp_globals_arg_value_234 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_234 = Py_None;
        tmp_fromlist_value_234 = mod_consts[810];
        tmp_level_value_234 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 444;
        tmp_assign_source_397 = IMPORT_MODULE5(tmp_name_value_234, tmp_globals_arg_value_234, tmp_locals_arg_value_234, tmp_fromlist_value_234, tmp_level_value_234);
        if (tmp_assign_source_397 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 444;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_59__module == NULL);
        tmp_import_from_59__module = tmp_assign_source_397;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_398;
        PyObject *tmp_import_name_from_335;
        CHECK_OBJECT(tmp_import_from_59__module);
        tmp_import_name_from_335 = tmp_import_from_59__module;
        if (PyModule_Check(tmp_import_name_from_335)) {
            tmp_assign_source_398 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_335,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[811],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_398 = IMPORT_NAME(tmp_import_name_from_335, mod_consts[811]);
        }

        if (tmp_assign_source_398 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 444;

            goto try_except_handler_59;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[811], tmp_assign_source_398);
    }
    {
        PyObject *tmp_assign_source_399;
        PyObject *tmp_import_name_from_336;
        CHECK_OBJECT(tmp_import_from_59__module);
        tmp_import_name_from_336 = tmp_import_from_59__module;
        if (PyModule_Check(tmp_import_name_from_336)) {
            tmp_assign_source_399 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_336,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[812],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_399 = IMPORT_NAME(tmp_import_name_from_336, mod_consts[812]);
        }

        if (tmp_assign_source_399 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 444;

            goto try_except_handler_59;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[812], tmp_assign_source_399);
    }
    goto try_end_59;
    // Exception handler code:
    try_except_handler_59:;
    exception_keeper_type_59 = exception_type;
    exception_keeper_value_59 = exception_value;
    exception_keeper_tb_59 = exception_tb;
    exception_keeper_lineno_59 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_59__module);
    Py_DECREF(tmp_import_from_59__module);
    tmp_import_from_59__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_59;
    exception_value = exception_keeper_value_59;
    exception_tb = exception_keeper_tb_59;
    exception_lineno = exception_keeper_lineno_59;

    goto frame_exception_exit_1;
    // End of try:
    try_end_59:;
    CHECK_OBJECT(tmp_import_from_59__module);
    Py_DECREF(tmp_import_from_59__module);
    tmp_import_from_59__module = NULL;
    {
        PyObject *tmp_assign_source_400;
        PyObject *tmp_import_name_from_337;
        PyObject *tmp_name_value_235;
        PyObject *tmp_globals_arg_value_235;
        PyObject *tmp_locals_arg_value_235;
        PyObject *tmp_fromlist_value_235;
        PyObject *tmp_level_value_235;
        tmp_name_value_235 = mod_consts[813];
        tmp_globals_arg_value_235 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_235 = Py_None;
        tmp_fromlist_value_235 = mod_consts[814];
        tmp_level_value_235 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 448;
        tmp_import_name_from_337 = IMPORT_MODULE5(tmp_name_value_235, tmp_globals_arg_value_235, tmp_locals_arg_value_235, tmp_fromlist_value_235, tmp_level_value_235);
        if (tmp_import_name_from_337 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 448;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_337)) {
            tmp_assign_source_400 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_337,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[815],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_400 = IMPORT_NAME(tmp_import_name_from_337, mod_consts[815]);
        }

        Py_DECREF(tmp_import_name_from_337);
        if (tmp_assign_source_400 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 448;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[815], tmp_assign_source_400);
    }
    {
        PyObject *tmp_assign_source_401;
        PyObject *tmp_import_name_from_338;
        PyObject *tmp_name_value_236;
        PyObject *tmp_globals_arg_value_236;
        PyObject *tmp_locals_arg_value_236;
        PyObject *tmp_fromlist_value_236;
        PyObject *tmp_level_value_236;
        tmp_name_value_236 = mod_consts[816];
        tmp_globals_arg_value_236 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_236 = Py_None;
        tmp_fromlist_value_236 = mod_consts[817];
        tmp_level_value_236 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 449;
        tmp_import_name_from_338 = IMPORT_MODULE5(tmp_name_value_236, tmp_globals_arg_value_236, tmp_locals_arg_value_236, tmp_fromlist_value_236, tmp_level_value_236);
        if (tmp_import_name_from_338 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 449;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_338)) {
            tmp_assign_source_401 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_338,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[818],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_401 = IMPORT_NAME(tmp_import_name_from_338, mod_consts[818]);
        }

        Py_DECREF(tmp_import_name_from_338);
        if (tmp_assign_source_401 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 449;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[818], tmp_assign_source_401);
    }
    {
        PyObject *tmp_assign_source_402;
        PyObject *tmp_import_name_from_339;
        PyObject *tmp_name_value_237;
        PyObject *tmp_globals_arg_value_237;
        PyObject *tmp_locals_arg_value_237;
        PyObject *tmp_fromlist_value_237;
        PyObject *tmp_level_value_237;
        tmp_name_value_237 = mod_consts[819];
        tmp_globals_arg_value_237 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_237 = Py_None;
        tmp_fromlist_value_237 = mod_consts[820];
        tmp_level_value_237 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 450;
        tmp_import_name_from_339 = IMPORT_MODULE5(tmp_name_value_237, tmp_globals_arg_value_237, tmp_locals_arg_value_237, tmp_fromlist_value_237, tmp_level_value_237);
        if (tmp_import_name_from_339 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 450;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_339)) {
            tmp_assign_source_402 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_339,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[821],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_402 = IMPORT_NAME(tmp_import_name_from_339, mod_consts[821]);
        }

        Py_DECREF(tmp_import_name_from_339);
        if (tmp_assign_source_402 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 450;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[821], tmp_assign_source_402);
    }
    {
        PyObject *tmp_assign_source_403;
        PyObject *tmp_import_name_from_340;
        PyObject *tmp_name_value_238;
        PyObject *tmp_globals_arg_value_238;
        PyObject *tmp_locals_arg_value_238;
        PyObject *tmp_fromlist_value_238;
        PyObject *tmp_level_value_238;
        tmp_name_value_238 = mod_consts[822];
        tmp_globals_arg_value_238 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_238 = Py_None;
        tmp_fromlist_value_238 = mod_consts[823];
        tmp_level_value_238 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 451;
        tmp_import_name_from_340 = IMPORT_MODULE5(tmp_name_value_238, tmp_globals_arg_value_238, tmp_locals_arg_value_238, tmp_fromlist_value_238, tmp_level_value_238);
        if (tmp_import_name_from_340 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 451;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_340)) {
            tmp_assign_source_403 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_340,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[824],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_403 = IMPORT_NAME(tmp_import_name_from_340, mod_consts[824]);
        }

        Py_DECREF(tmp_import_name_from_340);
        if (tmp_assign_source_403 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 451;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[824], tmp_assign_source_403);
    }
    {
        PyObject *tmp_assign_source_404;
        PyObject *tmp_import_name_from_341;
        PyObject *tmp_name_value_239;
        PyObject *tmp_globals_arg_value_239;
        PyObject *tmp_locals_arg_value_239;
        PyObject *tmp_fromlist_value_239;
        PyObject *tmp_level_value_239;
        tmp_name_value_239 = mod_consts[825];
        tmp_globals_arg_value_239 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_239 = Py_None;
        tmp_fromlist_value_239 = mod_consts[826];
        tmp_level_value_239 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 452;
        tmp_import_name_from_341 = IMPORT_MODULE5(tmp_name_value_239, tmp_globals_arg_value_239, tmp_locals_arg_value_239, tmp_fromlist_value_239, tmp_level_value_239);
        if (tmp_import_name_from_341 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_341)) {
            tmp_assign_source_404 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_341,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[827],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_404 = IMPORT_NAME(tmp_import_name_from_341, mod_consts[827]);
        }

        Py_DECREF(tmp_import_name_from_341);
        if (tmp_assign_source_404 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 452;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[827], tmp_assign_source_404);
    }
    {
        PyObject *tmp_assign_source_405;
        PyObject *tmp_import_name_from_342;
        PyObject *tmp_name_value_240;
        PyObject *tmp_globals_arg_value_240;
        PyObject *tmp_locals_arg_value_240;
        PyObject *tmp_fromlist_value_240;
        PyObject *tmp_level_value_240;
        tmp_name_value_240 = mod_consts[828];
        tmp_globals_arg_value_240 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_240 = Py_None;
        tmp_fromlist_value_240 = mod_consts[829];
        tmp_level_value_240 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 453;
        tmp_import_name_from_342 = IMPORT_MODULE5(tmp_name_value_240, tmp_globals_arg_value_240, tmp_locals_arg_value_240, tmp_fromlist_value_240, tmp_level_value_240);
        if (tmp_import_name_from_342 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 453;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_342)) {
            tmp_assign_source_405 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_342,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[830],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_405 = IMPORT_NAME(tmp_import_name_from_342, mod_consts[830]);
        }

        Py_DECREF(tmp_import_name_from_342);
        if (tmp_assign_source_405 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 453;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[830], tmp_assign_source_405);
    }
    {
        PyObject *tmp_assign_source_406;
        PyObject *tmp_import_name_from_343;
        PyObject *tmp_name_value_241;
        PyObject *tmp_globals_arg_value_241;
        PyObject *tmp_locals_arg_value_241;
        PyObject *tmp_fromlist_value_241;
        PyObject *tmp_level_value_241;
        tmp_name_value_241 = mod_consts[831];
        tmp_globals_arg_value_241 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_241 = Py_None;
        tmp_fromlist_value_241 = mod_consts[832];
        tmp_level_value_241 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 454;
        tmp_import_name_from_343 = IMPORT_MODULE5(tmp_name_value_241, tmp_globals_arg_value_241, tmp_locals_arg_value_241, tmp_fromlist_value_241, tmp_level_value_241);
        if (tmp_import_name_from_343 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 454;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_343)) {
            tmp_assign_source_406 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_343,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[833],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_406 = IMPORT_NAME(tmp_import_name_from_343, mod_consts[833]);
        }

        Py_DECREF(tmp_import_name_from_343);
        if (tmp_assign_source_406 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 454;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[833], tmp_assign_source_406);
    }
    {
        PyObject *tmp_assign_source_407;
        PyObject *tmp_import_name_from_344;
        PyObject *tmp_name_value_242;
        PyObject *tmp_globals_arg_value_242;
        PyObject *tmp_locals_arg_value_242;
        PyObject *tmp_fromlist_value_242;
        PyObject *tmp_level_value_242;
        tmp_name_value_242 = mod_consts[834];
        tmp_globals_arg_value_242 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_242 = Py_None;
        tmp_fromlist_value_242 = mod_consts[835];
        tmp_level_value_242 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 455;
        tmp_import_name_from_344 = IMPORT_MODULE5(tmp_name_value_242, tmp_globals_arg_value_242, tmp_locals_arg_value_242, tmp_fromlist_value_242, tmp_level_value_242);
        if (tmp_import_name_from_344 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 455;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_344)) {
            tmp_assign_source_407 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_344,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[836],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_407 = IMPORT_NAME(tmp_import_name_from_344, mod_consts[836]);
        }

        Py_DECREF(tmp_import_name_from_344);
        if (tmp_assign_source_407 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 455;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[836], tmp_assign_source_407);
    }
    {
        PyObject *tmp_assign_source_408;
        PyObject *tmp_import_name_from_345;
        PyObject *tmp_name_value_243;
        PyObject *tmp_globals_arg_value_243;
        PyObject *tmp_locals_arg_value_243;
        PyObject *tmp_fromlist_value_243;
        PyObject *tmp_level_value_243;
        tmp_name_value_243 = mod_consts[837];
        tmp_globals_arg_value_243 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_243 = Py_None;
        tmp_fromlist_value_243 = mod_consts[838];
        tmp_level_value_243 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 456;
        tmp_import_name_from_345 = IMPORT_MODULE5(tmp_name_value_243, tmp_globals_arg_value_243, tmp_locals_arg_value_243, tmp_fromlist_value_243, tmp_level_value_243);
        if (tmp_import_name_from_345 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 456;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_345)) {
            tmp_assign_source_408 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_345,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[839],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_408 = IMPORT_NAME(tmp_import_name_from_345, mod_consts[839]);
        }

        Py_DECREF(tmp_import_name_from_345);
        if (tmp_assign_source_408 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 456;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[839], tmp_assign_source_408);
    }
    {
        PyObject *tmp_assign_source_409;
        PyObject *tmp_import_name_from_346;
        PyObject *tmp_name_value_244;
        PyObject *tmp_globals_arg_value_244;
        PyObject *tmp_locals_arg_value_244;
        PyObject *tmp_fromlist_value_244;
        PyObject *tmp_level_value_244;
        tmp_name_value_244 = mod_consts[840];
        tmp_globals_arg_value_244 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_244 = Py_None;
        tmp_fromlist_value_244 = mod_consts[841];
        tmp_level_value_244 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 457;
        tmp_import_name_from_346 = IMPORT_MODULE5(tmp_name_value_244, tmp_globals_arg_value_244, tmp_locals_arg_value_244, tmp_fromlist_value_244, tmp_level_value_244);
        if (tmp_import_name_from_346 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 457;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_346)) {
            tmp_assign_source_409 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_346,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[842],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_409 = IMPORT_NAME(tmp_import_name_from_346, mod_consts[842]);
        }

        Py_DECREF(tmp_import_name_from_346);
        if (tmp_assign_source_409 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 457;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[842], tmp_assign_source_409);
    }
    {
        PyObject *tmp_assign_source_410;
        PyObject *tmp_import_name_from_347;
        PyObject *tmp_name_value_245;
        PyObject *tmp_globals_arg_value_245;
        PyObject *tmp_locals_arg_value_245;
        PyObject *tmp_fromlist_value_245;
        PyObject *tmp_level_value_245;
        tmp_name_value_245 = mod_consts[843];
        tmp_globals_arg_value_245 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_245 = Py_None;
        tmp_fromlist_value_245 = mod_consts[844];
        tmp_level_value_245 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 458;
        tmp_import_name_from_347 = IMPORT_MODULE5(tmp_name_value_245, tmp_globals_arg_value_245, tmp_locals_arg_value_245, tmp_fromlist_value_245, tmp_level_value_245);
        if (tmp_import_name_from_347 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 458;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_347)) {
            tmp_assign_source_410 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_347,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[845],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_410 = IMPORT_NAME(tmp_import_name_from_347, mod_consts[845]);
        }

        Py_DECREF(tmp_import_name_from_347);
        if (tmp_assign_source_410 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 458;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[845], tmp_assign_source_410);
    }
    {
        PyObject *tmp_assign_source_411;
        PyObject *tmp_import_name_from_348;
        PyObject *tmp_name_value_246;
        PyObject *tmp_globals_arg_value_246;
        PyObject *tmp_locals_arg_value_246;
        PyObject *tmp_fromlist_value_246;
        PyObject *tmp_level_value_246;
        tmp_name_value_246 = mod_consts[846];
        tmp_globals_arg_value_246 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_246 = Py_None;
        tmp_fromlist_value_246 = mod_consts[847];
        tmp_level_value_246 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 459;
        tmp_import_name_from_348 = IMPORT_MODULE5(tmp_name_value_246, tmp_globals_arg_value_246, tmp_locals_arg_value_246, tmp_fromlist_value_246, tmp_level_value_246);
        if (tmp_import_name_from_348 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 459;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_348)) {
            tmp_assign_source_411 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_348,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[848],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_411 = IMPORT_NAME(tmp_import_name_from_348, mod_consts[848]);
        }

        Py_DECREF(tmp_import_name_from_348);
        if (tmp_assign_source_411 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 459;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[848], tmp_assign_source_411);
    }
    {
        PyObject *tmp_assign_source_412;
        PyObject *tmp_import_name_from_349;
        PyObject *tmp_name_value_247;
        PyObject *tmp_globals_arg_value_247;
        PyObject *tmp_locals_arg_value_247;
        PyObject *tmp_fromlist_value_247;
        PyObject *tmp_level_value_247;
        tmp_name_value_247 = mod_consts[849];
        tmp_globals_arg_value_247 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_247 = Py_None;
        tmp_fromlist_value_247 = mod_consts[850];
        tmp_level_value_247 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 460;
        tmp_import_name_from_349 = IMPORT_MODULE5(tmp_name_value_247, tmp_globals_arg_value_247, tmp_locals_arg_value_247, tmp_fromlist_value_247, tmp_level_value_247);
        if (tmp_import_name_from_349 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 460;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_349)) {
            tmp_assign_source_412 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_349,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[851],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_412 = IMPORT_NAME(tmp_import_name_from_349, mod_consts[851]);
        }

        Py_DECREF(tmp_import_name_from_349);
        if (tmp_assign_source_412 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 460;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[851], tmp_assign_source_412);
    }
    {
        PyObject *tmp_assign_source_413;
        PyObject *tmp_import_name_from_350;
        PyObject *tmp_name_value_248;
        PyObject *tmp_globals_arg_value_248;
        PyObject *tmp_locals_arg_value_248;
        PyObject *tmp_fromlist_value_248;
        PyObject *tmp_level_value_248;
        tmp_name_value_248 = mod_consts[852];
        tmp_globals_arg_value_248 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_248 = Py_None;
        tmp_fromlist_value_248 = mod_consts[853];
        tmp_level_value_248 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 461;
        tmp_import_name_from_350 = IMPORT_MODULE5(tmp_name_value_248, tmp_globals_arg_value_248, tmp_locals_arg_value_248, tmp_fromlist_value_248, tmp_level_value_248);
        if (tmp_import_name_from_350 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 461;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_350)) {
            tmp_assign_source_413 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_350,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[854],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_413 = IMPORT_NAME(tmp_import_name_from_350, mod_consts[854]);
        }

        Py_DECREF(tmp_import_name_from_350);
        if (tmp_assign_source_413 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 461;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[854], tmp_assign_source_413);
    }
    {
        PyObject *tmp_assign_source_414;
        PyObject *tmp_name_value_249;
        PyObject *tmp_globals_arg_value_249;
        PyObject *tmp_locals_arg_value_249;
        PyObject *tmp_fromlist_value_249;
        PyObject *tmp_level_value_249;
        tmp_name_value_249 = mod_consts[855];
        tmp_globals_arg_value_249 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_249 = Py_None;
        tmp_fromlist_value_249 = mod_consts[856];
        tmp_level_value_249 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 462;
        tmp_assign_source_414 = IMPORT_MODULE5(tmp_name_value_249, tmp_globals_arg_value_249, tmp_locals_arg_value_249, tmp_fromlist_value_249, tmp_level_value_249);
        if (tmp_assign_source_414 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 462;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_60__module == NULL);
        tmp_import_from_60__module = tmp_assign_source_414;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_415;
        PyObject *tmp_import_name_from_351;
        CHECK_OBJECT(tmp_import_from_60__module);
        tmp_import_name_from_351 = tmp_import_from_60__module;
        if (PyModule_Check(tmp_import_name_from_351)) {
            tmp_assign_source_415 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_351,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[857],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_415 = IMPORT_NAME(tmp_import_name_from_351, mod_consts[857]);
        }

        if (tmp_assign_source_415 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 462;

            goto try_except_handler_60;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[857], tmp_assign_source_415);
    }
    {
        PyObject *tmp_assign_source_416;
        PyObject *tmp_import_name_from_352;
        CHECK_OBJECT(tmp_import_from_60__module);
        tmp_import_name_from_352 = tmp_import_from_60__module;
        if (PyModule_Check(tmp_import_name_from_352)) {
            tmp_assign_source_416 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_352,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[858],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_416 = IMPORT_NAME(tmp_import_name_from_352, mod_consts[858]);
        }

        if (tmp_assign_source_416 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 462;

            goto try_except_handler_60;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[858], tmp_assign_source_416);
    }
    goto try_end_60;
    // Exception handler code:
    try_except_handler_60:;
    exception_keeper_type_60 = exception_type;
    exception_keeper_value_60 = exception_value;
    exception_keeper_tb_60 = exception_tb;
    exception_keeper_lineno_60 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_60__module);
    Py_DECREF(tmp_import_from_60__module);
    tmp_import_from_60__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_60;
    exception_value = exception_keeper_value_60;
    exception_tb = exception_keeper_tb_60;
    exception_lineno = exception_keeper_lineno_60;

    goto frame_exception_exit_1;
    // End of try:
    try_end_60:;
    CHECK_OBJECT(tmp_import_from_60__module);
    Py_DECREF(tmp_import_from_60__module);
    tmp_import_from_60__module = NULL;
    {
        PyObject *tmp_assign_source_417;
        PyObject *tmp_import_name_from_353;
        PyObject *tmp_name_value_250;
        PyObject *tmp_globals_arg_value_250;
        PyObject *tmp_locals_arg_value_250;
        PyObject *tmp_fromlist_value_250;
        PyObject *tmp_level_value_250;
        tmp_name_value_250 = mod_consts[859];
        tmp_globals_arg_value_250 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_250 = Py_None;
        tmp_fromlist_value_250 = mod_consts[860];
        tmp_level_value_250 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 463;
        tmp_import_name_from_353 = IMPORT_MODULE5(tmp_name_value_250, tmp_globals_arg_value_250, tmp_locals_arg_value_250, tmp_fromlist_value_250, tmp_level_value_250);
        if (tmp_import_name_from_353 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 463;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_353)) {
            tmp_assign_source_417 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_353,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[861],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_417 = IMPORT_NAME(tmp_import_name_from_353, mod_consts[861]);
        }

        Py_DECREF(tmp_import_name_from_353);
        if (tmp_assign_source_417 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 463;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[861], tmp_assign_source_417);
    }
    {
        PyObject *tmp_assign_source_418;
        PyObject *tmp_import_name_from_354;
        PyObject *tmp_name_value_251;
        PyObject *tmp_globals_arg_value_251;
        PyObject *tmp_locals_arg_value_251;
        PyObject *tmp_fromlist_value_251;
        PyObject *tmp_level_value_251;
        tmp_name_value_251 = mod_consts[862];
        tmp_globals_arg_value_251 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_251 = Py_None;
        tmp_fromlist_value_251 = mod_consts[863];
        tmp_level_value_251 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 464;
        tmp_import_name_from_354 = IMPORT_MODULE5(tmp_name_value_251, tmp_globals_arg_value_251, tmp_locals_arg_value_251, tmp_fromlist_value_251, tmp_level_value_251);
        if (tmp_import_name_from_354 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 464;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_354)) {
            tmp_assign_source_418 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_354,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[864],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_418 = IMPORT_NAME(tmp_import_name_from_354, mod_consts[864]);
        }

        Py_DECREF(tmp_import_name_from_354);
        if (tmp_assign_source_418 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 464;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[864], tmp_assign_source_418);
    }
    {
        PyObject *tmp_assign_source_419;
        PyObject *tmp_import_name_from_355;
        PyObject *tmp_name_value_252;
        PyObject *tmp_globals_arg_value_252;
        PyObject *tmp_locals_arg_value_252;
        PyObject *tmp_fromlist_value_252;
        PyObject *tmp_level_value_252;
        tmp_name_value_252 = mod_consts[865];
        tmp_globals_arg_value_252 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_252 = Py_None;
        tmp_fromlist_value_252 = mod_consts[866];
        tmp_level_value_252 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 465;
        tmp_import_name_from_355 = IMPORT_MODULE5(tmp_name_value_252, tmp_globals_arg_value_252, tmp_locals_arg_value_252, tmp_fromlist_value_252, tmp_level_value_252);
        if (tmp_import_name_from_355 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 465;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_355)) {
            tmp_assign_source_419 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_355,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[867],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_419 = IMPORT_NAME(tmp_import_name_from_355, mod_consts[867]);
        }

        Py_DECREF(tmp_import_name_from_355);
        if (tmp_assign_source_419 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 465;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[867], tmp_assign_source_419);
    }
    {
        PyObject *tmp_assign_source_420;
        PyObject *tmp_name_value_253;
        PyObject *tmp_globals_arg_value_253;
        PyObject *tmp_locals_arg_value_253;
        PyObject *tmp_fromlist_value_253;
        PyObject *tmp_level_value_253;
        tmp_name_value_253 = mod_consts[868];
        tmp_globals_arg_value_253 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_253 = Py_None;
        tmp_fromlist_value_253 = mod_consts[869];
        tmp_level_value_253 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 466;
        tmp_assign_source_420 = IMPORT_MODULE5(tmp_name_value_253, tmp_globals_arg_value_253, tmp_locals_arg_value_253, tmp_fromlist_value_253, tmp_level_value_253);
        if (tmp_assign_source_420 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 466;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_61__module == NULL);
        tmp_import_from_61__module = tmp_assign_source_420;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_421;
        PyObject *tmp_import_name_from_356;
        CHECK_OBJECT(tmp_import_from_61__module);
        tmp_import_name_from_356 = tmp_import_from_61__module;
        if (PyModule_Check(tmp_import_name_from_356)) {
            tmp_assign_source_421 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_356,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[870],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_421 = IMPORT_NAME(tmp_import_name_from_356, mod_consts[870]);
        }

        if (tmp_assign_source_421 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 466;

            goto try_except_handler_61;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[870], tmp_assign_source_421);
    }
    {
        PyObject *tmp_assign_source_422;
        PyObject *tmp_import_name_from_357;
        CHECK_OBJECT(tmp_import_from_61__module);
        tmp_import_name_from_357 = tmp_import_from_61__module;
        if (PyModule_Check(tmp_import_name_from_357)) {
            tmp_assign_source_422 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_357,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[871],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_422 = IMPORT_NAME(tmp_import_name_from_357, mod_consts[871]);
        }

        if (tmp_assign_source_422 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 466;

            goto try_except_handler_61;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[871], tmp_assign_source_422);
    }
    goto try_end_61;
    // Exception handler code:
    try_except_handler_61:;
    exception_keeper_type_61 = exception_type;
    exception_keeper_value_61 = exception_value;
    exception_keeper_tb_61 = exception_tb;
    exception_keeper_lineno_61 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_61__module);
    Py_DECREF(tmp_import_from_61__module);
    tmp_import_from_61__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_61;
    exception_value = exception_keeper_value_61;
    exception_tb = exception_keeper_tb_61;
    exception_lineno = exception_keeper_lineno_61;

    goto frame_exception_exit_1;
    // End of try:
    try_end_61:;
    CHECK_OBJECT(tmp_import_from_61__module);
    Py_DECREF(tmp_import_from_61__module);
    tmp_import_from_61__module = NULL;
    {
        PyObject *tmp_assign_source_423;
        PyObject *tmp_import_name_from_358;
        PyObject *tmp_name_value_254;
        PyObject *tmp_globals_arg_value_254;
        PyObject *tmp_locals_arg_value_254;
        PyObject *tmp_fromlist_value_254;
        PyObject *tmp_level_value_254;
        tmp_name_value_254 = mod_consts[872];
        tmp_globals_arg_value_254 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_254 = Py_None;
        tmp_fromlist_value_254 = mod_consts[873];
        tmp_level_value_254 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 470;
        tmp_import_name_from_358 = IMPORT_MODULE5(tmp_name_value_254, tmp_globals_arg_value_254, tmp_locals_arg_value_254, tmp_fromlist_value_254, tmp_level_value_254);
        if (tmp_import_name_from_358 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 470;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_358)) {
            tmp_assign_source_423 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_358,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[874],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_423 = IMPORT_NAME(tmp_import_name_from_358, mod_consts[874]);
        }

        Py_DECREF(tmp_import_name_from_358);
        if (tmp_assign_source_423 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 470;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[874], tmp_assign_source_423);
    }
    {
        PyObject *tmp_assign_source_424;
        PyObject *tmp_import_name_from_359;
        PyObject *tmp_name_value_255;
        PyObject *tmp_globals_arg_value_255;
        PyObject *tmp_locals_arg_value_255;
        PyObject *tmp_fromlist_value_255;
        PyObject *tmp_level_value_255;
        tmp_name_value_255 = mod_consts[875];
        tmp_globals_arg_value_255 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_255 = Py_None;
        tmp_fromlist_value_255 = mod_consts[876];
        tmp_level_value_255 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 471;
        tmp_import_name_from_359 = IMPORT_MODULE5(tmp_name_value_255, tmp_globals_arg_value_255, tmp_locals_arg_value_255, tmp_fromlist_value_255, tmp_level_value_255);
        if (tmp_import_name_from_359 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 471;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_359)) {
            tmp_assign_source_424 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_359,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[877],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_424 = IMPORT_NAME(tmp_import_name_from_359, mod_consts[877]);
        }

        Py_DECREF(tmp_import_name_from_359);
        if (tmp_assign_source_424 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 471;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[877], tmp_assign_source_424);
    }
    {
        PyObject *tmp_assign_source_425;
        PyObject *tmp_name_value_256;
        PyObject *tmp_globals_arg_value_256;
        PyObject *tmp_locals_arg_value_256;
        PyObject *tmp_fromlist_value_256;
        PyObject *tmp_level_value_256;
        tmp_name_value_256 = mod_consts[878];
        tmp_globals_arg_value_256 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_256 = Py_None;
        tmp_fromlist_value_256 = mod_consts[879];
        tmp_level_value_256 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 472;
        tmp_assign_source_425 = IMPORT_MODULE5(tmp_name_value_256, tmp_globals_arg_value_256, tmp_locals_arg_value_256, tmp_fromlist_value_256, tmp_level_value_256);
        if (tmp_assign_source_425 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 472;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_62__module == NULL);
        tmp_import_from_62__module = tmp_assign_source_425;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_426;
        PyObject *tmp_import_name_from_360;
        CHECK_OBJECT(tmp_import_from_62__module);
        tmp_import_name_from_360 = tmp_import_from_62__module;
        if (PyModule_Check(tmp_import_name_from_360)) {
            tmp_assign_source_426 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_360,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[880],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_426 = IMPORT_NAME(tmp_import_name_from_360, mod_consts[880]);
        }

        if (tmp_assign_source_426 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 472;

            goto try_except_handler_62;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[880], tmp_assign_source_426);
    }
    {
        PyObject *tmp_assign_source_427;
        PyObject *tmp_import_name_from_361;
        CHECK_OBJECT(tmp_import_from_62__module);
        tmp_import_name_from_361 = tmp_import_from_62__module;
        if (PyModule_Check(tmp_import_name_from_361)) {
            tmp_assign_source_427 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_361,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[881],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_427 = IMPORT_NAME(tmp_import_name_from_361, mod_consts[881]);
        }

        if (tmp_assign_source_427 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 472;

            goto try_except_handler_62;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[881], tmp_assign_source_427);
    }
    goto try_end_62;
    // Exception handler code:
    try_except_handler_62:;
    exception_keeper_type_62 = exception_type;
    exception_keeper_value_62 = exception_value;
    exception_keeper_tb_62 = exception_tb;
    exception_keeper_lineno_62 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_62__module);
    Py_DECREF(tmp_import_from_62__module);
    tmp_import_from_62__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_62;
    exception_value = exception_keeper_value_62;
    exception_tb = exception_keeper_tb_62;
    exception_lineno = exception_keeper_lineno_62;

    goto frame_exception_exit_1;
    // End of try:
    try_end_62:;
    CHECK_OBJECT(tmp_import_from_62__module);
    Py_DECREF(tmp_import_from_62__module);
    tmp_import_from_62__module = NULL;
    {
        PyObject *tmp_assign_source_428;
        PyObject *tmp_import_name_from_362;
        PyObject *tmp_name_value_257;
        PyObject *tmp_globals_arg_value_257;
        PyObject *tmp_locals_arg_value_257;
        PyObject *tmp_fromlist_value_257;
        PyObject *tmp_level_value_257;
        tmp_name_value_257 = mod_consts[882];
        tmp_globals_arg_value_257 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_257 = Py_None;
        tmp_fromlist_value_257 = mod_consts[883];
        tmp_level_value_257 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 476;
        tmp_import_name_from_362 = IMPORT_MODULE5(tmp_name_value_257, tmp_globals_arg_value_257, tmp_locals_arg_value_257, tmp_fromlist_value_257, tmp_level_value_257);
        if (tmp_import_name_from_362 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 476;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_362)) {
            tmp_assign_source_428 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_362,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[884],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_428 = IMPORT_NAME(tmp_import_name_from_362, mod_consts[884]);
        }

        Py_DECREF(tmp_import_name_from_362);
        if (tmp_assign_source_428 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 476;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[884], tmp_assign_source_428);
    }
    {
        PyObject *tmp_assign_source_429;
        PyObject *tmp_import_name_from_363;
        PyObject *tmp_name_value_258;
        PyObject *tmp_globals_arg_value_258;
        PyObject *tmp_locals_arg_value_258;
        PyObject *tmp_fromlist_value_258;
        PyObject *tmp_level_value_258;
        tmp_name_value_258 = mod_consts[885];
        tmp_globals_arg_value_258 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_258 = Py_None;
        tmp_fromlist_value_258 = mod_consts[886];
        tmp_level_value_258 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 477;
        tmp_import_name_from_363 = IMPORT_MODULE5(tmp_name_value_258, tmp_globals_arg_value_258, tmp_locals_arg_value_258, tmp_fromlist_value_258, tmp_level_value_258);
        if (tmp_import_name_from_363 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 477;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_363)) {
            tmp_assign_source_429 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_363,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[887],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_429 = IMPORT_NAME(tmp_import_name_from_363, mod_consts[887]);
        }

        Py_DECREF(tmp_import_name_from_363);
        if (tmp_assign_source_429 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 477;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[887], tmp_assign_source_429);
    }
    {
        PyObject *tmp_assign_source_430;
        PyObject *tmp_name_value_259;
        PyObject *tmp_globals_arg_value_259;
        PyObject *tmp_locals_arg_value_259;
        PyObject *tmp_fromlist_value_259;
        PyObject *tmp_level_value_259;
        tmp_name_value_259 = mod_consts[888];
        tmp_globals_arg_value_259 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_259 = Py_None;
        tmp_fromlist_value_259 = mod_consts[889];
        tmp_level_value_259 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 478;
        tmp_assign_source_430 = IMPORT_MODULE5(tmp_name_value_259, tmp_globals_arg_value_259, tmp_locals_arg_value_259, tmp_fromlist_value_259, tmp_level_value_259);
        if (tmp_assign_source_430 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 478;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_63__module == NULL);
        tmp_import_from_63__module = tmp_assign_source_430;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_431;
        PyObject *tmp_import_name_from_364;
        CHECK_OBJECT(tmp_import_from_63__module);
        tmp_import_name_from_364 = tmp_import_from_63__module;
        if (PyModule_Check(tmp_import_name_from_364)) {
            tmp_assign_source_431 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_364,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[890],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_431 = IMPORT_NAME(tmp_import_name_from_364, mod_consts[890]);
        }

        if (tmp_assign_source_431 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 478;

            goto try_except_handler_63;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[890], tmp_assign_source_431);
    }
    {
        PyObject *tmp_assign_source_432;
        PyObject *tmp_import_name_from_365;
        CHECK_OBJECT(tmp_import_from_63__module);
        tmp_import_name_from_365 = tmp_import_from_63__module;
        if (PyModule_Check(tmp_import_name_from_365)) {
            tmp_assign_source_432 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_365,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[891],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_432 = IMPORT_NAME(tmp_import_name_from_365, mod_consts[891]);
        }

        if (tmp_assign_source_432 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 478;

            goto try_except_handler_63;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[891], tmp_assign_source_432);
    }
    goto try_end_63;
    // Exception handler code:
    try_except_handler_63:;
    exception_keeper_type_63 = exception_type;
    exception_keeper_value_63 = exception_value;
    exception_keeper_tb_63 = exception_tb;
    exception_keeper_lineno_63 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_63__module);
    Py_DECREF(tmp_import_from_63__module);
    tmp_import_from_63__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_63;
    exception_value = exception_keeper_value_63;
    exception_tb = exception_keeper_tb_63;
    exception_lineno = exception_keeper_lineno_63;

    goto frame_exception_exit_1;
    // End of try:
    try_end_63:;
    CHECK_OBJECT(tmp_import_from_63__module);
    Py_DECREF(tmp_import_from_63__module);
    tmp_import_from_63__module = NULL;
    {
        PyObject *tmp_assign_source_433;
        PyObject *tmp_import_name_from_366;
        PyObject *tmp_name_value_260;
        PyObject *tmp_globals_arg_value_260;
        PyObject *tmp_locals_arg_value_260;
        PyObject *tmp_fromlist_value_260;
        PyObject *tmp_level_value_260;
        tmp_name_value_260 = mod_consts[892];
        tmp_globals_arg_value_260 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_260 = Py_None;
        tmp_fromlist_value_260 = mod_consts[893];
        tmp_level_value_260 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 482;
        tmp_import_name_from_366 = IMPORT_MODULE5(tmp_name_value_260, tmp_globals_arg_value_260, tmp_locals_arg_value_260, tmp_fromlist_value_260, tmp_level_value_260);
        if (tmp_import_name_from_366 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 482;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_366)) {
            tmp_assign_source_433 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_366,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[894],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_433 = IMPORT_NAME(tmp_import_name_from_366, mod_consts[894]);
        }

        Py_DECREF(tmp_import_name_from_366);
        if (tmp_assign_source_433 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 482;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[894], tmp_assign_source_433);
    }
    {
        PyObject *tmp_assign_source_434;
        PyObject *tmp_name_value_261;
        PyObject *tmp_globals_arg_value_261;
        PyObject *tmp_locals_arg_value_261;
        PyObject *tmp_fromlist_value_261;
        PyObject *tmp_level_value_261;
        tmp_name_value_261 = mod_consts[895];
        tmp_globals_arg_value_261 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_261 = Py_None;
        tmp_fromlist_value_261 = mod_consts[896];
        tmp_level_value_261 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 483;
        tmp_assign_source_434 = IMPORT_MODULE5(tmp_name_value_261, tmp_globals_arg_value_261, tmp_locals_arg_value_261, tmp_fromlist_value_261, tmp_level_value_261);
        if (tmp_assign_source_434 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 483;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_64__module == NULL);
        tmp_import_from_64__module = tmp_assign_source_434;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_435;
        PyObject *tmp_import_name_from_367;
        CHECK_OBJECT(tmp_import_from_64__module);
        tmp_import_name_from_367 = tmp_import_from_64__module;
        if (PyModule_Check(tmp_import_name_from_367)) {
            tmp_assign_source_435 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_367,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[897],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_435 = IMPORT_NAME(tmp_import_name_from_367, mod_consts[897]);
        }

        if (tmp_assign_source_435 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 483;

            goto try_except_handler_64;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[897], tmp_assign_source_435);
    }
    {
        PyObject *tmp_assign_source_436;
        PyObject *tmp_import_name_from_368;
        CHECK_OBJECT(tmp_import_from_64__module);
        tmp_import_name_from_368 = tmp_import_from_64__module;
        if (PyModule_Check(tmp_import_name_from_368)) {
            tmp_assign_source_436 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_368,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[898],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_436 = IMPORT_NAME(tmp_import_name_from_368, mod_consts[898]);
        }

        if (tmp_assign_source_436 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 483;

            goto try_except_handler_64;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[898], tmp_assign_source_436);
    }
    {
        PyObject *tmp_assign_source_437;
        PyObject *tmp_import_name_from_369;
        CHECK_OBJECT(tmp_import_from_64__module);
        tmp_import_name_from_369 = tmp_import_from_64__module;
        if (PyModule_Check(tmp_import_name_from_369)) {
            tmp_assign_source_437 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_369,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[899],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_437 = IMPORT_NAME(tmp_import_name_from_369, mod_consts[899]);
        }

        if (tmp_assign_source_437 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 483;

            goto try_except_handler_64;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[899], tmp_assign_source_437);
    }
    goto try_end_64;
    // Exception handler code:
    try_except_handler_64:;
    exception_keeper_type_64 = exception_type;
    exception_keeper_value_64 = exception_value;
    exception_keeper_tb_64 = exception_tb;
    exception_keeper_lineno_64 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_64__module);
    Py_DECREF(tmp_import_from_64__module);
    tmp_import_from_64__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_64;
    exception_value = exception_keeper_value_64;
    exception_tb = exception_keeper_tb_64;
    exception_lineno = exception_keeper_lineno_64;

    goto frame_exception_exit_1;
    // End of try:
    try_end_64:;
    CHECK_OBJECT(tmp_import_from_64__module);
    Py_DECREF(tmp_import_from_64__module);
    tmp_import_from_64__module = NULL;
    {
        PyObject *tmp_assign_source_438;
        PyObject *tmp_name_value_262;
        PyObject *tmp_globals_arg_value_262;
        PyObject *tmp_locals_arg_value_262;
        PyObject *tmp_fromlist_value_262;
        PyObject *tmp_level_value_262;
        tmp_name_value_262 = mod_consts[900];
        tmp_globals_arg_value_262 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_262 = Py_None;
        tmp_fromlist_value_262 = mod_consts[901];
        tmp_level_value_262 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 488;
        tmp_assign_source_438 = IMPORT_MODULE5(tmp_name_value_262, tmp_globals_arg_value_262, tmp_locals_arg_value_262, tmp_fromlist_value_262, tmp_level_value_262);
        if (tmp_assign_source_438 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 488;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_65__module == NULL);
        tmp_import_from_65__module = tmp_assign_source_438;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_439;
        PyObject *tmp_import_name_from_370;
        CHECK_OBJECT(tmp_import_from_65__module);
        tmp_import_name_from_370 = tmp_import_from_65__module;
        if (PyModule_Check(tmp_import_name_from_370)) {
            tmp_assign_source_439 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_370,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[902],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_439 = IMPORT_NAME(tmp_import_name_from_370, mod_consts[902]);
        }

        if (tmp_assign_source_439 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 488;

            goto try_except_handler_65;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[902], tmp_assign_source_439);
    }
    {
        PyObject *tmp_assign_source_440;
        PyObject *tmp_import_name_from_371;
        CHECK_OBJECT(tmp_import_from_65__module);
        tmp_import_name_from_371 = tmp_import_from_65__module;
        if (PyModule_Check(tmp_import_name_from_371)) {
            tmp_assign_source_440 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_371,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[903],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_440 = IMPORT_NAME(tmp_import_name_from_371, mod_consts[903]);
        }

        if (tmp_assign_source_440 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 488;

            goto try_except_handler_65;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[903], tmp_assign_source_440);
    }
    goto try_end_65;
    // Exception handler code:
    try_except_handler_65:;
    exception_keeper_type_65 = exception_type;
    exception_keeper_value_65 = exception_value;
    exception_keeper_tb_65 = exception_tb;
    exception_keeper_lineno_65 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_65__module);
    Py_DECREF(tmp_import_from_65__module);
    tmp_import_from_65__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_65;
    exception_value = exception_keeper_value_65;
    exception_tb = exception_keeper_tb_65;
    exception_lineno = exception_keeper_lineno_65;

    goto frame_exception_exit_1;
    // End of try:
    try_end_65:;
    CHECK_OBJECT(tmp_import_from_65__module);
    Py_DECREF(tmp_import_from_65__module);
    tmp_import_from_65__module = NULL;
    {
        PyObject *tmp_assign_source_441;
        PyObject *tmp_name_value_263;
        PyObject *tmp_globals_arg_value_263;
        PyObject *tmp_locals_arg_value_263;
        PyObject *tmp_fromlist_value_263;
        PyObject *tmp_level_value_263;
        tmp_name_value_263 = mod_consts[904];
        tmp_globals_arg_value_263 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_263 = Py_None;
        tmp_fromlist_value_263 = mod_consts[905];
        tmp_level_value_263 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 492;
        tmp_assign_source_441 = IMPORT_MODULE5(tmp_name_value_263, tmp_globals_arg_value_263, tmp_locals_arg_value_263, tmp_fromlist_value_263, tmp_level_value_263);
        if (tmp_assign_source_441 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 492;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_66__module == NULL);
        tmp_import_from_66__module = tmp_assign_source_441;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_442;
        PyObject *tmp_import_name_from_372;
        CHECK_OBJECT(tmp_import_from_66__module);
        tmp_import_name_from_372 = tmp_import_from_66__module;
        if (PyModule_Check(tmp_import_name_from_372)) {
            tmp_assign_source_442 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_372,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[906],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_442 = IMPORT_NAME(tmp_import_name_from_372, mod_consts[906]);
        }

        if (tmp_assign_source_442 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 492;

            goto try_except_handler_66;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[906], tmp_assign_source_442);
    }
    {
        PyObject *tmp_assign_source_443;
        PyObject *tmp_import_name_from_373;
        CHECK_OBJECT(tmp_import_from_66__module);
        tmp_import_name_from_373 = tmp_import_from_66__module;
        if (PyModule_Check(tmp_import_name_from_373)) {
            tmp_assign_source_443 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_373,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[907],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_443 = IMPORT_NAME(tmp_import_name_from_373, mod_consts[907]);
        }

        if (tmp_assign_source_443 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 492;

            goto try_except_handler_66;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[907], tmp_assign_source_443);
    }
    goto try_end_66;
    // Exception handler code:
    try_except_handler_66:;
    exception_keeper_type_66 = exception_type;
    exception_keeper_value_66 = exception_value;
    exception_keeper_tb_66 = exception_tb;
    exception_keeper_lineno_66 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_66__module);
    Py_DECREF(tmp_import_from_66__module);
    tmp_import_from_66__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_66;
    exception_value = exception_keeper_value_66;
    exception_tb = exception_keeper_tb_66;
    exception_lineno = exception_keeper_lineno_66;

    goto frame_exception_exit_1;
    // End of try:
    try_end_66:;
    CHECK_OBJECT(tmp_import_from_66__module);
    Py_DECREF(tmp_import_from_66__module);
    tmp_import_from_66__module = NULL;
    {
        PyObject *tmp_assign_source_444;
        PyObject *tmp_name_value_264;
        PyObject *tmp_globals_arg_value_264;
        PyObject *tmp_locals_arg_value_264;
        PyObject *tmp_fromlist_value_264;
        PyObject *tmp_level_value_264;
        tmp_name_value_264 = mod_consts[908];
        tmp_globals_arg_value_264 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_264 = Py_None;
        tmp_fromlist_value_264 = mod_consts[909];
        tmp_level_value_264 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 496;
        tmp_assign_source_444 = IMPORT_MODULE5(tmp_name_value_264, tmp_globals_arg_value_264, tmp_locals_arg_value_264, tmp_fromlist_value_264, tmp_level_value_264);
        if (tmp_assign_source_444 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 496;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_67__module == NULL);
        tmp_import_from_67__module = tmp_assign_source_444;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_445;
        PyObject *tmp_import_name_from_374;
        CHECK_OBJECT(tmp_import_from_67__module);
        tmp_import_name_from_374 = tmp_import_from_67__module;
        if (PyModule_Check(tmp_import_name_from_374)) {
            tmp_assign_source_445 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_374,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[910],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_445 = IMPORT_NAME(tmp_import_name_from_374, mod_consts[910]);
        }

        if (tmp_assign_source_445 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 496;

            goto try_except_handler_67;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[910], tmp_assign_source_445);
    }
    {
        PyObject *tmp_assign_source_446;
        PyObject *tmp_import_name_from_375;
        CHECK_OBJECT(tmp_import_from_67__module);
        tmp_import_name_from_375 = tmp_import_from_67__module;
        if (PyModule_Check(tmp_import_name_from_375)) {
            tmp_assign_source_446 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_375,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[911],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_446 = IMPORT_NAME(tmp_import_name_from_375, mod_consts[911]);
        }

        if (tmp_assign_source_446 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 496;

            goto try_except_handler_67;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[911], tmp_assign_source_446);
    }
    {
        PyObject *tmp_assign_source_447;
        PyObject *tmp_import_name_from_376;
        CHECK_OBJECT(tmp_import_from_67__module);
        tmp_import_name_from_376 = tmp_import_from_67__module;
        if (PyModule_Check(tmp_import_name_from_376)) {
            tmp_assign_source_447 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_376,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[912],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_447 = IMPORT_NAME(tmp_import_name_from_376, mod_consts[912]);
        }

        if (tmp_assign_source_447 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 496;

            goto try_except_handler_67;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[912], tmp_assign_source_447);
    }
    goto try_end_67;
    // Exception handler code:
    try_except_handler_67:;
    exception_keeper_type_67 = exception_type;
    exception_keeper_value_67 = exception_value;
    exception_keeper_tb_67 = exception_tb;
    exception_keeper_lineno_67 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_67__module);
    Py_DECREF(tmp_import_from_67__module);
    tmp_import_from_67__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_67;
    exception_value = exception_keeper_value_67;
    exception_tb = exception_keeper_tb_67;
    exception_lineno = exception_keeper_lineno_67;

    goto frame_exception_exit_1;
    // End of try:
    try_end_67:;
    CHECK_OBJECT(tmp_import_from_67__module);
    Py_DECREF(tmp_import_from_67__module);
    tmp_import_from_67__module = NULL;
    {
        PyObject *tmp_assign_source_448;
        PyObject *tmp_import_name_from_377;
        PyObject *tmp_name_value_265;
        PyObject *tmp_globals_arg_value_265;
        PyObject *tmp_locals_arg_value_265;
        PyObject *tmp_fromlist_value_265;
        PyObject *tmp_level_value_265;
        tmp_name_value_265 = mod_consts[913];
        tmp_globals_arg_value_265 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_265 = Py_None;
        tmp_fromlist_value_265 = mod_consts[914];
        tmp_level_value_265 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 501;
        tmp_import_name_from_377 = IMPORT_MODULE5(tmp_name_value_265, tmp_globals_arg_value_265, tmp_locals_arg_value_265, tmp_fromlist_value_265, tmp_level_value_265);
        if (tmp_import_name_from_377 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 501;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_377)) {
            tmp_assign_source_448 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_377,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[915],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_448 = IMPORT_NAME(tmp_import_name_from_377, mod_consts[915]);
        }

        Py_DECREF(tmp_import_name_from_377);
        if (tmp_assign_source_448 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 501;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[915], tmp_assign_source_448);
    }
    {
        PyObject *tmp_assign_source_449;
        PyObject *tmp_import_name_from_378;
        PyObject *tmp_name_value_266;
        PyObject *tmp_globals_arg_value_266;
        PyObject *tmp_locals_arg_value_266;
        PyObject *tmp_fromlist_value_266;
        PyObject *tmp_level_value_266;
        tmp_name_value_266 = mod_consts[916];
        tmp_globals_arg_value_266 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_266 = Py_None;
        tmp_fromlist_value_266 = mod_consts[917];
        tmp_level_value_266 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 502;
        tmp_import_name_from_378 = IMPORT_MODULE5(tmp_name_value_266, tmp_globals_arg_value_266, tmp_locals_arg_value_266, tmp_fromlist_value_266, tmp_level_value_266);
        if (tmp_import_name_from_378 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 502;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_378)) {
            tmp_assign_source_449 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_378,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[918],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_449 = IMPORT_NAME(tmp_import_name_from_378, mod_consts[918]);
        }

        Py_DECREF(tmp_import_name_from_378);
        if (tmp_assign_source_449 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 502;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[918], tmp_assign_source_449);
    }
    {
        PyObject *tmp_assign_source_450;
        PyObject *tmp_import_name_from_379;
        PyObject *tmp_name_value_267;
        PyObject *tmp_globals_arg_value_267;
        PyObject *tmp_locals_arg_value_267;
        PyObject *tmp_fromlist_value_267;
        PyObject *tmp_level_value_267;
        tmp_name_value_267 = mod_consts[919];
        tmp_globals_arg_value_267 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_267 = Py_None;
        tmp_fromlist_value_267 = mod_consts[920];
        tmp_level_value_267 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 503;
        tmp_import_name_from_379 = IMPORT_MODULE5(tmp_name_value_267, tmp_globals_arg_value_267, tmp_locals_arg_value_267, tmp_fromlist_value_267, tmp_level_value_267);
        if (tmp_import_name_from_379 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 503;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_379)) {
            tmp_assign_source_450 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_379,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[921],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_450 = IMPORT_NAME(tmp_import_name_from_379, mod_consts[921]);
        }

        Py_DECREF(tmp_import_name_from_379);
        if (tmp_assign_source_450 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 503;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[921], tmp_assign_source_450);
    }
    {
        PyObject *tmp_assign_source_451;
        PyObject *tmp_import_name_from_380;
        PyObject *tmp_name_value_268;
        PyObject *tmp_globals_arg_value_268;
        PyObject *tmp_locals_arg_value_268;
        PyObject *tmp_fromlist_value_268;
        PyObject *tmp_level_value_268;
        tmp_name_value_268 = mod_consts[922];
        tmp_globals_arg_value_268 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_268 = Py_None;
        tmp_fromlist_value_268 = mod_consts[923];
        tmp_level_value_268 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 504;
        tmp_import_name_from_380 = IMPORT_MODULE5(tmp_name_value_268, tmp_globals_arg_value_268, tmp_locals_arg_value_268, tmp_fromlist_value_268, tmp_level_value_268);
        if (tmp_import_name_from_380 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 504;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_380)) {
            tmp_assign_source_451 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_380,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[924],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_451 = IMPORT_NAME(tmp_import_name_from_380, mod_consts[924]);
        }

        Py_DECREF(tmp_import_name_from_380);
        if (tmp_assign_source_451 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 504;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[924], tmp_assign_source_451);
    }
    {
        PyObject *tmp_assign_source_452;
        PyObject *tmp_name_value_269;
        PyObject *tmp_globals_arg_value_269;
        PyObject *tmp_locals_arg_value_269;
        PyObject *tmp_fromlist_value_269;
        PyObject *tmp_level_value_269;
        tmp_name_value_269 = mod_consts[925];
        tmp_globals_arg_value_269 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_269 = Py_None;
        tmp_fromlist_value_269 = mod_consts[926];
        tmp_level_value_269 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 505;
        tmp_assign_source_452 = IMPORT_MODULE5(tmp_name_value_269, tmp_globals_arg_value_269, tmp_locals_arg_value_269, tmp_fromlist_value_269, tmp_level_value_269);
        if (tmp_assign_source_452 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 505;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_68__module == NULL);
        tmp_import_from_68__module = tmp_assign_source_452;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_453;
        PyObject *tmp_import_name_from_381;
        CHECK_OBJECT(tmp_import_from_68__module);
        tmp_import_name_from_381 = tmp_import_from_68__module;
        if (PyModule_Check(tmp_import_name_from_381)) {
            tmp_assign_source_453 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_381,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[927],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_453 = IMPORT_NAME(tmp_import_name_from_381, mod_consts[927]);
        }

        if (tmp_assign_source_453 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 505;

            goto try_except_handler_68;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[927], tmp_assign_source_453);
    }
    {
        PyObject *tmp_assign_source_454;
        PyObject *tmp_import_name_from_382;
        CHECK_OBJECT(tmp_import_from_68__module);
        tmp_import_name_from_382 = tmp_import_from_68__module;
        if (PyModule_Check(tmp_import_name_from_382)) {
            tmp_assign_source_454 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_382,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[928],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_454 = IMPORT_NAME(tmp_import_name_from_382, mod_consts[928]);
        }

        if (tmp_assign_source_454 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 505;

            goto try_except_handler_68;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[928], tmp_assign_source_454);
    }
    {
        PyObject *tmp_assign_source_455;
        PyObject *tmp_import_name_from_383;
        CHECK_OBJECT(tmp_import_from_68__module);
        tmp_import_name_from_383 = tmp_import_from_68__module;
        if (PyModule_Check(tmp_import_name_from_383)) {
            tmp_assign_source_455 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_383,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[929],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_455 = IMPORT_NAME(tmp_import_name_from_383, mod_consts[929]);
        }

        if (tmp_assign_source_455 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 505;

            goto try_except_handler_68;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[929], tmp_assign_source_455);
    }
    goto try_end_68;
    // Exception handler code:
    try_except_handler_68:;
    exception_keeper_type_68 = exception_type;
    exception_keeper_value_68 = exception_value;
    exception_keeper_tb_68 = exception_tb;
    exception_keeper_lineno_68 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_68__module);
    Py_DECREF(tmp_import_from_68__module);
    tmp_import_from_68__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_68;
    exception_value = exception_keeper_value_68;
    exception_tb = exception_keeper_tb_68;
    exception_lineno = exception_keeper_lineno_68;

    goto frame_exception_exit_1;
    // End of try:
    try_end_68:;
    CHECK_OBJECT(tmp_import_from_68__module);
    Py_DECREF(tmp_import_from_68__module);
    tmp_import_from_68__module = NULL;
    {
        PyObject *tmp_assign_source_456;
        PyObject *tmp_import_name_from_384;
        PyObject *tmp_name_value_270;
        PyObject *tmp_globals_arg_value_270;
        PyObject *tmp_locals_arg_value_270;
        PyObject *tmp_fromlist_value_270;
        PyObject *tmp_level_value_270;
        tmp_name_value_270 = mod_consts[930];
        tmp_globals_arg_value_270 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_270 = Py_None;
        tmp_fromlist_value_270 = mod_consts[931];
        tmp_level_value_270 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 510;
        tmp_import_name_from_384 = IMPORT_MODULE5(tmp_name_value_270, tmp_globals_arg_value_270, tmp_locals_arg_value_270, tmp_fromlist_value_270, tmp_level_value_270);
        if (tmp_import_name_from_384 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 510;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_384)) {
            tmp_assign_source_456 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_384,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[932],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_456 = IMPORT_NAME(tmp_import_name_from_384, mod_consts[932]);
        }

        Py_DECREF(tmp_import_name_from_384);
        if (tmp_assign_source_456 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 510;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[932], tmp_assign_source_456);
    }
    {
        PyObject *tmp_assign_source_457;
        PyObject *tmp_import_name_from_385;
        PyObject *tmp_name_value_271;
        PyObject *tmp_globals_arg_value_271;
        PyObject *tmp_locals_arg_value_271;
        PyObject *tmp_fromlist_value_271;
        PyObject *tmp_level_value_271;
        tmp_name_value_271 = mod_consts[933];
        tmp_globals_arg_value_271 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_271 = Py_None;
        tmp_fromlist_value_271 = mod_consts[934];
        tmp_level_value_271 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 511;
        tmp_import_name_from_385 = IMPORT_MODULE5(tmp_name_value_271, tmp_globals_arg_value_271, tmp_locals_arg_value_271, tmp_fromlist_value_271, tmp_level_value_271);
        if (tmp_import_name_from_385 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 511;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_385)) {
            tmp_assign_source_457 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_385,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[935],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_457 = IMPORT_NAME(tmp_import_name_from_385, mod_consts[935]);
        }

        Py_DECREF(tmp_import_name_from_385);
        if (tmp_assign_source_457 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 511;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[935], tmp_assign_source_457);
    }
    {
        PyObject *tmp_assign_source_458;
        PyObject *tmp_import_name_from_386;
        PyObject *tmp_name_value_272;
        PyObject *tmp_globals_arg_value_272;
        PyObject *tmp_locals_arg_value_272;
        PyObject *tmp_fromlist_value_272;
        PyObject *tmp_level_value_272;
        tmp_name_value_272 = mod_consts[936];
        tmp_globals_arg_value_272 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_272 = Py_None;
        tmp_fromlist_value_272 = mod_consts[937];
        tmp_level_value_272 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 512;
        tmp_import_name_from_386 = IMPORT_MODULE5(tmp_name_value_272, tmp_globals_arg_value_272, tmp_locals_arg_value_272, tmp_fromlist_value_272, tmp_level_value_272);
        if (tmp_import_name_from_386 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 512;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_386)) {
            tmp_assign_source_458 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_386,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[938],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_458 = IMPORT_NAME(tmp_import_name_from_386, mod_consts[938]);
        }

        Py_DECREF(tmp_import_name_from_386);
        if (tmp_assign_source_458 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 512;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[938], tmp_assign_source_458);
    }
    {
        PyObject *tmp_assign_source_459;
        PyObject *tmp_import_name_from_387;
        PyObject *tmp_name_value_273;
        PyObject *tmp_globals_arg_value_273;
        PyObject *tmp_locals_arg_value_273;
        PyObject *tmp_fromlist_value_273;
        PyObject *tmp_level_value_273;
        tmp_name_value_273 = mod_consts[939];
        tmp_globals_arg_value_273 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_273 = Py_None;
        tmp_fromlist_value_273 = mod_consts[940];
        tmp_level_value_273 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 513;
        tmp_import_name_from_387 = IMPORT_MODULE5(tmp_name_value_273, tmp_globals_arg_value_273, tmp_locals_arg_value_273, tmp_fromlist_value_273, tmp_level_value_273);
        if (tmp_import_name_from_387 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 513;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_387)) {
            tmp_assign_source_459 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_387,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[941],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_459 = IMPORT_NAME(tmp_import_name_from_387, mod_consts[941]);
        }

        Py_DECREF(tmp_import_name_from_387);
        if (tmp_assign_source_459 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 513;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[941], tmp_assign_source_459);
    }
    {
        PyObject *tmp_assign_source_460;
        PyObject *tmp_import_name_from_388;
        PyObject *tmp_name_value_274;
        PyObject *tmp_globals_arg_value_274;
        PyObject *tmp_locals_arg_value_274;
        PyObject *tmp_fromlist_value_274;
        PyObject *tmp_level_value_274;
        tmp_name_value_274 = mod_consts[942];
        tmp_globals_arg_value_274 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_274 = Py_None;
        tmp_fromlist_value_274 = mod_consts[943];
        tmp_level_value_274 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 514;
        tmp_import_name_from_388 = IMPORT_MODULE5(tmp_name_value_274, tmp_globals_arg_value_274, tmp_locals_arg_value_274, tmp_fromlist_value_274, tmp_level_value_274);
        if (tmp_import_name_from_388 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 514;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_388)) {
            tmp_assign_source_460 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_388,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[944],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_460 = IMPORT_NAME(tmp_import_name_from_388, mod_consts[944]);
        }

        Py_DECREF(tmp_import_name_from_388);
        if (tmp_assign_source_460 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 514;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[944], tmp_assign_source_460);
    }
    {
        PyObject *tmp_assign_source_461;
        PyObject *tmp_name_value_275;
        PyObject *tmp_globals_arg_value_275;
        PyObject *tmp_locals_arg_value_275;
        PyObject *tmp_fromlist_value_275;
        PyObject *tmp_level_value_275;
        tmp_name_value_275 = mod_consts[945];
        tmp_globals_arg_value_275 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_275 = Py_None;
        tmp_fromlist_value_275 = mod_consts[946];
        tmp_level_value_275 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 515;
        tmp_assign_source_461 = IMPORT_MODULE5(tmp_name_value_275, tmp_globals_arg_value_275, tmp_locals_arg_value_275, tmp_fromlist_value_275, tmp_level_value_275);
        if (tmp_assign_source_461 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 515;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_69__module == NULL);
        tmp_import_from_69__module = tmp_assign_source_461;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_462;
        PyObject *tmp_import_name_from_389;
        CHECK_OBJECT(tmp_import_from_69__module);
        tmp_import_name_from_389 = tmp_import_from_69__module;
        if (PyModule_Check(tmp_import_name_from_389)) {
            tmp_assign_source_462 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_389,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[947],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_462 = IMPORT_NAME(tmp_import_name_from_389, mod_consts[947]);
        }

        if (tmp_assign_source_462 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 515;

            goto try_except_handler_69;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[947], tmp_assign_source_462);
    }
    {
        PyObject *tmp_assign_source_463;
        PyObject *tmp_import_name_from_390;
        CHECK_OBJECT(tmp_import_from_69__module);
        tmp_import_name_from_390 = tmp_import_from_69__module;
        if (PyModule_Check(tmp_import_name_from_390)) {
            tmp_assign_source_463 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_390,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[948],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_463 = IMPORT_NAME(tmp_import_name_from_390, mod_consts[948]);
        }

        if (tmp_assign_source_463 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 515;

            goto try_except_handler_69;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[948], tmp_assign_source_463);
    }
    goto try_end_69;
    // Exception handler code:
    try_except_handler_69:;
    exception_keeper_type_69 = exception_type;
    exception_keeper_value_69 = exception_value;
    exception_keeper_tb_69 = exception_tb;
    exception_keeper_lineno_69 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_69__module);
    Py_DECREF(tmp_import_from_69__module);
    tmp_import_from_69__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_69;
    exception_value = exception_keeper_value_69;
    exception_tb = exception_keeper_tb_69;
    exception_lineno = exception_keeper_lineno_69;

    goto frame_exception_exit_1;
    // End of try:
    try_end_69:;
    CHECK_OBJECT(tmp_import_from_69__module);
    Py_DECREF(tmp_import_from_69__module);
    tmp_import_from_69__module = NULL;
    {
        PyObject *tmp_assign_source_464;
        PyObject *tmp_name_value_276;
        PyObject *tmp_globals_arg_value_276;
        PyObject *tmp_locals_arg_value_276;
        PyObject *tmp_fromlist_value_276;
        PyObject *tmp_level_value_276;
        tmp_name_value_276 = mod_consts[949];
        tmp_globals_arg_value_276 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_276 = Py_None;
        tmp_fromlist_value_276 = mod_consts[950];
        tmp_level_value_276 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 519;
        tmp_assign_source_464 = IMPORT_MODULE5(tmp_name_value_276, tmp_globals_arg_value_276, tmp_locals_arg_value_276, tmp_fromlist_value_276, tmp_level_value_276);
        if (tmp_assign_source_464 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 519;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_70__module == NULL);
        tmp_import_from_70__module = tmp_assign_source_464;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_465;
        PyObject *tmp_import_name_from_391;
        CHECK_OBJECT(tmp_import_from_70__module);
        tmp_import_name_from_391 = tmp_import_from_70__module;
        if (PyModule_Check(tmp_import_name_from_391)) {
            tmp_assign_source_465 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_391,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[951],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_465 = IMPORT_NAME(tmp_import_name_from_391, mod_consts[951]);
        }

        if (tmp_assign_source_465 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 519;

            goto try_except_handler_70;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[951], tmp_assign_source_465);
    }
    {
        PyObject *tmp_assign_source_466;
        PyObject *tmp_import_name_from_392;
        CHECK_OBJECT(tmp_import_from_70__module);
        tmp_import_name_from_392 = tmp_import_from_70__module;
        if (PyModule_Check(tmp_import_name_from_392)) {
            tmp_assign_source_466 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_392,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[952],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_466 = IMPORT_NAME(tmp_import_name_from_392, mod_consts[952]);
        }

        if (tmp_assign_source_466 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 519;

            goto try_except_handler_70;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[952], tmp_assign_source_466);
    }
    goto try_end_70;
    // Exception handler code:
    try_except_handler_70:;
    exception_keeper_type_70 = exception_type;
    exception_keeper_value_70 = exception_value;
    exception_keeper_tb_70 = exception_tb;
    exception_keeper_lineno_70 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_70__module);
    Py_DECREF(tmp_import_from_70__module);
    tmp_import_from_70__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_70;
    exception_value = exception_keeper_value_70;
    exception_tb = exception_keeper_tb_70;
    exception_lineno = exception_keeper_lineno_70;

    goto frame_exception_exit_1;
    // End of try:
    try_end_70:;
    CHECK_OBJECT(tmp_import_from_70__module);
    Py_DECREF(tmp_import_from_70__module);
    tmp_import_from_70__module = NULL;
    {
        PyObject *tmp_assign_source_467;
        PyObject *tmp_import_name_from_393;
        PyObject *tmp_name_value_277;
        PyObject *tmp_globals_arg_value_277;
        PyObject *tmp_locals_arg_value_277;
        PyObject *tmp_fromlist_value_277;
        PyObject *tmp_level_value_277;
        tmp_name_value_277 = mod_consts[953];
        tmp_globals_arg_value_277 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_277 = Py_None;
        tmp_fromlist_value_277 = mod_consts[954];
        tmp_level_value_277 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 523;
        tmp_import_name_from_393 = IMPORT_MODULE5(tmp_name_value_277, tmp_globals_arg_value_277, tmp_locals_arg_value_277, tmp_fromlist_value_277, tmp_level_value_277);
        if (tmp_import_name_from_393 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 523;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_393)) {
            tmp_assign_source_467 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_393,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[955],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_467 = IMPORT_NAME(tmp_import_name_from_393, mod_consts[955]);
        }

        Py_DECREF(tmp_import_name_from_393);
        if (tmp_assign_source_467 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 523;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[955], tmp_assign_source_467);
    }
    {
        PyObject *tmp_assign_source_468;
        PyObject *tmp_import_name_from_394;
        PyObject *tmp_name_value_278;
        PyObject *tmp_globals_arg_value_278;
        PyObject *tmp_locals_arg_value_278;
        PyObject *tmp_fromlist_value_278;
        PyObject *tmp_level_value_278;
        tmp_name_value_278 = mod_consts[956];
        tmp_globals_arg_value_278 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_278 = Py_None;
        tmp_fromlist_value_278 = mod_consts[957];
        tmp_level_value_278 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 524;
        tmp_import_name_from_394 = IMPORT_MODULE5(tmp_name_value_278, tmp_globals_arg_value_278, tmp_locals_arg_value_278, tmp_fromlist_value_278, tmp_level_value_278);
        if (tmp_import_name_from_394 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 524;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_394)) {
            tmp_assign_source_468 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_394,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[958],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_468 = IMPORT_NAME(tmp_import_name_from_394, mod_consts[958]);
        }

        Py_DECREF(tmp_import_name_from_394);
        if (tmp_assign_source_468 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 524;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[958], tmp_assign_source_468);
    }
    {
        PyObject *tmp_assign_source_469;
        PyObject *tmp_import_name_from_395;
        PyObject *tmp_name_value_279;
        PyObject *tmp_globals_arg_value_279;
        PyObject *tmp_locals_arg_value_279;
        PyObject *tmp_fromlist_value_279;
        PyObject *tmp_level_value_279;
        tmp_name_value_279 = mod_consts[959];
        tmp_globals_arg_value_279 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_279 = Py_None;
        tmp_fromlist_value_279 = mod_consts[960];
        tmp_level_value_279 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 525;
        tmp_import_name_from_395 = IMPORT_MODULE5(tmp_name_value_279, tmp_globals_arg_value_279, tmp_locals_arg_value_279, tmp_fromlist_value_279, tmp_level_value_279);
        if (tmp_import_name_from_395 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 525;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_395)) {
            tmp_assign_source_469 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_395,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[961],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_469 = IMPORT_NAME(tmp_import_name_from_395, mod_consts[961]);
        }

        Py_DECREF(tmp_import_name_from_395);
        if (tmp_assign_source_469 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 525;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[961], tmp_assign_source_469);
    }
    {
        PyObject *tmp_assign_source_470;
        PyObject *tmp_name_value_280;
        PyObject *tmp_globals_arg_value_280;
        PyObject *tmp_locals_arg_value_280;
        PyObject *tmp_fromlist_value_280;
        PyObject *tmp_level_value_280;
        tmp_name_value_280 = mod_consts[962];
        tmp_globals_arg_value_280 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_280 = Py_None;
        tmp_fromlist_value_280 = mod_consts[963];
        tmp_level_value_280 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 526;
        tmp_assign_source_470 = IMPORT_MODULE5(tmp_name_value_280, tmp_globals_arg_value_280, tmp_locals_arg_value_280, tmp_fromlist_value_280, tmp_level_value_280);
        if (tmp_assign_source_470 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 526;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_71__module == NULL);
        tmp_import_from_71__module = tmp_assign_source_470;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_471;
        PyObject *tmp_import_name_from_396;
        CHECK_OBJECT(tmp_import_from_71__module);
        tmp_import_name_from_396 = tmp_import_from_71__module;
        if (PyModule_Check(tmp_import_name_from_396)) {
            tmp_assign_source_471 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_396,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[964],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_471 = IMPORT_NAME(tmp_import_name_from_396, mod_consts[964]);
        }

        if (tmp_assign_source_471 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 526;

            goto try_except_handler_71;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[964], tmp_assign_source_471);
    }
    {
        PyObject *tmp_assign_source_472;
        PyObject *tmp_import_name_from_397;
        CHECK_OBJECT(tmp_import_from_71__module);
        tmp_import_name_from_397 = tmp_import_from_71__module;
        if (PyModule_Check(tmp_import_name_from_397)) {
            tmp_assign_source_472 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_397,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[965],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_472 = IMPORT_NAME(tmp_import_name_from_397, mod_consts[965]);
        }

        if (tmp_assign_source_472 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 526;

            goto try_except_handler_71;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[965], tmp_assign_source_472);
    }
    goto try_end_71;
    // Exception handler code:
    try_except_handler_71:;
    exception_keeper_type_71 = exception_type;
    exception_keeper_value_71 = exception_value;
    exception_keeper_tb_71 = exception_tb;
    exception_keeper_lineno_71 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_71__module);
    Py_DECREF(tmp_import_from_71__module);
    tmp_import_from_71__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_71;
    exception_value = exception_keeper_value_71;
    exception_tb = exception_keeper_tb_71;
    exception_lineno = exception_keeper_lineno_71;

    goto frame_exception_exit_1;
    // End of try:
    try_end_71:;
    CHECK_OBJECT(tmp_import_from_71__module);
    Py_DECREF(tmp_import_from_71__module);
    tmp_import_from_71__module = NULL;
    {
        PyObject *tmp_assign_source_473;
        PyObject *tmp_import_name_from_398;
        PyObject *tmp_name_value_281;
        PyObject *tmp_globals_arg_value_281;
        PyObject *tmp_locals_arg_value_281;
        PyObject *tmp_fromlist_value_281;
        PyObject *tmp_level_value_281;
        tmp_name_value_281 = mod_consts[966];
        tmp_globals_arg_value_281 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_281 = Py_None;
        tmp_fromlist_value_281 = mod_consts[967];
        tmp_level_value_281 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 530;
        tmp_import_name_from_398 = IMPORT_MODULE5(tmp_name_value_281, tmp_globals_arg_value_281, tmp_locals_arg_value_281, tmp_fromlist_value_281, tmp_level_value_281);
        if (tmp_import_name_from_398 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 530;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_398)) {
            tmp_assign_source_473 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_398,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[968],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_473 = IMPORT_NAME(tmp_import_name_from_398, mod_consts[968]);
        }

        Py_DECREF(tmp_import_name_from_398);
        if (tmp_assign_source_473 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 530;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[968], tmp_assign_source_473);
    }
    {
        PyObject *tmp_assign_source_474;
        PyObject *tmp_import_name_from_399;
        PyObject *tmp_name_value_282;
        PyObject *tmp_globals_arg_value_282;
        PyObject *tmp_locals_arg_value_282;
        PyObject *tmp_fromlist_value_282;
        PyObject *tmp_level_value_282;
        tmp_name_value_282 = mod_consts[969];
        tmp_globals_arg_value_282 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_282 = Py_None;
        tmp_fromlist_value_282 = mod_consts[970];
        tmp_level_value_282 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 531;
        tmp_import_name_from_399 = IMPORT_MODULE5(tmp_name_value_282, tmp_globals_arg_value_282, tmp_locals_arg_value_282, tmp_fromlist_value_282, tmp_level_value_282);
        if (tmp_import_name_from_399 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 531;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_399)) {
            tmp_assign_source_474 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_399,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[971],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_474 = IMPORT_NAME(tmp_import_name_from_399, mod_consts[971]);
        }

        Py_DECREF(tmp_import_name_from_399);
        if (tmp_assign_source_474 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 531;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[971], tmp_assign_source_474);
    }
    {
        PyObject *tmp_assign_source_475;
        PyObject *tmp_import_name_from_400;
        PyObject *tmp_name_value_283;
        PyObject *tmp_globals_arg_value_283;
        PyObject *tmp_locals_arg_value_283;
        PyObject *tmp_fromlist_value_283;
        PyObject *tmp_level_value_283;
        tmp_name_value_283 = mod_consts[972];
        tmp_globals_arg_value_283 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_283 = Py_None;
        tmp_fromlist_value_283 = mod_consts[973];
        tmp_level_value_283 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 532;
        tmp_import_name_from_400 = IMPORT_MODULE5(tmp_name_value_283, tmp_globals_arg_value_283, tmp_locals_arg_value_283, tmp_fromlist_value_283, tmp_level_value_283);
        if (tmp_import_name_from_400 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 532;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_400)) {
            tmp_assign_source_475 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_400,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[974],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_475 = IMPORT_NAME(tmp_import_name_from_400, mod_consts[974]);
        }

        Py_DECREF(tmp_import_name_from_400);
        if (tmp_assign_source_475 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 532;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[974], tmp_assign_source_475);
    }
    {
        PyObject *tmp_assign_source_476;
        PyObject *tmp_import_name_from_401;
        PyObject *tmp_name_value_284;
        PyObject *tmp_globals_arg_value_284;
        PyObject *tmp_locals_arg_value_284;
        PyObject *tmp_fromlist_value_284;
        PyObject *tmp_level_value_284;
        tmp_name_value_284 = mod_consts[975];
        tmp_globals_arg_value_284 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_284 = Py_None;
        tmp_fromlist_value_284 = mod_consts[976];
        tmp_level_value_284 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 533;
        tmp_import_name_from_401 = IMPORT_MODULE5(tmp_name_value_284, tmp_globals_arg_value_284, tmp_locals_arg_value_284, tmp_fromlist_value_284, tmp_level_value_284);
        if (tmp_import_name_from_401 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 533;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_401)) {
            tmp_assign_source_476 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_401,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[977],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_476 = IMPORT_NAME(tmp_import_name_from_401, mod_consts[977]);
        }

        Py_DECREF(tmp_import_name_from_401);
        if (tmp_assign_source_476 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 533;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[977], tmp_assign_source_476);
    }
    {
        PyObject *tmp_assign_source_477;
        PyObject *tmp_import_name_from_402;
        PyObject *tmp_name_value_285;
        PyObject *tmp_globals_arg_value_285;
        PyObject *tmp_locals_arg_value_285;
        PyObject *tmp_fromlist_value_285;
        PyObject *tmp_level_value_285;
        tmp_name_value_285 = mod_consts[978];
        tmp_globals_arg_value_285 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_285 = Py_None;
        tmp_fromlist_value_285 = mod_consts[979];
        tmp_level_value_285 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 534;
        tmp_import_name_from_402 = IMPORT_MODULE5(tmp_name_value_285, tmp_globals_arg_value_285, tmp_locals_arg_value_285, tmp_fromlist_value_285, tmp_level_value_285);
        if (tmp_import_name_from_402 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 534;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_402)) {
            tmp_assign_source_477 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_402,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[980],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_477 = IMPORT_NAME(tmp_import_name_from_402, mod_consts[980]);
        }

        Py_DECREF(tmp_import_name_from_402);
        if (tmp_assign_source_477 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 534;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[980], tmp_assign_source_477);
    }
    {
        PyObject *tmp_assign_source_478;
        PyObject *tmp_import_name_from_403;
        PyObject *tmp_name_value_286;
        PyObject *tmp_globals_arg_value_286;
        PyObject *tmp_locals_arg_value_286;
        PyObject *tmp_fromlist_value_286;
        PyObject *tmp_level_value_286;
        tmp_name_value_286 = mod_consts[981];
        tmp_globals_arg_value_286 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_286 = Py_None;
        tmp_fromlist_value_286 = mod_consts[982];
        tmp_level_value_286 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 535;
        tmp_import_name_from_403 = IMPORT_MODULE5(tmp_name_value_286, tmp_globals_arg_value_286, tmp_locals_arg_value_286, tmp_fromlist_value_286, tmp_level_value_286);
        if (tmp_import_name_from_403 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 535;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_403)) {
            tmp_assign_source_478 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_403,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[983],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_478 = IMPORT_NAME(tmp_import_name_from_403, mod_consts[983]);
        }

        Py_DECREF(tmp_import_name_from_403);
        if (tmp_assign_source_478 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 535;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[983], tmp_assign_source_478);
    }
    {
        PyObject *tmp_assign_source_479;
        PyObject *tmp_import_name_from_404;
        PyObject *tmp_name_value_287;
        PyObject *tmp_globals_arg_value_287;
        PyObject *tmp_locals_arg_value_287;
        PyObject *tmp_fromlist_value_287;
        PyObject *tmp_level_value_287;
        tmp_name_value_287 = mod_consts[984];
        tmp_globals_arg_value_287 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_287 = Py_None;
        tmp_fromlist_value_287 = mod_consts[985];
        tmp_level_value_287 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 536;
        tmp_import_name_from_404 = IMPORT_MODULE5(tmp_name_value_287, tmp_globals_arg_value_287, tmp_locals_arg_value_287, tmp_fromlist_value_287, tmp_level_value_287);
        if (tmp_import_name_from_404 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 536;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_404)) {
            tmp_assign_source_479 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_404,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[986],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_479 = IMPORT_NAME(tmp_import_name_from_404, mod_consts[986]);
        }

        Py_DECREF(tmp_import_name_from_404);
        if (tmp_assign_source_479 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 536;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[986], tmp_assign_source_479);
    }
    {
        PyObject *tmp_assign_source_480;
        PyObject *tmp_import_name_from_405;
        PyObject *tmp_name_value_288;
        PyObject *tmp_globals_arg_value_288;
        PyObject *tmp_locals_arg_value_288;
        PyObject *tmp_fromlist_value_288;
        PyObject *tmp_level_value_288;
        tmp_name_value_288 = mod_consts[987];
        tmp_globals_arg_value_288 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_288 = Py_None;
        tmp_fromlist_value_288 = mod_consts[988];
        tmp_level_value_288 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 537;
        tmp_import_name_from_405 = IMPORT_MODULE5(tmp_name_value_288, tmp_globals_arg_value_288, tmp_locals_arg_value_288, tmp_fromlist_value_288, tmp_level_value_288);
        if (tmp_import_name_from_405 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 537;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_405)) {
            tmp_assign_source_480 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_405,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[989],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_480 = IMPORT_NAME(tmp_import_name_from_405, mod_consts[989]);
        }

        Py_DECREF(tmp_import_name_from_405);
        if (tmp_assign_source_480 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 537;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[989], tmp_assign_source_480);
    }
    {
        PyObject *tmp_assign_source_481;
        PyObject *tmp_import_name_from_406;
        PyObject *tmp_name_value_289;
        PyObject *tmp_globals_arg_value_289;
        PyObject *tmp_locals_arg_value_289;
        PyObject *tmp_fromlist_value_289;
        PyObject *tmp_level_value_289;
        tmp_name_value_289 = mod_consts[990];
        tmp_globals_arg_value_289 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_289 = Py_None;
        tmp_fromlist_value_289 = mod_consts[991];
        tmp_level_value_289 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 538;
        tmp_import_name_from_406 = IMPORT_MODULE5(tmp_name_value_289, tmp_globals_arg_value_289, tmp_locals_arg_value_289, tmp_fromlist_value_289, tmp_level_value_289);
        if (tmp_import_name_from_406 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 538;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_406)) {
            tmp_assign_source_481 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_406,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[992],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_481 = IMPORT_NAME(tmp_import_name_from_406, mod_consts[992]);
        }

        Py_DECREF(tmp_import_name_from_406);
        if (tmp_assign_source_481 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 538;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[992], tmp_assign_source_481);
    }
    {
        PyObject *tmp_assign_source_482;
        PyObject *tmp_import_name_from_407;
        PyObject *tmp_name_value_290;
        PyObject *tmp_globals_arg_value_290;
        PyObject *tmp_locals_arg_value_290;
        PyObject *tmp_fromlist_value_290;
        PyObject *tmp_level_value_290;
        tmp_name_value_290 = mod_consts[993];
        tmp_globals_arg_value_290 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_290 = Py_None;
        tmp_fromlist_value_290 = mod_consts[994];
        tmp_level_value_290 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 539;
        tmp_import_name_from_407 = IMPORT_MODULE5(tmp_name_value_290, tmp_globals_arg_value_290, tmp_locals_arg_value_290, tmp_fromlist_value_290, tmp_level_value_290);
        if (tmp_import_name_from_407 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 539;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_407)) {
            tmp_assign_source_482 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_407,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[995],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_482 = IMPORT_NAME(tmp_import_name_from_407, mod_consts[995]);
        }

        Py_DECREF(tmp_import_name_from_407);
        if (tmp_assign_source_482 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 539;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[995], tmp_assign_source_482);
    }
    {
        PyObject *tmp_assign_source_483;
        PyObject *tmp_import_name_from_408;
        PyObject *tmp_name_value_291;
        PyObject *tmp_globals_arg_value_291;
        PyObject *tmp_locals_arg_value_291;
        PyObject *tmp_fromlist_value_291;
        PyObject *tmp_level_value_291;
        tmp_name_value_291 = mod_consts[996];
        tmp_globals_arg_value_291 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_291 = Py_None;
        tmp_fromlist_value_291 = mod_consts[997];
        tmp_level_value_291 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 540;
        tmp_import_name_from_408 = IMPORT_MODULE5(tmp_name_value_291, tmp_globals_arg_value_291, tmp_locals_arg_value_291, tmp_fromlist_value_291, tmp_level_value_291);
        if (tmp_import_name_from_408 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 540;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_408)) {
            tmp_assign_source_483 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_408,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[998],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_483 = IMPORT_NAME(tmp_import_name_from_408, mod_consts[998]);
        }

        Py_DECREF(tmp_import_name_from_408);
        if (tmp_assign_source_483 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 540;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[998], tmp_assign_source_483);
    }
    {
        PyObject *tmp_assign_source_484;
        PyObject *tmp_name_value_292;
        PyObject *tmp_globals_arg_value_292;
        PyObject *tmp_locals_arg_value_292;
        PyObject *tmp_fromlist_value_292;
        PyObject *tmp_level_value_292;
        tmp_name_value_292 = mod_consts[999];
        tmp_globals_arg_value_292 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_292 = Py_None;
        tmp_fromlist_value_292 = mod_consts[1000];
        tmp_level_value_292 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 541;
        tmp_assign_source_484 = IMPORT_MODULE5(tmp_name_value_292, tmp_globals_arg_value_292, tmp_locals_arg_value_292, tmp_fromlist_value_292, tmp_level_value_292);
        if (tmp_assign_source_484 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 541;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_72__module == NULL);
        tmp_import_from_72__module = tmp_assign_source_484;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_485;
        PyObject *tmp_import_name_from_409;
        CHECK_OBJECT(tmp_import_from_72__module);
        tmp_import_name_from_409 = tmp_import_from_72__module;
        if (PyModule_Check(tmp_import_name_from_409)) {
            tmp_assign_source_485 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_409,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1001],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_485 = IMPORT_NAME(tmp_import_name_from_409, mod_consts[1001]);
        }

        if (tmp_assign_source_485 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 541;

            goto try_except_handler_72;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1001], tmp_assign_source_485);
    }
    {
        PyObject *tmp_assign_source_486;
        PyObject *tmp_import_name_from_410;
        CHECK_OBJECT(tmp_import_from_72__module);
        tmp_import_name_from_410 = tmp_import_from_72__module;
        if (PyModule_Check(tmp_import_name_from_410)) {
            tmp_assign_source_486 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_410,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1002],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_486 = IMPORT_NAME(tmp_import_name_from_410, mod_consts[1002]);
        }

        if (tmp_assign_source_486 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 541;

            goto try_except_handler_72;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1002], tmp_assign_source_486);
    }
    goto try_end_72;
    // Exception handler code:
    try_except_handler_72:;
    exception_keeper_type_72 = exception_type;
    exception_keeper_value_72 = exception_value;
    exception_keeper_tb_72 = exception_tb;
    exception_keeper_lineno_72 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_72__module);
    Py_DECREF(tmp_import_from_72__module);
    tmp_import_from_72__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_72;
    exception_value = exception_keeper_value_72;
    exception_tb = exception_keeper_tb_72;
    exception_lineno = exception_keeper_lineno_72;

    goto frame_exception_exit_1;
    // End of try:
    try_end_72:;
    CHECK_OBJECT(tmp_import_from_72__module);
    Py_DECREF(tmp_import_from_72__module);
    tmp_import_from_72__module = NULL;
    {
        PyObject *tmp_assign_source_487;
        PyObject *tmp_import_name_from_411;
        PyObject *tmp_name_value_293;
        PyObject *tmp_globals_arg_value_293;
        PyObject *tmp_locals_arg_value_293;
        PyObject *tmp_fromlist_value_293;
        PyObject *tmp_level_value_293;
        tmp_name_value_293 = mod_consts[1003];
        tmp_globals_arg_value_293 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_293 = Py_None;
        tmp_fromlist_value_293 = mod_consts[1004];
        tmp_level_value_293 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 545;
        tmp_import_name_from_411 = IMPORT_MODULE5(tmp_name_value_293, tmp_globals_arg_value_293, tmp_locals_arg_value_293, tmp_fromlist_value_293, tmp_level_value_293);
        if (tmp_import_name_from_411 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 545;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_411)) {
            tmp_assign_source_487 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_411,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1005],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_487 = IMPORT_NAME(tmp_import_name_from_411, mod_consts[1005]);
        }

        Py_DECREF(tmp_import_name_from_411);
        if (tmp_assign_source_487 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 545;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1005], tmp_assign_source_487);
    }
    {
        PyObject *tmp_assign_source_488;
        PyObject *tmp_import_name_from_412;
        PyObject *tmp_name_value_294;
        PyObject *tmp_globals_arg_value_294;
        PyObject *tmp_locals_arg_value_294;
        PyObject *tmp_fromlist_value_294;
        PyObject *tmp_level_value_294;
        tmp_name_value_294 = mod_consts[1006];
        tmp_globals_arg_value_294 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_294 = Py_None;
        tmp_fromlist_value_294 = mod_consts[1007];
        tmp_level_value_294 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 546;
        tmp_import_name_from_412 = IMPORT_MODULE5(tmp_name_value_294, tmp_globals_arg_value_294, tmp_locals_arg_value_294, tmp_fromlist_value_294, tmp_level_value_294);
        if (tmp_import_name_from_412 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 546;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_412)) {
            tmp_assign_source_488 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_412,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1008],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_488 = IMPORT_NAME(tmp_import_name_from_412, mod_consts[1008]);
        }

        Py_DECREF(tmp_import_name_from_412);
        if (tmp_assign_source_488 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 546;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1008], tmp_assign_source_488);
    }
    {
        PyObject *tmp_assign_source_489;
        PyObject *tmp_import_name_from_413;
        PyObject *tmp_name_value_295;
        PyObject *tmp_globals_arg_value_295;
        PyObject *tmp_locals_arg_value_295;
        PyObject *tmp_fromlist_value_295;
        PyObject *tmp_level_value_295;
        tmp_name_value_295 = mod_consts[1009];
        tmp_globals_arg_value_295 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_295 = Py_None;
        tmp_fromlist_value_295 = mod_consts[1010];
        tmp_level_value_295 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 547;
        tmp_import_name_from_413 = IMPORT_MODULE5(tmp_name_value_295, tmp_globals_arg_value_295, tmp_locals_arg_value_295, tmp_fromlist_value_295, tmp_level_value_295);
        if (tmp_import_name_from_413 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 547;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_413)) {
            tmp_assign_source_489 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_413,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1011],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_489 = IMPORT_NAME(tmp_import_name_from_413, mod_consts[1011]);
        }

        Py_DECREF(tmp_import_name_from_413);
        if (tmp_assign_source_489 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 547;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1011], tmp_assign_source_489);
    }
    {
        PyObject *tmp_assign_source_490;
        PyObject *tmp_import_name_from_414;
        PyObject *tmp_name_value_296;
        PyObject *tmp_globals_arg_value_296;
        PyObject *tmp_locals_arg_value_296;
        PyObject *tmp_fromlist_value_296;
        PyObject *tmp_level_value_296;
        tmp_name_value_296 = mod_consts[1012];
        tmp_globals_arg_value_296 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_296 = Py_None;
        tmp_fromlist_value_296 = mod_consts[1013];
        tmp_level_value_296 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 548;
        tmp_import_name_from_414 = IMPORT_MODULE5(tmp_name_value_296, tmp_globals_arg_value_296, tmp_locals_arg_value_296, tmp_fromlist_value_296, tmp_level_value_296);
        if (tmp_import_name_from_414 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 548;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_414)) {
            tmp_assign_source_490 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_414,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1014],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_490 = IMPORT_NAME(tmp_import_name_from_414, mod_consts[1014]);
        }

        Py_DECREF(tmp_import_name_from_414);
        if (tmp_assign_source_490 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 548;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1014], tmp_assign_source_490);
    }
    {
        PyObject *tmp_assign_source_491;
        PyObject *tmp_import_name_from_415;
        PyObject *tmp_name_value_297;
        PyObject *tmp_globals_arg_value_297;
        PyObject *tmp_locals_arg_value_297;
        PyObject *tmp_fromlist_value_297;
        PyObject *tmp_level_value_297;
        tmp_name_value_297 = mod_consts[1015];
        tmp_globals_arg_value_297 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_297 = Py_None;
        tmp_fromlist_value_297 = mod_consts[1016];
        tmp_level_value_297 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 549;
        tmp_import_name_from_415 = IMPORT_MODULE5(tmp_name_value_297, tmp_globals_arg_value_297, tmp_locals_arg_value_297, tmp_fromlist_value_297, tmp_level_value_297);
        if (tmp_import_name_from_415 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 549;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_415)) {
            tmp_assign_source_491 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_415,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1017],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_491 = IMPORT_NAME(tmp_import_name_from_415, mod_consts[1017]);
        }

        Py_DECREF(tmp_import_name_from_415);
        if (tmp_assign_source_491 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 549;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1017], tmp_assign_source_491);
    }
    {
        PyObject *tmp_assign_source_492;
        PyObject *tmp_import_name_from_416;
        PyObject *tmp_name_value_298;
        PyObject *tmp_globals_arg_value_298;
        PyObject *tmp_locals_arg_value_298;
        PyObject *tmp_fromlist_value_298;
        PyObject *tmp_level_value_298;
        tmp_name_value_298 = mod_consts[1018];
        tmp_globals_arg_value_298 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_298 = Py_None;
        tmp_fromlist_value_298 = mod_consts[1019];
        tmp_level_value_298 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 550;
        tmp_import_name_from_416 = IMPORT_MODULE5(tmp_name_value_298, tmp_globals_arg_value_298, tmp_locals_arg_value_298, tmp_fromlist_value_298, tmp_level_value_298);
        if (tmp_import_name_from_416 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 550;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_416)) {
            tmp_assign_source_492 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_416,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1020],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_492 = IMPORT_NAME(tmp_import_name_from_416, mod_consts[1020]);
        }

        Py_DECREF(tmp_import_name_from_416);
        if (tmp_assign_source_492 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 550;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1020], tmp_assign_source_492);
    }
    {
        PyObject *tmp_assign_source_493;
        PyObject *tmp_import_name_from_417;
        PyObject *tmp_name_value_299;
        PyObject *tmp_globals_arg_value_299;
        PyObject *tmp_locals_arg_value_299;
        PyObject *tmp_fromlist_value_299;
        PyObject *tmp_level_value_299;
        tmp_name_value_299 = mod_consts[1021];
        tmp_globals_arg_value_299 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_299 = Py_None;
        tmp_fromlist_value_299 = mod_consts[1022];
        tmp_level_value_299 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 551;
        tmp_import_name_from_417 = IMPORT_MODULE5(tmp_name_value_299, tmp_globals_arg_value_299, tmp_locals_arg_value_299, tmp_fromlist_value_299, tmp_level_value_299);
        if (tmp_import_name_from_417 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 551;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_417)) {
            tmp_assign_source_493 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_417,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1023],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_493 = IMPORT_NAME(tmp_import_name_from_417, mod_consts[1023]);
        }

        Py_DECREF(tmp_import_name_from_417);
        if (tmp_assign_source_493 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 551;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1023], tmp_assign_source_493);
    }
    {
        PyObject *tmp_assign_source_494;
        PyObject *tmp_name_value_300;
        PyObject *tmp_globals_arg_value_300;
        PyObject *tmp_locals_arg_value_300;
        PyObject *tmp_fromlist_value_300;
        PyObject *tmp_level_value_300;
        tmp_name_value_300 = mod_consts[1024];
        tmp_globals_arg_value_300 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_300 = Py_None;
        tmp_fromlist_value_300 = mod_consts[1025];
        tmp_level_value_300 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 552;
        tmp_assign_source_494 = IMPORT_MODULE5(tmp_name_value_300, tmp_globals_arg_value_300, tmp_locals_arg_value_300, tmp_fromlist_value_300, tmp_level_value_300);
        if (tmp_assign_source_494 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 552;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_73__module == NULL);
        tmp_import_from_73__module = tmp_assign_source_494;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_495;
        PyObject *tmp_import_name_from_418;
        CHECK_OBJECT(tmp_import_from_73__module);
        tmp_import_name_from_418 = tmp_import_from_73__module;
        if (PyModule_Check(tmp_import_name_from_418)) {
            tmp_assign_source_495 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_418,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1026],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_495 = IMPORT_NAME(tmp_import_name_from_418, mod_consts[1026]);
        }

        if (tmp_assign_source_495 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 552;

            goto try_except_handler_73;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1026], tmp_assign_source_495);
    }
    {
        PyObject *tmp_assign_source_496;
        PyObject *tmp_import_name_from_419;
        CHECK_OBJECT(tmp_import_from_73__module);
        tmp_import_name_from_419 = tmp_import_from_73__module;
        if (PyModule_Check(tmp_import_name_from_419)) {
            tmp_assign_source_496 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_419,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1027],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_496 = IMPORT_NAME(tmp_import_name_from_419, mod_consts[1027]);
        }

        if (tmp_assign_source_496 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 552;

            goto try_except_handler_73;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1027], tmp_assign_source_496);
    }
    {
        PyObject *tmp_assign_source_497;
        PyObject *tmp_import_name_from_420;
        CHECK_OBJECT(tmp_import_from_73__module);
        tmp_import_name_from_420 = tmp_import_from_73__module;
        if (PyModule_Check(tmp_import_name_from_420)) {
            tmp_assign_source_497 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_420,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1028],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_497 = IMPORT_NAME(tmp_import_name_from_420, mod_consts[1028]);
        }

        if (tmp_assign_source_497 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 552;

            goto try_except_handler_73;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1028], tmp_assign_source_497);
    }
    {
        PyObject *tmp_assign_source_498;
        PyObject *tmp_import_name_from_421;
        CHECK_OBJECT(tmp_import_from_73__module);
        tmp_import_name_from_421 = tmp_import_from_73__module;
        if (PyModule_Check(tmp_import_name_from_421)) {
            tmp_assign_source_498 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_421,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1029],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_498 = IMPORT_NAME(tmp_import_name_from_421, mod_consts[1029]);
        }

        if (tmp_assign_source_498 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 552;

            goto try_except_handler_73;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1029], tmp_assign_source_498);
    }
    {
        PyObject *tmp_assign_source_499;
        PyObject *tmp_import_name_from_422;
        CHECK_OBJECT(tmp_import_from_73__module);
        tmp_import_name_from_422 = tmp_import_from_73__module;
        if (PyModule_Check(tmp_import_name_from_422)) {
            tmp_assign_source_499 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_422,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1030],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_499 = IMPORT_NAME(tmp_import_name_from_422, mod_consts[1030]);
        }

        if (tmp_assign_source_499 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 552;

            goto try_except_handler_73;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1030], tmp_assign_source_499);
    }
    {
        PyObject *tmp_assign_source_500;
        PyObject *tmp_import_name_from_423;
        CHECK_OBJECT(tmp_import_from_73__module);
        tmp_import_name_from_423 = tmp_import_from_73__module;
        if (PyModule_Check(tmp_import_name_from_423)) {
            tmp_assign_source_500 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_423,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1031],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_500 = IMPORT_NAME(tmp_import_name_from_423, mod_consts[1031]);
        }

        if (tmp_assign_source_500 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 552;

            goto try_except_handler_73;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1031], tmp_assign_source_500);
    }
    goto try_end_73;
    // Exception handler code:
    try_except_handler_73:;
    exception_keeper_type_73 = exception_type;
    exception_keeper_value_73 = exception_value;
    exception_keeper_tb_73 = exception_tb;
    exception_keeper_lineno_73 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_73__module);
    Py_DECREF(tmp_import_from_73__module);
    tmp_import_from_73__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_73;
    exception_value = exception_keeper_value_73;
    exception_tb = exception_keeper_tb_73;
    exception_lineno = exception_keeper_lineno_73;

    goto frame_exception_exit_1;
    // End of try:
    try_end_73:;
    CHECK_OBJECT(tmp_import_from_73__module);
    Py_DECREF(tmp_import_from_73__module);
    tmp_import_from_73__module = NULL;
    {
        PyObject *tmp_assign_source_501;
        PyObject *tmp_import_name_from_424;
        PyObject *tmp_name_value_301;
        PyObject *tmp_globals_arg_value_301;
        PyObject *tmp_locals_arg_value_301;
        PyObject *tmp_fromlist_value_301;
        PyObject *tmp_level_value_301;
        tmp_name_value_301 = mod_consts[1032];
        tmp_globals_arg_value_301 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_301 = Py_None;
        tmp_fromlist_value_301 = mod_consts[1033];
        tmp_level_value_301 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 560;
        tmp_import_name_from_424 = IMPORT_MODULE5(tmp_name_value_301, tmp_globals_arg_value_301, tmp_locals_arg_value_301, tmp_fromlist_value_301, tmp_level_value_301);
        if (tmp_import_name_from_424 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 560;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_424)) {
            tmp_assign_source_501 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_424,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1034],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_501 = IMPORT_NAME(tmp_import_name_from_424, mod_consts[1034]);
        }

        Py_DECREF(tmp_import_name_from_424);
        if (tmp_assign_source_501 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 560;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1034], tmp_assign_source_501);
    }
    {
        PyObject *tmp_assign_source_502;
        PyObject *tmp_name_value_302;
        PyObject *tmp_globals_arg_value_302;
        PyObject *tmp_locals_arg_value_302;
        PyObject *tmp_fromlist_value_302;
        PyObject *tmp_level_value_302;
        tmp_name_value_302 = mod_consts[1035];
        tmp_globals_arg_value_302 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_302 = Py_None;
        tmp_fromlist_value_302 = mod_consts[1036];
        tmp_level_value_302 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 561;
        tmp_assign_source_502 = IMPORT_MODULE5(tmp_name_value_302, tmp_globals_arg_value_302, tmp_locals_arg_value_302, tmp_fromlist_value_302, tmp_level_value_302);
        if (tmp_assign_source_502 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 561;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_74__module == NULL);
        tmp_import_from_74__module = tmp_assign_source_502;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_503;
        PyObject *tmp_import_name_from_425;
        CHECK_OBJECT(tmp_import_from_74__module);
        tmp_import_name_from_425 = tmp_import_from_74__module;
        if (PyModule_Check(tmp_import_name_from_425)) {
            tmp_assign_source_503 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_425,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1037],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_503 = IMPORT_NAME(tmp_import_name_from_425, mod_consts[1037]);
        }

        if (tmp_assign_source_503 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 561;

            goto try_except_handler_74;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1037], tmp_assign_source_503);
    }
    {
        PyObject *tmp_assign_source_504;
        PyObject *tmp_import_name_from_426;
        CHECK_OBJECT(tmp_import_from_74__module);
        tmp_import_name_from_426 = tmp_import_from_74__module;
        if (PyModule_Check(tmp_import_name_from_426)) {
            tmp_assign_source_504 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_426,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1038],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_504 = IMPORT_NAME(tmp_import_name_from_426, mod_consts[1038]);
        }

        if (tmp_assign_source_504 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 561;

            goto try_except_handler_74;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1038], tmp_assign_source_504);
    }
    {
        PyObject *tmp_assign_source_505;
        PyObject *tmp_import_name_from_427;
        CHECK_OBJECT(tmp_import_from_74__module);
        tmp_import_name_from_427 = tmp_import_from_74__module;
        if (PyModule_Check(tmp_import_name_from_427)) {
            tmp_assign_source_505 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_427,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1039],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_505 = IMPORT_NAME(tmp_import_name_from_427, mod_consts[1039]);
        }

        if (tmp_assign_source_505 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 561;

            goto try_except_handler_74;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1039], tmp_assign_source_505);
    }
    {
        PyObject *tmp_assign_source_506;
        PyObject *tmp_import_name_from_428;
        CHECK_OBJECT(tmp_import_from_74__module);
        tmp_import_name_from_428 = tmp_import_from_74__module;
        if (PyModule_Check(tmp_import_name_from_428)) {
            tmp_assign_source_506 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_428,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1040],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_506 = IMPORT_NAME(tmp_import_name_from_428, mod_consts[1040]);
        }

        if (tmp_assign_source_506 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 561;

            goto try_except_handler_74;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1040], tmp_assign_source_506);
    }
    goto try_end_74;
    // Exception handler code:
    try_except_handler_74:;
    exception_keeper_type_74 = exception_type;
    exception_keeper_value_74 = exception_value;
    exception_keeper_tb_74 = exception_tb;
    exception_keeper_lineno_74 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_74__module);
    Py_DECREF(tmp_import_from_74__module);
    tmp_import_from_74__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_74;
    exception_value = exception_keeper_value_74;
    exception_tb = exception_keeper_tb_74;
    exception_lineno = exception_keeper_lineno_74;

    goto frame_exception_exit_1;
    // End of try:
    try_end_74:;
    CHECK_OBJECT(tmp_import_from_74__module);
    Py_DECREF(tmp_import_from_74__module);
    tmp_import_from_74__module = NULL;
    {
        PyObject *tmp_assign_source_507;
        PyObject *tmp_name_value_303;
        PyObject *tmp_globals_arg_value_303;
        PyObject *tmp_locals_arg_value_303;
        PyObject *tmp_fromlist_value_303;
        PyObject *tmp_level_value_303;
        tmp_name_value_303 = mod_consts[1041];
        tmp_globals_arg_value_303 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_303 = Py_None;
        tmp_fromlist_value_303 = mod_consts[1042];
        tmp_level_value_303 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 567;
        tmp_assign_source_507 = IMPORT_MODULE5(tmp_name_value_303, tmp_globals_arg_value_303, tmp_locals_arg_value_303, tmp_fromlist_value_303, tmp_level_value_303);
        if (tmp_assign_source_507 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 567;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_75__module == NULL);
        tmp_import_from_75__module = tmp_assign_source_507;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_508;
        PyObject *tmp_import_name_from_429;
        CHECK_OBJECT(tmp_import_from_75__module);
        tmp_import_name_from_429 = tmp_import_from_75__module;
        if (PyModule_Check(tmp_import_name_from_429)) {
            tmp_assign_source_508 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_429,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1043],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_508 = IMPORT_NAME(tmp_import_name_from_429, mod_consts[1043]);
        }

        if (tmp_assign_source_508 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 567;

            goto try_except_handler_75;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1043], tmp_assign_source_508);
    }
    {
        PyObject *tmp_assign_source_509;
        PyObject *tmp_import_name_from_430;
        CHECK_OBJECT(tmp_import_from_75__module);
        tmp_import_name_from_430 = tmp_import_from_75__module;
        if (PyModule_Check(tmp_import_name_from_430)) {
            tmp_assign_source_509 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_430,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1044],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_509 = IMPORT_NAME(tmp_import_name_from_430, mod_consts[1044]);
        }

        if (tmp_assign_source_509 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 567;

            goto try_except_handler_75;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1044], tmp_assign_source_509);
    }
    goto try_end_75;
    // Exception handler code:
    try_except_handler_75:;
    exception_keeper_type_75 = exception_type;
    exception_keeper_value_75 = exception_value;
    exception_keeper_tb_75 = exception_tb;
    exception_keeper_lineno_75 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_75__module);
    Py_DECREF(tmp_import_from_75__module);
    tmp_import_from_75__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_75;
    exception_value = exception_keeper_value_75;
    exception_tb = exception_keeper_tb_75;
    exception_lineno = exception_keeper_lineno_75;

    goto frame_exception_exit_1;
    // End of try:
    try_end_75:;
    CHECK_OBJECT(tmp_import_from_75__module);
    Py_DECREF(tmp_import_from_75__module);
    tmp_import_from_75__module = NULL;
    {
        PyObject *tmp_assign_source_510;
        PyObject *tmp_import_name_from_431;
        PyObject *tmp_name_value_304;
        PyObject *tmp_globals_arg_value_304;
        PyObject *tmp_locals_arg_value_304;
        PyObject *tmp_fromlist_value_304;
        PyObject *tmp_level_value_304;
        tmp_name_value_304 = mod_consts[1045];
        tmp_globals_arg_value_304 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_304 = Py_None;
        tmp_fromlist_value_304 = mod_consts[1046];
        tmp_level_value_304 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 571;
        tmp_import_name_from_431 = IMPORT_MODULE5(tmp_name_value_304, tmp_globals_arg_value_304, tmp_locals_arg_value_304, tmp_fromlist_value_304, tmp_level_value_304);
        if (tmp_import_name_from_431 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 571;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_431)) {
            tmp_assign_source_510 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_431,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1047],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_510 = IMPORT_NAME(tmp_import_name_from_431, mod_consts[1047]);
        }

        Py_DECREF(tmp_import_name_from_431);
        if (tmp_assign_source_510 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 571;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1047], tmp_assign_source_510);
    }
    {
        PyObject *tmp_assign_source_511;
        PyObject *tmp_name_value_305;
        PyObject *tmp_globals_arg_value_305;
        PyObject *tmp_locals_arg_value_305;
        PyObject *tmp_fromlist_value_305;
        PyObject *tmp_level_value_305;
        tmp_name_value_305 = mod_consts[1048];
        tmp_globals_arg_value_305 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_305 = Py_None;
        tmp_fromlist_value_305 = mod_consts[1049];
        tmp_level_value_305 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 572;
        tmp_assign_source_511 = IMPORT_MODULE5(tmp_name_value_305, tmp_globals_arg_value_305, tmp_locals_arg_value_305, tmp_fromlist_value_305, tmp_level_value_305);
        if (tmp_assign_source_511 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 572;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_76__module == NULL);
        tmp_import_from_76__module = tmp_assign_source_511;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_512;
        PyObject *tmp_import_name_from_432;
        CHECK_OBJECT(tmp_import_from_76__module);
        tmp_import_name_from_432 = tmp_import_from_76__module;
        if (PyModule_Check(tmp_import_name_from_432)) {
            tmp_assign_source_512 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_432,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1050],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_512 = IMPORT_NAME(tmp_import_name_from_432, mod_consts[1050]);
        }

        if (tmp_assign_source_512 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 572;

            goto try_except_handler_76;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1050], tmp_assign_source_512);
    }
    {
        PyObject *tmp_assign_source_513;
        PyObject *tmp_import_name_from_433;
        CHECK_OBJECT(tmp_import_from_76__module);
        tmp_import_name_from_433 = tmp_import_from_76__module;
        if (PyModule_Check(tmp_import_name_from_433)) {
            tmp_assign_source_513 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_433,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1051],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_513 = IMPORT_NAME(tmp_import_name_from_433, mod_consts[1051]);
        }

        if (tmp_assign_source_513 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 572;

            goto try_except_handler_76;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1051], tmp_assign_source_513);
    }
    goto try_end_76;
    // Exception handler code:
    try_except_handler_76:;
    exception_keeper_type_76 = exception_type;
    exception_keeper_value_76 = exception_value;
    exception_keeper_tb_76 = exception_tb;
    exception_keeper_lineno_76 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_76__module);
    Py_DECREF(tmp_import_from_76__module);
    tmp_import_from_76__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_76;
    exception_value = exception_keeper_value_76;
    exception_tb = exception_keeper_tb_76;
    exception_lineno = exception_keeper_lineno_76;

    goto frame_exception_exit_1;
    // End of try:
    try_end_76:;
    CHECK_OBJECT(tmp_import_from_76__module);
    Py_DECREF(tmp_import_from_76__module);
    tmp_import_from_76__module = NULL;
    {
        PyObject *tmp_assign_source_514;
        PyObject *tmp_import_name_from_434;
        PyObject *tmp_name_value_306;
        PyObject *tmp_globals_arg_value_306;
        PyObject *tmp_locals_arg_value_306;
        PyObject *tmp_fromlist_value_306;
        PyObject *tmp_level_value_306;
        tmp_name_value_306 = mod_consts[1052];
        tmp_globals_arg_value_306 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_306 = Py_None;
        tmp_fromlist_value_306 = mod_consts[1053];
        tmp_level_value_306 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 576;
        tmp_import_name_from_434 = IMPORT_MODULE5(tmp_name_value_306, tmp_globals_arg_value_306, tmp_locals_arg_value_306, tmp_fromlist_value_306, tmp_level_value_306);
        if (tmp_import_name_from_434 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 576;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_434)) {
            tmp_assign_source_514 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_434,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1054],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_514 = IMPORT_NAME(tmp_import_name_from_434, mod_consts[1054]);
        }

        Py_DECREF(tmp_import_name_from_434);
        if (tmp_assign_source_514 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 576;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1054], tmp_assign_source_514);
    }
    {
        PyObject *tmp_assign_source_515;
        PyObject *tmp_name_value_307;
        PyObject *tmp_globals_arg_value_307;
        PyObject *tmp_locals_arg_value_307;
        PyObject *tmp_fromlist_value_307;
        PyObject *tmp_level_value_307;
        tmp_name_value_307 = mod_consts[1055];
        tmp_globals_arg_value_307 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_307 = Py_None;
        tmp_fromlist_value_307 = mod_consts[1056];
        tmp_level_value_307 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 577;
        tmp_assign_source_515 = IMPORT_MODULE5(tmp_name_value_307, tmp_globals_arg_value_307, tmp_locals_arg_value_307, tmp_fromlist_value_307, tmp_level_value_307);
        if (tmp_assign_source_515 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 577;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_77__module == NULL);
        tmp_import_from_77__module = tmp_assign_source_515;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_516;
        PyObject *tmp_import_name_from_435;
        CHECK_OBJECT(tmp_import_from_77__module);
        tmp_import_name_from_435 = tmp_import_from_77__module;
        if (PyModule_Check(tmp_import_name_from_435)) {
            tmp_assign_source_516 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_435,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1057],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_516 = IMPORT_NAME(tmp_import_name_from_435, mod_consts[1057]);
        }

        if (tmp_assign_source_516 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 577;

            goto try_except_handler_77;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1057], tmp_assign_source_516);
    }
    {
        PyObject *tmp_assign_source_517;
        PyObject *tmp_import_name_from_436;
        CHECK_OBJECT(tmp_import_from_77__module);
        tmp_import_name_from_436 = tmp_import_from_77__module;
        if (PyModule_Check(tmp_import_name_from_436)) {
            tmp_assign_source_517 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_436,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1058],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_517 = IMPORT_NAME(tmp_import_name_from_436, mod_consts[1058]);
        }

        if (tmp_assign_source_517 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 577;

            goto try_except_handler_77;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1058], tmp_assign_source_517);
    }
    {
        PyObject *tmp_assign_source_518;
        PyObject *tmp_import_name_from_437;
        CHECK_OBJECT(tmp_import_from_77__module);
        tmp_import_name_from_437 = tmp_import_from_77__module;
        if (PyModule_Check(tmp_import_name_from_437)) {
            tmp_assign_source_518 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_437,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1059],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_518 = IMPORT_NAME(tmp_import_name_from_437, mod_consts[1059]);
        }

        if (tmp_assign_source_518 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 577;

            goto try_except_handler_77;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1059], tmp_assign_source_518);
    }
    goto try_end_77;
    // Exception handler code:
    try_except_handler_77:;
    exception_keeper_type_77 = exception_type;
    exception_keeper_value_77 = exception_value;
    exception_keeper_tb_77 = exception_tb;
    exception_keeper_lineno_77 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_77__module);
    Py_DECREF(tmp_import_from_77__module);
    tmp_import_from_77__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_77;
    exception_value = exception_keeper_value_77;
    exception_tb = exception_keeper_tb_77;
    exception_lineno = exception_keeper_lineno_77;

    goto frame_exception_exit_1;
    // End of try:
    try_end_77:;
    CHECK_OBJECT(tmp_import_from_77__module);
    Py_DECREF(tmp_import_from_77__module);
    tmp_import_from_77__module = NULL;
    {
        PyObject *tmp_assign_source_519;
        PyObject *tmp_name_value_308;
        PyObject *tmp_globals_arg_value_308;
        PyObject *tmp_locals_arg_value_308;
        PyObject *tmp_fromlist_value_308;
        PyObject *tmp_level_value_308;
        tmp_name_value_308 = mod_consts[1060];
        tmp_globals_arg_value_308 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_308 = Py_None;
        tmp_fromlist_value_308 = mod_consts[1061];
        tmp_level_value_308 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 582;
        tmp_assign_source_519 = IMPORT_MODULE5(tmp_name_value_308, tmp_globals_arg_value_308, tmp_locals_arg_value_308, tmp_fromlist_value_308, tmp_level_value_308);
        if (tmp_assign_source_519 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 582;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_78__module == NULL);
        tmp_import_from_78__module = tmp_assign_source_519;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_520;
        PyObject *tmp_import_name_from_438;
        CHECK_OBJECT(tmp_import_from_78__module);
        tmp_import_name_from_438 = tmp_import_from_78__module;
        if (PyModule_Check(tmp_import_name_from_438)) {
            tmp_assign_source_520 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_438,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1062],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_520 = IMPORT_NAME(tmp_import_name_from_438, mod_consts[1062]);
        }

        if (tmp_assign_source_520 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 582;

            goto try_except_handler_78;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1062], tmp_assign_source_520);
    }
    {
        PyObject *tmp_assign_source_521;
        PyObject *tmp_import_name_from_439;
        CHECK_OBJECT(tmp_import_from_78__module);
        tmp_import_name_from_439 = tmp_import_from_78__module;
        if (PyModule_Check(tmp_import_name_from_439)) {
            tmp_assign_source_521 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_439,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1063],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_521 = IMPORT_NAME(tmp_import_name_from_439, mod_consts[1063]);
        }

        if (tmp_assign_source_521 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 582;

            goto try_except_handler_78;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1063], tmp_assign_source_521);
    }
    {
        PyObject *tmp_assign_source_522;
        PyObject *tmp_import_name_from_440;
        CHECK_OBJECT(tmp_import_from_78__module);
        tmp_import_name_from_440 = tmp_import_from_78__module;
        if (PyModule_Check(tmp_import_name_from_440)) {
            tmp_assign_source_522 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_440,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1064],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_522 = IMPORT_NAME(tmp_import_name_from_440, mod_consts[1064]);
        }

        if (tmp_assign_source_522 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 582;

            goto try_except_handler_78;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1064], tmp_assign_source_522);
    }
    goto try_end_78;
    // Exception handler code:
    try_except_handler_78:;
    exception_keeper_type_78 = exception_type;
    exception_keeper_value_78 = exception_value;
    exception_keeper_tb_78 = exception_tb;
    exception_keeper_lineno_78 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_78__module);
    Py_DECREF(tmp_import_from_78__module);
    tmp_import_from_78__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_78;
    exception_value = exception_keeper_value_78;
    exception_tb = exception_keeper_tb_78;
    exception_lineno = exception_keeper_lineno_78;

    goto frame_exception_exit_1;
    // End of try:
    try_end_78:;
    CHECK_OBJECT(tmp_import_from_78__module);
    Py_DECREF(tmp_import_from_78__module);
    tmp_import_from_78__module = NULL;
    {
        PyObject *tmp_assign_source_523;
        PyObject *tmp_import_name_from_441;
        PyObject *tmp_name_value_309;
        PyObject *tmp_globals_arg_value_309;
        PyObject *tmp_locals_arg_value_309;
        PyObject *tmp_fromlist_value_309;
        PyObject *tmp_level_value_309;
        tmp_name_value_309 = mod_consts[1065];
        tmp_globals_arg_value_309 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_309 = Py_None;
        tmp_fromlist_value_309 = mod_consts[1066];
        tmp_level_value_309 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 587;
        tmp_import_name_from_441 = IMPORT_MODULE5(tmp_name_value_309, tmp_globals_arg_value_309, tmp_locals_arg_value_309, tmp_fromlist_value_309, tmp_level_value_309);
        if (tmp_import_name_from_441 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 587;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_441)) {
            tmp_assign_source_523 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_441,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1067],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_523 = IMPORT_NAME(tmp_import_name_from_441, mod_consts[1067]);
        }

        Py_DECREF(tmp_import_name_from_441);
        if (tmp_assign_source_523 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 587;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1067], tmp_assign_source_523);
    }
    {
        PyObject *tmp_assign_source_524;
        PyObject *tmp_import_name_from_442;
        PyObject *tmp_name_value_310;
        PyObject *tmp_globals_arg_value_310;
        PyObject *tmp_locals_arg_value_310;
        PyObject *tmp_fromlist_value_310;
        PyObject *tmp_level_value_310;
        tmp_name_value_310 = mod_consts[1068];
        tmp_globals_arg_value_310 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_310 = Py_None;
        tmp_fromlist_value_310 = mod_consts[1069];
        tmp_level_value_310 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 588;
        tmp_import_name_from_442 = IMPORT_MODULE5(tmp_name_value_310, tmp_globals_arg_value_310, tmp_locals_arg_value_310, tmp_fromlist_value_310, tmp_level_value_310);
        if (tmp_import_name_from_442 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 588;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_442)) {
            tmp_assign_source_524 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_442,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1070],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_524 = IMPORT_NAME(tmp_import_name_from_442, mod_consts[1070]);
        }

        Py_DECREF(tmp_import_name_from_442);
        if (tmp_assign_source_524 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 588;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1070], tmp_assign_source_524);
    }
    {
        PyObject *tmp_assign_source_525;
        PyObject *tmp_import_name_from_443;
        PyObject *tmp_name_value_311;
        PyObject *tmp_globals_arg_value_311;
        PyObject *tmp_locals_arg_value_311;
        PyObject *tmp_fromlist_value_311;
        PyObject *tmp_level_value_311;
        tmp_name_value_311 = mod_consts[1071];
        tmp_globals_arg_value_311 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_311 = Py_None;
        tmp_fromlist_value_311 = mod_consts[1072];
        tmp_level_value_311 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 589;
        tmp_import_name_from_443 = IMPORT_MODULE5(tmp_name_value_311, tmp_globals_arg_value_311, tmp_locals_arg_value_311, tmp_fromlist_value_311, tmp_level_value_311);
        if (tmp_import_name_from_443 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 589;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_443)) {
            tmp_assign_source_525 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_443,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1073],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_525 = IMPORT_NAME(tmp_import_name_from_443, mod_consts[1073]);
        }

        Py_DECREF(tmp_import_name_from_443);
        if (tmp_assign_source_525 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 589;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1073], tmp_assign_source_525);
    }
    {
        PyObject *tmp_assign_source_526;
        PyObject *tmp_import_name_from_444;
        PyObject *tmp_name_value_312;
        PyObject *tmp_globals_arg_value_312;
        PyObject *tmp_locals_arg_value_312;
        PyObject *tmp_fromlist_value_312;
        PyObject *tmp_level_value_312;
        tmp_name_value_312 = mod_consts[1074];
        tmp_globals_arg_value_312 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_312 = Py_None;
        tmp_fromlist_value_312 = mod_consts[1075];
        tmp_level_value_312 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 590;
        tmp_import_name_from_444 = IMPORT_MODULE5(tmp_name_value_312, tmp_globals_arg_value_312, tmp_locals_arg_value_312, tmp_fromlist_value_312, tmp_level_value_312);
        if (tmp_import_name_from_444 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 590;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_444)) {
            tmp_assign_source_526 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_444,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1076],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_526 = IMPORT_NAME(tmp_import_name_from_444, mod_consts[1076]);
        }

        Py_DECREF(tmp_import_name_from_444);
        if (tmp_assign_source_526 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 590;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1076], tmp_assign_source_526);
    }
    {
        PyObject *tmp_assign_source_527;
        PyObject *tmp_import_name_from_445;
        PyObject *tmp_name_value_313;
        PyObject *tmp_globals_arg_value_313;
        PyObject *tmp_locals_arg_value_313;
        PyObject *tmp_fromlist_value_313;
        PyObject *tmp_level_value_313;
        tmp_name_value_313 = mod_consts[1077];
        tmp_globals_arg_value_313 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_313 = Py_None;
        tmp_fromlist_value_313 = mod_consts[1078];
        tmp_level_value_313 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 591;
        tmp_import_name_from_445 = IMPORT_MODULE5(tmp_name_value_313, tmp_globals_arg_value_313, tmp_locals_arg_value_313, tmp_fromlist_value_313, tmp_level_value_313);
        if (tmp_import_name_from_445 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 591;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_445)) {
            tmp_assign_source_527 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_445,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1079],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_527 = IMPORT_NAME(tmp_import_name_from_445, mod_consts[1079]);
        }

        Py_DECREF(tmp_import_name_from_445);
        if (tmp_assign_source_527 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 591;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1079], tmp_assign_source_527);
    }
    {
        PyObject *tmp_assign_source_528;
        PyObject *tmp_name_value_314;
        PyObject *tmp_globals_arg_value_314;
        PyObject *tmp_locals_arg_value_314;
        PyObject *tmp_fromlist_value_314;
        PyObject *tmp_level_value_314;
        tmp_name_value_314 = mod_consts[1080];
        tmp_globals_arg_value_314 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_314 = Py_None;
        tmp_fromlist_value_314 = mod_consts[1081];
        tmp_level_value_314 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 592;
        tmp_assign_source_528 = IMPORT_MODULE5(tmp_name_value_314, tmp_globals_arg_value_314, tmp_locals_arg_value_314, tmp_fromlist_value_314, tmp_level_value_314);
        if (tmp_assign_source_528 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 592;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_79__module == NULL);
        tmp_import_from_79__module = tmp_assign_source_528;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_529;
        PyObject *tmp_import_name_from_446;
        CHECK_OBJECT(tmp_import_from_79__module);
        tmp_import_name_from_446 = tmp_import_from_79__module;
        if (PyModule_Check(tmp_import_name_from_446)) {
            tmp_assign_source_529 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_446,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1082],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_529 = IMPORT_NAME(tmp_import_name_from_446, mod_consts[1082]);
        }

        if (tmp_assign_source_529 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 592;

            goto try_except_handler_79;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1082], tmp_assign_source_529);
    }
    {
        PyObject *tmp_assign_source_530;
        PyObject *tmp_import_name_from_447;
        CHECK_OBJECT(tmp_import_from_79__module);
        tmp_import_name_from_447 = tmp_import_from_79__module;
        if (PyModule_Check(tmp_import_name_from_447)) {
            tmp_assign_source_530 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_447,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1083],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_530 = IMPORT_NAME(tmp_import_name_from_447, mod_consts[1083]);
        }

        if (tmp_assign_source_530 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 592;

            goto try_except_handler_79;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1083], tmp_assign_source_530);
    }
    goto try_end_79;
    // Exception handler code:
    try_except_handler_79:;
    exception_keeper_type_79 = exception_type;
    exception_keeper_value_79 = exception_value;
    exception_keeper_tb_79 = exception_tb;
    exception_keeper_lineno_79 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_79__module);
    Py_DECREF(tmp_import_from_79__module);
    tmp_import_from_79__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_79;
    exception_value = exception_keeper_value_79;
    exception_tb = exception_keeper_tb_79;
    exception_lineno = exception_keeper_lineno_79;

    goto frame_exception_exit_1;
    // End of try:
    try_end_79:;
    CHECK_OBJECT(tmp_import_from_79__module);
    Py_DECREF(tmp_import_from_79__module);
    tmp_import_from_79__module = NULL;
    {
        PyObject *tmp_assign_source_531;
        PyObject *tmp_name_value_315;
        PyObject *tmp_globals_arg_value_315;
        PyObject *tmp_locals_arg_value_315;
        PyObject *tmp_fromlist_value_315;
        PyObject *tmp_level_value_315;
        tmp_name_value_315 = mod_consts[1084];
        tmp_globals_arg_value_315 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_315 = Py_None;
        tmp_fromlist_value_315 = mod_consts[1085];
        tmp_level_value_315 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 596;
        tmp_assign_source_531 = IMPORT_MODULE5(tmp_name_value_315, tmp_globals_arg_value_315, tmp_locals_arg_value_315, tmp_fromlist_value_315, tmp_level_value_315);
        if (tmp_assign_source_531 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 596;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_80__module == NULL);
        tmp_import_from_80__module = tmp_assign_source_531;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_532;
        PyObject *tmp_import_name_from_448;
        CHECK_OBJECT(tmp_import_from_80__module);
        tmp_import_name_from_448 = tmp_import_from_80__module;
        if (PyModule_Check(tmp_import_name_from_448)) {
            tmp_assign_source_532 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_448,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1086],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_532 = IMPORT_NAME(tmp_import_name_from_448, mod_consts[1086]);
        }

        if (tmp_assign_source_532 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 596;

            goto try_except_handler_80;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1086], tmp_assign_source_532);
    }
    {
        PyObject *tmp_assign_source_533;
        PyObject *tmp_import_name_from_449;
        CHECK_OBJECT(tmp_import_from_80__module);
        tmp_import_name_from_449 = tmp_import_from_80__module;
        if (PyModule_Check(tmp_import_name_from_449)) {
            tmp_assign_source_533 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_449,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1087],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_533 = IMPORT_NAME(tmp_import_name_from_449, mod_consts[1087]);
        }

        if (tmp_assign_source_533 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 596;

            goto try_except_handler_80;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1087], tmp_assign_source_533);
    }
    {
        PyObject *tmp_assign_source_534;
        PyObject *tmp_import_name_from_450;
        CHECK_OBJECT(tmp_import_from_80__module);
        tmp_import_name_from_450 = tmp_import_from_80__module;
        if (PyModule_Check(tmp_import_name_from_450)) {
            tmp_assign_source_534 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_450,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1088],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_534 = IMPORT_NAME(tmp_import_name_from_450, mod_consts[1088]);
        }

        if (tmp_assign_source_534 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 596;

            goto try_except_handler_80;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1088], tmp_assign_source_534);
    }
    goto try_end_80;
    // Exception handler code:
    try_except_handler_80:;
    exception_keeper_type_80 = exception_type;
    exception_keeper_value_80 = exception_value;
    exception_keeper_tb_80 = exception_tb;
    exception_keeper_lineno_80 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_80__module);
    Py_DECREF(tmp_import_from_80__module);
    tmp_import_from_80__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_80;
    exception_value = exception_keeper_value_80;
    exception_tb = exception_keeper_tb_80;
    exception_lineno = exception_keeper_lineno_80;

    goto frame_exception_exit_1;
    // End of try:
    try_end_80:;
    CHECK_OBJECT(tmp_import_from_80__module);
    Py_DECREF(tmp_import_from_80__module);
    tmp_import_from_80__module = NULL;
    {
        PyObject *tmp_assign_source_535;
        PyObject *tmp_name_value_316;
        PyObject *tmp_globals_arg_value_316;
        PyObject *tmp_locals_arg_value_316;
        PyObject *tmp_fromlist_value_316;
        PyObject *tmp_level_value_316;
        tmp_name_value_316 = mod_consts[1089];
        tmp_globals_arg_value_316 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_316 = Py_None;
        tmp_fromlist_value_316 = mod_consts[1090];
        tmp_level_value_316 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 601;
        tmp_assign_source_535 = IMPORT_MODULE5(tmp_name_value_316, tmp_globals_arg_value_316, tmp_locals_arg_value_316, tmp_fromlist_value_316, tmp_level_value_316);
        if (tmp_assign_source_535 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 601;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_81__module == NULL);
        tmp_import_from_81__module = tmp_assign_source_535;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_536;
        PyObject *tmp_import_name_from_451;
        CHECK_OBJECT(tmp_import_from_81__module);
        tmp_import_name_from_451 = tmp_import_from_81__module;
        if (PyModule_Check(tmp_import_name_from_451)) {
            tmp_assign_source_536 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_451,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1091],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_536 = IMPORT_NAME(tmp_import_name_from_451, mod_consts[1091]);
        }

        if (tmp_assign_source_536 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 601;

            goto try_except_handler_81;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1091], tmp_assign_source_536);
    }
    {
        PyObject *tmp_assign_source_537;
        PyObject *tmp_import_name_from_452;
        CHECK_OBJECT(tmp_import_from_81__module);
        tmp_import_name_from_452 = tmp_import_from_81__module;
        if (PyModule_Check(tmp_import_name_from_452)) {
            tmp_assign_source_537 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_452,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1092],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_537 = IMPORT_NAME(tmp_import_name_from_452, mod_consts[1092]);
        }

        if (tmp_assign_source_537 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 601;

            goto try_except_handler_81;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1092], tmp_assign_source_537);
    }
    {
        PyObject *tmp_assign_source_538;
        PyObject *tmp_import_name_from_453;
        CHECK_OBJECT(tmp_import_from_81__module);
        tmp_import_name_from_453 = tmp_import_from_81__module;
        if (PyModule_Check(tmp_import_name_from_453)) {
            tmp_assign_source_538 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_453,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1093],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_538 = IMPORT_NAME(tmp_import_name_from_453, mod_consts[1093]);
        }

        if (tmp_assign_source_538 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 601;

            goto try_except_handler_81;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1093], tmp_assign_source_538);
    }
    goto try_end_81;
    // Exception handler code:
    try_except_handler_81:;
    exception_keeper_type_81 = exception_type;
    exception_keeper_value_81 = exception_value;
    exception_keeper_tb_81 = exception_tb;
    exception_keeper_lineno_81 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_81__module);
    Py_DECREF(tmp_import_from_81__module);
    tmp_import_from_81__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_81;
    exception_value = exception_keeper_value_81;
    exception_tb = exception_keeper_tb_81;
    exception_lineno = exception_keeper_lineno_81;

    goto frame_exception_exit_1;
    // End of try:
    try_end_81:;
    CHECK_OBJECT(tmp_import_from_81__module);
    Py_DECREF(tmp_import_from_81__module);
    tmp_import_from_81__module = NULL;
    {
        PyObject *tmp_assign_source_539;
        PyObject *tmp_name_value_317;
        PyObject *tmp_globals_arg_value_317;
        PyObject *tmp_locals_arg_value_317;
        PyObject *tmp_fromlist_value_317;
        PyObject *tmp_level_value_317;
        tmp_name_value_317 = mod_consts[1094];
        tmp_globals_arg_value_317 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_317 = Py_None;
        tmp_fromlist_value_317 = mod_consts[1095];
        tmp_level_value_317 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 606;
        tmp_assign_source_539 = IMPORT_MODULE5(tmp_name_value_317, tmp_globals_arg_value_317, tmp_locals_arg_value_317, tmp_fromlist_value_317, tmp_level_value_317);
        if (tmp_assign_source_539 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 606;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_82__module == NULL);
        tmp_import_from_82__module = tmp_assign_source_539;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_540;
        PyObject *tmp_import_name_from_454;
        CHECK_OBJECT(tmp_import_from_82__module);
        tmp_import_name_from_454 = tmp_import_from_82__module;
        if (PyModule_Check(tmp_import_name_from_454)) {
            tmp_assign_source_540 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_454,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1096],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_540 = IMPORT_NAME(tmp_import_name_from_454, mod_consts[1096]);
        }

        if (tmp_assign_source_540 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 606;

            goto try_except_handler_82;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1096], tmp_assign_source_540);
    }
    {
        PyObject *tmp_assign_source_541;
        PyObject *tmp_import_name_from_455;
        CHECK_OBJECT(tmp_import_from_82__module);
        tmp_import_name_from_455 = tmp_import_from_82__module;
        if (PyModule_Check(tmp_import_name_from_455)) {
            tmp_assign_source_541 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_455,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1097],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_541 = IMPORT_NAME(tmp_import_name_from_455, mod_consts[1097]);
        }

        if (tmp_assign_source_541 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 606;

            goto try_except_handler_82;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1097], tmp_assign_source_541);
    }
    goto try_end_82;
    // Exception handler code:
    try_except_handler_82:;
    exception_keeper_type_82 = exception_type;
    exception_keeper_value_82 = exception_value;
    exception_keeper_tb_82 = exception_tb;
    exception_keeper_lineno_82 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_82__module);
    Py_DECREF(tmp_import_from_82__module);
    tmp_import_from_82__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_82;
    exception_value = exception_keeper_value_82;
    exception_tb = exception_keeper_tb_82;
    exception_lineno = exception_keeper_lineno_82;

    goto frame_exception_exit_1;
    // End of try:
    try_end_82:;
    CHECK_OBJECT(tmp_import_from_82__module);
    Py_DECREF(tmp_import_from_82__module);
    tmp_import_from_82__module = NULL;
    {
        PyObject *tmp_assign_source_542;
        PyObject *tmp_import_name_from_456;
        PyObject *tmp_name_value_318;
        PyObject *tmp_globals_arg_value_318;
        PyObject *tmp_locals_arg_value_318;
        PyObject *tmp_fromlist_value_318;
        PyObject *tmp_level_value_318;
        tmp_name_value_318 = mod_consts[1098];
        tmp_globals_arg_value_318 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_318 = Py_None;
        tmp_fromlist_value_318 = mod_consts[1099];
        tmp_level_value_318 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 610;
        tmp_import_name_from_456 = IMPORT_MODULE5(tmp_name_value_318, tmp_globals_arg_value_318, tmp_locals_arg_value_318, tmp_fromlist_value_318, tmp_level_value_318);
        if (tmp_import_name_from_456 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 610;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_456)) {
            tmp_assign_source_542 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_456,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1100],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_542 = IMPORT_NAME(tmp_import_name_from_456, mod_consts[1100]);
        }

        Py_DECREF(tmp_import_name_from_456);
        if (tmp_assign_source_542 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 610;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1100], tmp_assign_source_542);
    }
    {
        PyObject *tmp_assign_source_543;
        PyObject *tmp_import_name_from_457;
        PyObject *tmp_name_value_319;
        PyObject *tmp_globals_arg_value_319;
        PyObject *tmp_locals_arg_value_319;
        PyObject *tmp_fromlist_value_319;
        PyObject *tmp_level_value_319;
        tmp_name_value_319 = mod_consts[1101];
        tmp_globals_arg_value_319 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_319 = Py_None;
        tmp_fromlist_value_319 = mod_consts[1102];
        tmp_level_value_319 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 611;
        tmp_import_name_from_457 = IMPORT_MODULE5(tmp_name_value_319, tmp_globals_arg_value_319, tmp_locals_arg_value_319, tmp_fromlist_value_319, tmp_level_value_319);
        if (tmp_import_name_from_457 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 611;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_457)) {
            tmp_assign_source_543 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_457,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1103],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_543 = IMPORT_NAME(tmp_import_name_from_457, mod_consts[1103]);
        }

        Py_DECREF(tmp_import_name_from_457);
        if (tmp_assign_source_543 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 611;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1103], tmp_assign_source_543);
    }
    {
        PyObject *tmp_assign_source_544;
        PyObject *tmp_import_name_from_458;
        PyObject *tmp_name_value_320;
        PyObject *tmp_globals_arg_value_320;
        PyObject *tmp_locals_arg_value_320;
        PyObject *tmp_fromlist_value_320;
        PyObject *tmp_level_value_320;
        tmp_name_value_320 = mod_consts[1104];
        tmp_globals_arg_value_320 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_320 = Py_None;
        tmp_fromlist_value_320 = mod_consts[1105];
        tmp_level_value_320 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 612;
        tmp_import_name_from_458 = IMPORT_MODULE5(tmp_name_value_320, tmp_globals_arg_value_320, tmp_locals_arg_value_320, tmp_fromlist_value_320, tmp_level_value_320);
        if (tmp_import_name_from_458 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 612;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_458)) {
            tmp_assign_source_544 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_458,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1106],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_544 = IMPORT_NAME(tmp_import_name_from_458, mod_consts[1106]);
        }

        Py_DECREF(tmp_import_name_from_458);
        if (tmp_assign_source_544 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 612;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1106], tmp_assign_source_544);
    }
    {
        PyObject *tmp_assign_source_545;
        PyObject *tmp_name_value_321;
        PyObject *tmp_globals_arg_value_321;
        PyObject *tmp_locals_arg_value_321;
        PyObject *tmp_fromlist_value_321;
        PyObject *tmp_level_value_321;
        tmp_name_value_321 = mod_consts[1107];
        tmp_globals_arg_value_321 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_321 = Py_None;
        tmp_fromlist_value_321 = mod_consts[1108];
        tmp_level_value_321 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 613;
        tmp_assign_source_545 = IMPORT_MODULE5(tmp_name_value_321, tmp_globals_arg_value_321, tmp_locals_arg_value_321, tmp_fromlist_value_321, tmp_level_value_321);
        if (tmp_assign_source_545 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 613;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_83__module == NULL);
        tmp_import_from_83__module = tmp_assign_source_545;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_546;
        PyObject *tmp_import_name_from_459;
        CHECK_OBJECT(tmp_import_from_83__module);
        tmp_import_name_from_459 = tmp_import_from_83__module;
        if (PyModule_Check(tmp_import_name_from_459)) {
            tmp_assign_source_546 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_459,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1109],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_546 = IMPORT_NAME(tmp_import_name_from_459, mod_consts[1109]);
        }

        if (tmp_assign_source_546 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 613;

            goto try_except_handler_83;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1109], tmp_assign_source_546);
    }
    {
        PyObject *tmp_assign_source_547;
        PyObject *tmp_import_name_from_460;
        CHECK_OBJECT(tmp_import_from_83__module);
        tmp_import_name_from_460 = tmp_import_from_83__module;
        if (PyModule_Check(tmp_import_name_from_460)) {
            tmp_assign_source_547 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_460,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1110],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_547 = IMPORT_NAME(tmp_import_name_from_460, mod_consts[1110]);
        }

        if (tmp_assign_source_547 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 613;

            goto try_except_handler_83;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1110], tmp_assign_source_547);
    }
    {
        PyObject *tmp_assign_source_548;
        PyObject *tmp_import_name_from_461;
        CHECK_OBJECT(tmp_import_from_83__module);
        tmp_import_name_from_461 = tmp_import_from_83__module;
        if (PyModule_Check(tmp_import_name_from_461)) {
            tmp_assign_source_548 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_461,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1111],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_548 = IMPORT_NAME(tmp_import_name_from_461, mod_consts[1111]);
        }

        if (tmp_assign_source_548 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 613;

            goto try_except_handler_83;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1111], tmp_assign_source_548);
    }
    goto try_end_83;
    // Exception handler code:
    try_except_handler_83:;
    exception_keeper_type_83 = exception_type;
    exception_keeper_value_83 = exception_value;
    exception_keeper_tb_83 = exception_tb;
    exception_keeper_lineno_83 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_83__module);
    Py_DECREF(tmp_import_from_83__module);
    tmp_import_from_83__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_83;
    exception_value = exception_keeper_value_83;
    exception_tb = exception_keeper_tb_83;
    exception_lineno = exception_keeper_lineno_83;

    goto frame_exception_exit_1;
    // End of try:
    try_end_83:;
    CHECK_OBJECT(tmp_import_from_83__module);
    Py_DECREF(tmp_import_from_83__module);
    tmp_import_from_83__module = NULL;
    {
        PyObject *tmp_assign_source_549;
        PyObject *tmp_import_name_from_462;
        PyObject *tmp_name_value_322;
        PyObject *tmp_globals_arg_value_322;
        PyObject *tmp_locals_arg_value_322;
        PyObject *tmp_fromlist_value_322;
        PyObject *tmp_level_value_322;
        tmp_name_value_322 = mod_consts[1112];
        tmp_globals_arg_value_322 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_322 = Py_None;
        tmp_fromlist_value_322 = mod_consts[1113];
        tmp_level_value_322 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 618;
        tmp_import_name_from_462 = IMPORT_MODULE5(tmp_name_value_322, tmp_globals_arg_value_322, tmp_locals_arg_value_322, tmp_fromlist_value_322, tmp_level_value_322);
        if (tmp_import_name_from_462 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 618;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_462)) {
            tmp_assign_source_549 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_462,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1114],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_549 = IMPORT_NAME(tmp_import_name_from_462, mod_consts[1114]);
        }

        Py_DECREF(tmp_import_name_from_462);
        if (tmp_assign_source_549 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 618;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1114], tmp_assign_source_549);
    }
    {
        PyObject *tmp_assign_source_550;
        PyObject *tmp_import_name_from_463;
        PyObject *tmp_name_value_323;
        PyObject *tmp_globals_arg_value_323;
        PyObject *tmp_locals_arg_value_323;
        PyObject *tmp_fromlist_value_323;
        PyObject *tmp_level_value_323;
        tmp_name_value_323 = mod_consts[1115];
        tmp_globals_arg_value_323 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_323 = Py_None;
        tmp_fromlist_value_323 = mod_consts[1116];
        tmp_level_value_323 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 619;
        tmp_import_name_from_463 = IMPORT_MODULE5(tmp_name_value_323, tmp_globals_arg_value_323, tmp_locals_arg_value_323, tmp_fromlist_value_323, tmp_level_value_323);
        if (tmp_import_name_from_463 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 619;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_463)) {
            tmp_assign_source_550 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_463,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1117],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_550 = IMPORT_NAME(tmp_import_name_from_463, mod_consts[1117]);
        }

        Py_DECREF(tmp_import_name_from_463);
        if (tmp_assign_source_550 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 619;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1117], tmp_assign_source_550);
    }
    {
        PyObject *tmp_assign_source_551;
        PyObject *tmp_import_name_from_464;
        PyObject *tmp_name_value_324;
        PyObject *tmp_globals_arg_value_324;
        PyObject *tmp_locals_arg_value_324;
        PyObject *tmp_fromlist_value_324;
        PyObject *tmp_level_value_324;
        tmp_name_value_324 = mod_consts[1118];
        tmp_globals_arg_value_324 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_324 = Py_None;
        tmp_fromlist_value_324 = mod_consts[1119];
        tmp_level_value_324 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 620;
        tmp_import_name_from_464 = IMPORT_MODULE5(tmp_name_value_324, tmp_globals_arg_value_324, tmp_locals_arg_value_324, tmp_fromlist_value_324, tmp_level_value_324);
        if (tmp_import_name_from_464 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 620;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_464)) {
            tmp_assign_source_551 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_464,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1120],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_551 = IMPORT_NAME(tmp_import_name_from_464, mod_consts[1120]);
        }

        Py_DECREF(tmp_import_name_from_464);
        if (tmp_assign_source_551 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 620;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1120], tmp_assign_source_551);
    }
    {
        PyObject *tmp_assign_source_552;
        PyObject *tmp_import_name_from_465;
        PyObject *tmp_name_value_325;
        PyObject *tmp_globals_arg_value_325;
        PyObject *tmp_locals_arg_value_325;
        PyObject *tmp_fromlist_value_325;
        PyObject *tmp_level_value_325;
        tmp_name_value_325 = mod_consts[1121];
        tmp_globals_arg_value_325 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_325 = Py_None;
        tmp_fromlist_value_325 = mod_consts[1122];
        tmp_level_value_325 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 621;
        tmp_import_name_from_465 = IMPORT_MODULE5(tmp_name_value_325, tmp_globals_arg_value_325, tmp_locals_arg_value_325, tmp_fromlist_value_325, tmp_level_value_325);
        if (tmp_import_name_from_465 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 621;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_465)) {
            tmp_assign_source_552 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_465,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1123],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_552 = IMPORT_NAME(tmp_import_name_from_465, mod_consts[1123]);
        }

        Py_DECREF(tmp_import_name_from_465);
        if (tmp_assign_source_552 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 621;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1123], tmp_assign_source_552);
    }
    {
        PyObject *tmp_assign_source_553;
        PyObject *tmp_name_value_326;
        PyObject *tmp_globals_arg_value_326;
        PyObject *tmp_locals_arg_value_326;
        PyObject *tmp_fromlist_value_326;
        PyObject *tmp_level_value_326;
        tmp_name_value_326 = mod_consts[1124];
        tmp_globals_arg_value_326 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_326 = Py_None;
        tmp_fromlist_value_326 = mod_consts[1125];
        tmp_level_value_326 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 622;
        tmp_assign_source_553 = IMPORT_MODULE5(tmp_name_value_326, tmp_globals_arg_value_326, tmp_locals_arg_value_326, tmp_fromlist_value_326, tmp_level_value_326);
        if (tmp_assign_source_553 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 622;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_84__module == NULL);
        tmp_import_from_84__module = tmp_assign_source_553;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_554;
        PyObject *tmp_import_name_from_466;
        CHECK_OBJECT(tmp_import_from_84__module);
        tmp_import_name_from_466 = tmp_import_from_84__module;
        if (PyModule_Check(tmp_import_name_from_466)) {
            tmp_assign_source_554 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_466,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1126],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_554 = IMPORT_NAME(tmp_import_name_from_466, mod_consts[1126]);
        }

        if (tmp_assign_source_554 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 622;

            goto try_except_handler_84;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1126], tmp_assign_source_554);
    }
    {
        PyObject *tmp_assign_source_555;
        PyObject *tmp_import_name_from_467;
        CHECK_OBJECT(tmp_import_from_84__module);
        tmp_import_name_from_467 = tmp_import_from_84__module;
        if (PyModule_Check(tmp_import_name_from_467)) {
            tmp_assign_source_555 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_467,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1127],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_555 = IMPORT_NAME(tmp_import_name_from_467, mod_consts[1127]);
        }

        if (tmp_assign_source_555 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 622;

            goto try_except_handler_84;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1127], tmp_assign_source_555);
    }
    goto try_end_84;
    // Exception handler code:
    try_except_handler_84:;
    exception_keeper_type_84 = exception_type;
    exception_keeper_value_84 = exception_value;
    exception_keeper_tb_84 = exception_tb;
    exception_keeper_lineno_84 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_84__module);
    Py_DECREF(tmp_import_from_84__module);
    tmp_import_from_84__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_84;
    exception_value = exception_keeper_value_84;
    exception_tb = exception_keeper_tb_84;
    exception_lineno = exception_keeper_lineno_84;

    goto frame_exception_exit_1;
    // End of try:
    try_end_84:;
    CHECK_OBJECT(tmp_import_from_84__module);
    Py_DECREF(tmp_import_from_84__module);
    tmp_import_from_84__module = NULL;
    {
        PyObject *tmp_assign_source_556;
        PyObject *tmp_import_name_from_468;
        PyObject *tmp_name_value_327;
        PyObject *tmp_globals_arg_value_327;
        PyObject *tmp_locals_arg_value_327;
        PyObject *tmp_fromlist_value_327;
        PyObject *tmp_level_value_327;
        tmp_name_value_327 = mod_consts[1128];
        tmp_globals_arg_value_327 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_327 = Py_None;
        tmp_fromlist_value_327 = mod_consts[1129];
        tmp_level_value_327 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 626;
        tmp_import_name_from_468 = IMPORT_MODULE5(tmp_name_value_327, tmp_globals_arg_value_327, tmp_locals_arg_value_327, tmp_fromlist_value_327, tmp_level_value_327);
        if (tmp_import_name_from_468 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 626;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_468)) {
            tmp_assign_source_556 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_468,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1130],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_556 = IMPORT_NAME(tmp_import_name_from_468, mod_consts[1130]);
        }

        Py_DECREF(tmp_import_name_from_468);
        if (tmp_assign_source_556 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 626;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1130], tmp_assign_source_556);
    }
    {
        PyObject *tmp_assign_source_557;
        PyObject *tmp_name_value_328;
        PyObject *tmp_globals_arg_value_328;
        PyObject *tmp_locals_arg_value_328;
        PyObject *tmp_fromlist_value_328;
        PyObject *tmp_level_value_328;
        tmp_name_value_328 = mod_consts[1131];
        tmp_globals_arg_value_328 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_328 = Py_None;
        tmp_fromlist_value_328 = mod_consts[1132];
        tmp_level_value_328 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 627;
        tmp_assign_source_557 = IMPORT_MODULE5(tmp_name_value_328, tmp_globals_arg_value_328, tmp_locals_arg_value_328, tmp_fromlist_value_328, tmp_level_value_328);
        if (tmp_assign_source_557 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 627;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_85__module == NULL);
        tmp_import_from_85__module = tmp_assign_source_557;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_558;
        PyObject *tmp_import_name_from_469;
        CHECK_OBJECT(tmp_import_from_85__module);
        tmp_import_name_from_469 = tmp_import_from_85__module;
        if (PyModule_Check(tmp_import_name_from_469)) {
            tmp_assign_source_558 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_469,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1133],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_558 = IMPORT_NAME(tmp_import_name_from_469, mod_consts[1133]);
        }

        if (tmp_assign_source_558 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 627;

            goto try_except_handler_85;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1133], tmp_assign_source_558);
    }
    {
        PyObject *tmp_assign_source_559;
        PyObject *tmp_import_name_from_470;
        CHECK_OBJECT(tmp_import_from_85__module);
        tmp_import_name_from_470 = tmp_import_from_85__module;
        if (PyModule_Check(tmp_import_name_from_470)) {
            tmp_assign_source_559 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_470,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1134],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_559 = IMPORT_NAME(tmp_import_name_from_470, mod_consts[1134]);
        }

        if (tmp_assign_source_559 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 627;

            goto try_except_handler_85;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1134], tmp_assign_source_559);
    }
    {
        PyObject *tmp_assign_source_560;
        PyObject *tmp_import_name_from_471;
        CHECK_OBJECT(tmp_import_from_85__module);
        tmp_import_name_from_471 = tmp_import_from_85__module;
        if (PyModule_Check(tmp_import_name_from_471)) {
            tmp_assign_source_560 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_471,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1135],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_560 = IMPORT_NAME(tmp_import_name_from_471, mod_consts[1135]);
        }

        if (tmp_assign_source_560 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 627;

            goto try_except_handler_85;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1135], tmp_assign_source_560);
    }
    goto try_end_85;
    // Exception handler code:
    try_except_handler_85:;
    exception_keeper_type_85 = exception_type;
    exception_keeper_value_85 = exception_value;
    exception_keeper_tb_85 = exception_tb;
    exception_keeper_lineno_85 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_85__module);
    Py_DECREF(tmp_import_from_85__module);
    tmp_import_from_85__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_85;
    exception_value = exception_keeper_value_85;
    exception_tb = exception_keeper_tb_85;
    exception_lineno = exception_keeper_lineno_85;

    goto frame_exception_exit_1;
    // End of try:
    try_end_85:;
    CHECK_OBJECT(tmp_import_from_85__module);
    Py_DECREF(tmp_import_from_85__module);
    tmp_import_from_85__module = NULL;
    {
        PyObject *tmp_assign_source_561;
        PyObject *tmp_import_name_from_472;
        PyObject *tmp_name_value_329;
        PyObject *tmp_globals_arg_value_329;
        PyObject *tmp_locals_arg_value_329;
        PyObject *tmp_fromlist_value_329;
        PyObject *tmp_level_value_329;
        tmp_name_value_329 = mod_consts[1136];
        tmp_globals_arg_value_329 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_329 = Py_None;
        tmp_fromlist_value_329 = mod_consts[1137];
        tmp_level_value_329 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 632;
        tmp_import_name_from_472 = IMPORT_MODULE5(tmp_name_value_329, tmp_globals_arg_value_329, tmp_locals_arg_value_329, tmp_fromlist_value_329, tmp_level_value_329);
        if (tmp_import_name_from_472 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 632;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_472)) {
            tmp_assign_source_561 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_472,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1138],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_561 = IMPORT_NAME(tmp_import_name_from_472, mod_consts[1138]);
        }

        Py_DECREF(tmp_import_name_from_472);
        if (tmp_assign_source_561 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 632;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1138], tmp_assign_source_561);
    }
    {
        PyObject *tmp_assign_source_562;
        PyObject *tmp_name_value_330;
        PyObject *tmp_globals_arg_value_330;
        PyObject *tmp_locals_arg_value_330;
        PyObject *tmp_fromlist_value_330;
        PyObject *tmp_level_value_330;
        tmp_name_value_330 = mod_consts[1139];
        tmp_globals_arg_value_330 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_330 = Py_None;
        tmp_fromlist_value_330 = mod_consts[1140];
        tmp_level_value_330 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 633;
        tmp_assign_source_562 = IMPORT_MODULE5(tmp_name_value_330, tmp_globals_arg_value_330, tmp_locals_arg_value_330, tmp_fromlist_value_330, tmp_level_value_330);
        if (tmp_assign_source_562 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 633;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_86__module == NULL);
        tmp_import_from_86__module = tmp_assign_source_562;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_563;
        PyObject *tmp_import_name_from_473;
        CHECK_OBJECT(tmp_import_from_86__module);
        tmp_import_name_from_473 = tmp_import_from_86__module;
        if (PyModule_Check(tmp_import_name_from_473)) {
            tmp_assign_source_563 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_473,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1141],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_563 = IMPORT_NAME(tmp_import_name_from_473, mod_consts[1141]);
        }

        if (tmp_assign_source_563 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 633;

            goto try_except_handler_86;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1141], tmp_assign_source_563);
    }
    {
        PyObject *tmp_assign_source_564;
        PyObject *tmp_import_name_from_474;
        CHECK_OBJECT(tmp_import_from_86__module);
        tmp_import_name_from_474 = tmp_import_from_86__module;
        if (PyModule_Check(tmp_import_name_from_474)) {
            tmp_assign_source_564 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_474,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1142],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_564 = IMPORT_NAME(tmp_import_name_from_474, mod_consts[1142]);
        }

        if (tmp_assign_source_564 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 633;

            goto try_except_handler_86;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1142], tmp_assign_source_564);
    }
    goto try_end_86;
    // Exception handler code:
    try_except_handler_86:;
    exception_keeper_type_86 = exception_type;
    exception_keeper_value_86 = exception_value;
    exception_keeper_tb_86 = exception_tb;
    exception_keeper_lineno_86 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_86__module);
    Py_DECREF(tmp_import_from_86__module);
    tmp_import_from_86__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_86;
    exception_value = exception_keeper_value_86;
    exception_tb = exception_keeper_tb_86;
    exception_lineno = exception_keeper_lineno_86;

    goto frame_exception_exit_1;
    // End of try:
    try_end_86:;
    CHECK_OBJECT(tmp_import_from_86__module);
    Py_DECREF(tmp_import_from_86__module);
    tmp_import_from_86__module = NULL;
    {
        PyObject *tmp_assign_source_565;
        PyObject *tmp_import_name_from_475;
        PyObject *tmp_name_value_331;
        PyObject *tmp_globals_arg_value_331;
        PyObject *tmp_locals_arg_value_331;
        PyObject *tmp_fromlist_value_331;
        PyObject *tmp_level_value_331;
        tmp_name_value_331 = mod_consts[1143];
        tmp_globals_arg_value_331 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_331 = Py_None;
        tmp_fromlist_value_331 = mod_consts[1144];
        tmp_level_value_331 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 637;
        tmp_import_name_from_475 = IMPORT_MODULE5(tmp_name_value_331, tmp_globals_arg_value_331, tmp_locals_arg_value_331, tmp_fromlist_value_331, tmp_level_value_331);
        if (tmp_import_name_from_475 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 637;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_475)) {
            tmp_assign_source_565 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_475,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1145],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_565 = IMPORT_NAME(tmp_import_name_from_475, mod_consts[1145]);
        }

        Py_DECREF(tmp_import_name_from_475);
        if (tmp_assign_source_565 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 637;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1145], tmp_assign_source_565);
    }
    {
        PyObject *tmp_assign_source_566;
        PyObject *tmp_import_name_from_476;
        PyObject *tmp_name_value_332;
        PyObject *tmp_globals_arg_value_332;
        PyObject *tmp_locals_arg_value_332;
        PyObject *tmp_fromlist_value_332;
        PyObject *tmp_level_value_332;
        tmp_name_value_332 = mod_consts[1146];
        tmp_globals_arg_value_332 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_332 = Py_None;
        tmp_fromlist_value_332 = mod_consts[1147];
        tmp_level_value_332 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 638;
        tmp_import_name_from_476 = IMPORT_MODULE5(tmp_name_value_332, tmp_globals_arg_value_332, tmp_locals_arg_value_332, tmp_fromlist_value_332, tmp_level_value_332);
        if (tmp_import_name_from_476 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 638;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_476)) {
            tmp_assign_source_566 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_476,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1148],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_566 = IMPORT_NAME(tmp_import_name_from_476, mod_consts[1148]);
        }

        Py_DECREF(tmp_import_name_from_476);
        if (tmp_assign_source_566 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 638;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1148], tmp_assign_source_566);
    }
    {
        PyObject *tmp_assign_source_567;
        PyObject *tmp_name_value_333;
        PyObject *tmp_globals_arg_value_333;
        PyObject *tmp_locals_arg_value_333;
        PyObject *tmp_fromlist_value_333;
        PyObject *tmp_level_value_333;
        tmp_name_value_333 = mod_consts[1149];
        tmp_globals_arg_value_333 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_333 = Py_None;
        tmp_fromlist_value_333 = mod_consts[1150];
        tmp_level_value_333 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 639;
        tmp_assign_source_567 = IMPORT_MODULE5(tmp_name_value_333, tmp_globals_arg_value_333, tmp_locals_arg_value_333, tmp_fromlist_value_333, tmp_level_value_333);
        if (tmp_assign_source_567 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 639;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_87__module == NULL);
        tmp_import_from_87__module = tmp_assign_source_567;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_568;
        PyObject *tmp_import_name_from_477;
        CHECK_OBJECT(tmp_import_from_87__module);
        tmp_import_name_from_477 = tmp_import_from_87__module;
        if (PyModule_Check(tmp_import_name_from_477)) {
            tmp_assign_source_568 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_477,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1151],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_568 = IMPORT_NAME(tmp_import_name_from_477, mod_consts[1151]);
        }

        if (tmp_assign_source_568 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 639;

            goto try_except_handler_87;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1151], tmp_assign_source_568);
    }
    {
        PyObject *tmp_assign_source_569;
        PyObject *tmp_import_name_from_478;
        CHECK_OBJECT(tmp_import_from_87__module);
        tmp_import_name_from_478 = tmp_import_from_87__module;
        if (PyModule_Check(tmp_import_name_from_478)) {
            tmp_assign_source_569 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_478,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1152],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_569 = IMPORT_NAME(tmp_import_name_from_478, mod_consts[1152]);
        }

        if (tmp_assign_source_569 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 639;

            goto try_except_handler_87;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1152], tmp_assign_source_569);
    }
    goto try_end_87;
    // Exception handler code:
    try_except_handler_87:;
    exception_keeper_type_87 = exception_type;
    exception_keeper_value_87 = exception_value;
    exception_keeper_tb_87 = exception_tb;
    exception_keeper_lineno_87 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_87__module);
    Py_DECREF(tmp_import_from_87__module);
    tmp_import_from_87__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_87;
    exception_value = exception_keeper_value_87;
    exception_tb = exception_keeper_tb_87;
    exception_lineno = exception_keeper_lineno_87;

    goto frame_exception_exit_1;
    // End of try:
    try_end_87:;
    CHECK_OBJECT(tmp_import_from_87__module);
    Py_DECREF(tmp_import_from_87__module);
    tmp_import_from_87__module = NULL;
    {
        PyObject *tmp_assign_source_570;
        PyObject *tmp_import_name_from_479;
        PyObject *tmp_name_value_334;
        PyObject *tmp_globals_arg_value_334;
        PyObject *tmp_locals_arg_value_334;
        PyObject *tmp_fromlist_value_334;
        PyObject *tmp_level_value_334;
        tmp_name_value_334 = mod_consts[1153];
        tmp_globals_arg_value_334 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_334 = Py_None;
        tmp_fromlist_value_334 = mod_consts[1154];
        tmp_level_value_334 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 643;
        tmp_import_name_from_479 = IMPORT_MODULE5(tmp_name_value_334, tmp_globals_arg_value_334, tmp_locals_arg_value_334, tmp_fromlist_value_334, tmp_level_value_334);
        if (tmp_import_name_from_479 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 643;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_479)) {
            tmp_assign_source_570 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_479,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1155],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_570 = IMPORT_NAME(tmp_import_name_from_479, mod_consts[1155]);
        }

        Py_DECREF(tmp_import_name_from_479);
        if (tmp_assign_source_570 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 643;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1155], tmp_assign_source_570);
    }
    {
        PyObject *tmp_assign_source_571;
        PyObject *tmp_import_name_from_480;
        PyObject *tmp_name_value_335;
        PyObject *tmp_globals_arg_value_335;
        PyObject *tmp_locals_arg_value_335;
        PyObject *tmp_fromlist_value_335;
        PyObject *tmp_level_value_335;
        tmp_name_value_335 = mod_consts[1156];
        tmp_globals_arg_value_335 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_335 = Py_None;
        tmp_fromlist_value_335 = mod_consts[1157];
        tmp_level_value_335 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 644;
        tmp_import_name_from_480 = IMPORT_MODULE5(tmp_name_value_335, tmp_globals_arg_value_335, tmp_locals_arg_value_335, tmp_fromlist_value_335, tmp_level_value_335);
        if (tmp_import_name_from_480 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 644;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_480)) {
            tmp_assign_source_571 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_480,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1158],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_571 = IMPORT_NAME(tmp_import_name_from_480, mod_consts[1158]);
        }

        Py_DECREF(tmp_import_name_from_480);
        if (tmp_assign_source_571 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 644;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1158], tmp_assign_source_571);
    }
    {
        PyObject *tmp_assign_source_572;
        PyObject *tmp_import_name_from_481;
        PyObject *tmp_name_value_336;
        PyObject *tmp_globals_arg_value_336;
        PyObject *tmp_locals_arg_value_336;
        PyObject *tmp_fromlist_value_336;
        PyObject *tmp_level_value_336;
        tmp_name_value_336 = mod_consts[1159];
        tmp_globals_arg_value_336 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_336 = Py_None;
        tmp_fromlist_value_336 = mod_consts[1160];
        tmp_level_value_336 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 645;
        tmp_import_name_from_481 = IMPORT_MODULE5(tmp_name_value_336, tmp_globals_arg_value_336, tmp_locals_arg_value_336, tmp_fromlist_value_336, tmp_level_value_336);
        if (tmp_import_name_from_481 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 645;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_481)) {
            tmp_assign_source_572 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_481,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1161],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_572 = IMPORT_NAME(tmp_import_name_from_481, mod_consts[1161]);
        }

        Py_DECREF(tmp_import_name_from_481);
        if (tmp_assign_source_572 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 645;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1161], tmp_assign_source_572);
    }
    {
        PyObject *tmp_assign_source_573;
        PyObject *tmp_import_name_from_482;
        PyObject *tmp_name_value_337;
        PyObject *tmp_globals_arg_value_337;
        PyObject *tmp_locals_arg_value_337;
        PyObject *tmp_fromlist_value_337;
        PyObject *tmp_level_value_337;
        tmp_name_value_337 = mod_consts[1162];
        tmp_globals_arg_value_337 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_337 = Py_None;
        tmp_fromlist_value_337 = mod_consts[1163];
        tmp_level_value_337 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 646;
        tmp_import_name_from_482 = IMPORT_MODULE5(tmp_name_value_337, tmp_globals_arg_value_337, tmp_locals_arg_value_337, tmp_fromlist_value_337, tmp_level_value_337);
        if (tmp_import_name_from_482 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 646;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_482)) {
            tmp_assign_source_573 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_482,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1164],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_573 = IMPORT_NAME(tmp_import_name_from_482, mod_consts[1164]);
        }

        Py_DECREF(tmp_import_name_from_482);
        if (tmp_assign_source_573 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 646;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1164], tmp_assign_source_573);
    }
    {
        PyObject *tmp_assign_source_574;
        PyObject *tmp_import_name_from_483;
        PyObject *tmp_name_value_338;
        PyObject *tmp_globals_arg_value_338;
        PyObject *tmp_locals_arg_value_338;
        PyObject *tmp_fromlist_value_338;
        PyObject *tmp_level_value_338;
        tmp_name_value_338 = mod_consts[1165];
        tmp_globals_arg_value_338 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_338 = Py_None;
        tmp_fromlist_value_338 = mod_consts[1166];
        tmp_level_value_338 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 647;
        tmp_import_name_from_483 = IMPORT_MODULE5(tmp_name_value_338, tmp_globals_arg_value_338, tmp_locals_arg_value_338, tmp_fromlist_value_338, tmp_level_value_338);
        if (tmp_import_name_from_483 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 647;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_483)) {
            tmp_assign_source_574 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_483,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1167],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_574 = IMPORT_NAME(tmp_import_name_from_483, mod_consts[1167]);
        }

        Py_DECREF(tmp_import_name_from_483);
        if (tmp_assign_source_574 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 647;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1167], tmp_assign_source_574);
    }
    {
        PyObject *tmp_assign_source_575;
        PyObject *tmp_name_value_339;
        PyObject *tmp_globals_arg_value_339;
        PyObject *tmp_locals_arg_value_339;
        PyObject *tmp_fromlist_value_339;
        PyObject *tmp_level_value_339;
        tmp_name_value_339 = mod_consts[1168];
        tmp_globals_arg_value_339 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_339 = Py_None;
        tmp_fromlist_value_339 = mod_consts[1169];
        tmp_level_value_339 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 648;
        tmp_assign_source_575 = IMPORT_MODULE5(tmp_name_value_339, tmp_globals_arg_value_339, tmp_locals_arg_value_339, tmp_fromlist_value_339, tmp_level_value_339);
        if (tmp_assign_source_575 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 648;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_88__module == NULL);
        tmp_import_from_88__module = tmp_assign_source_575;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_576;
        PyObject *tmp_import_name_from_484;
        CHECK_OBJECT(tmp_import_from_88__module);
        tmp_import_name_from_484 = tmp_import_from_88__module;
        if (PyModule_Check(tmp_import_name_from_484)) {
            tmp_assign_source_576 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_484,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1170],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_576 = IMPORT_NAME(tmp_import_name_from_484, mod_consts[1170]);
        }

        if (tmp_assign_source_576 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 648;

            goto try_except_handler_88;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1170], tmp_assign_source_576);
    }
    {
        PyObject *tmp_assign_source_577;
        PyObject *tmp_import_name_from_485;
        CHECK_OBJECT(tmp_import_from_88__module);
        tmp_import_name_from_485 = tmp_import_from_88__module;
        if (PyModule_Check(tmp_import_name_from_485)) {
            tmp_assign_source_577 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_485,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1171],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_577 = IMPORT_NAME(tmp_import_name_from_485, mod_consts[1171]);
        }

        if (tmp_assign_source_577 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 648;

            goto try_except_handler_88;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1171], tmp_assign_source_577);
    }
    {
        PyObject *tmp_assign_source_578;
        PyObject *tmp_import_name_from_486;
        CHECK_OBJECT(tmp_import_from_88__module);
        tmp_import_name_from_486 = tmp_import_from_88__module;
        if (PyModule_Check(tmp_import_name_from_486)) {
            tmp_assign_source_578 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_486,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1172],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_578 = IMPORT_NAME(tmp_import_name_from_486, mod_consts[1172]);
        }

        if (tmp_assign_source_578 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 648;

            goto try_except_handler_88;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1172], tmp_assign_source_578);
    }
    goto try_end_88;
    // Exception handler code:
    try_except_handler_88:;
    exception_keeper_type_88 = exception_type;
    exception_keeper_value_88 = exception_value;
    exception_keeper_tb_88 = exception_tb;
    exception_keeper_lineno_88 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_88__module);
    Py_DECREF(tmp_import_from_88__module);
    tmp_import_from_88__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_88;
    exception_value = exception_keeper_value_88;
    exception_tb = exception_keeper_tb_88;
    exception_lineno = exception_keeper_lineno_88;

    goto frame_exception_exit_1;
    // End of try:
    try_end_88:;
    CHECK_OBJECT(tmp_import_from_88__module);
    Py_DECREF(tmp_import_from_88__module);
    tmp_import_from_88__module = NULL;
    {
        PyObject *tmp_assign_source_579;
        PyObject *tmp_import_name_from_487;
        PyObject *tmp_name_value_340;
        PyObject *tmp_globals_arg_value_340;
        PyObject *tmp_locals_arg_value_340;
        PyObject *tmp_fromlist_value_340;
        PyObject *tmp_level_value_340;
        tmp_name_value_340 = mod_consts[1173];
        tmp_globals_arg_value_340 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_340 = Py_None;
        tmp_fromlist_value_340 = mod_consts[1174];
        tmp_level_value_340 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 653;
        tmp_import_name_from_487 = IMPORT_MODULE5(tmp_name_value_340, tmp_globals_arg_value_340, tmp_locals_arg_value_340, tmp_fromlist_value_340, tmp_level_value_340);
        if (tmp_import_name_from_487 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 653;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_487)) {
            tmp_assign_source_579 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_487,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1175],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_579 = IMPORT_NAME(tmp_import_name_from_487, mod_consts[1175]);
        }

        Py_DECREF(tmp_import_name_from_487);
        if (tmp_assign_source_579 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 653;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1175], tmp_assign_source_579);
    }
    {
        PyObject *tmp_assign_source_580;
        PyObject *tmp_import_name_from_488;
        PyObject *tmp_name_value_341;
        PyObject *tmp_globals_arg_value_341;
        PyObject *tmp_locals_arg_value_341;
        PyObject *tmp_fromlist_value_341;
        PyObject *tmp_level_value_341;
        tmp_name_value_341 = mod_consts[1176];
        tmp_globals_arg_value_341 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_341 = Py_None;
        tmp_fromlist_value_341 = mod_consts[1177];
        tmp_level_value_341 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 654;
        tmp_import_name_from_488 = IMPORT_MODULE5(tmp_name_value_341, tmp_globals_arg_value_341, tmp_locals_arg_value_341, tmp_fromlist_value_341, tmp_level_value_341);
        if (tmp_import_name_from_488 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 654;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_488)) {
            tmp_assign_source_580 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_488,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1178],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_580 = IMPORT_NAME(tmp_import_name_from_488, mod_consts[1178]);
        }

        Py_DECREF(tmp_import_name_from_488);
        if (tmp_assign_source_580 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 654;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1178], tmp_assign_source_580);
    }
    {
        PyObject *tmp_assign_source_581;
        PyObject *tmp_import_name_from_489;
        PyObject *tmp_name_value_342;
        PyObject *tmp_globals_arg_value_342;
        PyObject *tmp_locals_arg_value_342;
        PyObject *tmp_fromlist_value_342;
        PyObject *tmp_level_value_342;
        tmp_name_value_342 = mod_consts[1179];
        tmp_globals_arg_value_342 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_342 = Py_None;
        tmp_fromlist_value_342 = mod_consts[1180];
        tmp_level_value_342 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 655;
        tmp_import_name_from_489 = IMPORT_MODULE5(tmp_name_value_342, tmp_globals_arg_value_342, tmp_locals_arg_value_342, tmp_fromlist_value_342, tmp_level_value_342);
        if (tmp_import_name_from_489 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 655;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_489)) {
            tmp_assign_source_581 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_489,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1181],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_581 = IMPORT_NAME(tmp_import_name_from_489, mod_consts[1181]);
        }

        Py_DECREF(tmp_import_name_from_489);
        if (tmp_assign_source_581 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 655;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1181], tmp_assign_source_581);
    }
    {
        PyObject *tmp_assign_source_582;
        PyObject *tmp_import_name_from_490;
        PyObject *tmp_name_value_343;
        PyObject *tmp_globals_arg_value_343;
        PyObject *tmp_locals_arg_value_343;
        PyObject *tmp_fromlist_value_343;
        PyObject *tmp_level_value_343;
        tmp_name_value_343 = mod_consts[1182];
        tmp_globals_arg_value_343 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_343 = Py_None;
        tmp_fromlist_value_343 = mod_consts[1183];
        tmp_level_value_343 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 656;
        tmp_import_name_from_490 = IMPORT_MODULE5(tmp_name_value_343, tmp_globals_arg_value_343, tmp_locals_arg_value_343, tmp_fromlist_value_343, tmp_level_value_343);
        if (tmp_import_name_from_490 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 656;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_490)) {
            tmp_assign_source_582 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_490,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1184],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_582 = IMPORT_NAME(tmp_import_name_from_490, mod_consts[1184]);
        }

        Py_DECREF(tmp_import_name_from_490);
        if (tmp_assign_source_582 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 656;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1184], tmp_assign_source_582);
    }
    {
        PyObject *tmp_assign_source_583;
        PyObject *tmp_import_name_from_491;
        PyObject *tmp_name_value_344;
        PyObject *tmp_globals_arg_value_344;
        PyObject *tmp_locals_arg_value_344;
        PyObject *tmp_fromlist_value_344;
        PyObject *tmp_level_value_344;
        tmp_name_value_344 = mod_consts[1185];
        tmp_globals_arg_value_344 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_344 = Py_None;
        tmp_fromlist_value_344 = mod_consts[1186];
        tmp_level_value_344 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 657;
        tmp_import_name_from_491 = IMPORT_MODULE5(tmp_name_value_344, tmp_globals_arg_value_344, tmp_locals_arg_value_344, tmp_fromlist_value_344, tmp_level_value_344);
        if (tmp_import_name_from_491 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 657;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_491)) {
            tmp_assign_source_583 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_491,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1187],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_583 = IMPORT_NAME(tmp_import_name_from_491, mod_consts[1187]);
        }

        Py_DECREF(tmp_import_name_from_491);
        if (tmp_assign_source_583 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 657;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1187], tmp_assign_source_583);
    }
    {
        PyObject *tmp_assign_source_584;
        PyObject *tmp_import_name_from_492;
        PyObject *tmp_name_value_345;
        PyObject *tmp_globals_arg_value_345;
        PyObject *tmp_locals_arg_value_345;
        PyObject *tmp_fromlist_value_345;
        PyObject *tmp_level_value_345;
        tmp_name_value_345 = mod_consts[1188];
        tmp_globals_arg_value_345 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_345 = Py_None;
        tmp_fromlist_value_345 = mod_consts[1189];
        tmp_level_value_345 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 658;
        tmp_import_name_from_492 = IMPORT_MODULE5(tmp_name_value_345, tmp_globals_arg_value_345, tmp_locals_arg_value_345, tmp_fromlist_value_345, tmp_level_value_345);
        if (tmp_import_name_from_492 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 658;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_492)) {
            tmp_assign_source_584 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_492,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1190],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_584 = IMPORT_NAME(tmp_import_name_from_492, mod_consts[1190]);
        }

        Py_DECREF(tmp_import_name_from_492);
        if (tmp_assign_source_584 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 658;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1190], tmp_assign_source_584);
    }
    {
        PyObject *tmp_assign_source_585;
        PyObject *tmp_import_name_from_493;
        PyObject *tmp_name_value_346;
        PyObject *tmp_globals_arg_value_346;
        PyObject *tmp_locals_arg_value_346;
        PyObject *tmp_fromlist_value_346;
        PyObject *tmp_level_value_346;
        tmp_name_value_346 = mod_consts[1191];
        tmp_globals_arg_value_346 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_346 = Py_None;
        tmp_fromlist_value_346 = mod_consts[1192];
        tmp_level_value_346 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 659;
        tmp_import_name_from_493 = IMPORT_MODULE5(tmp_name_value_346, tmp_globals_arg_value_346, tmp_locals_arg_value_346, tmp_fromlist_value_346, tmp_level_value_346);
        if (tmp_import_name_from_493 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 659;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_493)) {
            tmp_assign_source_585 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_493,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1193],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_585 = IMPORT_NAME(tmp_import_name_from_493, mod_consts[1193]);
        }

        Py_DECREF(tmp_import_name_from_493);
        if (tmp_assign_source_585 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 659;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1193], tmp_assign_source_585);
    }
    {
        PyObject *tmp_assign_source_586;
        PyObject *tmp_import_name_from_494;
        PyObject *tmp_name_value_347;
        PyObject *tmp_globals_arg_value_347;
        PyObject *tmp_locals_arg_value_347;
        PyObject *tmp_fromlist_value_347;
        PyObject *tmp_level_value_347;
        tmp_name_value_347 = mod_consts[1194];
        tmp_globals_arg_value_347 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_347 = Py_None;
        tmp_fromlist_value_347 = mod_consts[1195];
        tmp_level_value_347 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 660;
        tmp_import_name_from_494 = IMPORT_MODULE5(tmp_name_value_347, tmp_globals_arg_value_347, tmp_locals_arg_value_347, tmp_fromlist_value_347, tmp_level_value_347);
        if (tmp_import_name_from_494 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 660;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_494)) {
            tmp_assign_source_586 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_494,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1196],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_586 = IMPORT_NAME(tmp_import_name_from_494, mod_consts[1196]);
        }

        Py_DECREF(tmp_import_name_from_494);
        if (tmp_assign_source_586 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 660;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1196], tmp_assign_source_586);
    }
    {
        PyObject *tmp_assign_source_587;
        PyObject *tmp_import_name_from_495;
        PyObject *tmp_name_value_348;
        PyObject *tmp_globals_arg_value_348;
        PyObject *tmp_locals_arg_value_348;
        PyObject *tmp_fromlist_value_348;
        PyObject *tmp_level_value_348;
        tmp_name_value_348 = mod_consts[1197];
        tmp_globals_arg_value_348 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_348 = Py_None;
        tmp_fromlist_value_348 = mod_consts[1198];
        tmp_level_value_348 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 661;
        tmp_import_name_from_495 = IMPORT_MODULE5(tmp_name_value_348, tmp_globals_arg_value_348, tmp_locals_arg_value_348, tmp_fromlist_value_348, tmp_level_value_348);
        if (tmp_import_name_from_495 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 661;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_495)) {
            tmp_assign_source_587 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_495,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1199],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_587 = IMPORT_NAME(tmp_import_name_from_495, mod_consts[1199]);
        }

        Py_DECREF(tmp_import_name_from_495);
        if (tmp_assign_source_587 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 661;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1199], tmp_assign_source_587);
    }
    {
        PyObject *tmp_assign_source_588;
        PyObject *tmp_import_name_from_496;
        PyObject *tmp_name_value_349;
        PyObject *tmp_globals_arg_value_349;
        PyObject *tmp_locals_arg_value_349;
        PyObject *tmp_fromlist_value_349;
        PyObject *tmp_level_value_349;
        tmp_name_value_349 = mod_consts[1200];
        tmp_globals_arg_value_349 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_349 = Py_None;
        tmp_fromlist_value_349 = mod_consts[1201];
        tmp_level_value_349 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 662;
        tmp_import_name_from_496 = IMPORT_MODULE5(tmp_name_value_349, tmp_globals_arg_value_349, tmp_locals_arg_value_349, tmp_fromlist_value_349, tmp_level_value_349);
        if (tmp_import_name_from_496 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 662;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_496)) {
            tmp_assign_source_588 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_496,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1202],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_588 = IMPORT_NAME(tmp_import_name_from_496, mod_consts[1202]);
        }

        Py_DECREF(tmp_import_name_from_496);
        if (tmp_assign_source_588 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 662;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1202], tmp_assign_source_588);
    }
    {
        PyObject *tmp_assign_source_589;
        PyObject *tmp_name_value_350;
        PyObject *tmp_globals_arg_value_350;
        PyObject *tmp_locals_arg_value_350;
        PyObject *tmp_fromlist_value_350;
        PyObject *tmp_level_value_350;
        tmp_name_value_350 = mod_consts[1203];
        tmp_globals_arg_value_350 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_350 = Py_None;
        tmp_fromlist_value_350 = mod_consts[1204];
        tmp_level_value_350 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 663;
        tmp_assign_source_589 = IMPORT_MODULE5(tmp_name_value_350, tmp_globals_arg_value_350, tmp_locals_arg_value_350, tmp_fromlist_value_350, tmp_level_value_350);
        if (tmp_assign_source_589 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 663;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_89__module == NULL);
        tmp_import_from_89__module = tmp_assign_source_589;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_590;
        PyObject *tmp_import_name_from_497;
        CHECK_OBJECT(tmp_import_from_89__module);
        tmp_import_name_from_497 = tmp_import_from_89__module;
        if (PyModule_Check(tmp_import_name_from_497)) {
            tmp_assign_source_590 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_497,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1205],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_590 = IMPORT_NAME(tmp_import_name_from_497, mod_consts[1205]);
        }

        if (tmp_assign_source_590 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 663;

            goto try_except_handler_89;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1205], tmp_assign_source_590);
    }
    {
        PyObject *tmp_assign_source_591;
        PyObject *tmp_import_name_from_498;
        CHECK_OBJECT(tmp_import_from_89__module);
        tmp_import_name_from_498 = tmp_import_from_89__module;
        if (PyModule_Check(tmp_import_name_from_498)) {
            tmp_assign_source_591 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_498,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1206],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_591 = IMPORT_NAME(tmp_import_name_from_498, mod_consts[1206]);
        }

        if (tmp_assign_source_591 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 663;

            goto try_except_handler_89;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1206], tmp_assign_source_591);
    }
    goto try_end_89;
    // Exception handler code:
    try_except_handler_89:;
    exception_keeper_type_89 = exception_type;
    exception_keeper_value_89 = exception_value;
    exception_keeper_tb_89 = exception_tb;
    exception_keeper_lineno_89 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_89__module);
    Py_DECREF(tmp_import_from_89__module);
    tmp_import_from_89__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_89;
    exception_value = exception_keeper_value_89;
    exception_tb = exception_keeper_tb_89;
    exception_lineno = exception_keeper_lineno_89;

    goto frame_exception_exit_1;
    // End of try:
    try_end_89:;
    CHECK_OBJECT(tmp_import_from_89__module);
    Py_DECREF(tmp_import_from_89__module);
    tmp_import_from_89__module = NULL;
    {
        PyObject *tmp_assign_source_592;
        PyObject *tmp_name_value_351;
        PyObject *tmp_globals_arg_value_351;
        PyObject *tmp_locals_arg_value_351;
        PyObject *tmp_fromlist_value_351;
        PyObject *tmp_level_value_351;
        tmp_name_value_351 = mod_consts[1207];
        tmp_globals_arg_value_351 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_351 = Py_None;
        tmp_fromlist_value_351 = mod_consts[1208];
        tmp_level_value_351 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 667;
        tmp_assign_source_592 = IMPORT_MODULE5(tmp_name_value_351, tmp_globals_arg_value_351, tmp_locals_arg_value_351, tmp_fromlist_value_351, tmp_level_value_351);
        if (tmp_assign_source_592 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 667;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_90__module == NULL);
        tmp_import_from_90__module = tmp_assign_source_592;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_593;
        PyObject *tmp_import_name_from_499;
        CHECK_OBJECT(tmp_import_from_90__module);
        tmp_import_name_from_499 = tmp_import_from_90__module;
        if (PyModule_Check(tmp_import_name_from_499)) {
            tmp_assign_source_593 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_499,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1209],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_593 = IMPORT_NAME(tmp_import_name_from_499, mod_consts[1209]);
        }

        if (tmp_assign_source_593 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 667;

            goto try_except_handler_90;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1209], tmp_assign_source_593);
    }
    {
        PyObject *tmp_assign_source_594;
        PyObject *tmp_import_name_from_500;
        CHECK_OBJECT(tmp_import_from_90__module);
        tmp_import_name_from_500 = tmp_import_from_90__module;
        if (PyModule_Check(tmp_import_name_from_500)) {
            tmp_assign_source_594 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_500,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1210],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_594 = IMPORT_NAME(tmp_import_name_from_500, mod_consts[1210]);
        }

        if (tmp_assign_source_594 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 667;

            goto try_except_handler_90;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1210], tmp_assign_source_594);
    }
    {
        PyObject *tmp_assign_source_595;
        PyObject *tmp_import_name_from_501;
        CHECK_OBJECT(tmp_import_from_90__module);
        tmp_import_name_from_501 = tmp_import_from_90__module;
        if (PyModule_Check(tmp_import_name_from_501)) {
            tmp_assign_source_595 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_501,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1211],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_595 = IMPORT_NAME(tmp_import_name_from_501, mod_consts[1211]);
        }

        if (tmp_assign_source_595 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 667;

            goto try_except_handler_90;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1211], tmp_assign_source_595);
    }
    goto try_end_90;
    // Exception handler code:
    try_except_handler_90:;
    exception_keeper_type_90 = exception_type;
    exception_keeper_value_90 = exception_value;
    exception_keeper_tb_90 = exception_tb;
    exception_keeper_lineno_90 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_90__module);
    Py_DECREF(tmp_import_from_90__module);
    tmp_import_from_90__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_90;
    exception_value = exception_keeper_value_90;
    exception_tb = exception_keeper_tb_90;
    exception_lineno = exception_keeper_lineno_90;

    goto frame_exception_exit_1;
    // End of try:
    try_end_90:;
    CHECK_OBJECT(tmp_import_from_90__module);
    Py_DECREF(tmp_import_from_90__module);
    tmp_import_from_90__module = NULL;
    {
        PyObject *tmp_assign_source_596;
        PyObject *tmp_import_name_from_502;
        PyObject *tmp_name_value_352;
        PyObject *tmp_globals_arg_value_352;
        PyObject *tmp_locals_arg_value_352;
        PyObject *tmp_fromlist_value_352;
        PyObject *tmp_level_value_352;
        tmp_name_value_352 = mod_consts[1212];
        tmp_globals_arg_value_352 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_352 = Py_None;
        tmp_fromlist_value_352 = mod_consts[1213];
        tmp_level_value_352 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 672;
        tmp_import_name_from_502 = IMPORT_MODULE5(tmp_name_value_352, tmp_globals_arg_value_352, tmp_locals_arg_value_352, tmp_fromlist_value_352, tmp_level_value_352);
        if (tmp_import_name_from_502 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 672;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_502)) {
            tmp_assign_source_596 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_502,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1214],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_596 = IMPORT_NAME(tmp_import_name_from_502, mod_consts[1214]);
        }

        Py_DECREF(tmp_import_name_from_502);
        if (tmp_assign_source_596 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 672;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1214], tmp_assign_source_596);
    }
    {
        PyObject *tmp_assign_source_597;
        PyObject *tmp_import_name_from_503;
        PyObject *tmp_name_value_353;
        PyObject *tmp_globals_arg_value_353;
        PyObject *tmp_locals_arg_value_353;
        PyObject *tmp_fromlist_value_353;
        PyObject *tmp_level_value_353;
        tmp_name_value_353 = mod_consts[1215];
        tmp_globals_arg_value_353 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_353 = Py_None;
        tmp_fromlist_value_353 = mod_consts[1216];
        tmp_level_value_353 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 673;
        tmp_import_name_from_503 = IMPORT_MODULE5(tmp_name_value_353, tmp_globals_arg_value_353, tmp_locals_arg_value_353, tmp_fromlist_value_353, tmp_level_value_353);
        if (tmp_import_name_from_503 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 673;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_503)) {
            tmp_assign_source_597 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_503,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1217],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_597 = IMPORT_NAME(tmp_import_name_from_503, mod_consts[1217]);
        }

        Py_DECREF(tmp_import_name_from_503);
        if (tmp_assign_source_597 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 673;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1217], tmp_assign_source_597);
    }
    {
        PyObject *tmp_assign_source_598;
        PyObject *tmp_import_name_from_504;
        PyObject *tmp_name_value_354;
        PyObject *tmp_globals_arg_value_354;
        PyObject *tmp_locals_arg_value_354;
        PyObject *tmp_fromlist_value_354;
        PyObject *tmp_level_value_354;
        tmp_name_value_354 = mod_consts[1218];
        tmp_globals_arg_value_354 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_354 = Py_None;
        tmp_fromlist_value_354 = mod_consts[1219];
        tmp_level_value_354 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 674;
        tmp_import_name_from_504 = IMPORT_MODULE5(tmp_name_value_354, tmp_globals_arg_value_354, tmp_locals_arg_value_354, tmp_fromlist_value_354, tmp_level_value_354);
        if (tmp_import_name_from_504 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 674;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_504)) {
            tmp_assign_source_598 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_504,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1220],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_598 = IMPORT_NAME(tmp_import_name_from_504, mod_consts[1220]);
        }

        Py_DECREF(tmp_import_name_from_504);
        if (tmp_assign_source_598 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 674;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1220], tmp_assign_source_598);
    }
    {
        PyObject *tmp_assign_source_599;
        PyObject *tmp_name_value_355;
        PyObject *tmp_globals_arg_value_355;
        PyObject *tmp_locals_arg_value_355;
        PyObject *tmp_fromlist_value_355;
        PyObject *tmp_level_value_355;
        tmp_name_value_355 = mod_consts[1221];
        tmp_globals_arg_value_355 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_355 = Py_None;
        tmp_fromlist_value_355 = mod_consts[1222];
        tmp_level_value_355 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 675;
        tmp_assign_source_599 = IMPORT_MODULE5(tmp_name_value_355, tmp_globals_arg_value_355, tmp_locals_arg_value_355, tmp_fromlist_value_355, tmp_level_value_355);
        if (tmp_assign_source_599 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 675;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_91__module == NULL);
        tmp_import_from_91__module = tmp_assign_source_599;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_600;
        PyObject *tmp_import_name_from_505;
        CHECK_OBJECT(tmp_import_from_91__module);
        tmp_import_name_from_505 = tmp_import_from_91__module;
        if (PyModule_Check(tmp_import_name_from_505)) {
            tmp_assign_source_600 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_505,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1223],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_600 = IMPORT_NAME(tmp_import_name_from_505, mod_consts[1223]);
        }

        if (tmp_assign_source_600 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 675;

            goto try_except_handler_91;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1223], tmp_assign_source_600);
    }
    {
        PyObject *tmp_assign_source_601;
        PyObject *tmp_import_name_from_506;
        CHECK_OBJECT(tmp_import_from_91__module);
        tmp_import_name_from_506 = tmp_import_from_91__module;
        if (PyModule_Check(tmp_import_name_from_506)) {
            tmp_assign_source_601 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_506,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1224],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_601 = IMPORT_NAME(tmp_import_name_from_506, mod_consts[1224]);
        }

        if (tmp_assign_source_601 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 675;

            goto try_except_handler_91;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1224], tmp_assign_source_601);
    }
    goto try_end_91;
    // Exception handler code:
    try_except_handler_91:;
    exception_keeper_type_91 = exception_type;
    exception_keeper_value_91 = exception_value;
    exception_keeper_tb_91 = exception_tb;
    exception_keeper_lineno_91 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_91__module);
    Py_DECREF(tmp_import_from_91__module);
    tmp_import_from_91__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_91;
    exception_value = exception_keeper_value_91;
    exception_tb = exception_keeper_tb_91;
    exception_lineno = exception_keeper_lineno_91;

    goto frame_exception_exit_1;
    // End of try:
    try_end_91:;
    CHECK_OBJECT(tmp_import_from_91__module);
    Py_DECREF(tmp_import_from_91__module);
    tmp_import_from_91__module = NULL;
    {
        PyObject *tmp_assign_source_602;
        PyObject *tmp_import_name_from_507;
        PyObject *tmp_name_value_356;
        PyObject *tmp_globals_arg_value_356;
        PyObject *tmp_locals_arg_value_356;
        PyObject *tmp_fromlist_value_356;
        PyObject *tmp_level_value_356;
        tmp_name_value_356 = mod_consts[1225];
        tmp_globals_arg_value_356 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_356 = Py_None;
        tmp_fromlist_value_356 = mod_consts[1226];
        tmp_level_value_356 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 676;
        tmp_import_name_from_507 = IMPORT_MODULE5(tmp_name_value_356, tmp_globals_arg_value_356, tmp_locals_arg_value_356, tmp_fromlist_value_356, tmp_level_value_356);
        if (tmp_import_name_from_507 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 676;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_507)) {
            tmp_assign_source_602 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_507,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1227],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_602 = IMPORT_NAME(tmp_import_name_from_507, mod_consts[1227]);
        }

        Py_DECREF(tmp_import_name_from_507);
        if (tmp_assign_source_602 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 676;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1227], tmp_assign_source_602);
    }
    {
        PyObject *tmp_assign_source_603;
        PyObject *tmp_name_value_357;
        PyObject *tmp_globals_arg_value_357;
        PyObject *tmp_locals_arg_value_357;
        PyObject *tmp_fromlist_value_357;
        PyObject *tmp_level_value_357;
        tmp_name_value_357 = mod_consts[1228];
        tmp_globals_arg_value_357 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_357 = Py_None;
        tmp_fromlist_value_357 = mod_consts[1229];
        tmp_level_value_357 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 677;
        tmp_assign_source_603 = IMPORT_MODULE5(tmp_name_value_357, tmp_globals_arg_value_357, tmp_locals_arg_value_357, tmp_fromlist_value_357, tmp_level_value_357);
        if (tmp_assign_source_603 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_92__module == NULL);
        tmp_import_from_92__module = tmp_assign_source_603;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_604;
        PyObject *tmp_import_name_from_508;
        CHECK_OBJECT(tmp_import_from_92__module);
        tmp_import_name_from_508 = tmp_import_from_92__module;
        if (PyModule_Check(tmp_import_name_from_508)) {
            tmp_assign_source_604 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_508,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1230],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_604 = IMPORT_NAME(tmp_import_name_from_508, mod_consts[1230]);
        }

        if (tmp_assign_source_604 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto try_except_handler_92;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1230], tmp_assign_source_604);
    }
    {
        PyObject *tmp_assign_source_605;
        PyObject *tmp_import_name_from_509;
        CHECK_OBJECT(tmp_import_from_92__module);
        tmp_import_name_from_509 = tmp_import_from_92__module;
        if (PyModule_Check(tmp_import_name_from_509)) {
            tmp_assign_source_605 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_509,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1231],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_605 = IMPORT_NAME(tmp_import_name_from_509, mod_consts[1231]);
        }

        if (tmp_assign_source_605 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto try_except_handler_92;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1231], tmp_assign_source_605);
    }
    {
        PyObject *tmp_assign_source_606;
        PyObject *tmp_import_name_from_510;
        CHECK_OBJECT(tmp_import_from_92__module);
        tmp_import_name_from_510 = tmp_import_from_92__module;
        if (PyModule_Check(tmp_import_name_from_510)) {
            tmp_assign_source_606 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_510,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1232],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_606 = IMPORT_NAME(tmp_import_name_from_510, mod_consts[1232]);
        }

        if (tmp_assign_source_606 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 677;

            goto try_except_handler_92;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1232], tmp_assign_source_606);
    }
    goto try_end_92;
    // Exception handler code:
    try_except_handler_92:;
    exception_keeper_type_92 = exception_type;
    exception_keeper_value_92 = exception_value;
    exception_keeper_tb_92 = exception_tb;
    exception_keeper_lineno_92 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_92__module);
    Py_DECREF(tmp_import_from_92__module);
    tmp_import_from_92__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_92;
    exception_value = exception_keeper_value_92;
    exception_tb = exception_keeper_tb_92;
    exception_lineno = exception_keeper_lineno_92;

    goto frame_exception_exit_1;
    // End of try:
    try_end_92:;
    CHECK_OBJECT(tmp_import_from_92__module);
    Py_DECREF(tmp_import_from_92__module);
    tmp_import_from_92__module = NULL;
    {
        PyObject *tmp_assign_source_607;
        PyObject *tmp_name_value_358;
        PyObject *tmp_globals_arg_value_358;
        PyObject *tmp_locals_arg_value_358;
        PyObject *tmp_fromlist_value_358;
        PyObject *tmp_level_value_358;
        tmp_name_value_358 = mod_consts[1233];
        tmp_globals_arg_value_358 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_358 = Py_None;
        tmp_fromlist_value_358 = mod_consts[1234];
        tmp_level_value_358 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 682;
        tmp_assign_source_607 = IMPORT_MODULE5(tmp_name_value_358, tmp_globals_arg_value_358, tmp_locals_arg_value_358, tmp_fromlist_value_358, tmp_level_value_358);
        if (tmp_assign_source_607 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 682;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_93__module == NULL);
        tmp_import_from_93__module = tmp_assign_source_607;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_608;
        PyObject *tmp_import_name_from_511;
        CHECK_OBJECT(tmp_import_from_93__module);
        tmp_import_name_from_511 = tmp_import_from_93__module;
        if (PyModule_Check(tmp_import_name_from_511)) {
            tmp_assign_source_608 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_511,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1235],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_608 = IMPORT_NAME(tmp_import_name_from_511, mod_consts[1235]);
        }

        if (tmp_assign_source_608 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 682;

            goto try_except_handler_93;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1235], tmp_assign_source_608);
    }
    {
        PyObject *tmp_assign_source_609;
        PyObject *tmp_import_name_from_512;
        CHECK_OBJECT(tmp_import_from_93__module);
        tmp_import_name_from_512 = tmp_import_from_93__module;
        if (PyModule_Check(tmp_import_name_from_512)) {
            tmp_assign_source_609 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_512,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1236],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_609 = IMPORT_NAME(tmp_import_name_from_512, mod_consts[1236]);
        }

        if (tmp_assign_source_609 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 682;

            goto try_except_handler_93;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1236], tmp_assign_source_609);
    }
    goto try_end_93;
    // Exception handler code:
    try_except_handler_93:;
    exception_keeper_type_93 = exception_type;
    exception_keeper_value_93 = exception_value;
    exception_keeper_tb_93 = exception_tb;
    exception_keeper_lineno_93 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_93__module);
    Py_DECREF(tmp_import_from_93__module);
    tmp_import_from_93__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_93;
    exception_value = exception_keeper_value_93;
    exception_tb = exception_keeper_tb_93;
    exception_lineno = exception_keeper_lineno_93;

    goto frame_exception_exit_1;
    // End of try:
    try_end_93:;
    CHECK_OBJECT(tmp_import_from_93__module);
    Py_DECREF(tmp_import_from_93__module);
    tmp_import_from_93__module = NULL;
    {
        PyObject *tmp_assign_source_610;
        PyObject *tmp_import_name_from_513;
        PyObject *tmp_name_value_359;
        PyObject *tmp_globals_arg_value_359;
        PyObject *tmp_locals_arg_value_359;
        PyObject *tmp_fromlist_value_359;
        PyObject *tmp_level_value_359;
        tmp_name_value_359 = mod_consts[1237];
        tmp_globals_arg_value_359 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_359 = Py_None;
        tmp_fromlist_value_359 = mod_consts[1238];
        tmp_level_value_359 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 686;
        tmp_import_name_from_513 = IMPORT_MODULE5(tmp_name_value_359, tmp_globals_arg_value_359, tmp_locals_arg_value_359, tmp_fromlist_value_359, tmp_level_value_359);
        if (tmp_import_name_from_513 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 686;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_513)) {
            tmp_assign_source_610 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_513,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1239],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_610 = IMPORT_NAME(tmp_import_name_from_513, mod_consts[1239]);
        }

        Py_DECREF(tmp_import_name_from_513);
        if (tmp_assign_source_610 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 686;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1239], tmp_assign_source_610);
    }
    {
        PyObject *tmp_assign_source_611;
        PyObject *tmp_import_name_from_514;
        PyObject *tmp_name_value_360;
        PyObject *tmp_globals_arg_value_360;
        PyObject *tmp_locals_arg_value_360;
        PyObject *tmp_fromlist_value_360;
        PyObject *tmp_level_value_360;
        tmp_name_value_360 = mod_consts[1240];
        tmp_globals_arg_value_360 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_360 = Py_None;
        tmp_fromlist_value_360 = mod_consts[1241];
        tmp_level_value_360 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 687;
        tmp_import_name_from_514 = IMPORT_MODULE5(tmp_name_value_360, tmp_globals_arg_value_360, tmp_locals_arg_value_360, tmp_fromlist_value_360, tmp_level_value_360);
        if (tmp_import_name_from_514 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 687;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_514)) {
            tmp_assign_source_611 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_514,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1242],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_611 = IMPORT_NAME(tmp_import_name_from_514, mod_consts[1242]);
        }

        Py_DECREF(tmp_import_name_from_514);
        if (tmp_assign_source_611 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 687;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1242], tmp_assign_source_611);
    }
    {
        PyObject *tmp_assign_source_612;
        PyObject *tmp_name_value_361;
        PyObject *tmp_globals_arg_value_361;
        PyObject *tmp_locals_arg_value_361;
        PyObject *tmp_fromlist_value_361;
        PyObject *tmp_level_value_361;
        tmp_name_value_361 = mod_consts[1243];
        tmp_globals_arg_value_361 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_361 = Py_None;
        tmp_fromlist_value_361 = mod_consts[1244];
        tmp_level_value_361 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 688;
        tmp_assign_source_612 = IMPORT_MODULE5(tmp_name_value_361, tmp_globals_arg_value_361, tmp_locals_arg_value_361, tmp_fromlist_value_361, tmp_level_value_361);
        if (tmp_assign_source_612 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 688;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_94__module == NULL);
        tmp_import_from_94__module = tmp_assign_source_612;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_613;
        PyObject *tmp_import_name_from_515;
        CHECK_OBJECT(tmp_import_from_94__module);
        tmp_import_name_from_515 = tmp_import_from_94__module;
        if (PyModule_Check(tmp_import_name_from_515)) {
            tmp_assign_source_613 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_515,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1245],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_613 = IMPORT_NAME(tmp_import_name_from_515, mod_consts[1245]);
        }

        if (tmp_assign_source_613 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 688;

            goto try_except_handler_94;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1245], tmp_assign_source_613);
    }
    {
        PyObject *tmp_assign_source_614;
        PyObject *tmp_import_name_from_516;
        CHECK_OBJECT(tmp_import_from_94__module);
        tmp_import_name_from_516 = tmp_import_from_94__module;
        if (PyModule_Check(tmp_import_name_from_516)) {
            tmp_assign_source_614 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_516,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1246],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_614 = IMPORT_NAME(tmp_import_name_from_516, mod_consts[1246]);
        }

        if (tmp_assign_source_614 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 688;

            goto try_except_handler_94;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1246], tmp_assign_source_614);
    }
    goto try_end_94;
    // Exception handler code:
    try_except_handler_94:;
    exception_keeper_type_94 = exception_type;
    exception_keeper_value_94 = exception_value;
    exception_keeper_tb_94 = exception_tb;
    exception_keeper_lineno_94 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_94__module);
    Py_DECREF(tmp_import_from_94__module);
    tmp_import_from_94__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_94;
    exception_value = exception_keeper_value_94;
    exception_tb = exception_keeper_tb_94;
    exception_lineno = exception_keeper_lineno_94;

    goto frame_exception_exit_1;
    // End of try:
    try_end_94:;
    CHECK_OBJECT(tmp_import_from_94__module);
    Py_DECREF(tmp_import_from_94__module);
    tmp_import_from_94__module = NULL;
    {
        PyObject *tmp_assign_source_615;
        PyObject *tmp_import_name_from_517;
        PyObject *tmp_name_value_362;
        PyObject *tmp_globals_arg_value_362;
        PyObject *tmp_locals_arg_value_362;
        PyObject *tmp_fromlist_value_362;
        PyObject *tmp_level_value_362;
        tmp_name_value_362 = mod_consts[1247];
        tmp_globals_arg_value_362 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_362 = Py_None;
        tmp_fromlist_value_362 = mod_consts[1248];
        tmp_level_value_362 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 692;
        tmp_import_name_from_517 = IMPORT_MODULE5(tmp_name_value_362, tmp_globals_arg_value_362, tmp_locals_arg_value_362, tmp_fromlist_value_362, tmp_level_value_362);
        if (tmp_import_name_from_517 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 692;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_517)) {
            tmp_assign_source_615 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_517,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1249],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_615 = IMPORT_NAME(tmp_import_name_from_517, mod_consts[1249]);
        }

        Py_DECREF(tmp_import_name_from_517);
        if (tmp_assign_source_615 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 692;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1249], tmp_assign_source_615);
    }
    {
        PyObject *tmp_assign_source_616;
        PyObject *tmp_import_name_from_518;
        PyObject *tmp_name_value_363;
        PyObject *tmp_globals_arg_value_363;
        PyObject *tmp_locals_arg_value_363;
        PyObject *tmp_fromlist_value_363;
        PyObject *tmp_level_value_363;
        tmp_name_value_363 = mod_consts[1250];
        tmp_globals_arg_value_363 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_363 = Py_None;
        tmp_fromlist_value_363 = mod_consts[1251];
        tmp_level_value_363 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 693;
        tmp_import_name_from_518 = IMPORT_MODULE5(tmp_name_value_363, tmp_globals_arg_value_363, tmp_locals_arg_value_363, tmp_fromlist_value_363, tmp_level_value_363);
        if (tmp_import_name_from_518 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 693;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_518)) {
            tmp_assign_source_616 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_518,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1252],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_616 = IMPORT_NAME(tmp_import_name_from_518, mod_consts[1252]);
        }

        Py_DECREF(tmp_import_name_from_518);
        if (tmp_assign_source_616 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 693;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1252], tmp_assign_source_616);
    }
    {
        PyObject *tmp_assign_source_617;
        PyObject *tmp_name_value_364;
        PyObject *tmp_globals_arg_value_364;
        PyObject *tmp_locals_arg_value_364;
        PyObject *tmp_fromlist_value_364;
        PyObject *tmp_level_value_364;
        tmp_name_value_364 = mod_consts[1253];
        tmp_globals_arg_value_364 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_364 = Py_None;
        tmp_fromlist_value_364 = mod_consts[1254];
        tmp_level_value_364 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 694;
        tmp_assign_source_617 = IMPORT_MODULE5(tmp_name_value_364, tmp_globals_arg_value_364, tmp_locals_arg_value_364, tmp_fromlist_value_364, tmp_level_value_364);
        if (tmp_assign_source_617 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 694;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_95__module == NULL);
        tmp_import_from_95__module = tmp_assign_source_617;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_618;
        PyObject *tmp_import_name_from_519;
        CHECK_OBJECT(tmp_import_from_95__module);
        tmp_import_name_from_519 = tmp_import_from_95__module;
        if (PyModule_Check(tmp_import_name_from_519)) {
            tmp_assign_source_618 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_519,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1255],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_618 = IMPORT_NAME(tmp_import_name_from_519, mod_consts[1255]);
        }

        if (tmp_assign_source_618 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 694;

            goto try_except_handler_95;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1255], tmp_assign_source_618);
    }
    {
        PyObject *tmp_assign_source_619;
        PyObject *tmp_import_name_from_520;
        CHECK_OBJECT(tmp_import_from_95__module);
        tmp_import_name_from_520 = tmp_import_from_95__module;
        if (PyModule_Check(tmp_import_name_from_520)) {
            tmp_assign_source_619 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_520,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1256],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_619 = IMPORT_NAME(tmp_import_name_from_520, mod_consts[1256]);
        }

        if (tmp_assign_source_619 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 694;

            goto try_except_handler_95;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1256], tmp_assign_source_619);
    }
    goto try_end_95;
    // Exception handler code:
    try_except_handler_95:;
    exception_keeper_type_95 = exception_type;
    exception_keeper_value_95 = exception_value;
    exception_keeper_tb_95 = exception_tb;
    exception_keeper_lineno_95 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_95__module);
    Py_DECREF(tmp_import_from_95__module);
    tmp_import_from_95__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_95;
    exception_value = exception_keeper_value_95;
    exception_tb = exception_keeper_tb_95;
    exception_lineno = exception_keeper_lineno_95;

    goto frame_exception_exit_1;
    // End of try:
    try_end_95:;
    CHECK_OBJECT(tmp_import_from_95__module);
    Py_DECREF(tmp_import_from_95__module);
    tmp_import_from_95__module = NULL;
    {
        PyObject *tmp_assign_source_620;
        PyObject *tmp_import_name_from_521;
        PyObject *tmp_name_value_365;
        PyObject *tmp_globals_arg_value_365;
        PyObject *tmp_locals_arg_value_365;
        PyObject *tmp_fromlist_value_365;
        PyObject *tmp_level_value_365;
        tmp_name_value_365 = mod_consts[1257];
        tmp_globals_arg_value_365 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_365 = Py_None;
        tmp_fromlist_value_365 = mod_consts[1258];
        tmp_level_value_365 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 698;
        tmp_import_name_from_521 = IMPORT_MODULE5(tmp_name_value_365, tmp_globals_arg_value_365, tmp_locals_arg_value_365, tmp_fromlist_value_365, tmp_level_value_365);
        if (tmp_import_name_from_521 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 698;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_521)) {
            tmp_assign_source_620 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_521,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1259],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_620 = IMPORT_NAME(tmp_import_name_from_521, mod_consts[1259]);
        }

        Py_DECREF(tmp_import_name_from_521);
        if (tmp_assign_source_620 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 698;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1259], tmp_assign_source_620);
    }
    {
        PyObject *tmp_assign_source_621;
        PyObject *tmp_import_name_from_522;
        PyObject *tmp_name_value_366;
        PyObject *tmp_globals_arg_value_366;
        PyObject *tmp_locals_arg_value_366;
        PyObject *tmp_fromlist_value_366;
        PyObject *tmp_level_value_366;
        tmp_name_value_366 = mod_consts[1260];
        tmp_globals_arg_value_366 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_366 = Py_None;
        tmp_fromlist_value_366 = mod_consts[1261];
        tmp_level_value_366 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 699;
        tmp_import_name_from_522 = IMPORT_MODULE5(tmp_name_value_366, tmp_globals_arg_value_366, tmp_locals_arg_value_366, tmp_fromlist_value_366, tmp_level_value_366);
        if (tmp_import_name_from_522 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 699;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_522)) {
            tmp_assign_source_621 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_522,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1262],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_621 = IMPORT_NAME(tmp_import_name_from_522, mod_consts[1262]);
        }

        Py_DECREF(tmp_import_name_from_522);
        if (tmp_assign_source_621 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 699;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1262], tmp_assign_source_621);
    }
    {
        PyObject *tmp_assign_source_622;
        PyObject *tmp_import_name_from_523;
        PyObject *tmp_name_value_367;
        PyObject *tmp_globals_arg_value_367;
        PyObject *tmp_locals_arg_value_367;
        PyObject *tmp_fromlist_value_367;
        PyObject *tmp_level_value_367;
        tmp_name_value_367 = mod_consts[1263];
        tmp_globals_arg_value_367 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_367 = Py_None;
        tmp_fromlist_value_367 = mod_consts[1264];
        tmp_level_value_367 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 700;
        tmp_import_name_from_523 = IMPORT_MODULE5(tmp_name_value_367, tmp_globals_arg_value_367, tmp_locals_arg_value_367, tmp_fromlist_value_367, tmp_level_value_367);
        if (tmp_import_name_from_523 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 700;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_523)) {
            tmp_assign_source_622 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_523,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1265],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_622 = IMPORT_NAME(tmp_import_name_from_523, mod_consts[1265]);
        }

        Py_DECREF(tmp_import_name_from_523);
        if (tmp_assign_source_622 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 700;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1265], tmp_assign_source_622);
    }
    {
        PyObject *tmp_assign_source_623;
        PyObject *tmp_import_name_from_524;
        PyObject *tmp_name_value_368;
        PyObject *tmp_globals_arg_value_368;
        PyObject *tmp_locals_arg_value_368;
        PyObject *tmp_fromlist_value_368;
        PyObject *tmp_level_value_368;
        tmp_name_value_368 = mod_consts[1266];
        tmp_globals_arg_value_368 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_368 = Py_None;
        tmp_fromlist_value_368 = mod_consts[1267];
        tmp_level_value_368 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 701;
        tmp_import_name_from_524 = IMPORT_MODULE5(tmp_name_value_368, tmp_globals_arg_value_368, tmp_locals_arg_value_368, tmp_fromlist_value_368, tmp_level_value_368);
        if (tmp_import_name_from_524 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 701;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_524)) {
            tmp_assign_source_623 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_524,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1268],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_623 = IMPORT_NAME(tmp_import_name_from_524, mod_consts[1268]);
        }

        Py_DECREF(tmp_import_name_from_524);
        if (tmp_assign_source_623 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 701;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1268], tmp_assign_source_623);
    }
    {
        PyObject *tmp_assign_source_624;
        PyObject *tmp_import_name_from_525;
        PyObject *tmp_name_value_369;
        PyObject *tmp_globals_arg_value_369;
        PyObject *tmp_locals_arg_value_369;
        PyObject *tmp_fromlist_value_369;
        PyObject *tmp_level_value_369;
        tmp_name_value_369 = mod_consts[1269];
        tmp_globals_arg_value_369 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_369 = Py_None;
        tmp_fromlist_value_369 = mod_consts[1270];
        tmp_level_value_369 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 702;
        tmp_import_name_from_525 = IMPORT_MODULE5(tmp_name_value_369, tmp_globals_arg_value_369, tmp_locals_arg_value_369, tmp_fromlist_value_369, tmp_level_value_369);
        if (tmp_import_name_from_525 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 702;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_525)) {
            tmp_assign_source_624 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_525,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1271],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_624 = IMPORT_NAME(tmp_import_name_from_525, mod_consts[1271]);
        }

        Py_DECREF(tmp_import_name_from_525);
        if (tmp_assign_source_624 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 702;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1271], tmp_assign_source_624);
    }
    {
        PyObject *tmp_assign_source_625;
        PyObject *tmp_name_value_370;
        PyObject *tmp_globals_arg_value_370;
        PyObject *tmp_locals_arg_value_370;
        PyObject *tmp_fromlist_value_370;
        PyObject *tmp_level_value_370;
        tmp_name_value_370 = mod_consts[1272];
        tmp_globals_arg_value_370 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_370 = Py_None;
        tmp_fromlist_value_370 = mod_consts[1273];
        tmp_level_value_370 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 703;
        tmp_assign_source_625 = IMPORT_MODULE5(tmp_name_value_370, tmp_globals_arg_value_370, tmp_locals_arg_value_370, tmp_fromlist_value_370, tmp_level_value_370);
        if (tmp_assign_source_625 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 703;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_96__module == NULL);
        tmp_import_from_96__module = tmp_assign_source_625;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_626;
        PyObject *tmp_import_name_from_526;
        CHECK_OBJECT(tmp_import_from_96__module);
        tmp_import_name_from_526 = tmp_import_from_96__module;
        if (PyModule_Check(tmp_import_name_from_526)) {
            tmp_assign_source_626 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_526,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1274],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_626 = IMPORT_NAME(tmp_import_name_from_526, mod_consts[1274]);
        }

        if (tmp_assign_source_626 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 703;

            goto try_except_handler_96;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1274], tmp_assign_source_626);
    }
    {
        PyObject *tmp_assign_source_627;
        PyObject *tmp_import_name_from_527;
        CHECK_OBJECT(tmp_import_from_96__module);
        tmp_import_name_from_527 = tmp_import_from_96__module;
        if (PyModule_Check(tmp_import_name_from_527)) {
            tmp_assign_source_627 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_527,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1275],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_627 = IMPORT_NAME(tmp_import_name_from_527, mod_consts[1275]);
        }

        if (tmp_assign_source_627 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 703;

            goto try_except_handler_96;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1275], tmp_assign_source_627);
    }
    {
        PyObject *tmp_assign_source_628;
        PyObject *tmp_import_name_from_528;
        CHECK_OBJECT(tmp_import_from_96__module);
        tmp_import_name_from_528 = tmp_import_from_96__module;
        if (PyModule_Check(tmp_import_name_from_528)) {
            tmp_assign_source_628 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_528,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1276],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_628 = IMPORT_NAME(tmp_import_name_from_528, mod_consts[1276]);
        }

        if (tmp_assign_source_628 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 703;

            goto try_except_handler_96;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1276], tmp_assign_source_628);
    }
    {
        PyObject *tmp_assign_source_629;
        PyObject *tmp_import_name_from_529;
        CHECK_OBJECT(tmp_import_from_96__module);
        tmp_import_name_from_529 = tmp_import_from_96__module;
        if (PyModule_Check(tmp_import_name_from_529)) {
            tmp_assign_source_629 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_529,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1277],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_629 = IMPORT_NAME(tmp_import_name_from_529, mod_consts[1277]);
        }

        if (tmp_assign_source_629 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 703;

            goto try_except_handler_96;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1277], tmp_assign_source_629);
    }
    {
        PyObject *tmp_assign_source_630;
        PyObject *tmp_import_name_from_530;
        CHECK_OBJECT(tmp_import_from_96__module);
        tmp_import_name_from_530 = tmp_import_from_96__module;
        if (PyModule_Check(tmp_import_name_from_530)) {
            tmp_assign_source_630 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_530,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1278],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_630 = IMPORT_NAME(tmp_import_name_from_530, mod_consts[1278]);
        }

        if (tmp_assign_source_630 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 703;

            goto try_except_handler_96;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1278], tmp_assign_source_630);
    }
    goto try_end_96;
    // Exception handler code:
    try_except_handler_96:;
    exception_keeper_type_96 = exception_type;
    exception_keeper_value_96 = exception_value;
    exception_keeper_tb_96 = exception_tb;
    exception_keeper_lineno_96 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_96__module);
    Py_DECREF(tmp_import_from_96__module);
    tmp_import_from_96__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_96;
    exception_value = exception_keeper_value_96;
    exception_tb = exception_keeper_tb_96;
    exception_lineno = exception_keeper_lineno_96;

    goto frame_exception_exit_1;
    // End of try:
    try_end_96:;
    CHECK_OBJECT(tmp_import_from_96__module);
    Py_DECREF(tmp_import_from_96__module);
    tmp_import_from_96__module = NULL;
    {
        PyObject *tmp_assign_source_631;
        PyObject *tmp_import_name_from_531;
        PyObject *tmp_name_value_371;
        PyObject *tmp_globals_arg_value_371;
        PyObject *tmp_locals_arg_value_371;
        PyObject *tmp_fromlist_value_371;
        PyObject *tmp_level_value_371;
        tmp_name_value_371 = mod_consts[1279];
        tmp_globals_arg_value_371 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_371 = Py_None;
        tmp_fromlist_value_371 = mod_consts[1280];
        tmp_level_value_371 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 710;
        tmp_import_name_from_531 = IMPORT_MODULE5(tmp_name_value_371, tmp_globals_arg_value_371, tmp_locals_arg_value_371, tmp_fromlist_value_371, tmp_level_value_371);
        if (tmp_import_name_from_531 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 710;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_531)) {
            tmp_assign_source_631 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_531,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1281],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_631 = IMPORT_NAME(tmp_import_name_from_531, mod_consts[1281]);
        }

        Py_DECREF(tmp_import_name_from_531);
        if (tmp_assign_source_631 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 710;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1281], tmp_assign_source_631);
    }
    {
        PyObject *tmp_assign_source_632;
        PyObject *tmp_name_value_372;
        PyObject *tmp_globals_arg_value_372;
        PyObject *tmp_locals_arg_value_372;
        PyObject *tmp_fromlist_value_372;
        PyObject *tmp_level_value_372;
        tmp_name_value_372 = mod_consts[1282];
        tmp_globals_arg_value_372 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_372 = Py_None;
        tmp_fromlist_value_372 = mod_consts[1283];
        tmp_level_value_372 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 711;
        tmp_assign_source_632 = IMPORT_MODULE5(tmp_name_value_372, tmp_globals_arg_value_372, tmp_locals_arg_value_372, tmp_fromlist_value_372, tmp_level_value_372);
        if (tmp_assign_source_632 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 711;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_97__module == NULL);
        tmp_import_from_97__module = tmp_assign_source_632;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_633;
        PyObject *tmp_import_name_from_532;
        CHECK_OBJECT(tmp_import_from_97__module);
        tmp_import_name_from_532 = tmp_import_from_97__module;
        if (PyModule_Check(tmp_import_name_from_532)) {
            tmp_assign_source_633 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_532,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1284],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_633 = IMPORT_NAME(tmp_import_name_from_532, mod_consts[1284]);
        }

        if (tmp_assign_source_633 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 711;

            goto try_except_handler_97;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1284], tmp_assign_source_633);
    }
    {
        PyObject *tmp_assign_source_634;
        PyObject *tmp_import_name_from_533;
        CHECK_OBJECT(tmp_import_from_97__module);
        tmp_import_name_from_533 = tmp_import_from_97__module;
        if (PyModule_Check(tmp_import_name_from_533)) {
            tmp_assign_source_634 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_533,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1285],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_634 = IMPORT_NAME(tmp_import_name_from_533, mod_consts[1285]);
        }

        if (tmp_assign_source_634 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 711;

            goto try_except_handler_97;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1285], tmp_assign_source_634);
    }
    goto try_end_97;
    // Exception handler code:
    try_except_handler_97:;
    exception_keeper_type_97 = exception_type;
    exception_keeper_value_97 = exception_value;
    exception_keeper_tb_97 = exception_tb;
    exception_keeper_lineno_97 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_97__module);
    Py_DECREF(tmp_import_from_97__module);
    tmp_import_from_97__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_97;
    exception_value = exception_keeper_value_97;
    exception_tb = exception_keeper_tb_97;
    exception_lineno = exception_keeper_lineno_97;

    goto frame_exception_exit_1;
    // End of try:
    try_end_97:;
    CHECK_OBJECT(tmp_import_from_97__module);
    Py_DECREF(tmp_import_from_97__module);
    tmp_import_from_97__module = NULL;
    {
        PyObject *tmp_assign_source_635;
        PyObject *tmp_import_name_from_534;
        PyObject *tmp_name_value_373;
        PyObject *tmp_globals_arg_value_373;
        PyObject *tmp_locals_arg_value_373;
        PyObject *tmp_fromlist_value_373;
        PyObject *tmp_level_value_373;
        tmp_name_value_373 = mod_consts[1286];
        tmp_globals_arg_value_373 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_373 = Py_None;
        tmp_fromlist_value_373 = mod_consts[1287];
        tmp_level_value_373 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 712;
        tmp_import_name_from_534 = IMPORT_MODULE5(tmp_name_value_373, tmp_globals_arg_value_373, tmp_locals_arg_value_373, tmp_fromlist_value_373, tmp_level_value_373);
        if (tmp_import_name_from_534 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 712;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_534)) {
            tmp_assign_source_635 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_534,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1288],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_635 = IMPORT_NAME(tmp_import_name_from_534, mod_consts[1288]);
        }

        Py_DECREF(tmp_import_name_from_534);
        if (tmp_assign_source_635 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 712;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1288], tmp_assign_source_635);
    }
    {
        PyObject *tmp_assign_source_636;
        PyObject *tmp_name_value_374;
        PyObject *tmp_globals_arg_value_374;
        PyObject *tmp_locals_arg_value_374;
        PyObject *tmp_fromlist_value_374;
        PyObject *tmp_level_value_374;
        tmp_name_value_374 = mod_consts[1289];
        tmp_globals_arg_value_374 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_374 = Py_None;
        tmp_fromlist_value_374 = mod_consts[1290];
        tmp_level_value_374 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 713;
        tmp_assign_source_636 = IMPORT_MODULE5(tmp_name_value_374, tmp_globals_arg_value_374, tmp_locals_arg_value_374, tmp_fromlist_value_374, tmp_level_value_374);
        if (tmp_assign_source_636 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 713;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_98__module == NULL);
        tmp_import_from_98__module = tmp_assign_source_636;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_637;
        PyObject *tmp_import_name_from_535;
        CHECK_OBJECT(tmp_import_from_98__module);
        tmp_import_name_from_535 = tmp_import_from_98__module;
        if (PyModule_Check(tmp_import_name_from_535)) {
            tmp_assign_source_637 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_535,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1291],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_637 = IMPORT_NAME(tmp_import_name_from_535, mod_consts[1291]);
        }

        if (tmp_assign_source_637 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 713;

            goto try_except_handler_98;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1291], tmp_assign_source_637);
    }
    {
        PyObject *tmp_assign_source_638;
        PyObject *tmp_import_name_from_536;
        CHECK_OBJECT(tmp_import_from_98__module);
        tmp_import_name_from_536 = tmp_import_from_98__module;
        if (PyModule_Check(tmp_import_name_from_536)) {
            tmp_assign_source_638 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_536,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1292],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_638 = IMPORT_NAME(tmp_import_name_from_536, mod_consts[1292]);
        }

        if (tmp_assign_source_638 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 713;

            goto try_except_handler_98;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1292], tmp_assign_source_638);
    }
    goto try_end_98;
    // Exception handler code:
    try_except_handler_98:;
    exception_keeper_type_98 = exception_type;
    exception_keeper_value_98 = exception_value;
    exception_keeper_tb_98 = exception_tb;
    exception_keeper_lineno_98 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_98__module);
    Py_DECREF(tmp_import_from_98__module);
    tmp_import_from_98__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_98;
    exception_value = exception_keeper_value_98;
    exception_tb = exception_keeper_tb_98;
    exception_lineno = exception_keeper_lineno_98;

    goto frame_exception_exit_1;
    // End of try:
    try_end_98:;
    CHECK_OBJECT(tmp_import_from_98__module);
    Py_DECREF(tmp_import_from_98__module);
    tmp_import_from_98__module = NULL;
    {
        PyObject *tmp_assign_source_639;
        PyObject *tmp_import_name_from_537;
        PyObject *tmp_name_value_375;
        PyObject *tmp_globals_arg_value_375;
        PyObject *tmp_locals_arg_value_375;
        PyObject *tmp_fromlist_value_375;
        PyObject *tmp_level_value_375;
        tmp_name_value_375 = mod_consts[1293];
        tmp_globals_arg_value_375 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_375 = Py_None;
        tmp_fromlist_value_375 = mod_consts[1294];
        tmp_level_value_375 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 714;
        tmp_import_name_from_537 = IMPORT_MODULE5(tmp_name_value_375, tmp_globals_arg_value_375, tmp_locals_arg_value_375, tmp_fromlist_value_375, tmp_level_value_375);
        if (tmp_import_name_from_537 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 714;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_537)) {
            tmp_assign_source_639 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_537,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1295],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_639 = IMPORT_NAME(tmp_import_name_from_537, mod_consts[1295]);
        }

        Py_DECREF(tmp_import_name_from_537);
        if (tmp_assign_source_639 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 714;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1295], tmp_assign_source_639);
    }
    {
        PyObject *tmp_assign_source_640;
        PyObject *tmp_name_value_376;
        PyObject *tmp_globals_arg_value_376;
        PyObject *tmp_locals_arg_value_376;
        PyObject *tmp_fromlist_value_376;
        PyObject *tmp_level_value_376;
        tmp_name_value_376 = mod_consts[1296];
        tmp_globals_arg_value_376 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_376 = Py_None;
        tmp_fromlist_value_376 = mod_consts[1297];
        tmp_level_value_376 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 715;
        tmp_assign_source_640 = IMPORT_MODULE5(tmp_name_value_376, tmp_globals_arg_value_376, tmp_locals_arg_value_376, tmp_fromlist_value_376, tmp_level_value_376);
        if (tmp_assign_source_640 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 715;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_99__module == NULL);
        tmp_import_from_99__module = tmp_assign_source_640;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_641;
        PyObject *tmp_import_name_from_538;
        CHECK_OBJECT(tmp_import_from_99__module);
        tmp_import_name_from_538 = tmp_import_from_99__module;
        if (PyModule_Check(tmp_import_name_from_538)) {
            tmp_assign_source_641 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_538,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1298],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_641 = IMPORT_NAME(tmp_import_name_from_538, mod_consts[1298]);
        }

        if (tmp_assign_source_641 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 715;

            goto try_except_handler_99;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1298], tmp_assign_source_641);
    }
    {
        PyObject *tmp_assign_source_642;
        PyObject *tmp_import_name_from_539;
        CHECK_OBJECT(tmp_import_from_99__module);
        tmp_import_name_from_539 = tmp_import_from_99__module;
        if (PyModule_Check(tmp_import_name_from_539)) {
            tmp_assign_source_642 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_539,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1299],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_642 = IMPORT_NAME(tmp_import_name_from_539, mod_consts[1299]);
        }

        if (tmp_assign_source_642 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 715;

            goto try_except_handler_99;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1299], tmp_assign_source_642);
    }
    goto try_end_99;
    // Exception handler code:
    try_except_handler_99:;
    exception_keeper_type_99 = exception_type;
    exception_keeper_value_99 = exception_value;
    exception_keeper_tb_99 = exception_tb;
    exception_keeper_lineno_99 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_99__module);
    Py_DECREF(tmp_import_from_99__module);
    tmp_import_from_99__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_99;
    exception_value = exception_keeper_value_99;
    exception_tb = exception_keeper_tb_99;
    exception_lineno = exception_keeper_lineno_99;

    goto frame_exception_exit_1;
    // End of try:
    try_end_99:;
    CHECK_OBJECT(tmp_import_from_99__module);
    Py_DECREF(tmp_import_from_99__module);
    tmp_import_from_99__module = NULL;
    {
        PyObject *tmp_assign_source_643;
        PyObject *tmp_import_name_from_540;
        PyObject *tmp_name_value_377;
        PyObject *tmp_globals_arg_value_377;
        PyObject *tmp_locals_arg_value_377;
        PyObject *tmp_fromlist_value_377;
        PyObject *tmp_level_value_377;
        tmp_name_value_377 = mod_consts[1300];
        tmp_globals_arg_value_377 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_377 = Py_None;
        tmp_fromlist_value_377 = mod_consts[1301];
        tmp_level_value_377 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 719;
        tmp_import_name_from_540 = IMPORT_MODULE5(tmp_name_value_377, tmp_globals_arg_value_377, tmp_locals_arg_value_377, tmp_fromlist_value_377, tmp_level_value_377);
        if (tmp_import_name_from_540 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 719;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_540)) {
            tmp_assign_source_643 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_540,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1302],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_643 = IMPORT_NAME(tmp_import_name_from_540, mod_consts[1302]);
        }

        Py_DECREF(tmp_import_name_from_540);
        if (tmp_assign_source_643 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 719;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1302], tmp_assign_source_643);
    }
    {
        PyObject *tmp_assign_source_644;
        PyObject *tmp_name_value_378;
        PyObject *tmp_globals_arg_value_378;
        PyObject *tmp_locals_arg_value_378;
        PyObject *tmp_fromlist_value_378;
        PyObject *tmp_level_value_378;
        tmp_name_value_378 = mod_consts[1303];
        tmp_globals_arg_value_378 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_378 = Py_None;
        tmp_fromlist_value_378 = mod_consts[1304];
        tmp_level_value_378 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 720;
        tmp_assign_source_644 = IMPORT_MODULE5(tmp_name_value_378, tmp_globals_arg_value_378, tmp_locals_arg_value_378, tmp_fromlist_value_378, tmp_level_value_378);
        if (tmp_assign_source_644 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 720;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_100__module == NULL);
        tmp_import_from_100__module = tmp_assign_source_644;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_645;
        PyObject *tmp_import_name_from_541;
        CHECK_OBJECT(tmp_import_from_100__module);
        tmp_import_name_from_541 = tmp_import_from_100__module;
        if (PyModule_Check(tmp_import_name_from_541)) {
            tmp_assign_source_645 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_541,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1305],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_645 = IMPORT_NAME(tmp_import_name_from_541, mod_consts[1305]);
        }

        if (tmp_assign_source_645 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 720;

            goto try_except_handler_100;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1305], tmp_assign_source_645);
    }
    {
        PyObject *tmp_assign_source_646;
        PyObject *tmp_import_name_from_542;
        CHECK_OBJECT(tmp_import_from_100__module);
        tmp_import_name_from_542 = tmp_import_from_100__module;
        if (PyModule_Check(tmp_import_name_from_542)) {
            tmp_assign_source_646 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_542,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1306],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_646 = IMPORT_NAME(tmp_import_name_from_542, mod_consts[1306]);
        }

        if (tmp_assign_source_646 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 720;

            goto try_except_handler_100;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1306], tmp_assign_source_646);
    }
    goto try_end_100;
    // Exception handler code:
    try_except_handler_100:;
    exception_keeper_type_100 = exception_type;
    exception_keeper_value_100 = exception_value;
    exception_keeper_tb_100 = exception_tb;
    exception_keeper_lineno_100 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_100__module);
    Py_DECREF(tmp_import_from_100__module);
    tmp_import_from_100__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_100;
    exception_value = exception_keeper_value_100;
    exception_tb = exception_keeper_tb_100;
    exception_lineno = exception_keeper_lineno_100;

    goto frame_exception_exit_1;
    // End of try:
    try_end_100:;
    CHECK_OBJECT(tmp_import_from_100__module);
    Py_DECREF(tmp_import_from_100__module);
    tmp_import_from_100__module = NULL;
    {
        PyObject *tmp_assign_source_647;
        PyObject *tmp_import_name_from_543;
        PyObject *tmp_name_value_379;
        PyObject *tmp_globals_arg_value_379;
        PyObject *tmp_locals_arg_value_379;
        PyObject *tmp_fromlist_value_379;
        PyObject *tmp_level_value_379;
        tmp_name_value_379 = mod_consts[1307];
        tmp_globals_arg_value_379 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_379 = Py_None;
        tmp_fromlist_value_379 = mod_consts[1308];
        tmp_level_value_379 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 724;
        tmp_import_name_from_543 = IMPORT_MODULE5(tmp_name_value_379, tmp_globals_arg_value_379, tmp_locals_arg_value_379, tmp_fromlist_value_379, tmp_level_value_379);
        if (tmp_import_name_from_543 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 724;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_543)) {
            tmp_assign_source_647 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_543,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1309],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_647 = IMPORT_NAME(tmp_import_name_from_543, mod_consts[1309]);
        }

        Py_DECREF(tmp_import_name_from_543);
        if (tmp_assign_source_647 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 724;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1309], tmp_assign_source_647);
    }
    {
        PyObject *tmp_assign_source_648;
        PyObject *tmp_name_value_380;
        PyObject *tmp_globals_arg_value_380;
        PyObject *tmp_locals_arg_value_380;
        PyObject *tmp_fromlist_value_380;
        PyObject *tmp_level_value_380;
        tmp_name_value_380 = mod_consts[1310];
        tmp_globals_arg_value_380 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_380 = Py_None;
        tmp_fromlist_value_380 = mod_consts[1311];
        tmp_level_value_380 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 725;
        tmp_assign_source_648 = IMPORT_MODULE5(tmp_name_value_380, tmp_globals_arg_value_380, tmp_locals_arg_value_380, tmp_fromlist_value_380, tmp_level_value_380);
        if (tmp_assign_source_648 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 725;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_101__module == NULL);
        tmp_import_from_101__module = tmp_assign_source_648;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_649;
        PyObject *tmp_import_name_from_544;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_544 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_544)) {
            tmp_assign_source_649 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_544,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1312],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_649 = IMPORT_NAME(tmp_import_name_from_544, mod_consts[1312]);
        }

        if (tmp_assign_source_649 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 725;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1312], tmp_assign_source_649);
    }
    {
        PyObject *tmp_assign_source_650;
        PyObject *tmp_import_name_from_545;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_545 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_545)) {
            tmp_assign_source_650 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_545,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1313],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_650 = IMPORT_NAME(tmp_import_name_from_545, mod_consts[1313]);
        }

        if (tmp_assign_source_650 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 725;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1313], tmp_assign_source_650);
    }
    {
        PyObject *tmp_assign_source_651;
        PyObject *tmp_import_name_from_546;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_546 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_546)) {
            tmp_assign_source_651 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_546,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1314],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_651 = IMPORT_NAME(tmp_import_name_from_546, mod_consts[1314]);
        }

        if (tmp_assign_source_651 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 725;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1314], tmp_assign_source_651);
    }
    {
        PyObject *tmp_assign_source_652;
        PyObject *tmp_import_name_from_547;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_547 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_547)) {
            tmp_assign_source_652 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_547,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1315],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_652 = IMPORT_NAME(tmp_import_name_from_547, mod_consts[1315]);
        }

        if (tmp_assign_source_652 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 725;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1315], tmp_assign_source_652);
    }
    {
        PyObject *tmp_assign_source_653;
        PyObject *tmp_import_name_from_548;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_548 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_548)) {
            tmp_assign_source_653 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_548,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1316],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_653 = IMPORT_NAME(tmp_import_name_from_548, mod_consts[1316]);
        }

        if (tmp_assign_source_653 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 725;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1316], tmp_assign_source_653);
    }
    {
        PyObject *tmp_assign_source_654;
        PyObject *tmp_import_name_from_549;
        CHECK_OBJECT(tmp_import_from_101__module);
        tmp_import_name_from_549 = tmp_import_from_101__module;
        if (PyModule_Check(tmp_import_name_from_549)) {
            tmp_assign_source_654 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_549,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1317],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_654 = IMPORT_NAME(tmp_import_name_from_549, mod_consts[1317]);
        }

        if (tmp_assign_source_654 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 725;

            goto try_except_handler_101;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1317], tmp_assign_source_654);
    }
    goto try_end_101;
    // Exception handler code:
    try_except_handler_101:;
    exception_keeper_type_101 = exception_type;
    exception_keeper_value_101 = exception_value;
    exception_keeper_tb_101 = exception_tb;
    exception_keeper_lineno_101 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_101__module);
    Py_DECREF(tmp_import_from_101__module);
    tmp_import_from_101__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_101;
    exception_value = exception_keeper_value_101;
    exception_tb = exception_keeper_tb_101;
    exception_lineno = exception_keeper_lineno_101;

    goto frame_exception_exit_1;
    // End of try:
    try_end_101:;
    CHECK_OBJECT(tmp_import_from_101__module);
    Py_DECREF(tmp_import_from_101__module);
    tmp_import_from_101__module = NULL;
    {
        PyObject *tmp_assign_source_655;
        PyObject *tmp_name_value_381;
        PyObject *tmp_globals_arg_value_381;
        PyObject *tmp_locals_arg_value_381;
        PyObject *tmp_fromlist_value_381;
        PyObject *tmp_level_value_381;
        tmp_name_value_381 = mod_consts[1318];
        tmp_globals_arg_value_381 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_381 = Py_None;
        tmp_fromlist_value_381 = mod_consts[1319];
        tmp_level_value_381 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 733;
        tmp_assign_source_655 = IMPORT_MODULE5(tmp_name_value_381, tmp_globals_arg_value_381, tmp_locals_arg_value_381, tmp_fromlist_value_381, tmp_level_value_381);
        if (tmp_assign_source_655 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 733;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_102__module == NULL);
        tmp_import_from_102__module = tmp_assign_source_655;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_656;
        PyObject *tmp_import_name_from_550;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_550 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_550)) {
            tmp_assign_source_656 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_550,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1320],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_656 = IMPORT_NAME(tmp_import_name_from_550, mod_consts[1320]);
        }

        if (tmp_assign_source_656 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 733;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1320], tmp_assign_source_656);
    }
    {
        PyObject *tmp_assign_source_657;
        PyObject *tmp_import_name_from_551;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_551 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_551)) {
            tmp_assign_source_657 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_551,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1321],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_657 = IMPORT_NAME(tmp_import_name_from_551, mod_consts[1321]);
        }

        if (tmp_assign_source_657 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 733;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1321], tmp_assign_source_657);
    }
    {
        PyObject *tmp_assign_source_658;
        PyObject *tmp_import_name_from_552;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_552 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_552)) {
            tmp_assign_source_658 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_552,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1322],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_658 = IMPORT_NAME(tmp_import_name_from_552, mod_consts[1322]);
        }

        if (tmp_assign_source_658 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 733;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1322], tmp_assign_source_658);
    }
    {
        PyObject *tmp_assign_source_659;
        PyObject *tmp_import_name_from_553;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_553 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_553)) {
            tmp_assign_source_659 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_553,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1323],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_659 = IMPORT_NAME(tmp_import_name_from_553, mod_consts[1323]);
        }

        if (tmp_assign_source_659 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 733;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1323], tmp_assign_source_659);
    }
    {
        PyObject *tmp_assign_source_660;
        PyObject *tmp_import_name_from_554;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_554 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_554)) {
            tmp_assign_source_660 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_554,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1324],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_660 = IMPORT_NAME(tmp_import_name_from_554, mod_consts[1324]);
        }

        if (tmp_assign_source_660 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 733;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1324], tmp_assign_source_660);
    }
    {
        PyObject *tmp_assign_source_661;
        PyObject *tmp_import_name_from_555;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_555 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_555)) {
            tmp_assign_source_661 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_555,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1325],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_661 = IMPORT_NAME(tmp_import_name_from_555, mod_consts[1325]);
        }

        if (tmp_assign_source_661 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 733;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1325], tmp_assign_source_661);
    }
    {
        PyObject *tmp_assign_source_662;
        PyObject *tmp_import_name_from_556;
        CHECK_OBJECT(tmp_import_from_102__module);
        tmp_import_name_from_556 = tmp_import_from_102__module;
        if (PyModule_Check(tmp_import_name_from_556)) {
            tmp_assign_source_662 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_556,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1326],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_662 = IMPORT_NAME(tmp_import_name_from_556, mod_consts[1326]);
        }

        if (tmp_assign_source_662 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 733;

            goto try_except_handler_102;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1326], tmp_assign_source_662);
    }
    goto try_end_102;
    // Exception handler code:
    try_except_handler_102:;
    exception_keeper_type_102 = exception_type;
    exception_keeper_value_102 = exception_value;
    exception_keeper_tb_102 = exception_tb;
    exception_keeper_lineno_102 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_102__module);
    Py_DECREF(tmp_import_from_102__module);
    tmp_import_from_102__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_102;
    exception_value = exception_keeper_value_102;
    exception_tb = exception_keeper_tb_102;
    exception_lineno = exception_keeper_lineno_102;

    goto frame_exception_exit_1;
    // End of try:
    try_end_102:;
    CHECK_OBJECT(tmp_import_from_102__module);
    Py_DECREF(tmp_import_from_102__module);
    tmp_import_from_102__module = NULL;
    {
        PyObject *tmp_assign_source_663;
        PyObject *tmp_name_value_382;
        PyObject *tmp_globals_arg_value_382;
        PyObject *tmp_locals_arg_value_382;
        PyObject *tmp_fromlist_value_382;
        PyObject *tmp_level_value_382;
        tmp_name_value_382 = mod_consts[1327];
        tmp_globals_arg_value_382 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_382 = Py_None;
        tmp_fromlist_value_382 = mod_consts[1328];
        tmp_level_value_382 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 742;
        tmp_assign_source_663 = IMPORT_MODULE5(tmp_name_value_382, tmp_globals_arg_value_382, tmp_locals_arg_value_382, tmp_fromlist_value_382, tmp_level_value_382);
        if (tmp_assign_source_663 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 742;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_103__module == NULL);
        tmp_import_from_103__module = tmp_assign_source_663;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_664;
        PyObject *tmp_import_name_from_557;
        CHECK_OBJECT(tmp_import_from_103__module);
        tmp_import_name_from_557 = tmp_import_from_103__module;
        if (PyModule_Check(tmp_import_name_from_557)) {
            tmp_assign_source_664 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_557,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1329],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_664 = IMPORT_NAME(tmp_import_name_from_557, mod_consts[1329]);
        }

        if (tmp_assign_source_664 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 742;

            goto try_except_handler_103;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1329], tmp_assign_source_664);
    }
    {
        PyObject *tmp_assign_source_665;
        PyObject *tmp_import_name_from_558;
        CHECK_OBJECT(tmp_import_from_103__module);
        tmp_import_name_from_558 = tmp_import_from_103__module;
        if (PyModule_Check(tmp_import_name_from_558)) {
            tmp_assign_source_665 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_558,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1330],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_665 = IMPORT_NAME(tmp_import_name_from_558, mod_consts[1330]);
        }

        if (tmp_assign_source_665 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 742;

            goto try_except_handler_103;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1330], tmp_assign_source_665);
    }
    {
        PyObject *tmp_assign_source_666;
        PyObject *tmp_import_name_from_559;
        CHECK_OBJECT(tmp_import_from_103__module);
        tmp_import_name_from_559 = tmp_import_from_103__module;
        if (PyModule_Check(tmp_import_name_from_559)) {
            tmp_assign_source_666 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_559,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1331],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_666 = IMPORT_NAME(tmp_import_name_from_559, mod_consts[1331]);
        }

        if (tmp_assign_source_666 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 742;

            goto try_except_handler_103;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1331], tmp_assign_source_666);
    }
    {
        PyObject *tmp_assign_source_667;
        PyObject *tmp_import_name_from_560;
        CHECK_OBJECT(tmp_import_from_103__module);
        tmp_import_name_from_560 = tmp_import_from_103__module;
        if (PyModule_Check(tmp_import_name_from_560)) {
            tmp_assign_source_667 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_560,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1332],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_667 = IMPORT_NAME(tmp_import_name_from_560, mod_consts[1332]);
        }

        if (tmp_assign_source_667 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 742;

            goto try_except_handler_103;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1332], tmp_assign_source_667);
    }
    {
        PyObject *tmp_assign_source_668;
        PyObject *tmp_import_name_from_561;
        CHECK_OBJECT(tmp_import_from_103__module);
        tmp_import_name_from_561 = tmp_import_from_103__module;
        if (PyModule_Check(tmp_import_name_from_561)) {
            tmp_assign_source_668 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_561,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1333],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_668 = IMPORT_NAME(tmp_import_name_from_561, mod_consts[1333]);
        }

        if (tmp_assign_source_668 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 742;

            goto try_except_handler_103;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1333], tmp_assign_source_668);
    }
    goto try_end_103;
    // Exception handler code:
    try_except_handler_103:;
    exception_keeper_type_103 = exception_type;
    exception_keeper_value_103 = exception_value;
    exception_keeper_tb_103 = exception_tb;
    exception_keeper_lineno_103 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_103__module);
    Py_DECREF(tmp_import_from_103__module);
    tmp_import_from_103__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_103;
    exception_value = exception_keeper_value_103;
    exception_tb = exception_keeper_tb_103;
    exception_lineno = exception_keeper_lineno_103;

    goto frame_exception_exit_1;
    // End of try:
    try_end_103:;
    CHECK_OBJECT(tmp_import_from_103__module);
    Py_DECREF(tmp_import_from_103__module);
    tmp_import_from_103__module = NULL;
    {
        PyObject *tmp_assign_source_669;
        PyObject *tmp_import_name_from_562;
        PyObject *tmp_name_value_383;
        PyObject *tmp_globals_arg_value_383;
        PyObject *tmp_locals_arg_value_383;
        PyObject *tmp_fromlist_value_383;
        PyObject *tmp_level_value_383;
        tmp_name_value_383 = mod_consts[1334];
        tmp_globals_arg_value_383 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_383 = Py_None;
        tmp_fromlist_value_383 = mod_consts[1335];
        tmp_level_value_383 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 749;
        tmp_import_name_from_562 = IMPORT_MODULE5(tmp_name_value_383, tmp_globals_arg_value_383, tmp_locals_arg_value_383, tmp_fromlist_value_383, tmp_level_value_383);
        if (tmp_import_name_from_562 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 749;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_562)) {
            tmp_assign_source_669 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_562,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1336],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_669 = IMPORT_NAME(tmp_import_name_from_562, mod_consts[1336]);
        }

        Py_DECREF(tmp_import_name_from_562);
        if (tmp_assign_source_669 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 749;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1336], tmp_assign_source_669);
    }
    {
        PyObject *tmp_assign_source_670;
        PyObject *tmp_import_name_from_563;
        PyObject *tmp_name_value_384;
        PyObject *tmp_globals_arg_value_384;
        PyObject *tmp_locals_arg_value_384;
        PyObject *tmp_fromlist_value_384;
        PyObject *tmp_level_value_384;
        tmp_name_value_384 = mod_consts[1337];
        tmp_globals_arg_value_384 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_384 = Py_None;
        tmp_fromlist_value_384 = mod_consts[1338];
        tmp_level_value_384 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 750;
        tmp_import_name_from_563 = IMPORT_MODULE5(tmp_name_value_384, tmp_globals_arg_value_384, tmp_locals_arg_value_384, tmp_fromlist_value_384, tmp_level_value_384);
        if (tmp_import_name_from_563 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 750;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_563)) {
            tmp_assign_source_670 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_563,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1339],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_670 = IMPORT_NAME(tmp_import_name_from_563, mod_consts[1339]);
        }

        Py_DECREF(tmp_import_name_from_563);
        if (tmp_assign_source_670 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 750;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1339], tmp_assign_source_670);
    }
    {
        PyObject *tmp_assign_source_671;
        PyObject *tmp_import_name_from_564;
        PyObject *tmp_name_value_385;
        PyObject *tmp_globals_arg_value_385;
        PyObject *tmp_locals_arg_value_385;
        PyObject *tmp_fromlist_value_385;
        PyObject *tmp_level_value_385;
        tmp_name_value_385 = mod_consts[1340];
        tmp_globals_arg_value_385 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_385 = Py_None;
        tmp_fromlist_value_385 = mod_consts[1341];
        tmp_level_value_385 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 751;
        tmp_import_name_from_564 = IMPORT_MODULE5(tmp_name_value_385, tmp_globals_arg_value_385, tmp_locals_arg_value_385, tmp_fromlist_value_385, tmp_level_value_385);
        if (tmp_import_name_from_564 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 751;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_564)) {
            tmp_assign_source_671 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_564,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1342],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_671 = IMPORT_NAME(tmp_import_name_from_564, mod_consts[1342]);
        }

        Py_DECREF(tmp_import_name_from_564);
        if (tmp_assign_source_671 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 751;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1342], tmp_assign_source_671);
    }
    {
        PyObject *tmp_assign_source_672;
        PyObject *tmp_name_value_386;
        PyObject *tmp_globals_arg_value_386;
        PyObject *tmp_locals_arg_value_386;
        PyObject *tmp_fromlist_value_386;
        PyObject *tmp_level_value_386;
        tmp_name_value_386 = mod_consts[1343];
        tmp_globals_arg_value_386 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_386 = Py_None;
        tmp_fromlist_value_386 = mod_consts[1344];
        tmp_level_value_386 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 752;
        tmp_assign_source_672 = IMPORT_MODULE5(tmp_name_value_386, tmp_globals_arg_value_386, tmp_locals_arg_value_386, tmp_fromlist_value_386, tmp_level_value_386);
        if (tmp_assign_source_672 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 752;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_104__module == NULL);
        tmp_import_from_104__module = tmp_assign_source_672;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_673;
        PyObject *tmp_import_name_from_565;
        CHECK_OBJECT(tmp_import_from_104__module);
        tmp_import_name_from_565 = tmp_import_from_104__module;
        if (PyModule_Check(tmp_import_name_from_565)) {
            tmp_assign_source_673 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_565,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1345],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_673 = IMPORT_NAME(tmp_import_name_from_565, mod_consts[1345]);
        }

        if (tmp_assign_source_673 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 752;

            goto try_except_handler_104;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1345], tmp_assign_source_673);
    }
    {
        PyObject *tmp_assign_source_674;
        PyObject *tmp_import_name_from_566;
        CHECK_OBJECT(tmp_import_from_104__module);
        tmp_import_name_from_566 = tmp_import_from_104__module;
        if (PyModule_Check(tmp_import_name_from_566)) {
            tmp_assign_source_674 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_566,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1346],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_674 = IMPORT_NAME(tmp_import_name_from_566, mod_consts[1346]);
        }

        if (tmp_assign_source_674 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 752;

            goto try_except_handler_104;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1346], tmp_assign_source_674);
    }
    {
        PyObject *tmp_assign_source_675;
        PyObject *tmp_import_name_from_567;
        CHECK_OBJECT(tmp_import_from_104__module);
        tmp_import_name_from_567 = tmp_import_from_104__module;
        if (PyModule_Check(tmp_import_name_from_567)) {
            tmp_assign_source_675 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_567,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1347],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_675 = IMPORT_NAME(tmp_import_name_from_567, mod_consts[1347]);
        }

        if (tmp_assign_source_675 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 752;

            goto try_except_handler_104;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1347], tmp_assign_source_675);
    }
    {
        PyObject *tmp_assign_source_676;
        PyObject *tmp_import_name_from_568;
        CHECK_OBJECT(tmp_import_from_104__module);
        tmp_import_name_from_568 = tmp_import_from_104__module;
        if (PyModule_Check(tmp_import_name_from_568)) {
            tmp_assign_source_676 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_568,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1348],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_676 = IMPORT_NAME(tmp_import_name_from_568, mod_consts[1348]);
        }

        if (tmp_assign_source_676 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 752;

            goto try_except_handler_104;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1348], tmp_assign_source_676);
    }
    {
        PyObject *tmp_assign_source_677;
        PyObject *tmp_import_name_from_569;
        CHECK_OBJECT(tmp_import_from_104__module);
        tmp_import_name_from_569 = tmp_import_from_104__module;
        if (PyModule_Check(tmp_import_name_from_569)) {
            tmp_assign_source_677 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_569,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1349],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_677 = IMPORT_NAME(tmp_import_name_from_569, mod_consts[1349]);
        }

        if (tmp_assign_source_677 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 752;

            goto try_except_handler_104;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1349], tmp_assign_source_677);
    }
    {
        PyObject *tmp_assign_source_678;
        PyObject *tmp_import_name_from_570;
        CHECK_OBJECT(tmp_import_from_104__module);
        tmp_import_name_from_570 = tmp_import_from_104__module;
        if (PyModule_Check(tmp_import_name_from_570)) {
            tmp_assign_source_678 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_570,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1350],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_678 = IMPORT_NAME(tmp_import_name_from_570, mod_consts[1350]);
        }

        if (tmp_assign_source_678 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 752;

            goto try_except_handler_104;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1350], tmp_assign_source_678);
    }
    {
        PyObject *tmp_assign_source_679;
        PyObject *tmp_import_name_from_571;
        CHECK_OBJECT(tmp_import_from_104__module);
        tmp_import_name_from_571 = tmp_import_from_104__module;
        if (PyModule_Check(tmp_import_name_from_571)) {
            tmp_assign_source_679 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_571,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1351],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_679 = IMPORT_NAME(tmp_import_name_from_571, mod_consts[1351]);
        }

        if (tmp_assign_source_679 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 752;

            goto try_except_handler_104;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1351], tmp_assign_source_679);
    }
    goto try_end_104;
    // Exception handler code:
    try_except_handler_104:;
    exception_keeper_type_104 = exception_type;
    exception_keeper_value_104 = exception_value;
    exception_keeper_tb_104 = exception_tb;
    exception_keeper_lineno_104 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_104__module);
    Py_DECREF(tmp_import_from_104__module);
    tmp_import_from_104__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_104;
    exception_value = exception_keeper_value_104;
    exception_tb = exception_keeper_tb_104;
    exception_lineno = exception_keeper_lineno_104;

    goto frame_exception_exit_1;
    // End of try:
    try_end_104:;
    CHECK_OBJECT(tmp_import_from_104__module);
    Py_DECREF(tmp_import_from_104__module);
    tmp_import_from_104__module = NULL;
    {
        PyObject *tmp_assign_source_680;
        PyObject *tmp_name_value_387;
        PyObject *tmp_globals_arg_value_387;
        PyObject *tmp_locals_arg_value_387;
        PyObject *tmp_fromlist_value_387;
        PyObject *tmp_level_value_387;
        tmp_name_value_387 = mod_consts[1352];
        tmp_globals_arg_value_387 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_387 = Py_None;
        tmp_fromlist_value_387 = mod_consts[1353];
        tmp_level_value_387 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 761;
        tmp_assign_source_680 = IMPORT_MODULE5(tmp_name_value_387, tmp_globals_arg_value_387, tmp_locals_arg_value_387, tmp_fromlist_value_387, tmp_level_value_387);
        if (tmp_assign_source_680 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 761;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_105__module == NULL);
        tmp_import_from_105__module = tmp_assign_source_680;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_681;
        PyObject *tmp_import_name_from_572;
        CHECK_OBJECT(tmp_import_from_105__module);
        tmp_import_name_from_572 = tmp_import_from_105__module;
        if (PyModule_Check(tmp_import_name_from_572)) {
            tmp_assign_source_681 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_572,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1354],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_681 = IMPORT_NAME(tmp_import_name_from_572, mod_consts[1354]);
        }

        if (tmp_assign_source_681 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 761;

            goto try_except_handler_105;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1354], tmp_assign_source_681);
    }
    {
        PyObject *tmp_assign_source_682;
        PyObject *tmp_import_name_from_573;
        CHECK_OBJECT(tmp_import_from_105__module);
        tmp_import_name_from_573 = tmp_import_from_105__module;
        if (PyModule_Check(tmp_import_name_from_573)) {
            tmp_assign_source_682 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_573,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1355],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_682 = IMPORT_NAME(tmp_import_name_from_573, mod_consts[1355]);
        }

        if (tmp_assign_source_682 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 761;

            goto try_except_handler_105;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1355], tmp_assign_source_682);
    }
    goto try_end_105;
    // Exception handler code:
    try_except_handler_105:;
    exception_keeper_type_105 = exception_type;
    exception_keeper_value_105 = exception_value;
    exception_keeper_tb_105 = exception_tb;
    exception_keeper_lineno_105 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_105__module);
    Py_DECREF(tmp_import_from_105__module);
    tmp_import_from_105__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_105;
    exception_value = exception_keeper_value_105;
    exception_tb = exception_keeper_tb_105;
    exception_lineno = exception_keeper_lineno_105;

    goto frame_exception_exit_1;
    // End of try:
    try_end_105:;
    CHECK_OBJECT(tmp_import_from_105__module);
    Py_DECREF(tmp_import_from_105__module);
    tmp_import_from_105__module = NULL;
    {
        PyObject *tmp_assign_source_683;
        PyObject *tmp_import_name_from_574;
        PyObject *tmp_name_value_388;
        PyObject *tmp_globals_arg_value_388;
        PyObject *tmp_locals_arg_value_388;
        PyObject *tmp_fromlist_value_388;
        PyObject *tmp_level_value_388;
        tmp_name_value_388 = mod_consts[1356];
        tmp_globals_arg_value_388 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_388 = Py_None;
        tmp_fromlist_value_388 = mod_consts[1357];
        tmp_level_value_388 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 765;
        tmp_import_name_from_574 = IMPORT_MODULE5(tmp_name_value_388, tmp_globals_arg_value_388, tmp_locals_arg_value_388, tmp_fromlist_value_388, tmp_level_value_388);
        if (tmp_import_name_from_574 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 765;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_574)) {
            tmp_assign_source_683 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_574,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1358],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_683 = IMPORT_NAME(tmp_import_name_from_574, mod_consts[1358]);
        }

        Py_DECREF(tmp_import_name_from_574);
        if (tmp_assign_source_683 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 765;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1358], tmp_assign_source_683);
    }
    {
        PyObject *tmp_assign_source_684;
        PyObject *tmp_name_value_389;
        PyObject *tmp_globals_arg_value_389;
        PyObject *tmp_locals_arg_value_389;
        PyObject *tmp_fromlist_value_389;
        PyObject *tmp_level_value_389;
        tmp_name_value_389 = mod_consts[1359];
        tmp_globals_arg_value_389 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_389 = Py_None;
        tmp_fromlist_value_389 = mod_consts[1360];
        tmp_level_value_389 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 766;
        tmp_assign_source_684 = IMPORT_MODULE5(tmp_name_value_389, tmp_globals_arg_value_389, tmp_locals_arg_value_389, tmp_fromlist_value_389, tmp_level_value_389);
        if (tmp_assign_source_684 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 766;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_106__module == NULL);
        tmp_import_from_106__module = tmp_assign_source_684;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_685;
        PyObject *tmp_import_name_from_575;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_575 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_575)) {
            tmp_assign_source_685 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_575,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1361],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_685 = IMPORT_NAME(tmp_import_name_from_575, mod_consts[1361]);
        }

        if (tmp_assign_source_685 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 766;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1361], tmp_assign_source_685);
    }
    {
        PyObject *tmp_assign_source_686;
        PyObject *tmp_import_name_from_576;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_576 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_576)) {
            tmp_assign_source_686 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_576,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1362],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_686 = IMPORT_NAME(tmp_import_name_from_576, mod_consts[1362]);
        }

        if (tmp_assign_source_686 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 766;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1362], tmp_assign_source_686);
    }
    {
        PyObject *tmp_assign_source_687;
        PyObject *tmp_import_name_from_577;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_577 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_577)) {
            tmp_assign_source_687 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_577,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1363],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_687 = IMPORT_NAME(tmp_import_name_from_577, mod_consts[1363]);
        }

        if (tmp_assign_source_687 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 766;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1363], tmp_assign_source_687);
    }
    {
        PyObject *tmp_assign_source_688;
        PyObject *tmp_import_name_from_578;
        CHECK_OBJECT(tmp_import_from_106__module);
        tmp_import_name_from_578 = tmp_import_from_106__module;
        if (PyModule_Check(tmp_import_name_from_578)) {
            tmp_assign_source_688 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_578,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1364],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_688 = IMPORT_NAME(tmp_import_name_from_578, mod_consts[1364]);
        }

        if (tmp_assign_source_688 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 766;

            goto try_except_handler_106;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1364], tmp_assign_source_688);
    }
    goto try_end_106;
    // Exception handler code:
    try_except_handler_106:;
    exception_keeper_type_106 = exception_type;
    exception_keeper_value_106 = exception_value;
    exception_keeper_tb_106 = exception_tb;
    exception_keeper_lineno_106 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_106__module);
    Py_DECREF(tmp_import_from_106__module);
    tmp_import_from_106__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_106;
    exception_value = exception_keeper_value_106;
    exception_tb = exception_keeper_tb_106;
    exception_lineno = exception_keeper_lineno_106;

    goto frame_exception_exit_1;
    // End of try:
    try_end_106:;
    CHECK_OBJECT(tmp_import_from_106__module);
    Py_DECREF(tmp_import_from_106__module);
    tmp_import_from_106__module = NULL;
    {
        PyObject *tmp_assign_source_689;
        PyObject *tmp_name_value_390;
        PyObject *tmp_globals_arg_value_390;
        PyObject *tmp_locals_arg_value_390;
        PyObject *tmp_fromlist_value_390;
        PyObject *tmp_level_value_390;
        tmp_name_value_390 = mod_consts[1365];
        tmp_globals_arg_value_390 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_390 = Py_None;
        tmp_fromlist_value_390 = mod_consts[1366];
        tmp_level_value_390 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 772;
        tmp_assign_source_689 = IMPORT_MODULE5(tmp_name_value_390, tmp_globals_arg_value_390, tmp_locals_arg_value_390, tmp_fromlist_value_390, tmp_level_value_390);
        if (tmp_assign_source_689 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 772;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_107__module == NULL);
        tmp_import_from_107__module = tmp_assign_source_689;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_690;
        PyObject *tmp_import_name_from_579;
        CHECK_OBJECT(tmp_import_from_107__module);
        tmp_import_name_from_579 = tmp_import_from_107__module;
        if (PyModule_Check(tmp_import_name_from_579)) {
            tmp_assign_source_690 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_579,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1367],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_690 = IMPORT_NAME(tmp_import_name_from_579, mod_consts[1367]);
        }

        if (tmp_assign_source_690 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 772;

            goto try_except_handler_107;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1367], tmp_assign_source_690);
    }
    {
        PyObject *tmp_assign_source_691;
        PyObject *tmp_import_name_from_580;
        CHECK_OBJECT(tmp_import_from_107__module);
        tmp_import_name_from_580 = tmp_import_from_107__module;
        if (PyModule_Check(tmp_import_name_from_580)) {
            tmp_assign_source_691 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_580,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1368],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_691 = IMPORT_NAME(tmp_import_name_from_580, mod_consts[1368]);
        }

        if (tmp_assign_source_691 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 772;

            goto try_except_handler_107;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1368], tmp_assign_source_691);
    }
    goto try_end_107;
    // Exception handler code:
    try_except_handler_107:;
    exception_keeper_type_107 = exception_type;
    exception_keeper_value_107 = exception_value;
    exception_keeper_tb_107 = exception_tb;
    exception_keeper_lineno_107 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_107__module);
    Py_DECREF(tmp_import_from_107__module);
    tmp_import_from_107__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_107;
    exception_value = exception_keeper_value_107;
    exception_tb = exception_keeper_tb_107;
    exception_lineno = exception_keeper_lineno_107;

    goto frame_exception_exit_1;
    // End of try:
    try_end_107:;
    CHECK_OBJECT(tmp_import_from_107__module);
    Py_DECREF(tmp_import_from_107__module);
    tmp_import_from_107__module = NULL;
    {
        PyObject *tmp_assign_source_692;
        PyObject *tmp_name_value_391;
        PyObject *tmp_globals_arg_value_391;
        PyObject *tmp_locals_arg_value_391;
        PyObject *tmp_fromlist_value_391;
        PyObject *tmp_level_value_391;
        tmp_name_value_391 = mod_consts[1369];
        tmp_globals_arg_value_391 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_391 = Py_None;
        tmp_fromlist_value_391 = mod_consts[1370];
        tmp_level_value_391 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 776;
        tmp_assign_source_692 = IMPORT_MODULE5(tmp_name_value_391, tmp_globals_arg_value_391, tmp_locals_arg_value_391, tmp_fromlist_value_391, tmp_level_value_391);
        if (tmp_assign_source_692 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 776;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_108__module == NULL);
        tmp_import_from_108__module = tmp_assign_source_692;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_693;
        PyObject *tmp_import_name_from_581;
        CHECK_OBJECT(tmp_import_from_108__module);
        tmp_import_name_from_581 = tmp_import_from_108__module;
        if (PyModule_Check(tmp_import_name_from_581)) {
            tmp_assign_source_693 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_581,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1371],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_693 = IMPORT_NAME(tmp_import_name_from_581, mod_consts[1371]);
        }

        if (tmp_assign_source_693 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 776;

            goto try_except_handler_108;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1371], tmp_assign_source_693);
    }
    {
        PyObject *tmp_assign_source_694;
        PyObject *tmp_import_name_from_582;
        CHECK_OBJECT(tmp_import_from_108__module);
        tmp_import_name_from_582 = tmp_import_from_108__module;
        if (PyModule_Check(tmp_import_name_from_582)) {
            tmp_assign_source_694 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_582,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1372],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_694 = IMPORT_NAME(tmp_import_name_from_582, mod_consts[1372]);
        }

        if (tmp_assign_source_694 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 776;

            goto try_except_handler_108;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1372], tmp_assign_source_694);
    }
    goto try_end_108;
    // Exception handler code:
    try_except_handler_108:;
    exception_keeper_type_108 = exception_type;
    exception_keeper_value_108 = exception_value;
    exception_keeper_tb_108 = exception_tb;
    exception_keeper_lineno_108 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_108__module);
    Py_DECREF(tmp_import_from_108__module);
    tmp_import_from_108__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_108;
    exception_value = exception_keeper_value_108;
    exception_tb = exception_keeper_tb_108;
    exception_lineno = exception_keeper_lineno_108;

    goto frame_exception_exit_1;
    // End of try:
    try_end_108:;
    CHECK_OBJECT(tmp_import_from_108__module);
    Py_DECREF(tmp_import_from_108__module);
    tmp_import_from_108__module = NULL;
    {
        PyObject *tmp_assign_source_695;
        PyObject *tmp_name_value_392;
        PyObject *tmp_globals_arg_value_392;
        PyObject *tmp_locals_arg_value_392;
        PyObject *tmp_fromlist_value_392;
        PyObject *tmp_level_value_392;
        tmp_name_value_392 = mod_consts[1373];
        tmp_globals_arg_value_392 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_392 = Py_None;
        tmp_fromlist_value_392 = mod_consts[1374];
        tmp_level_value_392 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 780;
        tmp_assign_source_695 = IMPORT_MODULE5(tmp_name_value_392, tmp_globals_arg_value_392, tmp_locals_arg_value_392, tmp_fromlist_value_392, tmp_level_value_392);
        if (tmp_assign_source_695 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 780;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_109__module == NULL);
        tmp_import_from_109__module = tmp_assign_source_695;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_696;
        PyObject *tmp_import_name_from_583;
        CHECK_OBJECT(tmp_import_from_109__module);
        tmp_import_name_from_583 = tmp_import_from_109__module;
        if (PyModule_Check(tmp_import_name_from_583)) {
            tmp_assign_source_696 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_583,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1375],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_696 = IMPORT_NAME(tmp_import_name_from_583, mod_consts[1375]);
        }

        if (tmp_assign_source_696 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 780;

            goto try_except_handler_109;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1375], tmp_assign_source_696);
    }
    {
        PyObject *tmp_assign_source_697;
        PyObject *tmp_import_name_from_584;
        CHECK_OBJECT(tmp_import_from_109__module);
        tmp_import_name_from_584 = tmp_import_from_109__module;
        if (PyModule_Check(tmp_import_name_from_584)) {
            tmp_assign_source_697 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_584,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1376],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_697 = IMPORT_NAME(tmp_import_name_from_584, mod_consts[1376]);
        }

        if (tmp_assign_source_697 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 780;

            goto try_except_handler_109;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1376], tmp_assign_source_697);
    }
    goto try_end_109;
    // Exception handler code:
    try_except_handler_109:;
    exception_keeper_type_109 = exception_type;
    exception_keeper_value_109 = exception_value;
    exception_keeper_tb_109 = exception_tb;
    exception_keeper_lineno_109 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_109__module);
    Py_DECREF(tmp_import_from_109__module);
    tmp_import_from_109__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_109;
    exception_value = exception_keeper_value_109;
    exception_tb = exception_keeper_tb_109;
    exception_lineno = exception_keeper_lineno_109;

    goto frame_exception_exit_1;
    // End of try:
    try_end_109:;
    CHECK_OBJECT(tmp_import_from_109__module);
    Py_DECREF(tmp_import_from_109__module);
    tmp_import_from_109__module = NULL;
    {
        PyObject *tmp_assign_source_698;
        PyObject *tmp_import_name_from_585;
        PyObject *tmp_name_value_393;
        PyObject *tmp_globals_arg_value_393;
        PyObject *tmp_locals_arg_value_393;
        PyObject *tmp_fromlist_value_393;
        PyObject *tmp_level_value_393;
        tmp_name_value_393 = mod_consts[1377];
        tmp_globals_arg_value_393 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_393 = Py_None;
        tmp_fromlist_value_393 = mod_consts[1378];
        tmp_level_value_393 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 784;
        tmp_import_name_from_585 = IMPORT_MODULE5(tmp_name_value_393, tmp_globals_arg_value_393, tmp_locals_arg_value_393, tmp_fromlist_value_393, tmp_level_value_393);
        if (tmp_import_name_from_585 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 784;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_585)) {
            tmp_assign_source_698 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_585,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1379],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_698 = IMPORT_NAME(tmp_import_name_from_585, mod_consts[1379]);
        }

        Py_DECREF(tmp_import_name_from_585);
        if (tmp_assign_source_698 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 784;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1379], tmp_assign_source_698);
    }
    {
        PyObject *tmp_assign_source_699;
        PyObject *tmp_name_value_394;
        PyObject *tmp_globals_arg_value_394;
        PyObject *tmp_locals_arg_value_394;
        PyObject *tmp_fromlist_value_394;
        PyObject *tmp_level_value_394;
        tmp_name_value_394 = mod_consts[1380];
        tmp_globals_arg_value_394 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_394 = Py_None;
        tmp_fromlist_value_394 = mod_consts[1381];
        tmp_level_value_394 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 785;
        tmp_assign_source_699 = IMPORT_MODULE5(tmp_name_value_394, tmp_globals_arg_value_394, tmp_locals_arg_value_394, tmp_fromlist_value_394, tmp_level_value_394);
        if (tmp_assign_source_699 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 785;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_110__module == NULL);
        tmp_import_from_110__module = tmp_assign_source_699;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_700;
        PyObject *tmp_import_name_from_586;
        CHECK_OBJECT(tmp_import_from_110__module);
        tmp_import_name_from_586 = tmp_import_from_110__module;
        if (PyModule_Check(tmp_import_name_from_586)) {
            tmp_assign_source_700 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_586,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1382],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_700 = IMPORT_NAME(tmp_import_name_from_586, mod_consts[1382]);
        }

        if (tmp_assign_source_700 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 785;

            goto try_except_handler_110;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1382], tmp_assign_source_700);
    }
    {
        PyObject *tmp_assign_source_701;
        PyObject *tmp_import_name_from_587;
        CHECK_OBJECT(tmp_import_from_110__module);
        tmp_import_name_from_587 = tmp_import_from_110__module;
        if (PyModule_Check(tmp_import_name_from_587)) {
            tmp_assign_source_701 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_587,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1383],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_701 = IMPORT_NAME(tmp_import_name_from_587, mod_consts[1383]);
        }

        if (tmp_assign_source_701 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 785;

            goto try_except_handler_110;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1383], tmp_assign_source_701);
    }
    {
        PyObject *tmp_assign_source_702;
        PyObject *tmp_import_name_from_588;
        CHECK_OBJECT(tmp_import_from_110__module);
        tmp_import_name_from_588 = tmp_import_from_110__module;
        if (PyModule_Check(tmp_import_name_from_588)) {
            tmp_assign_source_702 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_588,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1384],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_702 = IMPORT_NAME(tmp_import_name_from_588, mod_consts[1384]);
        }

        if (tmp_assign_source_702 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 785;

            goto try_except_handler_110;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1384], tmp_assign_source_702);
    }
    {
        PyObject *tmp_assign_source_703;
        PyObject *tmp_import_name_from_589;
        CHECK_OBJECT(tmp_import_from_110__module);
        tmp_import_name_from_589 = tmp_import_from_110__module;
        if (PyModule_Check(tmp_import_name_from_589)) {
            tmp_assign_source_703 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_589,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1385],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_703 = IMPORT_NAME(tmp_import_name_from_589, mod_consts[1385]);
        }

        if (tmp_assign_source_703 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 785;

            goto try_except_handler_110;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1385], tmp_assign_source_703);
    }
    {
        PyObject *tmp_assign_source_704;
        PyObject *tmp_import_name_from_590;
        CHECK_OBJECT(tmp_import_from_110__module);
        tmp_import_name_from_590 = tmp_import_from_110__module;
        if (PyModule_Check(tmp_import_name_from_590)) {
            tmp_assign_source_704 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_590,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1386],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_704 = IMPORT_NAME(tmp_import_name_from_590, mod_consts[1386]);
        }

        if (tmp_assign_source_704 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 785;

            goto try_except_handler_110;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1386], tmp_assign_source_704);
    }
    goto try_end_110;
    // Exception handler code:
    try_except_handler_110:;
    exception_keeper_type_110 = exception_type;
    exception_keeper_value_110 = exception_value;
    exception_keeper_tb_110 = exception_tb;
    exception_keeper_lineno_110 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_110__module);
    Py_DECREF(tmp_import_from_110__module);
    tmp_import_from_110__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_110;
    exception_value = exception_keeper_value_110;
    exception_tb = exception_keeper_tb_110;
    exception_lineno = exception_keeper_lineno_110;

    goto frame_exception_exit_1;
    // End of try:
    try_end_110:;
    CHECK_OBJECT(tmp_import_from_110__module);
    Py_DECREF(tmp_import_from_110__module);
    tmp_import_from_110__module = NULL;
    {
        PyObject *tmp_assign_source_705;
        PyObject *tmp_name_value_395;
        PyObject *tmp_globals_arg_value_395;
        PyObject *tmp_locals_arg_value_395;
        PyObject *tmp_fromlist_value_395;
        PyObject *tmp_level_value_395;
        tmp_name_value_395 = mod_consts[1387];
        tmp_globals_arg_value_395 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_395 = Py_None;
        tmp_fromlist_value_395 = mod_consts[1388];
        tmp_level_value_395 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 792;
        tmp_assign_source_705 = IMPORT_MODULE5(tmp_name_value_395, tmp_globals_arg_value_395, tmp_locals_arg_value_395, tmp_fromlist_value_395, tmp_level_value_395);
        if (tmp_assign_source_705 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 792;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_111__module == NULL);
        tmp_import_from_111__module = tmp_assign_source_705;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_706;
        PyObject *tmp_import_name_from_591;
        CHECK_OBJECT(tmp_import_from_111__module);
        tmp_import_name_from_591 = tmp_import_from_111__module;
        if (PyModule_Check(tmp_import_name_from_591)) {
            tmp_assign_source_706 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_591,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1389],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_706 = IMPORT_NAME(tmp_import_name_from_591, mod_consts[1389]);
        }

        if (tmp_assign_source_706 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 792;

            goto try_except_handler_111;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1389], tmp_assign_source_706);
    }
    {
        PyObject *tmp_assign_source_707;
        PyObject *tmp_import_name_from_592;
        CHECK_OBJECT(tmp_import_from_111__module);
        tmp_import_name_from_592 = tmp_import_from_111__module;
        if (PyModule_Check(tmp_import_name_from_592)) {
            tmp_assign_source_707 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_592,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1390],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_707 = IMPORT_NAME(tmp_import_name_from_592, mod_consts[1390]);
        }

        if (tmp_assign_source_707 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 792;

            goto try_except_handler_111;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1390], tmp_assign_source_707);
    }
    goto try_end_111;
    // Exception handler code:
    try_except_handler_111:;
    exception_keeper_type_111 = exception_type;
    exception_keeper_value_111 = exception_value;
    exception_keeper_tb_111 = exception_tb;
    exception_keeper_lineno_111 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_111__module);
    Py_DECREF(tmp_import_from_111__module);
    tmp_import_from_111__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_111;
    exception_value = exception_keeper_value_111;
    exception_tb = exception_keeper_tb_111;
    exception_lineno = exception_keeper_lineno_111;

    goto frame_exception_exit_1;
    // End of try:
    try_end_111:;
    CHECK_OBJECT(tmp_import_from_111__module);
    Py_DECREF(tmp_import_from_111__module);
    tmp_import_from_111__module = NULL;
    {
        PyObject *tmp_assign_source_708;
        PyObject *tmp_import_name_from_593;
        PyObject *tmp_name_value_396;
        PyObject *tmp_globals_arg_value_396;
        PyObject *tmp_locals_arg_value_396;
        PyObject *tmp_fromlist_value_396;
        PyObject *tmp_level_value_396;
        tmp_name_value_396 = mod_consts[1391];
        tmp_globals_arg_value_396 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_396 = Py_None;
        tmp_fromlist_value_396 = mod_consts[1392];
        tmp_level_value_396 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 793;
        tmp_import_name_from_593 = IMPORT_MODULE5(tmp_name_value_396, tmp_globals_arg_value_396, tmp_locals_arg_value_396, tmp_fromlist_value_396, tmp_level_value_396);
        if (tmp_import_name_from_593 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 793;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_593)) {
            tmp_assign_source_708 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_593,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1393],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_708 = IMPORT_NAME(tmp_import_name_from_593, mod_consts[1393]);
        }

        Py_DECREF(tmp_import_name_from_593);
        if (tmp_assign_source_708 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 793;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1393], tmp_assign_source_708);
    }
    {
        PyObject *tmp_assign_source_709;
        PyObject *tmp_import_name_from_594;
        PyObject *tmp_name_value_397;
        PyObject *tmp_globals_arg_value_397;
        PyObject *tmp_locals_arg_value_397;
        PyObject *tmp_fromlist_value_397;
        PyObject *tmp_level_value_397;
        tmp_name_value_397 = mod_consts[1394];
        tmp_globals_arg_value_397 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_397 = Py_None;
        tmp_fromlist_value_397 = mod_consts[1395];
        tmp_level_value_397 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 794;
        tmp_import_name_from_594 = IMPORT_MODULE5(tmp_name_value_397, tmp_globals_arg_value_397, tmp_locals_arg_value_397, tmp_fromlist_value_397, tmp_level_value_397);
        if (tmp_import_name_from_594 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 794;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_594)) {
            tmp_assign_source_709 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_594,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1396],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_709 = IMPORT_NAME(tmp_import_name_from_594, mod_consts[1396]);
        }

        Py_DECREF(tmp_import_name_from_594);
        if (tmp_assign_source_709 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 794;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1396], tmp_assign_source_709);
    }
    {
        PyObject *tmp_assign_source_710;
        PyObject *tmp_import_name_from_595;
        PyObject *tmp_name_value_398;
        PyObject *tmp_globals_arg_value_398;
        PyObject *tmp_locals_arg_value_398;
        PyObject *tmp_fromlist_value_398;
        PyObject *tmp_level_value_398;
        tmp_name_value_398 = mod_consts[1397];
        tmp_globals_arg_value_398 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_398 = Py_None;
        tmp_fromlist_value_398 = mod_consts[1398];
        tmp_level_value_398 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 795;
        tmp_import_name_from_595 = IMPORT_MODULE5(tmp_name_value_398, tmp_globals_arg_value_398, tmp_locals_arg_value_398, tmp_fromlist_value_398, tmp_level_value_398);
        if (tmp_import_name_from_595 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 795;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_595)) {
            tmp_assign_source_710 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_595,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1399],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_710 = IMPORT_NAME(tmp_import_name_from_595, mod_consts[1399]);
        }

        Py_DECREF(tmp_import_name_from_595);
        if (tmp_assign_source_710 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 795;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1399], tmp_assign_source_710);
    }
    {
        PyObject *tmp_assign_source_711;
        PyObject *tmp_import_name_from_596;
        PyObject *tmp_name_value_399;
        PyObject *tmp_globals_arg_value_399;
        PyObject *tmp_locals_arg_value_399;
        PyObject *tmp_fromlist_value_399;
        PyObject *tmp_level_value_399;
        tmp_name_value_399 = mod_consts[1400];
        tmp_globals_arg_value_399 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_399 = Py_None;
        tmp_fromlist_value_399 = mod_consts[1401];
        tmp_level_value_399 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 796;
        tmp_import_name_from_596 = IMPORT_MODULE5(tmp_name_value_399, tmp_globals_arg_value_399, tmp_locals_arg_value_399, tmp_fromlist_value_399, tmp_level_value_399);
        if (tmp_import_name_from_596 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 796;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_596)) {
            tmp_assign_source_711 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_596,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1402],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_711 = IMPORT_NAME(tmp_import_name_from_596, mod_consts[1402]);
        }

        Py_DECREF(tmp_import_name_from_596);
        if (tmp_assign_source_711 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 796;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1402], tmp_assign_source_711);
    }
    {
        PyObject *tmp_assign_source_712;
        PyObject *tmp_import_name_from_597;
        PyObject *tmp_name_value_400;
        PyObject *tmp_globals_arg_value_400;
        PyObject *tmp_locals_arg_value_400;
        PyObject *tmp_fromlist_value_400;
        PyObject *tmp_level_value_400;
        tmp_name_value_400 = mod_consts[1403];
        tmp_globals_arg_value_400 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_400 = Py_None;
        tmp_fromlist_value_400 = mod_consts[1404];
        tmp_level_value_400 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 797;
        tmp_import_name_from_597 = IMPORT_MODULE5(tmp_name_value_400, tmp_globals_arg_value_400, tmp_locals_arg_value_400, tmp_fromlist_value_400, tmp_level_value_400);
        if (tmp_import_name_from_597 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 797;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_597)) {
            tmp_assign_source_712 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_597,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1405],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_712 = IMPORT_NAME(tmp_import_name_from_597, mod_consts[1405]);
        }

        Py_DECREF(tmp_import_name_from_597);
        if (tmp_assign_source_712 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 797;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1405], tmp_assign_source_712);
    }
    {
        PyObject *tmp_assign_source_713;
        PyObject *tmp_import_name_from_598;
        PyObject *tmp_name_value_401;
        PyObject *tmp_globals_arg_value_401;
        PyObject *tmp_locals_arg_value_401;
        PyObject *tmp_fromlist_value_401;
        PyObject *tmp_level_value_401;
        tmp_name_value_401 = mod_consts[1406];
        tmp_globals_arg_value_401 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_401 = Py_None;
        tmp_fromlist_value_401 = mod_consts[1407];
        tmp_level_value_401 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 798;
        tmp_import_name_from_598 = IMPORT_MODULE5(tmp_name_value_401, tmp_globals_arg_value_401, tmp_locals_arg_value_401, tmp_fromlist_value_401, tmp_level_value_401);
        if (tmp_import_name_from_598 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 798;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_598)) {
            tmp_assign_source_713 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_598,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1408],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_713 = IMPORT_NAME(tmp_import_name_from_598, mod_consts[1408]);
        }

        Py_DECREF(tmp_import_name_from_598);
        if (tmp_assign_source_713 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 798;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1408], tmp_assign_source_713);
    }
    {
        PyObject *tmp_assign_source_714;
        PyObject *tmp_import_name_from_599;
        PyObject *tmp_name_value_402;
        PyObject *tmp_globals_arg_value_402;
        PyObject *tmp_locals_arg_value_402;
        PyObject *tmp_fromlist_value_402;
        PyObject *tmp_level_value_402;
        tmp_name_value_402 = mod_consts[1409];
        tmp_globals_arg_value_402 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_402 = Py_None;
        tmp_fromlist_value_402 = mod_consts[1410];
        tmp_level_value_402 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 799;
        tmp_import_name_from_599 = IMPORT_MODULE5(tmp_name_value_402, tmp_globals_arg_value_402, tmp_locals_arg_value_402, tmp_fromlist_value_402, tmp_level_value_402);
        if (tmp_import_name_from_599 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 799;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_599)) {
            tmp_assign_source_714 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_599,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1411],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_714 = IMPORT_NAME(tmp_import_name_from_599, mod_consts[1411]);
        }

        Py_DECREF(tmp_import_name_from_599);
        if (tmp_assign_source_714 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 799;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1411], tmp_assign_source_714);
    }
    {
        PyObject *tmp_assign_source_715;
        PyObject *tmp_import_name_from_600;
        PyObject *tmp_name_value_403;
        PyObject *tmp_globals_arg_value_403;
        PyObject *tmp_locals_arg_value_403;
        PyObject *tmp_fromlist_value_403;
        PyObject *tmp_level_value_403;
        tmp_name_value_403 = mod_consts[1412];
        tmp_globals_arg_value_403 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_403 = Py_None;
        tmp_fromlist_value_403 = mod_consts[1413];
        tmp_level_value_403 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 800;
        tmp_import_name_from_600 = IMPORT_MODULE5(tmp_name_value_403, tmp_globals_arg_value_403, tmp_locals_arg_value_403, tmp_fromlist_value_403, tmp_level_value_403);
        if (tmp_import_name_from_600 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 800;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_600)) {
            tmp_assign_source_715 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_600,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1414],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_715 = IMPORT_NAME(tmp_import_name_from_600, mod_consts[1414]);
        }

        Py_DECREF(tmp_import_name_from_600);
        if (tmp_assign_source_715 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 800;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1414], tmp_assign_source_715);
    }
    {
        PyObject *tmp_assign_source_716;
        PyObject *tmp_import_name_from_601;
        PyObject *tmp_name_value_404;
        PyObject *tmp_globals_arg_value_404;
        PyObject *tmp_locals_arg_value_404;
        PyObject *tmp_fromlist_value_404;
        PyObject *tmp_level_value_404;
        tmp_name_value_404 = mod_consts[1415];
        tmp_globals_arg_value_404 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_404 = Py_None;
        tmp_fromlist_value_404 = mod_consts[1416];
        tmp_level_value_404 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 801;
        tmp_import_name_from_601 = IMPORT_MODULE5(tmp_name_value_404, tmp_globals_arg_value_404, tmp_locals_arg_value_404, tmp_fromlist_value_404, tmp_level_value_404);
        if (tmp_import_name_from_601 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 801;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_601)) {
            tmp_assign_source_716 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_601,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1417],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_716 = IMPORT_NAME(tmp_import_name_from_601, mod_consts[1417]);
        }

        Py_DECREF(tmp_import_name_from_601);
        if (tmp_assign_source_716 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 801;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1417], tmp_assign_source_716);
    }
    {
        PyObject *tmp_assign_source_717;
        PyObject *tmp_import_name_from_602;
        PyObject *tmp_name_value_405;
        PyObject *tmp_globals_arg_value_405;
        PyObject *tmp_locals_arg_value_405;
        PyObject *tmp_fromlist_value_405;
        PyObject *tmp_level_value_405;
        tmp_name_value_405 = mod_consts[1418];
        tmp_globals_arg_value_405 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_405 = Py_None;
        tmp_fromlist_value_405 = mod_consts[1419];
        tmp_level_value_405 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 802;
        tmp_import_name_from_602 = IMPORT_MODULE5(tmp_name_value_405, tmp_globals_arg_value_405, tmp_locals_arg_value_405, tmp_fromlist_value_405, tmp_level_value_405);
        if (tmp_import_name_from_602 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_602)) {
            tmp_assign_source_717 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_602,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1420],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_717 = IMPORT_NAME(tmp_import_name_from_602, mod_consts[1420]);
        }

        Py_DECREF(tmp_import_name_from_602);
        if (tmp_assign_source_717 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 802;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1420], tmp_assign_source_717);
    }
    {
        PyObject *tmp_assign_source_718;
        PyObject *tmp_name_value_406;
        PyObject *tmp_globals_arg_value_406;
        PyObject *tmp_locals_arg_value_406;
        PyObject *tmp_fromlist_value_406;
        PyObject *tmp_level_value_406;
        tmp_name_value_406 = mod_consts[1421];
        tmp_globals_arg_value_406 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_406 = Py_None;
        tmp_fromlist_value_406 = mod_consts[1422];
        tmp_level_value_406 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 803;
        tmp_assign_source_718 = IMPORT_MODULE5(tmp_name_value_406, tmp_globals_arg_value_406, tmp_locals_arg_value_406, tmp_fromlist_value_406, tmp_level_value_406);
        if (tmp_assign_source_718 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 803;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_112__module == NULL);
        tmp_import_from_112__module = tmp_assign_source_718;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_719;
        PyObject *tmp_import_name_from_603;
        CHECK_OBJECT(tmp_import_from_112__module);
        tmp_import_name_from_603 = tmp_import_from_112__module;
        if (PyModule_Check(tmp_import_name_from_603)) {
            tmp_assign_source_719 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_603,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1423],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_719 = IMPORT_NAME(tmp_import_name_from_603, mod_consts[1423]);
        }

        if (tmp_assign_source_719 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 803;

            goto try_except_handler_112;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1423], tmp_assign_source_719);
    }
    {
        PyObject *tmp_assign_source_720;
        PyObject *tmp_import_name_from_604;
        CHECK_OBJECT(tmp_import_from_112__module);
        tmp_import_name_from_604 = tmp_import_from_112__module;
        if (PyModule_Check(tmp_import_name_from_604)) {
            tmp_assign_source_720 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_604,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1424],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_720 = IMPORT_NAME(tmp_import_name_from_604, mod_consts[1424]);
        }

        if (tmp_assign_source_720 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 803;

            goto try_except_handler_112;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1424], tmp_assign_source_720);
    }
    goto try_end_112;
    // Exception handler code:
    try_except_handler_112:;
    exception_keeper_type_112 = exception_type;
    exception_keeper_value_112 = exception_value;
    exception_keeper_tb_112 = exception_tb;
    exception_keeper_lineno_112 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_112__module);
    Py_DECREF(tmp_import_from_112__module);
    tmp_import_from_112__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_112;
    exception_value = exception_keeper_value_112;
    exception_tb = exception_keeper_tb_112;
    exception_lineno = exception_keeper_lineno_112;

    goto frame_exception_exit_1;
    // End of try:
    try_end_112:;
    CHECK_OBJECT(tmp_import_from_112__module);
    Py_DECREF(tmp_import_from_112__module);
    tmp_import_from_112__module = NULL;
    {
        PyObject *tmp_assign_source_721;
        PyObject *tmp_name_value_407;
        PyObject *tmp_globals_arg_value_407;
        PyObject *tmp_locals_arg_value_407;
        PyObject *tmp_fromlist_value_407;
        PyObject *tmp_level_value_407;
        tmp_name_value_407 = mod_consts[1425];
        tmp_globals_arg_value_407 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_407 = Py_None;
        tmp_fromlist_value_407 = mod_consts[1426];
        tmp_level_value_407 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 807;
        tmp_assign_source_721 = IMPORT_MODULE5(tmp_name_value_407, tmp_globals_arg_value_407, tmp_locals_arg_value_407, tmp_fromlist_value_407, tmp_level_value_407);
        if (tmp_assign_source_721 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 807;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_113__module == NULL);
        tmp_import_from_113__module = tmp_assign_source_721;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_722;
        PyObject *tmp_import_name_from_605;
        CHECK_OBJECT(tmp_import_from_113__module);
        tmp_import_name_from_605 = tmp_import_from_113__module;
        if (PyModule_Check(tmp_import_name_from_605)) {
            tmp_assign_source_722 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_605,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1427],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_722 = IMPORT_NAME(tmp_import_name_from_605, mod_consts[1427]);
        }

        if (tmp_assign_source_722 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 807;

            goto try_except_handler_113;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1427], tmp_assign_source_722);
    }
    {
        PyObject *tmp_assign_source_723;
        PyObject *tmp_import_name_from_606;
        CHECK_OBJECT(tmp_import_from_113__module);
        tmp_import_name_from_606 = tmp_import_from_113__module;
        if (PyModule_Check(tmp_import_name_from_606)) {
            tmp_assign_source_723 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_606,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1428],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_723 = IMPORT_NAME(tmp_import_name_from_606, mod_consts[1428]);
        }

        if (tmp_assign_source_723 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 807;

            goto try_except_handler_113;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1428], tmp_assign_source_723);
    }
    {
        PyObject *tmp_assign_source_724;
        PyObject *tmp_import_name_from_607;
        CHECK_OBJECT(tmp_import_from_113__module);
        tmp_import_name_from_607 = tmp_import_from_113__module;
        if (PyModule_Check(tmp_import_name_from_607)) {
            tmp_assign_source_724 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_607,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1429],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_724 = IMPORT_NAME(tmp_import_name_from_607, mod_consts[1429]);
        }

        if (tmp_assign_source_724 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 807;

            goto try_except_handler_113;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1429], tmp_assign_source_724);
    }
    goto try_end_113;
    // Exception handler code:
    try_except_handler_113:;
    exception_keeper_type_113 = exception_type;
    exception_keeper_value_113 = exception_value;
    exception_keeper_tb_113 = exception_tb;
    exception_keeper_lineno_113 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_113__module);
    Py_DECREF(tmp_import_from_113__module);
    tmp_import_from_113__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_113;
    exception_value = exception_keeper_value_113;
    exception_tb = exception_keeper_tb_113;
    exception_lineno = exception_keeper_lineno_113;

    goto frame_exception_exit_1;
    // End of try:
    try_end_113:;
    CHECK_OBJECT(tmp_import_from_113__module);
    Py_DECREF(tmp_import_from_113__module);
    tmp_import_from_113__module = NULL;
    {
        PyObject *tmp_assign_source_725;
        PyObject *tmp_import_name_from_608;
        PyObject *tmp_name_value_408;
        PyObject *tmp_globals_arg_value_408;
        PyObject *tmp_locals_arg_value_408;
        PyObject *tmp_fromlist_value_408;
        PyObject *tmp_level_value_408;
        tmp_name_value_408 = mod_consts[1430];
        tmp_globals_arg_value_408 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_408 = Py_None;
        tmp_fromlist_value_408 = mod_consts[1431];
        tmp_level_value_408 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 812;
        tmp_import_name_from_608 = IMPORT_MODULE5(tmp_name_value_408, tmp_globals_arg_value_408, tmp_locals_arg_value_408, tmp_fromlist_value_408, tmp_level_value_408);
        if (tmp_import_name_from_608 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 812;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_608)) {
            tmp_assign_source_725 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_608,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1432],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_725 = IMPORT_NAME(tmp_import_name_from_608, mod_consts[1432]);
        }

        Py_DECREF(tmp_import_name_from_608);
        if (tmp_assign_source_725 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 812;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1432], tmp_assign_source_725);
    }
    {
        PyObject *tmp_assign_source_726;
        PyObject *tmp_name_value_409;
        PyObject *tmp_globals_arg_value_409;
        PyObject *tmp_locals_arg_value_409;
        PyObject *tmp_fromlist_value_409;
        PyObject *tmp_level_value_409;
        tmp_name_value_409 = mod_consts[1433];
        tmp_globals_arg_value_409 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_409 = Py_None;
        tmp_fromlist_value_409 = mod_consts[1434];
        tmp_level_value_409 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 813;
        tmp_assign_source_726 = IMPORT_MODULE5(tmp_name_value_409, tmp_globals_arg_value_409, tmp_locals_arg_value_409, tmp_fromlist_value_409, tmp_level_value_409);
        if (tmp_assign_source_726 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 813;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_114__module == NULL);
        tmp_import_from_114__module = tmp_assign_source_726;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_727;
        PyObject *tmp_import_name_from_609;
        CHECK_OBJECT(tmp_import_from_114__module);
        tmp_import_name_from_609 = tmp_import_from_114__module;
        if (PyModule_Check(tmp_import_name_from_609)) {
            tmp_assign_source_727 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_609,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1435],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_727 = IMPORT_NAME(tmp_import_name_from_609, mod_consts[1435]);
        }

        if (tmp_assign_source_727 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 813;

            goto try_except_handler_114;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1435], tmp_assign_source_727);
    }
    {
        PyObject *tmp_assign_source_728;
        PyObject *tmp_import_name_from_610;
        CHECK_OBJECT(tmp_import_from_114__module);
        tmp_import_name_from_610 = tmp_import_from_114__module;
        if (PyModule_Check(tmp_import_name_from_610)) {
            tmp_assign_source_728 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_610,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1436],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_728 = IMPORT_NAME(tmp_import_name_from_610, mod_consts[1436]);
        }

        if (tmp_assign_source_728 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 813;

            goto try_except_handler_114;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1436], tmp_assign_source_728);
    }
    {
        PyObject *tmp_assign_source_729;
        PyObject *tmp_import_name_from_611;
        CHECK_OBJECT(tmp_import_from_114__module);
        tmp_import_name_from_611 = tmp_import_from_114__module;
        if (PyModule_Check(tmp_import_name_from_611)) {
            tmp_assign_source_729 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_611,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1437],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_729 = IMPORT_NAME(tmp_import_name_from_611, mod_consts[1437]);
        }

        if (tmp_assign_source_729 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 813;

            goto try_except_handler_114;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1437], tmp_assign_source_729);
    }
    {
        PyObject *tmp_assign_source_730;
        PyObject *tmp_import_name_from_612;
        CHECK_OBJECT(tmp_import_from_114__module);
        tmp_import_name_from_612 = tmp_import_from_114__module;
        if (PyModule_Check(tmp_import_name_from_612)) {
            tmp_assign_source_730 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_612,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1438],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_730 = IMPORT_NAME(tmp_import_name_from_612, mod_consts[1438]);
        }

        if (tmp_assign_source_730 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 813;

            goto try_except_handler_114;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1438], tmp_assign_source_730);
    }
    {
        PyObject *tmp_assign_source_731;
        PyObject *tmp_import_name_from_613;
        CHECK_OBJECT(tmp_import_from_114__module);
        tmp_import_name_from_613 = tmp_import_from_114__module;
        if (PyModule_Check(tmp_import_name_from_613)) {
            tmp_assign_source_731 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_613,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1439],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_731 = IMPORT_NAME(tmp_import_name_from_613, mod_consts[1439]);
        }

        if (tmp_assign_source_731 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 813;

            goto try_except_handler_114;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1439], tmp_assign_source_731);
    }
    {
        PyObject *tmp_assign_source_732;
        PyObject *tmp_import_name_from_614;
        CHECK_OBJECT(tmp_import_from_114__module);
        tmp_import_name_from_614 = tmp_import_from_114__module;
        if (PyModule_Check(tmp_import_name_from_614)) {
            tmp_assign_source_732 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_614,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1440],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_732 = IMPORT_NAME(tmp_import_name_from_614, mod_consts[1440]);
        }

        if (tmp_assign_source_732 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 813;

            goto try_except_handler_114;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1440], tmp_assign_source_732);
    }
    {
        PyObject *tmp_assign_source_733;
        PyObject *tmp_import_name_from_615;
        CHECK_OBJECT(tmp_import_from_114__module);
        tmp_import_name_from_615 = tmp_import_from_114__module;
        if (PyModule_Check(tmp_import_name_from_615)) {
            tmp_assign_source_733 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_615,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1441],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_733 = IMPORT_NAME(tmp_import_name_from_615, mod_consts[1441]);
        }

        if (tmp_assign_source_733 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 813;

            goto try_except_handler_114;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1441], tmp_assign_source_733);
    }
    {
        PyObject *tmp_assign_source_734;
        PyObject *tmp_import_name_from_616;
        CHECK_OBJECT(tmp_import_from_114__module);
        tmp_import_name_from_616 = tmp_import_from_114__module;
        if (PyModule_Check(tmp_import_name_from_616)) {
            tmp_assign_source_734 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_616,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1442],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_734 = IMPORT_NAME(tmp_import_name_from_616, mod_consts[1442]);
        }

        if (tmp_assign_source_734 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 813;

            goto try_except_handler_114;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1442], tmp_assign_source_734);
    }
    {
        PyObject *tmp_assign_source_735;
        PyObject *tmp_import_name_from_617;
        CHECK_OBJECT(tmp_import_from_114__module);
        tmp_import_name_from_617 = tmp_import_from_114__module;
        if (PyModule_Check(tmp_import_name_from_617)) {
            tmp_assign_source_735 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_617,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1443],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_735 = IMPORT_NAME(tmp_import_name_from_617, mod_consts[1443]);
        }

        if (tmp_assign_source_735 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 813;

            goto try_except_handler_114;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1443], tmp_assign_source_735);
    }
    goto try_end_114;
    // Exception handler code:
    try_except_handler_114:;
    exception_keeper_type_114 = exception_type;
    exception_keeper_value_114 = exception_value;
    exception_keeper_tb_114 = exception_tb;
    exception_keeper_lineno_114 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_114__module);
    Py_DECREF(tmp_import_from_114__module);
    tmp_import_from_114__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_114;
    exception_value = exception_keeper_value_114;
    exception_tb = exception_keeper_tb_114;
    exception_lineno = exception_keeper_lineno_114;

    goto frame_exception_exit_1;
    // End of try:
    try_end_114:;
    CHECK_OBJECT(tmp_import_from_114__module);
    Py_DECREF(tmp_import_from_114__module);
    tmp_import_from_114__module = NULL;
    {
        PyObject *tmp_assign_source_736;
        PyObject *tmp_import_name_from_618;
        PyObject *tmp_name_value_410;
        PyObject *tmp_globals_arg_value_410;
        PyObject *tmp_locals_arg_value_410;
        PyObject *tmp_fromlist_value_410;
        PyObject *tmp_level_value_410;
        tmp_name_value_410 = mod_consts[1444];
        tmp_globals_arg_value_410 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_410 = Py_None;
        tmp_fromlist_value_410 = mod_consts[1445];
        tmp_level_value_410 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 824;
        tmp_import_name_from_618 = IMPORT_MODULE5(tmp_name_value_410, tmp_globals_arg_value_410, tmp_locals_arg_value_410, tmp_fromlist_value_410, tmp_level_value_410);
        if (tmp_import_name_from_618 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 824;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_618)) {
            tmp_assign_source_736 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_618,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1446],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_736 = IMPORT_NAME(tmp_import_name_from_618, mod_consts[1446]);
        }

        Py_DECREF(tmp_import_name_from_618);
        if (tmp_assign_source_736 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 824;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1446], tmp_assign_source_736);
    }
    {
        PyObject *tmp_assign_source_737;
        PyObject *tmp_name_value_411;
        PyObject *tmp_globals_arg_value_411;
        PyObject *tmp_locals_arg_value_411;
        PyObject *tmp_fromlist_value_411;
        PyObject *tmp_level_value_411;
        tmp_name_value_411 = mod_consts[1447];
        tmp_globals_arg_value_411 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_411 = Py_None;
        tmp_fromlist_value_411 = mod_consts[1448];
        tmp_level_value_411 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 825;
        tmp_assign_source_737 = IMPORT_MODULE5(tmp_name_value_411, tmp_globals_arg_value_411, tmp_locals_arg_value_411, tmp_fromlist_value_411, tmp_level_value_411);
        if (tmp_assign_source_737 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_115__module == NULL);
        tmp_import_from_115__module = tmp_assign_source_737;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_738;
        PyObject *tmp_import_name_from_619;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_619 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_619)) {
            tmp_assign_source_738 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_619,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1449],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_738 = IMPORT_NAME(tmp_import_name_from_619, mod_consts[1449]);
        }

        if (tmp_assign_source_738 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1449], tmp_assign_source_738);
    }
    {
        PyObject *tmp_assign_source_739;
        PyObject *tmp_import_name_from_620;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_620 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_620)) {
            tmp_assign_source_739 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_620,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1450],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_739 = IMPORT_NAME(tmp_import_name_from_620, mod_consts[1450]);
        }

        if (tmp_assign_source_739 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1450], tmp_assign_source_739);
    }
    {
        PyObject *tmp_assign_source_740;
        PyObject *tmp_import_name_from_621;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_621 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_621)) {
            tmp_assign_source_740 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_621,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1451],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_740 = IMPORT_NAME(tmp_import_name_from_621, mod_consts[1451]);
        }

        if (tmp_assign_source_740 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1451], tmp_assign_source_740);
    }
    {
        PyObject *tmp_assign_source_741;
        PyObject *tmp_import_name_from_622;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_622 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_622)) {
            tmp_assign_source_741 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_622,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1452],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_741 = IMPORT_NAME(tmp_import_name_from_622, mod_consts[1452]);
        }

        if (tmp_assign_source_741 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1452], tmp_assign_source_741);
    }
    {
        PyObject *tmp_assign_source_742;
        PyObject *tmp_import_name_from_623;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_623 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_623)) {
            tmp_assign_source_742 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_623,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1453],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_742 = IMPORT_NAME(tmp_import_name_from_623, mod_consts[1453]);
        }

        if (tmp_assign_source_742 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1453], tmp_assign_source_742);
    }
    {
        PyObject *tmp_assign_source_743;
        PyObject *tmp_import_name_from_624;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_624 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_624)) {
            tmp_assign_source_743 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_624,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1454],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_743 = IMPORT_NAME(tmp_import_name_from_624, mod_consts[1454]);
        }

        if (tmp_assign_source_743 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1454], tmp_assign_source_743);
    }
    {
        PyObject *tmp_assign_source_744;
        PyObject *tmp_import_name_from_625;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_625 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_625)) {
            tmp_assign_source_744 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_625,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1455],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_744 = IMPORT_NAME(tmp_import_name_from_625, mod_consts[1455]);
        }

        if (tmp_assign_source_744 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1455], tmp_assign_source_744);
    }
    {
        PyObject *tmp_assign_source_745;
        PyObject *tmp_import_name_from_626;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_626 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_626)) {
            tmp_assign_source_745 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_626,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1456],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_745 = IMPORT_NAME(tmp_import_name_from_626, mod_consts[1456]);
        }

        if (tmp_assign_source_745 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1456], tmp_assign_source_745);
    }
    {
        PyObject *tmp_assign_source_746;
        PyObject *tmp_import_name_from_627;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_627 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_627)) {
            tmp_assign_source_746 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_627,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1457],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_746 = IMPORT_NAME(tmp_import_name_from_627, mod_consts[1457]);
        }

        if (tmp_assign_source_746 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1457], tmp_assign_source_746);
    }
    {
        PyObject *tmp_assign_source_747;
        PyObject *tmp_import_name_from_628;
        CHECK_OBJECT(tmp_import_from_115__module);
        tmp_import_name_from_628 = tmp_import_from_115__module;
        if (PyModule_Check(tmp_import_name_from_628)) {
            tmp_assign_source_747 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_628,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1458],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_747 = IMPORT_NAME(tmp_import_name_from_628, mod_consts[1458]);
        }

        if (tmp_assign_source_747 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 825;

            goto try_except_handler_115;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1458], tmp_assign_source_747);
    }
    goto try_end_115;
    // Exception handler code:
    try_except_handler_115:;
    exception_keeper_type_115 = exception_type;
    exception_keeper_value_115 = exception_value;
    exception_keeper_tb_115 = exception_tb;
    exception_keeper_lineno_115 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_115__module);
    Py_DECREF(tmp_import_from_115__module);
    tmp_import_from_115__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_115;
    exception_value = exception_keeper_value_115;
    exception_tb = exception_keeper_tb_115;
    exception_lineno = exception_keeper_lineno_115;

    goto frame_exception_exit_1;
    // End of try:
    try_end_115:;
    CHECK_OBJECT(tmp_import_from_115__module);
    Py_DECREF(tmp_import_from_115__module);
    tmp_import_from_115__module = NULL;
    {
        PyObject *tmp_assign_source_748;
        PyObject *tmp_import_name_from_629;
        PyObject *tmp_name_value_412;
        PyObject *tmp_globals_arg_value_412;
        PyObject *tmp_locals_arg_value_412;
        PyObject *tmp_fromlist_value_412;
        PyObject *tmp_level_value_412;
        tmp_name_value_412 = mod_consts[1459];
        tmp_globals_arg_value_412 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_412 = Py_None;
        tmp_fromlist_value_412 = mod_consts[1460];
        tmp_level_value_412 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 837;
        tmp_import_name_from_629 = IMPORT_MODULE5(tmp_name_value_412, tmp_globals_arg_value_412, tmp_locals_arg_value_412, tmp_fromlist_value_412, tmp_level_value_412);
        if (tmp_import_name_from_629 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 837;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_629)) {
            tmp_assign_source_748 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_629,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1461],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_748 = IMPORT_NAME(tmp_import_name_from_629, mod_consts[1461]);
        }

        Py_DECREF(tmp_import_name_from_629);
        if (tmp_assign_source_748 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 837;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1461], tmp_assign_source_748);
    }
    {
        PyObject *tmp_assign_source_749;
        PyObject *tmp_import_name_from_630;
        PyObject *tmp_name_value_413;
        PyObject *tmp_globals_arg_value_413;
        PyObject *tmp_locals_arg_value_413;
        PyObject *tmp_fromlist_value_413;
        PyObject *tmp_level_value_413;
        tmp_name_value_413 = mod_consts[1462];
        tmp_globals_arg_value_413 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_413 = Py_None;
        tmp_fromlist_value_413 = mod_consts[1463];
        tmp_level_value_413 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 838;
        tmp_import_name_from_630 = IMPORT_MODULE5(tmp_name_value_413, tmp_globals_arg_value_413, tmp_locals_arg_value_413, tmp_fromlist_value_413, tmp_level_value_413);
        if (tmp_import_name_from_630 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 838;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_630)) {
            tmp_assign_source_749 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_630,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1464],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_749 = IMPORT_NAME(tmp_import_name_from_630, mod_consts[1464]);
        }

        Py_DECREF(tmp_import_name_from_630);
        if (tmp_assign_source_749 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 838;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1464], tmp_assign_source_749);
    }
    {
        PyObject *tmp_assign_source_750;
        PyObject *tmp_import_name_from_631;
        PyObject *tmp_name_value_414;
        PyObject *tmp_globals_arg_value_414;
        PyObject *tmp_locals_arg_value_414;
        PyObject *tmp_fromlist_value_414;
        PyObject *tmp_level_value_414;
        tmp_name_value_414 = mod_consts[1465];
        tmp_globals_arg_value_414 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_414 = Py_None;
        tmp_fromlist_value_414 = mod_consts[1466];
        tmp_level_value_414 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 839;
        tmp_import_name_from_631 = IMPORT_MODULE5(tmp_name_value_414, tmp_globals_arg_value_414, tmp_locals_arg_value_414, tmp_fromlist_value_414, tmp_level_value_414);
        if (tmp_import_name_from_631 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 839;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_631)) {
            tmp_assign_source_750 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_631,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1467],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_750 = IMPORT_NAME(tmp_import_name_from_631, mod_consts[1467]);
        }

        Py_DECREF(tmp_import_name_from_631);
        if (tmp_assign_source_750 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 839;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1467], tmp_assign_source_750);
    }
    {
        PyObject *tmp_assign_source_751;
        PyObject *tmp_import_name_from_632;
        PyObject *tmp_name_value_415;
        PyObject *tmp_globals_arg_value_415;
        PyObject *tmp_locals_arg_value_415;
        PyObject *tmp_fromlist_value_415;
        PyObject *tmp_level_value_415;
        tmp_name_value_415 = mod_consts[1468];
        tmp_globals_arg_value_415 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_415 = Py_None;
        tmp_fromlist_value_415 = mod_consts[1469];
        tmp_level_value_415 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 840;
        tmp_import_name_from_632 = IMPORT_MODULE5(tmp_name_value_415, tmp_globals_arg_value_415, tmp_locals_arg_value_415, tmp_fromlist_value_415, tmp_level_value_415);
        if (tmp_import_name_from_632 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 840;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_632)) {
            tmp_assign_source_751 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_632,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1470],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_751 = IMPORT_NAME(tmp_import_name_from_632, mod_consts[1470]);
        }

        Py_DECREF(tmp_import_name_from_632);
        if (tmp_assign_source_751 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 840;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1470], tmp_assign_source_751);
    }
    {
        PyObject *tmp_assign_source_752;
        PyObject *tmp_name_value_416;
        PyObject *tmp_globals_arg_value_416;
        PyObject *tmp_locals_arg_value_416;
        PyObject *tmp_fromlist_value_416;
        PyObject *tmp_level_value_416;
        tmp_name_value_416 = mod_consts[1471];
        tmp_globals_arg_value_416 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_416 = Py_None;
        tmp_fromlist_value_416 = mod_consts[1472];
        tmp_level_value_416 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 841;
        tmp_assign_source_752 = IMPORT_MODULE5(tmp_name_value_416, tmp_globals_arg_value_416, tmp_locals_arg_value_416, tmp_fromlist_value_416, tmp_level_value_416);
        if (tmp_assign_source_752 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 841;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_116__module == NULL);
        tmp_import_from_116__module = tmp_assign_source_752;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_753;
        PyObject *tmp_import_name_from_633;
        CHECK_OBJECT(tmp_import_from_116__module);
        tmp_import_name_from_633 = tmp_import_from_116__module;
        if (PyModule_Check(tmp_import_name_from_633)) {
            tmp_assign_source_753 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_633,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1473],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_753 = IMPORT_NAME(tmp_import_name_from_633, mod_consts[1473]);
        }

        if (tmp_assign_source_753 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 841;

            goto try_except_handler_116;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1473], tmp_assign_source_753);
    }
    {
        PyObject *tmp_assign_source_754;
        PyObject *tmp_import_name_from_634;
        CHECK_OBJECT(tmp_import_from_116__module);
        tmp_import_name_from_634 = tmp_import_from_116__module;
        if (PyModule_Check(tmp_import_name_from_634)) {
            tmp_assign_source_754 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_634,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1474],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_754 = IMPORT_NAME(tmp_import_name_from_634, mod_consts[1474]);
        }

        if (tmp_assign_source_754 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 841;

            goto try_except_handler_116;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1474], tmp_assign_source_754);
    }
    {
        PyObject *tmp_assign_source_755;
        PyObject *tmp_import_name_from_635;
        CHECK_OBJECT(tmp_import_from_116__module);
        tmp_import_name_from_635 = tmp_import_from_116__module;
        if (PyModule_Check(tmp_import_name_from_635)) {
            tmp_assign_source_755 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_635,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1475],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_755 = IMPORT_NAME(tmp_import_name_from_635, mod_consts[1475]);
        }

        if (tmp_assign_source_755 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 841;

            goto try_except_handler_116;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1475], tmp_assign_source_755);
    }
    goto try_end_116;
    // Exception handler code:
    try_except_handler_116:;
    exception_keeper_type_116 = exception_type;
    exception_keeper_value_116 = exception_value;
    exception_keeper_tb_116 = exception_tb;
    exception_keeper_lineno_116 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_116__module);
    Py_DECREF(tmp_import_from_116__module);
    tmp_import_from_116__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_116;
    exception_value = exception_keeper_value_116;
    exception_tb = exception_keeper_tb_116;
    exception_lineno = exception_keeper_lineno_116;

    goto frame_exception_exit_1;
    // End of try:
    try_end_116:;
    CHECK_OBJECT(tmp_import_from_116__module);
    Py_DECREF(tmp_import_from_116__module);
    tmp_import_from_116__module = NULL;
    {
        PyObject *tmp_assign_source_756;
        PyObject *tmp_import_name_from_636;
        PyObject *tmp_name_value_417;
        PyObject *tmp_globals_arg_value_417;
        PyObject *tmp_locals_arg_value_417;
        PyObject *tmp_fromlist_value_417;
        PyObject *tmp_level_value_417;
        tmp_name_value_417 = mod_consts[1476];
        tmp_globals_arg_value_417 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_417 = Py_None;
        tmp_fromlist_value_417 = mod_consts[1477];
        tmp_level_value_417 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 846;
        tmp_import_name_from_636 = IMPORT_MODULE5(tmp_name_value_417, tmp_globals_arg_value_417, tmp_locals_arg_value_417, tmp_fromlist_value_417, tmp_level_value_417);
        if (tmp_import_name_from_636 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 846;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_636)) {
            tmp_assign_source_756 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_636,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1478],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_756 = IMPORT_NAME(tmp_import_name_from_636, mod_consts[1478]);
        }

        Py_DECREF(tmp_import_name_from_636);
        if (tmp_assign_source_756 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 846;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1478], tmp_assign_source_756);
    }
    {
        PyObject *tmp_assign_source_757;
        PyObject *tmp_import_name_from_637;
        PyObject *tmp_name_value_418;
        PyObject *tmp_globals_arg_value_418;
        PyObject *tmp_locals_arg_value_418;
        PyObject *tmp_fromlist_value_418;
        PyObject *tmp_level_value_418;
        tmp_name_value_418 = mod_consts[1479];
        tmp_globals_arg_value_418 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_418 = Py_None;
        tmp_fromlist_value_418 = mod_consts[1480];
        tmp_level_value_418 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 847;
        tmp_import_name_from_637 = IMPORT_MODULE5(tmp_name_value_418, tmp_globals_arg_value_418, tmp_locals_arg_value_418, tmp_fromlist_value_418, tmp_level_value_418);
        if (tmp_import_name_from_637 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 847;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_637)) {
            tmp_assign_source_757 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_637,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1481],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_757 = IMPORT_NAME(tmp_import_name_from_637, mod_consts[1481]);
        }

        Py_DECREF(tmp_import_name_from_637);
        if (tmp_assign_source_757 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 847;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1481], tmp_assign_source_757);
    }
    {
        PyObject *tmp_assign_source_758;
        PyObject *tmp_import_name_from_638;
        PyObject *tmp_name_value_419;
        PyObject *tmp_globals_arg_value_419;
        PyObject *tmp_locals_arg_value_419;
        PyObject *tmp_fromlist_value_419;
        PyObject *tmp_level_value_419;
        tmp_name_value_419 = mod_consts[1482];
        tmp_globals_arg_value_419 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_419 = Py_None;
        tmp_fromlist_value_419 = mod_consts[1483];
        tmp_level_value_419 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 848;
        tmp_import_name_from_638 = IMPORT_MODULE5(tmp_name_value_419, tmp_globals_arg_value_419, tmp_locals_arg_value_419, tmp_fromlist_value_419, tmp_level_value_419);
        if (tmp_import_name_from_638 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 848;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_638)) {
            tmp_assign_source_758 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_638,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1484],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_758 = IMPORT_NAME(tmp_import_name_from_638, mod_consts[1484]);
        }

        Py_DECREF(tmp_import_name_from_638);
        if (tmp_assign_source_758 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 848;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1484], tmp_assign_source_758);
    }
    {
        PyObject *tmp_assign_source_759;
        PyObject *tmp_import_name_from_639;
        PyObject *tmp_name_value_420;
        PyObject *tmp_globals_arg_value_420;
        PyObject *tmp_locals_arg_value_420;
        PyObject *tmp_fromlist_value_420;
        PyObject *tmp_level_value_420;
        tmp_name_value_420 = mod_consts[1485];
        tmp_globals_arg_value_420 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_420 = Py_None;
        tmp_fromlist_value_420 = mod_consts[1486];
        tmp_level_value_420 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 849;
        tmp_import_name_from_639 = IMPORT_MODULE5(tmp_name_value_420, tmp_globals_arg_value_420, tmp_locals_arg_value_420, tmp_fromlist_value_420, tmp_level_value_420);
        if (tmp_import_name_from_639 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 849;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_639)) {
            tmp_assign_source_759 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_639,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1487],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_759 = IMPORT_NAME(tmp_import_name_from_639, mod_consts[1487]);
        }

        Py_DECREF(tmp_import_name_from_639);
        if (tmp_assign_source_759 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 849;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1487], tmp_assign_source_759);
    }
    {
        PyObject *tmp_assign_source_760;
        PyObject *tmp_import_name_from_640;
        PyObject *tmp_name_value_421;
        PyObject *tmp_globals_arg_value_421;
        PyObject *tmp_locals_arg_value_421;
        PyObject *tmp_fromlist_value_421;
        PyObject *tmp_level_value_421;
        tmp_name_value_421 = mod_consts[1488];
        tmp_globals_arg_value_421 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_421 = Py_None;
        tmp_fromlist_value_421 = mod_consts[1489];
        tmp_level_value_421 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 850;
        tmp_import_name_from_640 = IMPORT_MODULE5(tmp_name_value_421, tmp_globals_arg_value_421, tmp_locals_arg_value_421, tmp_fromlist_value_421, tmp_level_value_421);
        if (tmp_import_name_from_640 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 850;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_640)) {
            tmp_assign_source_760 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_640,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1490],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_760 = IMPORT_NAME(tmp_import_name_from_640, mod_consts[1490]);
        }

        Py_DECREF(tmp_import_name_from_640);
        if (tmp_assign_source_760 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 850;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1490], tmp_assign_source_760);
    }
    {
        PyObject *tmp_assign_source_761;
        PyObject *tmp_import_name_from_641;
        PyObject *tmp_name_value_422;
        PyObject *tmp_globals_arg_value_422;
        PyObject *tmp_locals_arg_value_422;
        PyObject *tmp_fromlist_value_422;
        PyObject *tmp_level_value_422;
        tmp_name_value_422 = mod_consts[1491];
        tmp_globals_arg_value_422 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_422 = Py_None;
        tmp_fromlist_value_422 = mod_consts[1492];
        tmp_level_value_422 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 851;
        tmp_import_name_from_641 = IMPORT_MODULE5(tmp_name_value_422, tmp_globals_arg_value_422, tmp_locals_arg_value_422, tmp_fromlist_value_422, tmp_level_value_422);
        if (tmp_import_name_from_641 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 851;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_641)) {
            tmp_assign_source_761 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_641,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1493],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_761 = IMPORT_NAME(tmp_import_name_from_641, mod_consts[1493]);
        }

        Py_DECREF(tmp_import_name_from_641);
        if (tmp_assign_source_761 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 851;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1493], tmp_assign_source_761);
    }
    {
        PyObject *tmp_assign_source_762;
        PyObject *tmp_name_value_423;
        PyObject *tmp_globals_arg_value_423;
        PyObject *tmp_locals_arg_value_423;
        PyObject *tmp_fromlist_value_423;
        PyObject *tmp_level_value_423;
        tmp_name_value_423 = mod_consts[1494];
        tmp_globals_arg_value_423 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_423 = Py_None;
        tmp_fromlist_value_423 = mod_consts[1495];
        tmp_level_value_423 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 852;
        tmp_assign_source_762 = IMPORT_MODULE5(tmp_name_value_423, tmp_globals_arg_value_423, tmp_locals_arg_value_423, tmp_fromlist_value_423, tmp_level_value_423);
        if (tmp_assign_source_762 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 852;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_117__module == NULL);
        tmp_import_from_117__module = tmp_assign_source_762;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_763;
        PyObject *tmp_import_name_from_642;
        CHECK_OBJECT(tmp_import_from_117__module);
        tmp_import_name_from_642 = tmp_import_from_117__module;
        if (PyModule_Check(tmp_import_name_from_642)) {
            tmp_assign_source_763 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_642,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1496],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_763 = IMPORT_NAME(tmp_import_name_from_642, mod_consts[1496]);
        }

        if (tmp_assign_source_763 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 852;

            goto try_except_handler_117;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1496], tmp_assign_source_763);
    }
    {
        PyObject *tmp_assign_source_764;
        PyObject *tmp_import_name_from_643;
        CHECK_OBJECT(tmp_import_from_117__module);
        tmp_import_name_from_643 = tmp_import_from_117__module;
        if (PyModule_Check(tmp_import_name_from_643)) {
            tmp_assign_source_764 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_643,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1497],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_764 = IMPORT_NAME(tmp_import_name_from_643, mod_consts[1497]);
        }

        if (tmp_assign_source_764 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 852;

            goto try_except_handler_117;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1497], tmp_assign_source_764);
    }
    {
        PyObject *tmp_assign_source_765;
        PyObject *tmp_import_name_from_644;
        CHECK_OBJECT(tmp_import_from_117__module);
        tmp_import_name_from_644 = tmp_import_from_117__module;
        if (PyModule_Check(tmp_import_name_from_644)) {
            tmp_assign_source_765 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_644,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1498],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_765 = IMPORT_NAME(tmp_import_name_from_644, mod_consts[1498]);
        }

        if (tmp_assign_source_765 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 852;

            goto try_except_handler_117;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1498], tmp_assign_source_765);
    }
    {
        PyObject *tmp_assign_source_766;
        PyObject *tmp_import_name_from_645;
        CHECK_OBJECT(tmp_import_from_117__module);
        tmp_import_name_from_645 = tmp_import_from_117__module;
        if (PyModule_Check(tmp_import_name_from_645)) {
            tmp_assign_source_766 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_645,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1499],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_766 = IMPORT_NAME(tmp_import_name_from_645, mod_consts[1499]);
        }

        if (tmp_assign_source_766 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 852;

            goto try_except_handler_117;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1499], tmp_assign_source_766);
    }
    goto try_end_117;
    // Exception handler code:
    try_except_handler_117:;
    exception_keeper_type_117 = exception_type;
    exception_keeper_value_117 = exception_value;
    exception_keeper_tb_117 = exception_tb;
    exception_keeper_lineno_117 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_117__module);
    Py_DECREF(tmp_import_from_117__module);
    tmp_import_from_117__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_117;
    exception_value = exception_keeper_value_117;
    exception_tb = exception_keeper_tb_117;
    exception_lineno = exception_keeper_lineno_117;

    goto frame_exception_exit_1;
    // End of try:
    try_end_117:;
    CHECK_OBJECT(tmp_import_from_117__module);
    Py_DECREF(tmp_import_from_117__module);
    tmp_import_from_117__module = NULL;
    {
        PyObject *tmp_assign_source_767;
        PyObject *tmp_import_name_from_646;
        PyObject *tmp_name_value_424;
        PyObject *tmp_globals_arg_value_424;
        PyObject *tmp_locals_arg_value_424;
        PyObject *tmp_fromlist_value_424;
        PyObject *tmp_level_value_424;
        tmp_name_value_424 = mod_consts[1500];
        tmp_globals_arg_value_424 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_424 = Py_None;
        tmp_fromlist_value_424 = mod_consts[1501];
        tmp_level_value_424 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 858;
        tmp_import_name_from_646 = IMPORT_MODULE5(tmp_name_value_424, tmp_globals_arg_value_424, tmp_locals_arg_value_424, tmp_fromlist_value_424, tmp_level_value_424);
        if (tmp_import_name_from_646 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 858;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_646)) {
            tmp_assign_source_767 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_646,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1502],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_767 = IMPORT_NAME(tmp_import_name_from_646, mod_consts[1502]);
        }

        Py_DECREF(tmp_import_name_from_646);
        if (tmp_assign_source_767 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 858;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1502], tmp_assign_source_767);
    }
    {
        PyObject *tmp_assign_source_768;
        PyObject *tmp_name_value_425;
        PyObject *tmp_globals_arg_value_425;
        PyObject *tmp_locals_arg_value_425;
        PyObject *tmp_fromlist_value_425;
        PyObject *tmp_level_value_425;
        tmp_name_value_425 = mod_consts[1503];
        tmp_globals_arg_value_425 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_425 = Py_None;
        tmp_fromlist_value_425 = mod_consts[1504];
        tmp_level_value_425 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 859;
        tmp_assign_source_768 = IMPORT_MODULE5(tmp_name_value_425, tmp_globals_arg_value_425, tmp_locals_arg_value_425, tmp_fromlist_value_425, tmp_level_value_425);
        if (tmp_assign_source_768 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 859;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_118__module == NULL);
        tmp_import_from_118__module = tmp_assign_source_768;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_769;
        PyObject *tmp_import_name_from_647;
        CHECK_OBJECT(tmp_import_from_118__module);
        tmp_import_name_from_647 = tmp_import_from_118__module;
        if (PyModule_Check(tmp_import_name_from_647)) {
            tmp_assign_source_769 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_647,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1505],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_769 = IMPORT_NAME(tmp_import_name_from_647, mod_consts[1505]);
        }

        if (tmp_assign_source_769 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 859;

            goto try_except_handler_118;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1505], tmp_assign_source_769);
    }
    {
        PyObject *tmp_assign_source_770;
        PyObject *tmp_import_name_from_648;
        CHECK_OBJECT(tmp_import_from_118__module);
        tmp_import_name_from_648 = tmp_import_from_118__module;
        if (PyModule_Check(tmp_import_name_from_648)) {
            tmp_assign_source_770 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_648,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1506],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_770 = IMPORT_NAME(tmp_import_name_from_648, mod_consts[1506]);
        }

        if (tmp_assign_source_770 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 859;

            goto try_except_handler_118;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1506], tmp_assign_source_770);
    }
    goto try_end_118;
    // Exception handler code:
    try_except_handler_118:;
    exception_keeper_type_118 = exception_type;
    exception_keeper_value_118 = exception_value;
    exception_keeper_tb_118 = exception_tb;
    exception_keeper_lineno_118 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_118__module);
    Py_DECREF(tmp_import_from_118__module);
    tmp_import_from_118__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_118;
    exception_value = exception_keeper_value_118;
    exception_tb = exception_keeper_tb_118;
    exception_lineno = exception_keeper_lineno_118;

    goto frame_exception_exit_1;
    // End of try:
    try_end_118:;
    CHECK_OBJECT(tmp_import_from_118__module);
    Py_DECREF(tmp_import_from_118__module);
    tmp_import_from_118__module = NULL;
    {
        PyObject *tmp_assign_source_771;
        PyObject *tmp_import_name_from_649;
        PyObject *tmp_name_value_426;
        PyObject *tmp_globals_arg_value_426;
        PyObject *tmp_locals_arg_value_426;
        PyObject *tmp_fromlist_value_426;
        PyObject *tmp_level_value_426;
        tmp_name_value_426 = mod_consts[1507];
        tmp_globals_arg_value_426 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_426 = Py_None;
        tmp_fromlist_value_426 = mod_consts[1508];
        tmp_level_value_426 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 863;
        tmp_import_name_from_649 = IMPORT_MODULE5(tmp_name_value_426, tmp_globals_arg_value_426, tmp_locals_arg_value_426, tmp_fromlist_value_426, tmp_level_value_426);
        if (tmp_import_name_from_649 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 863;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_649)) {
            tmp_assign_source_771 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_649,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1509],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_771 = IMPORT_NAME(tmp_import_name_from_649, mod_consts[1509]);
        }

        Py_DECREF(tmp_import_name_from_649);
        if (tmp_assign_source_771 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 863;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1509], tmp_assign_source_771);
    }
    {
        PyObject *tmp_assign_source_772;
        PyObject *tmp_name_value_427;
        PyObject *tmp_globals_arg_value_427;
        PyObject *tmp_locals_arg_value_427;
        PyObject *tmp_fromlist_value_427;
        PyObject *tmp_level_value_427;
        tmp_name_value_427 = mod_consts[1510];
        tmp_globals_arg_value_427 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_427 = Py_None;
        tmp_fromlist_value_427 = mod_consts[1511];
        tmp_level_value_427 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 864;
        tmp_assign_source_772 = IMPORT_MODULE5(tmp_name_value_427, tmp_globals_arg_value_427, tmp_locals_arg_value_427, tmp_fromlist_value_427, tmp_level_value_427);
        if (tmp_assign_source_772 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_119__module == NULL);
        tmp_import_from_119__module = tmp_assign_source_772;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_773;
        PyObject *tmp_import_name_from_650;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_650 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_650)) {
            tmp_assign_source_773 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_650,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1512],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_773 = IMPORT_NAME(tmp_import_name_from_650, mod_consts[1512]);
        }

        if (tmp_assign_source_773 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1512], tmp_assign_source_773);
    }
    {
        PyObject *tmp_assign_source_774;
        PyObject *tmp_import_name_from_651;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_651 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_651)) {
            tmp_assign_source_774 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_651,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1513],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_774 = IMPORT_NAME(tmp_import_name_from_651, mod_consts[1513]);
        }

        if (tmp_assign_source_774 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1513], tmp_assign_source_774);
    }
    {
        PyObject *tmp_assign_source_775;
        PyObject *tmp_import_name_from_652;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_652 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_652)) {
            tmp_assign_source_775 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_652,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1514],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_775 = IMPORT_NAME(tmp_import_name_from_652, mod_consts[1514]);
        }

        if (tmp_assign_source_775 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1514], tmp_assign_source_775);
    }
    {
        PyObject *tmp_assign_source_776;
        PyObject *tmp_import_name_from_653;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_653 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_653)) {
            tmp_assign_source_776 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_653,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1515],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_776 = IMPORT_NAME(tmp_import_name_from_653, mod_consts[1515]);
        }

        if (tmp_assign_source_776 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1515], tmp_assign_source_776);
    }
    {
        PyObject *tmp_assign_source_777;
        PyObject *tmp_import_name_from_654;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_654 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_654)) {
            tmp_assign_source_777 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_654,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1516],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_777 = IMPORT_NAME(tmp_import_name_from_654, mod_consts[1516]);
        }

        if (tmp_assign_source_777 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1516], tmp_assign_source_777);
    }
    {
        PyObject *tmp_assign_source_778;
        PyObject *tmp_import_name_from_655;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_655 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_655)) {
            tmp_assign_source_778 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_655,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1517],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_778 = IMPORT_NAME(tmp_import_name_from_655, mod_consts[1517]);
        }

        if (tmp_assign_source_778 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1517], tmp_assign_source_778);
    }
    {
        PyObject *tmp_assign_source_779;
        PyObject *tmp_import_name_from_656;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_656 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_656)) {
            tmp_assign_source_779 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_656,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1518],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_779 = IMPORT_NAME(tmp_import_name_from_656, mod_consts[1518]);
        }

        if (tmp_assign_source_779 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1518], tmp_assign_source_779);
    }
    {
        PyObject *tmp_assign_source_780;
        PyObject *tmp_import_name_from_657;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_657 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_657)) {
            tmp_assign_source_780 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_657,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1519],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_780 = IMPORT_NAME(tmp_import_name_from_657, mod_consts[1519]);
        }

        if (tmp_assign_source_780 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1519], tmp_assign_source_780);
    }
    {
        PyObject *tmp_assign_source_781;
        PyObject *tmp_import_name_from_658;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_658 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_658)) {
            tmp_assign_source_781 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_658,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1520],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_781 = IMPORT_NAME(tmp_import_name_from_658, mod_consts[1520]);
        }

        if (tmp_assign_source_781 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1520], tmp_assign_source_781);
    }
    {
        PyObject *tmp_assign_source_782;
        PyObject *tmp_import_name_from_659;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_659 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_659)) {
            tmp_assign_source_782 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_659,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1521],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_782 = IMPORT_NAME(tmp_import_name_from_659, mod_consts[1521]);
        }

        if (tmp_assign_source_782 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1521], tmp_assign_source_782);
    }
    {
        PyObject *tmp_assign_source_783;
        PyObject *tmp_import_name_from_660;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_660 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_660)) {
            tmp_assign_source_783 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_660,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1522],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_783 = IMPORT_NAME(tmp_import_name_from_660, mod_consts[1522]);
        }

        if (tmp_assign_source_783 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1522], tmp_assign_source_783);
    }
    {
        PyObject *tmp_assign_source_784;
        PyObject *tmp_import_name_from_661;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_661 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_661)) {
            tmp_assign_source_784 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_661,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1523],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_784 = IMPORT_NAME(tmp_import_name_from_661, mod_consts[1523]);
        }

        if (tmp_assign_source_784 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1523], tmp_assign_source_784);
    }
    {
        PyObject *tmp_assign_source_785;
        PyObject *tmp_import_name_from_662;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_662 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_662)) {
            tmp_assign_source_785 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_662,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1524],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_785 = IMPORT_NAME(tmp_import_name_from_662, mod_consts[1524]);
        }

        if (tmp_assign_source_785 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1524], tmp_assign_source_785);
    }
    {
        PyObject *tmp_assign_source_786;
        PyObject *tmp_import_name_from_663;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_663 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_663)) {
            tmp_assign_source_786 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_663,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1525],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_786 = IMPORT_NAME(tmp_import_name_from_663, mod_consts[1525]);
        }

        if (tmp_assign_source_786 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1525], tmp_assign_source_786);
    }
    {
        PyObject *tmp_assign_source_787;
        PyObject *tmp_import_name_from_664;
        CHECK_OBJECT(tmp_import_from_119__module);
        tmp_import_name_from_664 = tmp_import_from_119__module;
        if (PyModule_Check(tmp_import_name_from_664)) {
            tmp_assign_source_787 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_664,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1526],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_787 = IMPORT_NAME(tmp_import_name_from_664, mod_consts[1526]);
        }

        if (tmp_assign_source_787 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 864;

            goto try_except_handler_119;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1526], tmp_assign_source_787);
    }
    goto try_end_119;
    // Exception handler code:
    try_except_handler_119:;
    exception_keeper_type_119 = exception_type;
    exception_keeper_value_119 = exception_value;
    exception_keeper_tb_119 = exception_tb;
    exception_keeper_lineno_119 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_119__module);
    Py_DECREF(tmp_import_from_119__module);
    tmp_import_from_119__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_119;
    exception_value = exception_keeper_value_119;
    exception_tb = exception_keeper_tb_119;
    exception_lineno = exception_keeper_lineno_119;

    goto frame_exception_exit_1;
    // End of try:
    try_end_119:;
    CHECK_OBJECT(tmp_import_from_119__module);
    Py_DECREF(tmp_import_from_119__module);
    tmp_import_from_119__module = NULL;
    {
        PyObject *tmp_assign_source_788;
        PyObject *tmp_import_name_from_665;
        PyObject *tmp_name_value_428;
        PyObject *tmp_globals_arg_value_428;
        PyObject *tmp_locals_arg_value_428;
        PyObject *tmp_fromlist_value_428;
        PyObject *tmp_level_value_428;
        tmp_name_value_428 = mod_consts[1527];
        tmp_globals_arg_value_428 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_428 = Py_None;
        tmp_fromlist_value_428 = mod_consts[1528];
        tmp_level_value_428 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 881;
        tmp_import_name_from_665 = IMPORT_MODULE5(tmp_name_value_428, tmp_globals_arg_value_428, tmp_locals_arg_value_428, tmp_fromlist_value_428, tmp_level_value_428);
        if (tmp_import_name_from_665 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_665)) {
            tmp_assign_source_788 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_665,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1529],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_788 = IMPORT_NAME(tmp_import_name_from_665, mod_consts[1529]);
        }

        Py_DECREF(tmp_import_name_from_665);
        if (tmp_assign_source_788 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 881;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1529], tmp_assign_source_788);
    }
    {
        PyObject *tmp_assign_source_789;
        PyObject *tmp_name_value_429;
        PyObject *tmp_globals_arg_value_429;
        PyObject *tmp_locals_arg_value_429;
        PyObject *tmp_fromlist_value_429;
        PyObject *tmp_level_value_429;
        tmp_name_value_429 = mod_consts[1530];
        tmp_globals_arg_value_429 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_429 = Py_None;
        tmp_fromlist_value_429 = mod_consts[1531];
        tmp_level_value_429 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 882;
        tmp_assign_source_789 = IMPORT_MODULE5(tmp_name_value_429, tmp_globals_arg_value_429, tmp_locals_arg_value_429, tmp_fromlist_value_429, tmp_level_value_429);
        if (tmp_assign_source_789 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 882;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_120__module == NULL);
        tmp_import_from_120__module = tmp_assign_source_789;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_790;
        PyObject *tmp_import_name_from_666;
        CHECK_OBJECT(tmp_import_from_120__module);
        tmp_import_name_from_666 = tmp_import_from_120__module;
        if (PyModule_Check(tmp_import_name_from_666)) {
            tmp_assign_source_790 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_666,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1532],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_790 = IMPORT_NAME(tmp_import_name_from_666, mod_consts[1532]);
        }

        if (tmp_assign_source_790 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 882;

            goto try_except_handler_120;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1532], tmp_assign_source_790);
    }
    {
        PyObject *tmp_assign_source_791;
        PyObject *tmp_import_name_from_667;
        CHECK_OBJECT(tmp_import_from_120__module);
        tmp_import_name_from_667 = tmp_import_from_120__module;
        if (PyModule_Check(tmp_import_name_from_667)) {
            tmp_assign_source_791 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_667,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1533],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_791 = IMPORT_NAME(tmp_import_name_from_667, mod_consts[1533]);
        }

        if (tmp_assign_source_791 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 882;

            goto try_except_handler_120;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1533], tmp_assign_source_791);
    }
    goto try_end_120;
    // Exception handler code:
    try_except_handler_120:;
    exception_keeper_type_120 = exception_type;
    exception_keeper_value_120 = exception_value;
    exception_keeper_tb_120 = exception_tb;
    exception_keeper_lineno_120 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_120__module);
    Py_DECREF(tmp_import_from_120__module);
    tmp_import_from_120__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_120;
    exception_value = exception_keeper_value_120;
    exception_tb = exception_keeper_tb_120;
    exception_lineno = exception_keeper_lineno_120;

    goto frame_exception_exit_1;
    // End of try:
    try_end_120:;
    CHECK_OBJECT(tmp_import_from_120__module);
    Py_DECREF(tmp_import_from_120__module);
    tmp_import_from_120__module = NULL;
    {
        PyObject *tmp_assign_source_792;
        PyObject *tmp_name_value_430;
        PyObject *tmp_globals_arg_value_430;
        PyObject *tmp_locals_arg_value_430;
        PyObject *tmp_fromlist_value_430;
        PyObject *tmp_level_value_430;
        tmp_name_value_430 = mod_consts[1534];
        tmp_globals_arg_value_430 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_430 = Py_None;
        tmp_fromlist_value_430 = mod_consts[1535];
        tmp_level_value_430 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 886;
        tmp_assign_source_792 = IMPORT_MODULE5(tmp_name_value_430, tmp_globals_arg_value_430, tmp_locals_arg_value_430, tmp_fromlist_value_430, tmp_level_value_430);
        if (tmp_assign_source_792 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 886;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_121__module == NULL);
        tmp_import_from_121__module = tmp_assign_source_792;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_793;
        PyObject *tmp_import_name_from_668;
        CHECK_OBJECT(tmp_import_from_121__module);
        tmp_import_name_from_668 = tmp_import_from_121__module;
        if (PyModule_Check(tmp_import_name_from_668)) {
            tmp_assign_source_793 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_668,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1536],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_793 = IMPORT_NAME(tmp_import_name_from_668, mod_consts[1536]);
        }

        if (tmp_assign_source_793 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 886;

            goto try_except_handler_121;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1536], tmp_assign_source_793);
    }
    {
        PyObject *tmp_assign_source_794;
        PyObject *tmp_import_name_from_669;
        CHECK_OBJECT(tmp_import_from_121__module);
        tmp_import_name_from_669 = tmp_import_from_121__module;
        if (PyModule_Check(tmp_import_name_from_669)) {
            tmp_assign_source_794 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_669,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1537],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_794 = IMPORT_NAME(tmp_import_name_from_669, mod_consts[1537]);
        }

        if (tmp_assign_source_794 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 886;

            goto try_except_handler_121;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1537], tmp_assign_source_794);
    }
    {
        PyObject *tmp_assign_source_795;
        PyObject *tmp_import_name_from_670;
        CHECK_OBJECT(tmp_import_from_121__module);
        tmp_import_name_from_670 = tmp_import_from_121__module;
        if (PyModule_Check(tmp_import_name_from_670)) {
            tmp_assign_source_795 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_670,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1538],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_795 = IMPORT_NAME(tmp_import_name_from_670, mod_consts[1538]);
        }

        if (tmp_assign_source_795 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 886;

            goto try_except_handler_121;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1538], tmp_assign_source_795);
    }
    goto try_end_121;
    // Exception handler code:
    try_except_handler_121:;
    exception_keeper_type_121 = exception_type;
    exception_keeper_value_121 = exception_value;
    exception_keeper_tb_121 = exception_tb;
    exception_keeper_lineno_121 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_121__module);
    Py_DECREF(tmp_import_from_121__module);
    tmp_import_from_121__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_121;
    exception_value = exception_keeper_value_121;
    exception_tb = exception_keeper_tb_121;
    exception_lineno = exception_keeper_lineno_121;

    goto frame_exception_exit_1;
    // End of try:
    try_end_121:;
    CHECK_OBJECT(tmp_import_from_121__module);
    Py_DECREF(tmp_import_from_121__module);
    tmp_import_from_121__module = NULL;
    {
        PyObject *tmp_assign_source_796;
        PyObject *tmp_import_name_from_671;
        PyObject *tmp_name_value_431;
        PyObject *tmp_globals_arg_value_431;
        PyObject *tmp_locals_arg_value_431;
        PyObject *tmp_fromlist_value_431;
        PyObject *tmp_level_value_431;
        tmp_name_value_431 = mod_consts[1539];
        tmp_globals_arg_value_431 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_431 = Py_None;
        tmp_fromlist_value_431 = mod_consts[1540];
        tmp_level_value_431 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 891;
        tmp_import_name_from_671 = IMPORT_MODULE5(tmp_name_value_431, tmp_globals_arg_value_431, tmp_locals_arg_value_431, tmp_fromlist_value_431, tmp_level_value_431);
        if (tmp_import_name_from_671 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 891;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_671)) {
            tmp_assign_source_796 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_671,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1541],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_796 = IMPORT_NAME(tmp_import_name_from_671, mod_consts[1541]);
        }

        Py_DECREF(tmp_import_name_from_671);
        if (tmp_assign_source_796 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 891;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1541], tmp_assign_source_796);
    }
    {
        PyObject *tmp_assign_source_797;
        PyObject *tmp_import_name_from_672;
        PyObject *tmp_name_value_432;
        PyObject *tmp_globals_arg_value_432;
        PyObject *tmp_locals_arg_value_432;
        PyObject *tmp_fromlist_value_432;
        PyObject *tmp_level_value_432;
        tmp_name_value_432 = mod_consts[1542];
        tmp_globals_arg_value_432 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_432 = Py_None;
        tmp_fromlist_value_432 = mod_consts[1543];
        tmp_level_value_432 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 892;
        tmp_import_name_from_672 = IMPORT_MODULE5(tmp_name_value_432, tmp_globals_arg_value_432, tmp_locals_arg_value_432, tmp_fromlist_value_432, tmp_level_value_432);
        if (tmp_import_name_from_672 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 892;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_672)) {
            tmp_assign_source_797 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_672,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1544],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_797 = IMPORT_NAME(tmp_import_name_from_672, mod_consts[1544]);
        }

        Py_DECREF(tmp_import_name_from_672);
        if (tmp_assign_source_797 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 892;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1544], tmp_assign_source_797);
    }
    {
        PyObject *tmp_assign_source_798;
        PyObject *tmp_import_name_from_673;
        PyObject *tmp_name_value_433;
        PyObject *tmp_globals_arg_value_433;
        PyObject *tmp_locals_arg_value_433;
        PyObject *tmp_fromlist_value_433;
        PyObject *tmp_level_value_433;
        tmp_name_value_433 = mod_consts[1545];
        tmp_globals_arg_value_433 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_433 = Py_None;
        tmp_fromlist_value_433 = mod_consts[1546];
        tmp_level_value_433 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 893;
        tmp_import_name_from_673 = IMPORT_MODULE5(tmp_name_value_433, tmp_globals_arg_value_433, tmp_locals_arg_value_433, tmp_fromlist_value_433, tmp_level_value_433);
        if (tmp_import_name_from_673 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 893;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_673)) {
            tmp_assign_source_798 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_673,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1547],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_798 = IMPORT_NAME(tmp_import_name_from_673, mod_consts[1547]);
        }

        Py_DECREF(tmp_import_name_from_673);
        if (tmp_assign_source_798 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 893;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1547], tmp_assign_source_798);
    }
    {
        PyObject *tmp_assign_source_799;
        PyObject *tmp_import_name_from_674;
        PyObject *tmp_name_value_434;
        PyObject *tmp_globals_arg_value_434;
        PyObject *tmp_locals_arg_value_434;
        PyObject *tmp_fromlist_value_434;
        PyObject *tmp_level_value_434;
        tmp_name_value_434 = mod_consts[1548];
        tmp_globals_arg_value_434 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_434 = Py_None;
        tmp_fromlist_value_434 = mod_consts[1549];
        tmp_level_value_434 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 894;
        tmp_import_name_from_674 = IMPORT_MODULE5(tmp_name_value_434, tmp_globals_arg_value_434, tmp_locals_arg_value_434, tmp_fromlist_value_434, tmp_level_value_434);
        if (tmp_import_name_from_674 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 894;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_674)) {
            tmp_assign_source_799 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_674,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1550],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_799 = IMPORT_NAME(tmp_import_name_from_674, mod_consts[1550]);
        }

        Py_DECREF(tmp_import_name_from_674);
        if (tmp_assign_source_799 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 894;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1550], tmp_assign_source_799);
    }
    {
        PyObject *tmp_assign_source_800;
        PyObject *tmp_import_name_from_675;
        PyObject *tmp_name_value_435;
        PyObject *tmp_globals_arg_value_435;
        PyObject *tmp_locals_arg_value_435;
        PyObject *tmp_fromlist_value_435;
        PyObject *tmp_level_value_435;
        tmp_name_value_435 = mod_consts[1551];
        tmp_globals_arg_value_435 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_435 = Py_None;
        tmp_fromlist_value_435 = mod_consts[1552];
        tmp_level_value_435 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 895;
        tmp_import_name_from_675 = IMPORT_MODULE5(tmp_name_value_435, tmp_globals_arg_value_435, tmp_locals_arg_value_435, tmp_fromlist_value_435, tmp_level_value_435);
        if (tmp_import_name_from_675 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 895;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_675)) {
            tmp_assign_source_800 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_675,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1553],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_800 = IMPORT_NAME(tmp_import_name_from_675, mod_consts[1553]);
        }

        Py_DECREF(tmp_import_name_from_675);
        if (tmp_assign_source_800 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 895;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1553], tmp_assign_source_800);
    }
    {
        PyObject *tmp_assign_source_801;
        PyObject *tmp_import_name_from_676;
        PyObject *tmp_name_value_436;
        PyObject *tmp_globals_arg_value_436;
        PyObject *tmp_locals_arg_value_436;
        PyObject *tmp_fromlist_value_436;
        PyObject *tmp_level_value_436;
        tmp_name_value_436 = mod_consts[1554];
        tmp_globals_arg_value_436 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_436 = Py_None;
        tmp_fromlist_value_436 = mod_consts[1555];
        tmp_level_value_436 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 896;
        tmp_import_name_from_676 = IMPORT_MODULE5(tmp_name_value_436, tmp_globals_arg_value_436, tmp_locals_arg_value_436, tmp_fromlist_value_436, tmp_level_value_436);
        if (tmp_import_name_from_676 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 896;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_676)) {
            tmp_assign_source_801 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_676,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1556],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_801 = IMPORT_NAME(tmp_import_name_from_676, mod_consts[1556]);
        }

        Py_DECREF(tmp_import_name_from_676);
        if (tmp_assign_source_801 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 896;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1556], tmp_assign_source_801);
    }
    {
        PyObject *tmp_assign_source_802;
        PyObject *tmp_import_name_from_677;
        PyObject *tmp_name_value_437;
        PyObject *tmp_globals_arg_value_437;
        PyObject *tmp_locals_arg_value_437;
        PyObject *tmp_fromlist_value_437;
        PyObject *tmp_level_value_437;
        tmp_name_value_437 = mod_consts[1557];
        tmp_globals_arg_value_437 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_437 = Py_None;
        tmp_fromlist_value_437 = mod_consts[1558];
        tmp_level_value_437 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 897;
        tmp_import_name_from_677 = IMPORT_MODULE5(tmp_name_value_437, tmp_globals_arg_value_437, tmp_locals_arg_value_437, tmp_fromlist_value_437, tmp_level_value_437);
        if (tmp_import_name_from_677 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 897;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_677)) {
            tmp_assign_source_802 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_677,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1559],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_802 = IMPORT_NAME(tmp_import_name_from_677, mod_consts[1559]);
        }

        Py_DECREF(tmp_import_name_from_677);
        if (tmp_assign_source_802 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 897;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1559], tmp_assign_source_802);
    }
    {
        PyObject *tmp_assign_source_803;
        PyObject *tmp_import_name_from_678;
        PyObject *tmp_name_value_438;
        PyObject *tmp_globals_arg_value_438;
        PyObject *tmp_locals_arg_value_438;
        PyObject *tmp_fromlist_value_438;
        PyObject *tmp_level_value_438;
        tmp_name_value_438 = mod_consts[1560];
        tmp_globals_arg_value_438 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_438 = Py_None;
        tmp_fromlist_value_438 = mod_consts[1561];
        tmp_level_value_438 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 898;
        tmp_import_name_from_678 = IMPORT_MODULE5(tmp_name_value_438, tmp_globals_arg_value_438, tmp_locals_arg_value_438, tmp_fromlist_value_438, tmp_level_value_438);
        if (tmp_import_name_from_678 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 898;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_678)) {
            tmp_assign_source_803 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_678,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1562],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_803 = IMPORT_NAME(tmp_import_name_from_678, mod_consts[1562]);
        }

        Py_DECREF(tmp_import_name_from_678);
        if (tmp_assign_source_803 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 898;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1562], tmp_assign_source_803);
    }
    {
        PyObject *tmp_assign_source_804;
        PyObject *tmp_name_value_439;
        PyObject *tmp_globals_arg_value_439;
        PyObject *tmp_locals_arg_value_439;
        PyObject *tmp_fromlist_value_439;
        PyObject *tmp_level_value_439;
        tmp_name_value_439 = mod_consts[1563];
        tmp_globals_arg_value_439 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_439 = Py_None;
        tmp_fromlist_value_439 = mod_consts[1564];
        tmp_level_value_439 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 899;
        tmp_assign_source_804 = IMPORT_MODULE5(tmp_name_value_439, tmp_globals_arg_value_439, tmp_locals_arg_value_439, tmp_fromlist_value_439, tmp_level_value_439);
        if (tmp_assign_source_804 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 899;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_122__module == NULL);
        tmp_import_from_122__module = tmp_assign_source_804;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_805;
        PyObject *tmp_import_name_from_679;
        CHECK_OBJECT(tmp_import_from_122__module);
        tmp_import_name_from_679 = tmp_import_from_122__module;
        if (PyModule_Check(tmp_import_name_from_679)) {
            tmp_assign_source_805 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_679,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1565],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_805 = IMPORT_NAME(tmp_import_name_from_679, mod_consts[1565]);
        }

        if (tmp_assign_source_805 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 899;

            goto try_except_handler_122;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1565], tmp_assign_source_805);
    }
    {
        PyObject *tmp_assign_source_806;
        PyObject *tmp_import_name_from_680;
        CHECK_OBJECT(tmp_import_from_122__module);
        tmp_import_name_from_680 = tmp_import_from_122__module;
        if (PyModule_Check(tmp_import_name_from_680)) {
            tmp_assign_source_806 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_680,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1566],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_806 = IMPORT_NAME(tmp_import_name_from_680, mod_consts[1566]);
        }

        if (tmp_assign_source_806 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 899;

            goto try_except_handler_122;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1566], tmp_assign_source_806);
    }
    goto try_end_122;
    // Exception handler code:
    try_except_handler_122:;
    exception_keeper_type_122 = exception_type;
    exception_keeper_value_122 = exception_value;
    exception_keeper_tb_122 = exception_tb;
    exception_keeper_lineno_122 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_122__module);
    Py_DECREF(tmp_import_from_122__module);
    tmp_import_from_122__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_122;
    exception_value = exception_keeper_value_122;
    exception_tb = exception_keeper_tb_122;
    exception_lineno = exception_keeper_lineno_122;

    goto frame_exception_exit_1;
    // End of try:
    try_end_122:;
    CHECK_OBJECT(tmp_import_from_122__module);
    Py_DECREF(tmp_import_from_122__module);
    tmp_import_from_122__module = NULL;
    {
        PyObject *tmp_assign_source_807;
        PyObject *tmp_import_name_from_681;
        PyObject *tmp_name_value_440;
        PyObject *tmp_globals_arg_value_440;
        PyObject *tmp_locals_arg_value_440;
        PyObject *tmp_fromlist_value_440;
        PyObject *tmp_level_value_440;
        tmp_name_value_440 = mod_consts[1567];
        tmp_globals_arg_value_440 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_440 = Py_None;
        tmp_fromlist_value_440 = mod_consts[1568];
        tmp_level_value_440 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 903;
        tmp_import_name_from_681 = IMPORT_MODULE5(tmp_name_value_440, tmp_globals_arg_value_440, tmp_locals_arg_value_440, tmp_fromlist_value_440, tmp_level_value_440);
        if (tmp_import_name_from_681 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 903;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_681)) {
            tmp_assign_source_807 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_681,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1569],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_807 = IMPORT_NAME(tmp_import_name_from_681, mod_consts[1569]);
        }

        Py_DECREF(tmp_import_name_from_681);
        if (tmp_assign_source_807 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 903;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1569], tmp_assign_source_807);
    }
    {
        PyObject *tmp_assign_source_808;
        PyObject *tmp_import_name_from_682;
        PyObject *tmp_name_value_441;
        PyObject *tmp_globals_arg_value_441;
        PyObject *tmp_locals_arg_value_441;
        PyObject *tmp_fromlist_value_441;
        PyObject *tmp_level_value_441;
        tmp_name_value_441 = mod_consts[1570];
        tmp_globals_arg_value_441 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_441 = Py_None;
        tmp_fromlist_value_441 = mod_consts[1571];
        tmp_level_value_441 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 904;
        tmp_import_name_from_682 = IMPORT_MODULE5(tmp_name_value_441, tmp_globals_arg_value_441, tmp_locals_arg_value_441, tmp_fromlist_value_441, tmp_level_value_441);
        if (tmp_import_name_from_682 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 904;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_682)) {
            tmp_assign_source_808 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_682,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1572],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_808 = IMPORT_NAME(tmp_import_name_from_682, mod_consts[1572]);
        }

        Py_DECREF(tmp_import_name_from_682);
        if (tmp_assign_source_808 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 904;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1572], tmp_assign_source_808);
    }
    {
        PyObject *tmp_assign_source_809;
        PyObject *tmp_import_name_from_683;
        PyObject *tmp_name_value_442;
        PyObject *tmp_globals_arg_value_442;
        PyObject *tmp_locals_arg_value_442;
        PyObject *tmp_fromlist_value_442;
        PyObject *tmp_level_value_442;
        tmp_name_value_442 = mod_consts[1573];
        tmp_globals_arg_value_442 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_442 = Py_None;
        tmp_fromlist_value_442 = mod_consts[1574];
        tmp_level_value_442 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 905;
        tmp_import_name_from_683 = IMPORT_MODULE5(tmp_name_value_442, tmp_globals_arg_value_442, tmp_locals_arg_value_442, tmp_fromlist_value_442, tmp_level_value_442);
        if (tmp_import_name_from_683 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 905;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_683)) {
            tmp_assign_source_809 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_683,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1575],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_809 = IMPORT_NAME(tmp_import_name_from_683, mod_consts[1575]);
        }

        Py_DECREF(tmp_import_name_from_683);
        if (tmp_assign_source_809 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 905;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1575], tmp_assign_source_809);
    }
    {
        PyObject *tmp_assign_source_810;
        PyObject *tmp_name_value_443;
        PyObject *tmp_globals_arg_value_443;
        PyObject *tmp_locals_arg_value_443;
        PyObject *tmp_fromlist_value_443;
        PyObject *tmp_level_value_443;
        tmp_name_value_443 = mod_consts[1576];
        tmp_globals_arg_value_443 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_443 = Py_None;
        tmp_fromlist_value_443 = mod_consts[1577];
        tmp_level_value_443 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 906;
        tmp_assign_source_810 = IMPORT_MODULE5(tmp_name_value_443, tmp_globals_arg_value_443, tmp_locals_arg_value_443, tmp_fromlist_value_443, tmp_level_value_443);
        if (tmp_assign_source_810 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 906;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_123__module == NULL);
        tmp_import_from_123__module = tmp_assign_source_810;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_811;
        PyObject *tmp_import_name_from_684;
        CHECK_OBJECT(tmp_import_from_123__module);
        tmp_import_name_from_684 = tmp_import_from_123__module;
        if (PyModule_Check(tmp_import_name_from_684)) {
            tmp_assign_source_811 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_684,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1578],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_811 = IMPORT_NAME(tmp_import_name_from_684, mod_consts[1578]);
        }

        if (tmp_assign_source_811 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 906;

            goto try_except_handler_123;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1578], tmp_assign_source_811);
    }
    {
        PyObject *tmp_assign_source_812;
        PyObject *tmp_import_name_from_685;
        CHECK_OBJECT(tmp_import_from_123__module);
        tmp_import_name_from_685 = tmp_import_from_123__module;
        if (PyModule_Check(tmp_import_name_from_685)) {
            tmp_assign_source_812 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_685,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1579],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_812 = IMPORT_NAME(tmp_import_name_from_685, mod_consts[1579]);
        }

        if (tmp_assign_source_812 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 906;

            goto try_except_handler_123;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1579], tmp_assign_source_812);
    }
    goto try_end_123;
    // Exception handler code:
    try_except_handler_123:;
    exception_keeper_type_123 = exception_type;
    exception_keeper_value_123 = exception_value;
    exception_keeper_tb_123 = exception_tb;
    exception_keeper_lineno_123 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_123__module);
    Py_DECREF(tmp_import_from_123__module);
    tmp_import_from_123__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_123;
    exception_value = exception_keeper_value_123;
    exception_tb = exception_keeper_tb_123;
    exception_lineno = exception_keeper_lineno_123;

    goto frame_exception_exit_1;
    // End of try:
    try_end_123:;
    CHECK_OBJECT(tmp_import_from_123__module);
    Py_DECREF(tmp_import_from_123__module);
    tmp_import_from_123__module = NULL;
    {
        PyObject *tmp_assign_source_813;
        PyObject *tmp_import_name_from_686;
        PyObject *tmp_name_value_444;
        PyObject *tmp_globals_arg_value_444;
        PyObject *tmp_locals_arg_value_444;
        PyObject *tmp_fromlist_value_444;
        PyObject *tmp_level_value_444;
        tmp_name_value_444 = mod_consts[1580];
        tmp_globals_arg_value_444 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_444 = Py_None;
        tmp_fromlist_value_444 = mod_consts[1581];
        tmp_level_value_444 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 910;
        tmp_import_name_from_686 = IMPORT_MODULE5(tmp_name_value_444, tmp_globals_arg_value_444, tmp_locals_arg_value_444, tmp_fromlist_value_444, tmp_level_value_444);
        if (tmp_import_name_from_686 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 910;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_686)) {
            tmp_assign_source_813 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_686,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1582],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_813 = IMPORT_NAME(tmp_import_name_from_686, mod_consts[1582]);
        }

        Py_DECREF(tmp_import_name_from_686);
        if (tmp_assign_source_813 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 910;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1582], tmp_assign_source_813);
    }
    {
        PyObject *tmp_assign_source_814;
        PyObject *tmp_import_name_from_687;
        PyObject *tmp_name_value_445;
        PyObject *tmp_globals_arg_value_445;
        PyObject *tmp_locals_arg_value_445;
        PyObject *tmp_fromlist_value_445;
        PyObject *tmp_level_value_445;
        tmp_name_value_445 = mod_consts[1583];
        tmp_globals_arg_value_445 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_445 = Py_None;
        tmp_fromlist_value_445 = mod_consts[1584];
        tmp_level_value_445 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 911;
        tmp_import_name_from_687 = IMPORT_MODULE5(tmp_name_value_445, tmp_globals_arg_value_445, tmp_locals_arg_value_445, tmp_fromlist_value_445, tmp_level_value_445);
        if (tmp_import_name_from_687 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 911;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_687)) {
            tmp_assign_source_814 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_687,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1585],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_814 = IMPORT_NAME(tmp_import_name_from_687, mod_consts[1585]);
        }

        Py_DECREF(tmp_import_name_from_687);
        if (tmp_assign_source_814 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 911;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1585], tmp_assign_source_814);
    }
    {
        PyObject *tmp_assign_source_815;
        PyObject *tmp_name_value_446;
        PyObject *tmp_globals_arg_value_446;
        PyObject *tmp_locals_arg_value_446;
        PyObject *tmp_fromlist_value_446;
        PyObject *tmp_level_value_446;
        tmp_name_value_446 = mod_consts[1586];
        tmp_globals_arg_value_446 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_446 = Py_None;
        tmp_fromlist_value_446 = mod_consts[1587];
        tmp_level_value_446 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 912;
        tmp_assign_source_815 = IMPORT_MODULE5(tmp_name_value_446, tmp_globals_arg_value_446, tmp_locals_arg_value_446, tmp_fromlist_value_446, tmp_level_value_446);
        if (tmp_assign_source_815 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 912;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_124__module == NULL);
        tmp_import_from_124__module = tmp_assign_source_815;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_816;
        PyObject *tmp_import_name_from_688;
        CHECK_OBJECT(tmp_import_from_124__module);
        tmp_import_name_from_688 = tmp_import_from_124__module;
        if (PyModule_Check(tmp_import_name_from_688)) {
            tmp_assign_source_816 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_688,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1588],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_816 = IMPORT_NAME(tmp_import_name_from_688, mod_consts[1588]);
        }

        if (tmp_assign_source_816 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 912;

            goto try_except_handler_124;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1588], tmp_assign_source_816);
    }
    {
        PyObject *tmp_assign_source_817;
        PyObject *tmp_import_name_from_689;
        CHECK_OBJECT(tmp_import_from_124__module);
        tmp_import_name_from_689 = tmp_import_from_124__module;
        if (PyModule_Check(tmp_import_name_from_689)) {
            tmp_assign_source_817 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_689,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1589],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_817 = IMPORT_NAME(tmp_import_name_from_689, mod_consts[1589]);
        }

        if (tmp_assign_source_817 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 912;

            goto try_except_handler_124;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1589], tmp_assign_source_817);
    }
    goto try_end_124;
    // Exception handler code:
    try_except_handler_124:;
    exception_keeper_type_124 = exception_type;
    exception_keeper_value_124 = exception_value;
    exception_keeper_tb_124 = exception_tb;
    exception_keeper_lineno_124 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_124__module);
    Py_DECREF(tmp_import_from_124__module);
    tmp_import_from_124__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_124;
    exception_value = exception_keeper_value_124;
    exception_tb = exception_keeper_tb_124;
    exception_lineno = exception_keeper_lineno_124;

    goto frame_exception_exit_1;
    // End of try:
    try_end_124:;
    CHECK_OBJECT(tmp_import_from_124__module);
    Py_DECREF(tmp_import_from_124__module);
    tmp_import_from_124__module = NULL;
    {
        PyObject *tmp_assign_source_818;
        PyObject *tmp_import_name_from_690;
        PyObject *tmp_name_value_447;
        PyObject *tmp_globals_arg_value_447;
        PyObject *tmp_locals_arg_value_447;
        PyObject *tmp_fromlist_value_447;
        PyObject *tmp_level_value_447;
        tmp_name_value_447 = mod_consts[1590];
        tmp_globals_arg_value_447 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_447 = Py_None;
        tmp_fromlist_value_447 = mod_consts[1591];
        tmp_level_value_447 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 916;
        tmp_import_name_from_690 = IMPORT_MODULE5(tmp_name_value_447, tmp_globals_arg_value_447, tmp_locals_arg_value_447, tmp_fromlist_value_447, tmp_level_value_447);
        if (tmp_import_name_from_690 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 916;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_690)) {
            tmp_assign_source_818 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_690,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1592],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_818 = IMPORT_NAME(tmp_import_name_from_690, mod_consts[1592]);
        }

        Py_DECREF(tmp_import_name_from_690);
        if (tmp_assign_source_818 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 916;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1592], tmp_assign_source_818);
    }
    {
        PyObject *tmp_assign_source_819;
        PyObject *tmp_name_value_448;
        PyObject *tmp_globals_arg_value_448;
        PyObject *tmp_locals_arg_value_448;
        PyObject *tmp_fromlist_value_448;
        PyObject *tmp_level_value_448;
        tmp_name_value_448 = mod_consts[1593];
        tmp_globals_arg_value_448 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_448 = Py_None;
        tmp_fromlist_value_448 = mod_consts[1594];
        tmp_level_value_448 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 917;
        tmp_assign_source_819 = IMPORT_MODULE5(tmp_name_value_448, tmp_globals_arg_value_448, tmp_locals_arg_value_448, tmp_fromlist_value_448, tmp_level_value_448);
        if (tmp_assign_source_819 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 917;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_125__module == NULL);
        tmp_import_from_125__module = tmp_assign_source_819;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_820;
        PyObject *tmp_import_name_from_691;
        CHECK_OBJECT(tmp_import_from_125__module);
        tmp_import_name_from_691 = tmp_import_from_125__module;
        if (PyModule_Check(tmp_import_name_from_691)) {
            tmp_assign_source_820 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_691,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1595],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_820 = IMPORT_NAME(tmp_import_name_from_691, mod_consts[1595]);
        }

        if (tmp_assign_source_820 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 917;

            goto try_except_handler_125;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1595], tmp_assign_source_820);
    }
    {
        PyObject *tmp_assign_source_821;
        PyObject *tmp_import_name_from_692;
        CHECK_OBJECT(tmp_import_from_125__module);
        tmp_import_name_from_692 = tmp_import_from_125__module;
        if (PyModule_Check(tmp_import_name_from_692)) {
            tmp_assign_source_821 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_692,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1596],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_821 = IMPORT_NAME(tmp_import_name_from_692, mod_consts[1596]);
        }

        if (tmp_assign_source_821 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 917;

            goto try_except_handler_125;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1596], tmp_assign_source_821);
    }
    goto try_end_125;
    // Exception handler code:
    try_except_handler_125:;
    exception_keeper_type_125 = exception_type;
    exception_keeper_value_125 = exception_value;
    exception_keeper_tb_125 = exception_tb;
    exception_keeper_lineno_125 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_125__module);
    Py_DECREF(tmp_import_from_125__module);
    tmp_import_from_125__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_125;
    exception_value = exception_keeper_value_125;
    exception_tb = exception_keeper_tb_125;
    exception_lineno = exception_keeper_lineno_125;

    goto frame_exception_exit_1;
    // End of try:
    try_end_125:;
    CHECK_OBJECT(tmp_import_from_125__module);
    Py_DECREF(tmp_import_from_125__module);
    tmp_import_from_125__module = NULL;
    {
        PyObject *tmp_assign_source_822;
        PyObject *tmp_import_name_from_693;
        PyObject *tmp_name_value_449;
        PyObject *tmp_globals_arg_value_449;
        PyObject *tmp_locals_arg_value_449;
        PyObject *tmp_fromlist_value_449;
        PyObject *tmp_level_value_449;
        tmp_name_value_449 = mod_consts[1597];
        tmp_globals_arg_value_449 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_449 = Py_None;
        tmp_fromlist_value_449 = mod_consts[1598];
        tmp_level_value_449 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 921;
        tmp_import_name_from_693 = IMPORT_MODULE5(tmp_name_value_449, tmp_globals_arg_value_449, tmp_locals_arg_value_449, tmp_fromlist_value_449, tmp_level_value_449);
        if (tmp_import_name_from_693 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 921;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_693)) {
            tmp_assign_source_822 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_693,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1599],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_822 = IMPORT_NAME(tmp_import_name_from_693, mod_consts[1599]);
        }

        Py_DECREF(tmp_import_name_from_693);
        if (tmp_assign_source_822 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 921;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1599], tmp_assign_source_822);
    }
    {
        PyObject *tmp_assign_source_823;
        PyObject *tmp_import_name_from_694;
        PyObject *tmp_name_value_450;
        PyObject *tmp_globals_arg_value_450;
        PyObject *tmp_locals_arg_value_450;
        PyObject *tmp_fromlist_value_450;
        PyObject *tmp_level_value_450;
        tmp_name_value_450 = mod_consts[1600];
        tmp_globals_arg_value_450 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_450 = Py_None;
        tmp_fromlist_value_450 = mod_consts[1601];
        tmp_level_value_450 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 922;
        tmp_import_name_from_694 = IMPORT_MODULE5(tmp_name_value_450, tmp_globals_arg_value_450, tmp_locals_arg_value_450, tmp_fromlist_value_450, tmp_level_value_450);
        if (tmp_import_name_from_694 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 922;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_694)) {
            tmp_assign_source_823 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_694,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1602],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_823 = IMPORT_NAME(tmp_import_name_from_694, mod_consts[1602]);
        }

        Py_DECREF(tmp_import_name_from_694);
        if (tmp_assign_source_823 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 922;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1602], tmp_assign_source_823);
    }
    {
        PyObject *tmp_assign_source_824;
        PyObject *tmp_import_name_from_695;
        PyObject *tmp_name_value_451;
        PyObject *tmp_globals_arg_value_451;
        PyObject *tmp_locals_arg_value_451;
        PyObject *tmp_fromlist_value_451;
        PyObject *tmp_level_value_451;
        tmp_name_value_451 = mod_consts[1603];
        tmp_globals_arg_value_451 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_451 = Py_None;
        tmp_fromlist_value_451 = mod_consts[1604];
        tmp_level_value_451 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 923;
        tmp_import_name_from_695 = IMPORT_MODULE5(tmp_name_value_451, tmp_globals_arg_value_451, tmp_locals_arg_value_451, tmp_fromlist_value_451, tmp_level_value_451);
        if (tmp_import_name_from_695 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 923;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_695)) {
            tmp_assign_source_824 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_695,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1605],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_824 = IMPORT_NAME(tmp_import_name_from_695, mod_consts[1605]);
        }

        Py_DECREF(tmp_import_name_from_695);
        if (tmp_assign_source_824 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 923;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1605], tmp_assign_source_824);
    }
    {
        PyObject *tmp_assign_source_825;
        PyObject *tmp_import_name_from_696;
        PyObject *tmp_name_value_452;
        PyObject *tmp_globals_arg_value_452;
        PyObject *tmp_locals_arg_value_452;
        PyObject *tmp_fromlist_value_452;
        PyObject *tmp_level_value_452;
        tmp_name_value_452 = mod_consts[1606];
        tmp_globals_arg_value_452 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_452 = Py_None;
        tmp_fromlist_value_452 = mod_consts[1607];
        tmp_level_value_452 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 924;
        tmp_import_name_from_696 = IMPORT_MODULE5(tmp_name_value_452, tmp_globals_arg_value_452, tmp_locals_arg_value_452, tmp_fromlist_value_452, tmp_level_value_452);
        if (tmp_import_name_from_696 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 924;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_696)) {
            tmp_assign_source_825 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_696,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1608],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_825 = IMPORT_NAME(tmp_import_name_from_696, mod_consts[1608]);
        }

        Py_DECREF(tmp_import_name_from_696);
        if (tmp_assign_source_825 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 924;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1608], tmp_assign_source_825);
    }
    {
        PyObject *tmp_assign_source_826;
        PyObject *tmp_import_name_from_697;
        PyObject *tmp_name_value_453;
        PyObject *tmp_globals_arg_value_453;
        PyObject *tmp_locals_arg_value_453;
        PyObject *tmp_fromlist_value_453;
        PyObject *tmp_level_value_453;
        tmp_name_value_453 = mod_consts[1609];
        tmp_globals_arg_value_453 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_453 = Py_None;
        tmp_fromlist_value_453 = mod_consts[1610];
        tmp_level_value_453 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 925;
        tmp_import_name_from_697 = IMPORT_MODULE5(tmp_name_value_453, tmp_globals_arg_value_453, tmp_locals_arg_value_453, tmp_fromlist_value_453, tmp_level_value_453);
        if (tmp_import_name_from_697 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 925;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_697)) {
            tmp_assign_source_826 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_697,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1611],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_826 = IMPORT_NAME(tmp_import_name_from_697, mod_consts[1611]);
        }

        Py_DECREF(tmp_import_name_from_697);
        if (tmp_assign_source_826 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 925;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1611], tmp_assign_source_826);
    }
    {
        PyObject *tmp_assign_source_827;
        PyObject *tmp_import_name_from_698;
        PyObject *tmp_name_value_454;
        PyObject *tmp_globals_arg_value_454;
        PyObject *tmp_locals_arg_value_454;
        PyObject *tmp_fromlist_value_454;
        PyObject *tmp_level_value_454;
        tmp_name_value_454 = mod_consts[1612];
        tmp_globals_arg_value_454 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_454 = Py_None;
        tmp_fromlist_value_454 = mod_consts[1613];
        tmp_level_value_454 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 926;
        tmp_import_name_from_698 = IMPORT_MODULE5(tmp_name_value_454, tmp_globals_arg_value_454, tmp_locals_arg_value_454, tmp_fromlist_value_454, tmp_level_value_454);
        if (tmp_import_name_from_698 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 926;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_698)) {
            tmp_assign_source_827 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_698,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1614],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_827 = IMPORT_NAME(tmp_import_name_from_698, mod_consts[1614]);
        }

        Py_DECREF(tmp_import_name_from_698);
        if (tmp_assign_source_827 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 926;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1614], tmp_assign_source_827);
    }
    {
        PyObject *tmp_assign_source_828;
        PyObject *tmp_import_name_from_699;
        PyObject *tmp_name_value_455;
        PyObject *tmp_globals_arg_value_455;
        PyObject *tmp_locals_arg_value_455;
        PyObject *tmp_fromlist_value_455;
        PyObject *tmp_level_value_455;
        tmp_name_value_455 = mod_consts[1615];
        tmp_globals_arg_value_455 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_455 = Py_None;
        tmp_fromlist_value_455 = mod_consts[1616];
        tmp_level_value_455 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 927;
        tmp_import_name_from_699 = IMPORT_MODULE5(tmp_name_value_455, tmp_globals_arg_value_455, tmp_locals_arg_value_455, tmp_fromlist_value_455, tmp_level_value_455);
        if (tmp_import_name_from_699 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 927;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_699)) {
            tmp_assign_source_828 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_699,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1617],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_828 = IMPORT_NAME(tmp_import_name_from_699, mod_consts[1617]);
        }

        Py_DECREF(tmp_import_name_from_699);
        if (tmp_assign_source_828 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 927;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1617], tmp_assign_source_828);
    }
    {
        PyObject *tmp_assign_source_829;
        PyObject *tmp_name_value_456;
        PyObject *tmp_globals_arg_value_456;
        PyObject *tmp_locals_arg_value_456;
        PyObject *tmp_fromlist_value_456;
        PyObject *tmp_level_value_456;
        tmp_name_value_456 = mod_consts[1618];
        tmp_globals_arg_value_456 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_456 = Py_None;
        tmp_fromlist_value_456 = mod_consts[1619];
        tmp_level_value_456 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 928;
        tmp_assign_source_829 = IMPORT_MODULE5(tmp_name_value_456, tmp_globals_arg_value_456, tmp_locals_arg_value_456, tmp_fromlist_value_456, tmp_level_value_456);
        if (tmp_assign_source_829 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 928;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_126__module == NULL);
        tmp_import_from_126__module = tmp_assign_source_829;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_830;
        PyObject *tmp_import_name_from_700;
        CHECK_OBJECT(tmp_import_from_126__module);
        tmp_import_name_from_700 = tmp_import_from_126__module;
        if (PyModule_Check(tmp_import_name_from_700)) {
            tmp_assign_source_830 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_700,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1620],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_830 = IMPORT_NAME(tmp_import_name_from_700, mod_consts[1620]);
        }

        if (tmp_assign_source_830 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 928;

            goto try_except_handler_126;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1620], tmp_assign_source_830);
    }
    {
        PyObject *tmp_assign_source_831;
        PyObject *tmp_import_name_from_701;
        CHECK_OBJECT(tmp_import_from_126__module);
        tmp_import_name_from_701 = tmp_import_from_126__module;
        if (PyModule_Check(tmp_import_name_from_701)) {
            tmp_assign_source_831 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_701,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1621],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_831 = IMPORT_NAME(tmp_import_name_from_701, mod_consts[1621]);
        }

        if (tmp_assign_source_831 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 928;

            goto try_except_handler_126;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1621], tmp_assign_source_831);
    }
    goto try_end_126;
    // Exception handler code:
    try_except_handler_126:;
    exception_keeper_type_126 = exception_type;
    exception_keeper_value_126 = exception_value;
    exception_keeper_tb_126 = exception_tb;
    exception_keeper_lineno_126 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_126__module);
    Py_DECREF(tmp_import_from_126__module);
    tmp_import_from_126__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_126;
    exception_value = exception_keeper_value_126;
    exception_tb = exception_keeper_tb_126;
    exception_lineno = exception_keeper_lineno_126;

    goto frame_exception_exit_1;
    // End of try:
    try_end_126:;
    CHECK_OBJECT(tmp_import_from_126__module);
    Py_DECREF(tmp_import_from_126__module);
    tmp_import_from_126__module = NULL;
    {
        PyObject *tmp_assign_source_832;
        PyObject *tmp_import_name_from_702;
        PyObject *tmp_name_value_457;
        PyObject *tmp_globals_arg_value_457;
        PyObject *tmp_locals_arg_value_457;
        PyObject *tmp_fromlist_value_457;
        PyObject *tmp_level_value_457;
        tmp_name_value_457 = mod_consts[1622];
        tmp_globals_arg_value_457 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_457 = Py_None;
        tmp_fromlist_value_457 = mod_consts[1623];
        tmp_level_value_457 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 932;
        tmp_import_name_from_702 = IMPORT_MODULE5(tmp_name_value_457, tmp_globals_arg_value_457, tmp_locals_arg_value_457, tmp_fromlist_value_457, tmp_level_value_457);
        if (tmp_import_name_from_702 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 932;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_702)) {
            tmp_assign_source_832 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_702,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1624],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_832 = IMPORT_NAME(tmp_import_name_from_702, mod_consts[1624]);
        }

        Py_DECREF(tmp_import_name_from_702);
        if (tmp_assign_source_832 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 932;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1624], tmp_assign_source_832);
    }
    {
        PyObject *tmp_assign_source_833;
        PyObject *tmp_import_name_from_703;
        PyObject *tmp_name_value_458;
        PyObject *tmp_globals_arg_value_458;
        PyObject *tmp_locals_arg_value_458;
        PyObject *tmp_fromlist_value_458;
        PyObject *tmp_level_value_458;
        tmp_name_value_458 = mod_consts[1625];
        tmp_globals_arg_value_458 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_458 = Py_None;
        tmp_fromlist_value_458 = mod_consts[1626];
        tmp_level_value_458 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 933;
        tmp_import_name_from_703 = IMPORT_MODULE5(tmp_name_value_458, tmp_globals_arg_value_458, tmp_locals_arg_value_458, tmp_fromlist_value_458, tmp_level_value_458);
        if (tmp_import_name_from_703 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 933;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_703)) {
            tmp_assign_source_833 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_703,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1627],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_833 = IMPORT_NAME(tmp_import_name_from_703, mod_consts[1627]);
        }

        Py_DECREF(tmp_import_name_from_703);
        if (tmp_assign_source_833 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 933;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1627], tmp_assign_source_833);
    }
    {
        PyObject *tmp_assign_source_834;
        PyObject *tmp_name_value_459;
        PyObject *tmp_globals_arg_value_459;
        PyObject *tmp_locals_arg_value_459;
        PyObject *tmp_fromlist_value_459;
        PyObject *tmp_level_value_459;
        tmp_name_value_459 = mod_consts[1628];
        tmp_globals_arg_value_459 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_459 = Py_None;
        tmp_fromlist_value_459 = mod_consts[1629];
        tmp_level_value_459 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 934;
        tmp_assign_source_834 = IMPORT_MODULE5(tmp_name_value_459, tmp_globals_arg_value_459, tmp_locals_arg_value_459, tmp_fromlist_value_459, tmp_level_value_459);
        if (tmp_assign_source_834 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 934;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_127__module == NULL);
        tmp_import_from_127__module = tmp_assign_source_834;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_835;
        PyObject *tmp_import_name_from_704;
        CHECK_OBJECT(tmp_import_from_127__module);
        tmp_import_name_from_704 = tmp_import_from_127__module;
        if (PyModule_Check(tmp_import_name_from_704)) {
            tmp_assign_source_835 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_704,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1630],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_835 = IMPORT_NAME(tmp_import_name_from_704, mod_consts[1630]);
        }

        if (tmp_assign_source_835 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 934;

            goto try_except_handler_127;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1630], tmp_assign_source_835);
    }
    {
        PyObject *tmp_assign_source_836;
        PyObject *tmp_import_name_from_705;
        CHECK_OBJECT(tmp_import_from_127__module);
        tmp_import_name_from_705 = tmp_import_from_127__module;
        if (PyModule_Check(tmp_import_name_from_705)) {
            tmp_assign_source_836 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_705,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1631],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_836 = IMPORT_NAME(tmp_import_name_from_705, mod_consts[1631]);
        }

        if (tmp_assign_source_836 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 934;

            goto try_except_handler_127;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1631], tmp_assign_source_836);
    }
    goto try_end_127;
    // Exception handler code:
    try_except_handler_127:;
    exception_keeper_type_127 = exception_type;
    exception_keeper_value_127 = exception_value;
    exception_keeper_tb_127 = exception_tb;
    exception_keeper_lineno_127 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_127__module);
    Py_DECREF(tmp_import_from_127__module);
    tmp_import_from_127__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_127;
    exception_value = exception_keeper_value_127;
    exception_tb = exception_keeper_tb_127;
    exception_lineno = exception_keeper_lineno_127;

    goto frame_exception_exit_1;
    // End of try:
    try_end_127:;
    CHECK_OBJECT(tmp_import_from_127__module);
    Py_DECREF(tmp_import_from_127__module);
    tmp_import_from_127__module = NULL;
    {
        PyObject *tmp_assign_source_837;
        PyObject *tmp_import_name_from_706;
        PyObject *tmp_name_value_460;
        PyObject *tmp_globals_arg_value_460;
        PyObject *tmp_locals_arg_value_460;
        PyObject *tmp_fromlist_value_460;
        PyObject *tmp_level_value_460;
        tmp_name_value_460 = mod_consts[1632];
        tmp_globals_arg_value_460 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_460 = Py_None;
        tmp_fromlist_value_460 = mod_consts[1633];
        tmp_level_value_460 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 938;
        tmp_import_name_from_706 = IMPORT_MODULE5(tmp_name_value_460, tmp_globals_arg_value_460, tmp_locals_arg_value_460, tmp_fromlist_value_460, tmp_level_value_460);
        if (tmp_import_name_from_706 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 938;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_706)) {
            tmp_assign_source_837 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_706,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1634],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_837 = IMPORT_NAME(tmp_import_name_from_706, mod_consts[1634]);
        }

        Py_DECREF(tmp_import_name_from_706);
        if (tmp_assign_source_837 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 938;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1634], tmp_assign_source_837);
    }
    {
        PyObject *tmp_assign_source_838;
        PyObject *tmp_import_name_from_707;
        PyObject *tmp_name_value_461;
        PyObject *tmp_globals_arg_value_461;
        PyObject *tmp_locals_arg_value_461;
        PyObject *tmp_fromlist_value_461;
        PyObject *tmp_level_value_461;
        tmp_name_value_461 = mod_consts[1635];
        tmp_globals_arg_value_461 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_461 = Py_None;
        tmp_fromlist_value_461 = mod_consts[1636];
        tmp_level_value_461 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 939;
        tmp_import_name_from_707 = IMPORT_MODULE5(tmp_name_value_461, tmp_globals_arg_value_461, tmp_locals_arg_value_461, tmp_fromlist_value_461, tmp_level_value_461);
        if (tmp_import_name_from_707 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 939;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_707)) {
            tmp_assign_source_838 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_707,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1637],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_838 = IMPORT_NAME(tmp_import_name_from_707, mod_consts[1637]);
        }

        Py_DECREF(tmp_import_name_from_707);
        if (tmp_assign_source_838 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 939;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1637], tmp_assign_source_838);
    }
    {
        PyObject *tmp_assign_source_839;
        PyObject *tmp_import_name_from_708;
        PyObject *tmp_name_value_462;
        PyObject *tmp_globals_arg_value_462;
        PyObject *tmp_locals_arg_value_462;
        PyObject *tmp_fromlist_value_462;
        PyObject *tmp_level_value_462;
        tmp_name_value_462 = mod_consts[1638];
        tmp_globals_arg_value_462 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_462 = Py_None;
        tmp_fromlist_value_462 = mod_consts[1639];
        tmp_level_value_462 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 940;
        tmp_import_name_from_708 = IMPORT_MODULE5(tmp_name_value_462, tmp_globals_arg_value_462, tmp_locals_arg_value_462, tmp_fromlist_value_462, tmp_level_value_462);
        if (tmp_import_name_from_708 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 940;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_708)) {
            tmp_assign_source_839 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_708,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1640],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_839 = IMPORT_NAME(tmp_import_name_from_708, mod_consts[1640]);
        }

        Py_DECREF(tmp_import_name_from_708);
        if (tmp_assign_source_839 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 940;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1640], tmp_assign_source_839);
    }
    {
        PyObject *tmp_assign_source_840;
        PyObject *tmp_import_name_from_709;
        PyObject *tmp_name_value_463;
        PyObject *tmp_globals_arg_value_463;
        PyObject *tmp_locals_arg_value_463;
        PyObject *tmp_fromlist_value_463;
        PyObject *tmp_level_value_463;
        tmp_name_value_463 = mod_consts[1641];
        tmp_globals_arg_value_463 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_463 = Py_None;
        tmp_fromlist_value_463 = mod_consts[1642];
        tmp_level_value_463 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 941;
        tmp_import_name_from_709 = IMPORT_MODULE5(tmp_name_value_463, tmp_globals_arg_value_463, tmp_locals_arg_value_463, tmp_fromlist_value_463, tmp_level_value_463);
        if (tmp_import_name_from_709 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 941;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_709)) {
            tmp_assign_source_840 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_709,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1643],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_840 = IMPORT_NAME(tmp_import_name_from_709, mod_consts[1643]);
        }

        Py_DECREF(tmp_import_name_from_709);
        if (tmp_assign_source_840 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 941;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1643], tmp_assign_source_840);
    }
    {
        PyObject *tmp_assign_source_841;
        PyObject *tmp_import_name_from_710;
        PyObject *tmp_name_value_464;
        PyObject *tmp_globals_arg_value_464;
        PyObject *tmp_locals_arg_value_464;
        PyObject *tmp_fromlist_value_464;
        PyObject *tmp_level_value_464;
        tmp_name_value_464 = mod_consts[1644];
        tmp_globals_arg_value_464 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_464 = Py_None;
        tmp_fromlist_value_464 = mod_consts[1645];
        tmp_level_value_464 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 942;
        tmp_import_name_from_710 = IMPORT_MODULE5(tmp_name_value_464, tmp_globals_arg_value_464, tmp_locals_arg_value_464, tmp_fromlist_value_464, tmp_level_value_464);
        if (tmp_import_name_from_710 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 942;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_710)) {
            tmp_assign_source_841 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_710,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1646],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_841 = IMPORT_NAME(tmp_import_name_from_710, mod_consts[1646]);
        }

        Py_DECREF(tmp_import_name_from_710);
        if (tmp_assign_source_841 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 942;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1646], tmp_assign_source_841);
    }
    {
        PyObject *tmp_assign_source_842;
        PyObject *tmp_name_value_465;
        PyObject *tmp_globals_arg_value_465;
        PyObject *tmp_locals_arg_value_465;
        PyObject *tmp_fromlist_value_465;
        PyObject *tmp_level_value_465;
        tmp_name_value_465 = mod_consts[1647];
        tmp_globals_arg_value_465 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_465 = Py_None;
        tmp_fromlist_value_465 = mod_consts[1648];
        tmp_level_value_465 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 943;
        tmp_assign_source_842 = IMPORT_MODULE5(tmp_name_value_465, tmp_globals_arg_value_465, tmp_locals_arg_value_465, tmp_fromlist_value_465, tmp_level_value_465);
        if (tmp_assign_source_842 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 943;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_128__module == NULL);
        tmp_import_from_128__module = tmp_assign_source_842;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_843;
        PyObject *tmp_import_name_from_711;
        CHECK_OBJECT(tmp_import_from_128__module);
        tmp_import_name_from_711 = tmp_import_from_128__module;
        if (PyModule_Check(tmp_import_name_from_711)) {
            tmp_assign_source_843 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_711,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1649],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_843 = IMPORT_NAME(tmp_import_name_from_711, mod_consts[1649]);
        }

        if (tmp_assign_source_843 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 943;

            goto try_except_handler_128;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1649], tmp_assign_source_843);
    }
    {
        PyObject *tmp_assign_source_844;
        PyObject *tmp_import_name_from_712;
        CHECK_OBJECT(tmp_import_from_128__module);
        tmp_import_name_from_712 = tmp_import_from_128__module;
        if (PyModule_Check(tmp_import_name_from_712)) {
            tmp_assign_source_844 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_712,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1650],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_844 = IMPORT_NAME(tmp_import_name_from_712, mod_consts[1650]);
        }

        if (tmp_assign_source_844 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 943;

            goto try_except_handler_128;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1650], tmp_assign_source_844);
    }
    {
        PyObject *tmp_assign_source_845;
        PyObject *tmp_import_name_from_713;
        CHECK_OBJECT(tmp_import_from_128__module);
        tmp_import_name_from_713 = tmp_import_from_128__module;
        if (PyModule_Check(tmp_import_name_from_713)) {
            tmp_assign_source_845 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_713,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1651],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_845 = IMPORT_NAME(tmp_import_name_from_713, mod_consts[1651]);
        }

        if (tmp_assign_source_845 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 943;

            goto try_except_handler_128;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1651], tmp_assign_source_845);
    }
    {
        PyObject *tmp_assign_source_846;
        PyObject *tmp_import_name_from_714;
        CHECK_OBJECT(tmp_import_from_128__module);
        tmp_import_name_from_714 = tmp_import_from_128__module;
        if (PyModule_Check(tmp_import_name_from_714)) {
            tmp_assign_source_846 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_714,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1652],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_846 = IMPORT_NAME(tmp_import_name_from_714, mod_consts[1652]);
        }

        if (tmp_assign_source_846 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 943;

            goto try_except_handler_128;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1652], tmp_assign_source_846);
    }
    goto try_end_128;
    // Exception handler code:
    try_except_handler_128:;
    exception_keeper_type_128 = exception_type;
    exception_keeper_value_128 = exception_value;
    exception_keeper_tb_128 = exception_tb;
    exception_keeper_lineno_128 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_128__module);
    Py_DECREF(tmp_import_from_128__module);
    tmp_import_from_128__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_128;
    exception_value = exception_keeper_value_128;
    exception_tb = exception_keeper_tb_128;
    exception_lineno = exception_keeper_lineno_128;

    goto frame_exception_exit_1;
    // End of try:
    try_end_128:;
    CHECK_OBJECT(tmp_import_from_128__module);
    Py_DECREF(tmp_import_from_128__module);
    tmp_import_from_128__module = NULL;
    {
        PyObject *tmp_assign_source_847;
        PyObject *tmp_import_name_from_715;
        PyObject *tmp_name_value_466;
        PyObject *tmp_globals_arg_value_466;
        PyObject *tmp_locals_arg_value_466;
        PyObject *tmp_fromlist_value_466;
        PyObject *tmp_level_value_466;
        tmp_name_value_466 = mod_consts[1653];
        tmp_globals_arg_value_466 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_466 = Py_None;
        tmp_fromlist_value_466 = mod_consts[1654];
        tmp_level_value_466 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 949;
        tmp_import_name_from_715 = IMPORT_MODULE5(tmp_name_value_466, tmp_globals_arg_value_466, tmp_locals_arg_value_466, tmp_fromlist_value_466, tmp_level_value_466);
        if (tmp_import_name_from_715 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_715)) {
            tmp_assign_source_847 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_715,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1655],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_847 = IMPORT_NAME(tmp_import_name_from_715, mod_consts[1655]);
        }

        Py_DECREF(tmp_import_name_from_715);
        if (tmp_assign_source_847 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 949;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1655], tmp_assign_source_847);
    }
    {
        PyObject *tmp_assign_source_848;
        PyObject *tmp_import_name_from_716;
        PyObject *tmp_name_value_467;
        PyObject *tmp_globals_arg_value_467;
        PyObject *tmp_locals_arg_value_467;
        PyObject *tmp_fromlist_value_467;
        PyObject *tmp_level_value_467;
        tmp_name_value_467 = mod_consts[1656];
        tmp_globals_arg_value_467 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_467 = Py_None;
        tmp_fromlist_value_467 = mod_consts[1657];
        tmp_level_value_467 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 950;
        tmp_import_name_from_716 = IMPORT_MODULE5(tmp_name_value_467, tmp_globals_arg_value_467, tmp_locals_arg_value_467, tmp_fromlist_value_467, tmp_level_value_467);
        if (tmp_import_name_from_716 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 950;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_716)) {
            tmp_assign_source_848 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_716,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1658],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_848 = IMPORT_NAME(tmp_import_name_from_716, mod_consts[1658]);
        }

        Py_DECREF(tmp_import_name_from_716);
        if (tmp_assign_source_848 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 950;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1658], tmp_assign_source_848);
    }
    {
        PyObject *tmp_assign_source_849;
        PyObject *tmp_import_name_from_717;
        PyObject *tmp_name_value_468;
        PyObject *tmp_globals_arg_value_468;
        PyObject *tmp_locals_arg_value_468;
        PyObject *tmp_fromlist_value_468;
        PyObject *tmp_level_value_468;
        tmp_name_value_468 = mod_consts[1659];
        tmp_globals_arg_value_468 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_468 = Py_None;
        tmp_fromlist_value_468 = mod_consts[1660];
        tmp_level_value_468 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 951;
        tmp_import_name_from_717 = IMPORT_MODULE5(tmp_name_value_468, tmp_globals_arg_value_468, tmp_locals_arg_value_468, tmp_fromlist_value_468, tmp_level_value_468);
        if (tmp_import_name_from_717 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 951;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_717)) {
            tmp_assign_source_849 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_717,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1661],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_849 = IMPORT_NAME(tmp_import_name_from_717, mod_consts[1661]);
        }

        Py_DECREF(tmp_import_name_from_717);
        if (tmp_assign_source_849 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 951;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1661], tmp_assign_source_849);
    }
    {
        PyObject *tmp_assign_source_850;
        PyObject *tmp_name_value_469;
        PyObject *tmp_globals_arg_value_469;
        PyObject *tmp_locals_arg_value_469;
        PyObject *tmp_fromlist_value_469;
        PyObject *tmp_level_value_469;
        tmp_name_value_469 = mod_consts[1662];
        tmp_globals_arg_value_469 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_469 = Py_None;
        tmp_fromlist_value_469 = mod_consts[1663];
        tmp_level_value_469 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 952;
        tmp_assign_source_850 = IMPORT_MODULE5(tmp_name_value_469, tmp_globals_arg_value_469, tmp_locals_arg_value_469, tmp_fromlist_value_469, tmp_level_value_469);
        if (tmp_assign_source_850 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 952;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_129__module == NULL);
        tmp_import_from_129__module = tmp_assign_source_850;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_851;
        PyObject *tmp_import_name_from_718;
        CHECK_OBJECT(tmp_import_from_129__module);
        tmp_import_name_from_718 = tmp_import_from_129__module;
        if (PyModule_Check(tmp_import_name_from_718)) {
            tmp_assign_source_851 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_718,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1664],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_851 = IMPORT_NAME(tmp_import_name_from_718, mod_consts[1664]);
        }

        if (tmp_assign_source_851 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 952;

            goto try_except_handler_129;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1664], tmp_assign_source_851);
    }
    {
        PyObject *tmp_assign_source_852;
        PyObject *tmp_import_name_from_719;
        CHECK_OBJECT(tmp_import_from_129__module);
        tmp_import_name_from_719 = tmp_import_from_129__module;
        if (PyModule_Check(tmp_import_name_from_719)) {
            tmp_assign_source_852 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_719,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1665],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_852 = IMPORT_NAME(tmp_import_name_from_719, mod_consts[1665]);
        }

        if (tmp_assign_source_852 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 952;

            goto try_except_handler_129;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1665], tmp_assign_source_852);
    }
    goto try_end_129;
    // Exception handler code:
    try_except_handler_129:;
    exception_keeper_type_129 = exception_type;
    exception_keeper_value_129 = exception_value;
    exception_keeper_tb_129 = exception_tb;
    exception_keeper_lineno_129 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_129__module);
    Py_DECREF(tmp_import_from_129__module);
    tmp_import_from_129__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_129;
    exception_value = exception_keeper_value_129;
    exception_tb = exception_keeper_tb_129;
    exception_lineno = exception_keeper_lineno_129;

    goto frame_exception_exit_1;
    // End of try:
    try_end_129:;
    CHECK_OBJECT(tmp_import_from_129__module);
    Py_DECREF(tmp_import_from_129__module);
    tmp_import_from_129__module = NULL;
    {
        PyObject *tmp_assign_source_853;
        PyObject *tmp_import_name_from_720;
        PyObject *tmp_name_value_470;
        PyObject *tmp_globals_arg_value_470;
        PyObject *tmp_locals_arg_value_470;
        PyObject *tmp_fromlist_value_470;
        PyObject *tmp_level_value_470;
        tmp_name_value_470 = mod_consts[1666];
        tmp_globals_arg_value_470 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_470 = Py_None;
        tmp_fromlist_value_470 = mod_consts[1667];
        tmp_level_value_470 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 956;
        tmp_import_name_from_720 = IMPORT_MODULE5(tmp_name_value_470, tmp_globals_arg_value_470, tmp_locals_arg_value_470, tmp_fromlist_value_470, tmp_level_value_470);
        if (tmp_import_name_from_720 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 956;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_720)) {
            tmp_assign_source_853 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_720,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1668],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_853 = IMPORT_NAME(tmp_import_name_from_720, mod_consts[1668]);
        }

        Py_DECREF(tmp_import_name_from_720);
        if (tmp_assign_source_853 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 956;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1668], tmp_assign_source_853);
    }
    {
        PyObject *tmp_assign_source_854;
        PyObject *tmp_import_name_from_721;
        PyObject *tmp_name_value_471;
        PyObject *tmp_globals_arg_value_471;
        PyObject *tmp_locals_arg_value_471;
        PyObject *tmp_fromlist_value_471;
        PyObject *tmp_level_value_471;
        tmp_name_value_471 = mod_consts[1669];
        tmp_globals_arg_value_471 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_471 = Py_None;
        tmp_fromlist_value_471 = mod_consts[1670];
        tmp_level_value_471 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 957;
        tmp_import_name_from_721 = IMPORT_MODULE5(tmp_name_value_471, tmp_globals_arg_value_471, tmp_locals_arg_value_471, tmp_fromlist_value_471, tmp_level_value_471);
        if (tmp_import_name_from_721 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 957;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_721)) {
            tmp_assign_source_854 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_721,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1671],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_854 = IMPORT_NAME(tmp_import_name_from_721, mod_consts[1671]);
        }

        Py_DECREF(tmp_import_name_from_721);
        if (tmp_assign_source_854 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 957;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1671], tmp_assign_source_854);
    }
    {
        PyObject *tmp_assign_source_855;
        PyObject *tmp_import_name_from_722;
        PyObject *tmp_name_value_472;
        PyObject *tmp_globals_arg_value_472;
        PyObject *tmp_locals_arg_value_472;
        PyObject *tmp_fromlist_value_472;
        PyObject *tmp_level_value_472;
        tmp_name_value_472 = mod_consts[1672];
        tmp_globals_arg_value_472 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_472 = Py_None;
        tmp_fromlist_value_472 = mod_consts[1673];
        tmp_level_value_472 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 958;
        tmp_import_name_from_722 = IMPORT_MODULE5(tmp_name_value_472, tmp_globals_arg_value_472, tmp_locals_arg_value_472, tmp_fromlist_value_472, tmp_level_value_472);
        if (tmp_import_name_from_722 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 958;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_722)) {
            tmp_assign_source_855 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_722,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1674],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_855 = IMPORT_NAME(tmp_import_name_from_722, mod_consts[1674]);
        }

        Py_DECREF(tmp_import_name_from_722);
        if (tmp_assign_source_855 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 958;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1674], tmp_assign_source_855);
    }
    {
        PyObject *tmp_assign_source_856;
        PyObject *tmp_import_name_from_723;
        PyObject *tmp_name_value_473;
        PyObject *tmp_globals_arg_value_473;
        PyObject *tmp_locals_arg_value_473;
        PyObject *tmp_fromlist_value_473;
        PyObject *tmp_level_value_473;
        tmp_name_value_473 = mod_consts[1675];
        tmp_globals_arg_value_473 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_473 = Py_None;
        tmp_fromlist_value_473 = mod_consts[1676];
        tmp_level_value_473 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 959;
        tmp_import_name_from_723 = IMPORT_MODULE5(tmp_name_value_473, tmp_globals_arg_value_473, tmp_locals_arg_value_473, tmp_fromlist_value_473, tmp_level_value_473);
        if (tmp_import_name_from_723 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 959;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_723)) {
            tmp_assign_source_856 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_723,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1677],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_856 = IMPORT_NAME(tmp_import_name_from_723, mod_consts[1677]);
        }

        Py_DECREF(tmp_import_name_from_723);
        if (tmp_assign_source_856 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 959;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1677], tmp_assign_source_856);
    }
    {
        PyObject *tmp_assign_source_857;
        PyObject *tmp_name_value_474;
        PyObject *tmp_globals_arg_value_474;
        PyObject *tmp_locals_arg_value_474;
        PyObject *tmp_fromlist_value_474;
        PyObject *tmp_level_value_474;
        tmp_name_value_474 = mod_consts[1678];
        tmp_globals_arg_value_474 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_474 = Py_None;
        tmp_fromlist_value_474 = mod_consts[1679];
        tmp_level_value_474 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 960;
        tmp_assign_source_857 = IMPORT_MODULE5(tmp_name_value_474, tmp_globals_arg_value_474, tmp_locals_arg_value_474, tmp_fromlist_value_474, tmp_level_value_474);
        if (tmp_assign_source_857 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 960;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_130__module == NULL);
        tmp_import_from_130__module = tmp_assign_source_857;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_858;
        PyObject *tmp_import_name_from_724;
        CHECK_OBJECT(tmp_import_from_130__module);
        tmp_import_name_from_724 = tmp_import_from_130__module;
        if (PyModule_Check(tmp_import_name_from_724)) {
            tmp_assign_source_858 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_724,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1680],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_858 = IMPORT_NAME(tmp_import_name_from_724, mod_consts[1680]);
        }

        if (tmp_assign_source_858 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 960;

            goto try_except_handler_130;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1680], tmp_assign_source_858);
    }
    {
        PyObject *tmp_assign_source_859;
        PyObject *tmp_import_name_from_725;
        CHECK_OBJECT(tmp_import_from_130__module);
        tmp_import_name_from_725 = tmp_import_from_130__module;
        if (PyModule_Check(tmp_import_name_from_725)) {
            tmp_assign_source_859 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_725,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1681],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_859 = IMPORT_NAME(tmp_import_name_from_725, mod_consts[1681]);
        }

        if (tmp_assign_source_859 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 960;

            goto try_except_handler_130;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1681], tmp_assign_source_859);
    }
    {
        PyObject *tmp_assign_source_860;
        PyObject *tmp_import_name_from_726;
        CHECK_OBJECT(tmp_import_from_130__module);
        tmp_import_name_from_726 = tmp_import_from_130__module;
        if (PyModule_Check(tmp_import_name_from_726)) {
            tmp_assign_source_860 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_726,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1682],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_860 = IMPORT_NAME(tmp_import_name_from_726, mod_consts[1682]);
        }

        if (tmp_assign_source_860 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 960;

            goto try_except_handler_130;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1682], tmp_assign_source_860);
    }
    {
        PyObject *tmp_assign_source_861;
        PyObject *tmp_import_name_from_727;
        CHECK_OBJECT(tmp_import_from_130__module);
        tmp_import_name_from_727 = tmp_import_from_130__module;
        if (PyModule_Check(tmp_import_name_from_727)) {
            tmp_assign_source_861 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_727,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1683],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_861 = IMPORT_NAME(tmp_import_name_from_727, mod_consts[1683]);
        }

        if (tmp_assign_source_861 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 960;

            goto try_except_handler_130;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1683], tmp_assign_source_861);
    }
    {
        PyObject *tmp_assign_source_862;
        PyObject *tmp_import_name_from_728;
        CHECK_OBJECT(tmp_import_from_130__module);
        tmp_import_name_from_728 = tmp_import_from_130__module;
        if (PyModule_Check(tmp_import_name_from_728)) {
            tmp_assign_source_862 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_728,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1684],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_862 = IMPORT_NAME(tmp_import_name_from_728, mod_consts[1684]);
        }

        if (tmp_assign_source_862 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 960;

            goto try_except_handler_130;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1684], tmp_assign_source_862);
    }
    goto try_end_130;
    // Exception handler code:
    try_except_handler_130:;
    exception_keeper_type_130 = exception_type;
    exception_keeper_value_130 = exception_value;
    exception_keeper_tb_130 = exception_tb;
    exception_keeper_lineno_130 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_130__module);
    Py_DECREF(tmp_import_from_130__module);
    tmp_import_from_130__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_130;
    exception_value = exception_keeper_value_130;
    exception_tb = exception_keeper_tb_130;
    exception_lineno = exception_keeper_lineno_130;

    goto frame_exception_exit_1;
    // End of try:
    try_end_130:;
    CHECK_OBJECT(tmp_import_from_130__module);
    Py_DECREF(tmp_import_from_130__module);
    tmp_import_from_130__module = NULL;
    {
        PyObject *tmp_assign_source_863;
        PyObject *tmp_name_value_475;
        PyObject *tmp_globals_arg_value_475;
        PyObject *tmp_locals_arg_value_475;
        PyObject *tmp_fromlist_value_475;
        PyObject *tmp_level_value_475;
        tmp_name_value_475 = mod_consts[1685];
        tmp_globals_arg_value_475 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_475 = Py_None;
        tmp_fromlist_value_475 = mod_consts[1686];
        tmp_level_value_475 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 967;
        tmp_assign_source_863 = IMPORT_MODULE5(tmp_name_value_475, tmp_globals_arg_value_475, tmp_locals_arg_value_475, tmp_fromlist_value_475, tmp_level_value_475);
        if (tmp_assign_source_863 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 967;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_131__module == NULL);
        tmp_import_from_131__module = tmp_assign_source_863;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_864;
        PyObject *tmp_import_name_from_729;
        CHECK_OBJECT(tmp_import_from_131__module);
        tmp_import_name_from_729 = tmp_import_from_131__module;
        if (PyModule_Check(tmp_import_name_from_729)) {
            tmp_assign_source_864 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_729,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1687],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_864 = IMPORT_NAME(tmp_import_name_from_729, mod_consts[1687]);
        }

        if (tmp_assign_source_864 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 967;

            goto try_except_handler_131;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1687], tmp_assign_source_864);
    }
    {
        PyObject *tmp_assign_source_865;
        PyObject *tmp_import_name_from_730;
        CHECK_OBJECT(tmp_import_from_131__module);
        tmp_import_name_from_730 = tmp_import_from_131__module;
        if (PyModule_Check(tmp_import_name_from_730)) {
            tmp_assign_source_865 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_730,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1688],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_865 = IMPORT_NAME(tmp_import_name_from_730, mod_consts[1688]);
        }

        if (tmp_assign_source_865 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 967;

            goto try_except_handler_131;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1688], tmp_assign_source_865);
    }
    goto try_end_131;
    // Exception handler code:
    try_except_handler_131:;
    exception_keeper_type_131 = exception_type;
    exception_keeper_value_131 = exception_value;
    exception_keeper_tb_131 = exception_tb;
    exception_keeper_lineno_131 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_131__module);
    Py_DECREF(tmp_import_from_131__module);
    tmp_import_from_131__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_131;
    exception_value = exception_keeper_value_131;
    exception_tb = exception_keeper_tb_131;
    exception_lineno = exception_keeper_lineno_131;

    goto frame_exception_exit_1;
    // End of try:
    try_end_131:;
    CHECK_OBJECT(tmp_import_from_131__module);
    Py_DECREF(tmp_import_from_131__module);
    tmp_import_from_131__module = NULL;
    {
        PyObject *tmp_assign_source_866;
        PyObject *tmp_name_value_476;
        PyObject *tmp_globals_arg_value_476;
        PyObject *tmp_locals_arg_value_476;
        PyObject *tmp_fromlist_value_476;
        PyObject *tmp_level_value_476;
        tmp_name_value_476 = mod_consts[1689];
        tmp_globals_arg_value_476 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_476 = Py_None;
        tmp_fromlist_value_476 = mod_consts[1690];
        tmp_level_value_476 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 971;
        tmp_assign_source_866 = IMPORT_MODULE5(tmp_name_value_476, tmp_globals_arg_value_476, tmp_locals_arg_value_476, tmp_fromlist_value_476, tmp_level_value_476);
        if (tmp_assign_source_866 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 971;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_132__module == NULL);
        tmp_import_from_132__module = tmp_assign_source_866;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_867;
        PyObject *tmp_import_name_from_731;
        CHECK_OBJECT(tmp_import_from_132__module);
        tmp_import_name_from_731 = tmp_import_from_132__module;
        if (PyModule_Check(tmp_import_name_from_731)) {
            tmp_assign_source_867 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_731,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1691],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_867 = IMPORT_NAME(tmp_import_name_from_731, mod_consts[1691]);
        }

        if (tmp_assign_source_867 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 971;

            goto try_except_handler_132;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1691], tmp_assign_source_867);
    }
    {
        PyObject *tmp_assign_source_868;
        PyObject *tmp_import_name_from_732;
        CHECK_OBJECT(tmp_import_from_132__module);
        tmp_import_name_from_732 = tmp_import_from_132__module;
        if (PyModule_Check(tmp_import_name_from_732)) {
            tmp_assign_source_868 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_732,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1692],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_868 = IMPORT_NAME(tmp_import_name_from_732, mod_consts[1692]);
        }

        if (tmp_assign_source_868 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 971;

            goto try_except_handler_132;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1692], tmp_assign_source_868);
    }
    goto try_end_132;
    // Exception handler code:
    try_except_handler_132:;
    exception_keeper_type_132 = exception_type;
    exception_keeper_value_132 = exception_value;
    exception_keeper_tb_132 = exception_tb;
    exception_keeper_lineno_132 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_132__module);
    Py_DECREF(tmp_import_from_132__module);
    tmp_import_from_132__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_132;
    exception_value = exception_keeper_value_132;
    exception_tb = exception_keeper_tb_132;
    exception_lineno = exception_keeper_lineno_132;

    goto frame_exception_exit_1;
    // End of try:
    try_end_132:;
    CHECK_OBJECT(tmp_import_from_132__module);
    Py_DECREF(tmp_import_from_132__module);
    tmp_import_from_132__module = NULL;
    {
        PyObject *tmp_assign_source_869;
        PyObject *tmp_import_name_from_733;
        PyObject *tmp_name_value_477;
        PyObject *tmp_globals_arg_value_477;
        PyObject *tmp_locals_arg_value_477;
        PyObject *tmp_fromlist_value_477;
        PyObject *tmp_level_value_477;
        tmp_name_value_477 = mod_consts[1693];
        tmp_globals_arg_value_477 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_477 = Py_None;
        tmp_fromlist_value_477 = mod_consts[1694];
        tmp_level_value_477 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 975;
        tmp_import_name_from_733 = IMPORT_MODULE5(tmp_name_value_477, tmp_globals_arg_value_477, tmp_locals_arg_value_477, tmp_fromlist_value_477, tmp_level_value_477);
        if (tmp_import_name_from_733 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 975;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_733)) {
            tmp_assign_source_869 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_733,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1695],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_869 = IMPORT_NAME(tmp_import_name_from_733, mod_consts[1695]);
        }

        Py_DECREF(tmp_import_name_from_733);
        if (tmp_assign_source_869 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 975;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1695], tmp_assign_source_869);
    }
    {
        PyObject *tmp_assign_source_870;
        PyObject *tmp_import_name_from_734;
        PyObject *tmp_name_value_478;
        PyObject *tmp_globals_arg_value_478;
        PyObject *tmp_locals_arg_value_478;
        PyObject *tmp_fromlist_value_478;
        PyObject *tmp_level_value_478;
        tmp_name_value_478 = mod_consts[1696];
        tmp_globals_arg_value_478 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_478 = Py_None;
        tmp_fromlist_value_478 = mod_consts[1697];
        tmp_level_value_478 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 976;
        tmp_import_name_from_734 = IMPORT_MODULE5(tmp_name_value_478, tmp_globals_arg_value_478, tmp_locals_arg_value_478, tmp_fromlist_value_478, tmp_level_value_478);
        if (tmp_import_name_from_734 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 976;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_734)) {
            tmp_assign_source_870 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_734,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1698],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_870 = IMPORT_NAME(tmp_import_name_from_734, mod_consts[1698]);
        }

        Py_DECREF(tmp_import_name_from_734);
        if (tmp_assign_source_870 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 976;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1698], tmp_assign_source_870);
    }
    {
        PyObject *tmp_assign_source_871;
        PyObject *tmp_import_name_from_735;
        PyObject *tmp_name_value_479;
        PyObject *tmp_globals_arg_value_479;
        PyObject *tmp_locals_arg_value_479;
        PyObject *tmp_fromlist_value_479;
        PyObject *tmp_level_value_479;
        tmp_name_value_479 = mod_consts[1699];
        tmp_globals_arg_value_479 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_479 = Py_None;
        tmp_fromlist_value_479 = mod_consts[1700];
        tmp_level_value_479 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 977;
        tmp_import_name_from_735 = IMPORT_MODULE5(tmp_name_value_479, tmp_globals_arg_value_479, tmp_locals_arg_value_479, tmp_fromlist_value_479, tmp_level_value_479);
        if (tmp_import_name_from_735 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 977;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_735)) {
            tmp_assign_source_871 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_735,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1701],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_871 = IMPORT_NAME(tmp_import_name_from_735, mod_consts[1701]);
        }

        Py_DECREF(tmp_import_name_from_735);
        if (tmp_assign_source_871 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 977;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1701], tmp_assign_source_871);
    }
    {
        PyObject *tmp_assign_source_872;
        PyObject *tmp_import_name_from_736;
        PyObject *tmp_name_value_480;
        PyObject *tmp_globals_arg_value_480;
        PyObject *tmp_locals_arg_value_480;
        PyObject *tmp_fromlist_value_480;
        PyObject *tmp_level_value_480;
        tmp_name_value_480 = mod_consts[1702];
        tmp_globals_arg_value_480 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_480 = Py_None;
        tmp_fromlist_value_480 = mod_consts[1703];
        tmp_level_value_480 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 978;
        tmp_import_name_from_736 = IMPORT_MODULE5(tmp_name_value_480, tmp_globals_arg_value_480, tmp_locals_arg_value_480, tmp_fromlist_value_480, tmp_level_value_480);
        if (tmp_import_name_from_736 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 978;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_736)) {
            tmp_assign_source_872 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_736,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1704],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_872 = IMPORT_NAME(tmp_import_name_from_736, mod_consts[1704]);
        }

        Py_DECREF(tmp_import_name_from_736);
        if (tmp_assign_source_872 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 978;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1704], tmp_assign_source_872);
    }
    {
        PyObject *tmp_assign_source_873;
        PyObject *tmp_name_value_481;
        PyObject *tmp_globals_arg_value_481;
        PyObject *tmp_locals_arg_value_481;
        PyObject *tmp_fromlist_value_481;
        PyObject *tmp_level_value_481;
        tmp_name_value_481 = mod_consts[1705];
        tmp_globals_arg_value_481 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_481 = Py_None;
        tmp_fromlist_value_481 = mod_consts[1706];
        tmp_level_value_481 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 979;
        tmp_assign_source_873 = IMPORT_MODULE5(tmp_name_value_481, tmp_globals_arg_value_481, tmp_locals_arg_value_481, tmp_fromlist_value_481, tmp_level_value_481);
        if (tmp_assign_source_873 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 979;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_133__module == NULL);
        tmp_import_from_133__module = tmp_assign_source_873;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_874;
        PyObject *tmp_import_name_from_737;
        CHECK_OBJECT(tmp_import_from_133__module);
        tmp_import_name_from_737 = tmp_import_from_133__module;
        if (PyModule_Check(tmp_import_name_from_737)) {
            tmp_assign_source_874 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_737,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1707],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_874 = IMPORT_NAME(tmp_import_name_from_737, mod_consts[1707]);
        }

        if (tmp_assign_source_874 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 979;

            goto try_except_handler_133;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1707], tmp_assign_source_874);
    }
    {
        PyObject *tmp_assign_source_875;
        PyObject *tmp_import_name_from_738;
        CHECK_OBJECT(tmp_import_from_133__module);
        tmp_import_name_from_738 = tmp_import_from_133__module;
        if (PyModule_Check(tmp_import_name_from_738)) {
            tmp_assign_source_875 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_738,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1708],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_875 = IMPORT_NAME(tmp_import_name_from_738, mod_consts[1708]);
        }

        if (tmp_assign_source_875 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 979;

            goto try_except_handler_133;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1708], tmp_assign_source_875);
    }
    {
        PyObject *tmp_assign_source_876;
        PyObject *tmp_import_name_from_739;
        CHECK_OBJECT(tmp_import_from_133__module);
        tmp_import_name_from_739 = tmp_import_from_133__module;
        if (PyModule_Check(tmp_import_name_from_739)) {
            tmp_assign_source_876 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_739,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1709],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_876 = IMPORT_NAME(tmp_import_name_from_739, mod_consts[1709]);
        }

        if (tmp_assign_source_876 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 979;

            goto try_except_handler_133;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1709], tmp_assign_source_876);
    }
    {
        PyObject *tmp_assign_source_877;
        PyObject *tmp_import_name_from_740;
        CHECK_OBJECT(tmp_import_from_133__module);
        tmp_import_name_from_740 = tmp_import_from_133__module;
        if (PyModule_Check(tmp_import_name_from_740)) {
            tmp_assign_source_877 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_740,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1710],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_877 = IMPORT_NAME(tmp_import_name_from_740, mod_consts[1710]);
        }

        if (tmp_assign_source_877 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 979;

            goto try_except_handler_133;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1710], tmp_assign_source_877);
    }
    goto try_end_133;
    // Exception handler code:
    try_except_handler_133:;
    exception_keeper_type_133 = exception_type;
    exception_keeper_value_133 = exception_value;
    exception_keeper_tb_133 = exception_tb;
    exception_keeper_lineno_133 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_133__module);
    Py_DECREF(tmp_import_from_133__module);
    tmp_import_from_133__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_133;
    exception_value = exception_keeper_value_133;
    exception_tb = exception_keeper_tb_133;
    exception_lineno = exception_keeper_lineno_133;

    goto frame_exception_exit_1;
    // End of try:
    try_end_133:;
    CHECK_OBJECT(tmp_import_from_133__module);
    Py_DECREF(tmp_import_from_133__module);
    tmp_import_from_133__module = NULL;
    {
        PyObject *tmp_assign_source_878;
        PyObject *tmp_name_value_482;
        PyObject *tmp_globals_arg_value_482;
        PyObject *tmp_locals_arg_value_482;
        PyObject *tmp_fromlist_value_482;
        PyObject *tmp_level_value_482;
        tmp_name_value_482 = mod_consts[1711];
        tmp_globals_arg_value_482 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_482 = Py_None;
        tmp_fromlist_value_482 = mod_consts[1712];
        tmp_level_value_482 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 985;
        tmp_assign_source_878 = IMPORT_MODULE5(tmp_name_value_482, tmp_globals_arg_value_482, tmp_locals_arg_value_482, tmp_fromlist_value_482, tmp_level_value_482);
        if (tmp_assign_source_878 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 985;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_134__module == NULL);
        tmp_import_from_134__module = tmp_assign_source_878;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_879;
        PyObject *tmp_import_name_from_741;
        CHECK_OBJECT(tmp_import_from_134__module);
        tmp_import_name_from_741 = tmp_import_from_134__module;
        if (PyModule_Check(tmp_import_name_from_741)) {
            tmp_assign_source_879 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_741,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1713],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_879 = IMPORT_NAME(tmp_import_name_from_741, mod_consts[1713]);
        }

        if (tmp_assign_source_879 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 985;

            goto try_except_handler_134;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1713], tmp_assign_source_879);
    }
    {
        PyObject *tmp_assign_source_880;
        PyObject *tmp_import_name_from_742;
        CHECK_OBJECT(tmp_import_from_134__module);
        tmp_import_name_from_742 = tmp_import_from_134__module;
        if (PyModule_Check(tmp_import_name_from_742)) {
            tmp_assign_source_880 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_742,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1714],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_880 = IMPORT_NAME(tmp_import_name_from_742, mod_consts[1714]);
        }

        if (tmp_assign_source_880 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 985;

            goto try_except_handler_134;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1714], tmp_assign_source_880);
    }
    goto try_end_134;
    // Exception handler code:
    try_except_handler_134:;
    exception_keeper_type_134 = exception_type;
    exception_keeper_value_134 = exception_value;
    exception_keeper_tb_134 = exception_tb;
    exception_keeper_lineno_134 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_134__module);
    Py_DECREF(tmp_import_from_134__module);
    tmp_import_from_134__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_134;
    exception_value = exception_keeper_value_134;
    exception_tb = exception_keeper_tb_134;
    exception_lineno = exception_keeper_lineno_134;

    goto frame_exception_exit_1;
    // End of try:
    try_end_134:;
    CHECK_OBJECT(tmp_import_from_134__module);
    Py_DECREF(tmp_import_from_134__module);
    tmp_import_from_134__module = NULL;
    {
        PyObject *tmp_assign_source_881;
        PyObject *tmp_import_name_from_743;
        PyObject *tmp_name_value_483;
        PyObject *tmp_globals_arg_value_483;
        PyObject *tmp_locals_arg_value_483;
        PyObject *tmp_fromlist_value_483;
        PyObject *tmp_level_value_483;
        tmp_name_value_483 = mod_consts[1715];
        tmp_globals_arg_value_483 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_483 = Py_None;
        tmp_fromlist_value_483 = mod_consts[1716];
        tmp_level_value_483 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 989;
        tmp_import_name_from_743 = IMPORT_MODULE5(tmp_name_value_483, tmp_globals_arg_value_483, tmp_locals_arg_value_483, tmp_fromlist_value_483, tmp_level_value_483);
        if (tmp_import_name_from_743 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 989;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_743)) {
            tmp_assign_source_881 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_743,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1717],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_881 = IMPORT_NAME(tmp_import_name_from_743, mod_consts[1717]);
        }

        Py_DECREF(tmp_import_name_from_743);
        if (tmp_assign_source_881 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 989;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1717], tmp_assign_source_881);
    }
    {
        PyObject *tmp_assign_source_882;
        PyObject *tmp_import_name_from_744;
        PyObject *tmp_name_value_484;
        PyObject *tmp_globals_arg_value_484;
        PyObject *tmp_locals_arg_value_484;
        PyObject *tmp_fromlist_value_484;
        PyObject *tmp_level_value_484;
        tmp_name_value_484 = mod_consts[1718];
        tmp_globals_arg_value_484 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_484 = Py_None;
        tmp_fromlist_value_484 = mod_consts[1719];
        tmp_level_value_484 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 990;
        tmp_import_name_from_744 = IMPORT_MODULE5(tmp_name_value_484, tmp_globals_arg_value_484, tmp_locals_arg_value_484, tmp_fromlist_value_484, tmp_level_value_484);
        if (tmp_import_name_from_744 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 990;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_744)) {
            tmp_assign_source_882 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_744,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1720],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_882 = IMPORT_NAME(tmp_import_name_from_744, mod_consts[1720]);
        }

        Py_DECREF(tmp_import_name_from_744);
        if (tmp_assign_source_882 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 990;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1720], tmp_assign_source_882);
    }
    {
        PyObject *tmp_assign_source_883;
        PyObject *tmp_name_value_485;
        PyObject *tmp_globals_arg_value_485;
        PyObject *tmp_locals_arg_value_485;
        PyObject *tmp_fromlist_value_485;
        PyObject *tmp_level_value_485;
        tmp_name_value_485 = mod_consts[1721];
        tmp_globals_arg_value_485 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_485 = Py_None;
        tmp_fromlist_value_485 = mod_consts[1722];
        tmp_level_value_485 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 991;
        tmp_assign_source_883 = IMPORT_MODULE5(tmp_name_value_485, tmp_globals_arg_value_485, tmp_locals_arg_value_485, tmp_fromlist_value_485, tmp_level_value_485);
        if (tmp_assign_source_883 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 991;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_135__module == NULL);
        tmp_import_from_135__module = tmp_assign_source_883;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_884;
        PyObject *tmp_import_name_from_745;
        CHECK_OBJECT(tmp_import_from_135__module);
        tmp_import_name_from_745 = tmp_import_from_135__module;
        if (PyModule_Check(tmp_import_name_from_745)) {
            tmp_assign_source_884 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_745,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1723],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_884 = IMPORT_NAME(tmp_import_name_from_745, mod_consts[1723]);
        }

        if (tmp_assign_source_884 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 991;

            goto try_except_handler_135;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1723], tmp_assign_source_884);
    }
    {
        PyObject *tmp_assign_source_885;
        PyObject *tmp_import_name_from_746;
        CHECK_OBJECT(tmp_import_from_135__module);
        tmp_import_name_from_746 = tmp_import_from_135__module;
        if (PyModule_Check(tmp_import_name_from_746)) {
            tmp_assign_source_885 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_746,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1724],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_885 = IMPORT_NAME(tmp_import_name_from_746, mod_consts[1724]);
        }

        if (tmp_assign_source_885 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 991;

            goto try_except_handler_135;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1724], tmp_assign_source_885);
    }
    {
        PyObject *tmp_assign_source_886;
        PyObject *tmp_import_name_from_747;
        CHECK_OBJECT(tmp_import_from_135__module);
        tmp_import_name_from_747 = tmp_import_from_135__module;
        if (PyModule_Check(tmp_import_name_from_747)) {
            tmp_assign_source_886 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_747,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1725],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_886 = IMPORT_NAME(tmp_import_name_from_747, mod_consts[1725]);
        }

        if (tmp_assign_source_886 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 991;

            goto try_except_handler_135;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1725], tmp_assign_source_886);
    }
    {
        PyObject *tmp_assign_source_887;
        PyObject *tmp_import_name_from_748;
        CHECK_OBJECT(tmp_import_from_135__module);
        tmp_import_name_from_748 = tmp_import_from_135__module;
        if (PyModule_Check(tmp_import_name_from_748)) {
            tmp_assign_source_887 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_748,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1726],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_887 = IMPORT_NAME(tmp_import_name_from_748, mod_consts[1726]);
        }

        if (tmp_assign_source_887 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 991;

            goto try_except_handler_135;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1726], tmp_assign_source_887);
    }
    goto try_end_135;
    // Exception handler code:
    try_except_handler_135:;
    exception_keeper_type_135 = exception_type;
    exception_keeper_value_135 = exception_value;
    exception_keeper_tb_135 = exception_tb;
    exception_keeper_lineno_135 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_135__module);
    Py_DECREF(tmp_import_from_135__module);
    tmp_import_from_135__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_135;
    exception_value = exception_keeper_value_135;
    exception_tb = exception_keeper_tb_135;
    exception_lineno = exception_keeper_lineno_135;

    goto frame_exception_exit_1;
    // End of try:
    try_end_135:;
    CHECK_OBJECT(tmp_import_from_135__module);
    Py_DECREF(tmp_import_from_135__module);
    tmp_import_from_135__module = NULL;
    {
        PyObject *tmp_assign_source_888;
        PyObject *tmp_name_value_486;
        PyObject *tmp_globals_arg_value_486;
        PyObject *tmp_locals_arg_value_486;
        PyObject *tmp_fromlist_value_486;
        PyObject *tmp_level_value_486;
        tmp_name_value_486 = mod_consts[1727];
        tmp_globals_arg_value_486 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_486 = Py_None;
        tmp_fromlist_value_486 = mod_consts[1728];
        tmp_level_value_486 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 997;
        tmp_assign_source_888 = IMPORT_MODULE5(tmp_name_value_486, tmp_globals_arg_value_486, tmp_locals_arg_value_486, tmp_fromlist_value_486, tmp_level_value_486);
        if (tmp_assign_source_888 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 997;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_136__module == NULL);
        tmp_import_from_136__module = tmp_assign_source_888;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_889;
        PyObject *tmp_import_name_from_749;
        CHECK_OBJECT(tmp_import_from_136__module);
        tmp_import_name_from_749 = tmp_import_from_136__module;
        if (PyModule_Check(tmp_import_name_from_749)) {
            tmp_assign_source_889 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_749,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1729],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_889 = IMPORT_NAME(tmp_import_name_from_749, mod_consts[1729]);
        }

        if (tmp_assign_source_889 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 997;

            goto try_except_handler_136;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1729], tmp_assign_source_889);
    }
    {
        PyObject *tmp_assign_source_890;
        PyObject *tmp_import_name_from_750;
        CHECK_OBJECT(tmp_import_from_136__module);
        tmp_import_name_from_750 = tmp_import_from_136__module;
        if (PyModule_Check(tmp_import_name_from_750)) {
            tmp_assign_source_890 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_750,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1730],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_890 = IMPORT_NAME(tmp_import_name_from_750, mod_consts[1730]);
        }

        if (tmp_assign_source_890 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 997;

            goto try_except_handler_136;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1730], tmp_assign_source_890);
    }
    goto try_end_136;
    // Exception handler code:
    try_except_handler_136:;
    exception_keeper_type_136 = exception_type;
    exception_keeper_value_136 = exception_value;
    exception_keeper_tb_136 = exception_tb;
    exception_keeper_lineno_136 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_136__module);
    Py_DECREF(tmp_import_from_136__module);
    tmp_import_from_136__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_136;
    exception_value = exception_keeper_value_136;
    exception_tb = exception_keeper_tb_136;
    exception_lineno = exception_keeper_lineno_136;

    goto frame_exception_exit_1;
    // End of try:
    try_end_136:;
    CHECK_OBJECT(tmp_import_from_136__module);
    Py_DECREF(tmp_import_from_136__module);
    tmp_import_from_136__module = NULL;
    {
        PyObject *tmp_assign_source_891;
        PyObject *tmp_import_name_from_751;
        PyObject *tmp_name_value_487;
        PyObject *tmp_globals_arg_value_487;
        PyObject *tmp_locals_arg_value_487;
        PyObject *tmp_fromlist_value_487;
        PyObject *tmp_level_value_487;
        tmp_name_value_487 = mod_consts[1731];
        tmp_globals_arg_value_487 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_487 = Py_None;
        tmp_fromlist_value_487 = mod_consts[1732];
        tmp_level_value_487 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1001;
        tmp_import_name_from_751 = IMPORT_MODULE5(tmp_name_value_487, tmp_globals_arg_value_487, tmp_locals_arg_value_487, tmp_fromlist_value_487, tmp_level_value_487);
        if (tmp_import_name_from_751 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1001;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_751)) {
            tmp_assign_source_891 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_751,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1733],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_891 = IMPORT_NAME(tmp_import_name_from_751, mod_consts[1733]);
        }

        Py_DECREF(tmp_import_name_from_751);
        if (tmp_assign_source_891 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1001;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1733], tmp_assign_source_891);
    }
    {
        PyObject *tmp_assign_source_892;
        PyObject *tmp_import_name_from_752;
        PyObject *tmp_name_value_488;
        PyObject *tmp_globals_arg_value_488;
        PyObject *tmp_locals_arg_value_488;
        PyObject *tmp_fromlist_value_488;
        PyObject *tmp_level_value_488;
        tmp_name_value_488 = mod_consts[1734];
        tmp_globals_arg_value_488 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_488 = Py_None;
        tmp_fromlist_value_488 = mod_consts[1735];
        tmp_level_value_488 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1002;
        tmp_import_name_from_752 = IMPORT_MODULE5(tmp_name_value_488, tmp_globals_arg_value_488, tmp_locals_arg_value_488, tmp_fromlist_value_488, tmp_level_value_488);
        if (tmp_import_name_from_752 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1002;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_752)) {
            tmp_assign_source_892 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_752,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1736],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_892 = IMPORT_NAME(tmp_import_name_from_752, mod_consts[1736]);
        }

        Py_DECREF(tmp_import_name_from_752);
        if (tmp_assign_source_892 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1002;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1736], tmp_assign_source_892);
    }
    {
        PyObject *tmp_assign_source_893;
        PyObject *tmp_name_value_489;
        PyObject *tmp_globals_arg_value_489;
        PyObject *tmp_locals_arg_value_489;
        PyObject *tmp_fromlist_value_489;
        PyObject *tmp_level_value_489;
        tmp_name_value_489 = mod_consts[1737];
        tmp_globals_arg_value_489 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_489 = Py_None;
        tmp_fromlist_value_489 = mod_consts[1738];
        tmp_level_value_489 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1003;
        tmp_assign_source_893 = IMPORT_MODULE5(tmp_name_value_489, tmp_globals_arg_value_489, tmp_locals_arg_value_489, tmp_fromlist_value_489, tmp_level_value_489);
        if (tmp_assign_source_893 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1003;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_137__module == NULL);
        tmp_import_from_137__module = tmp_assign_source_893;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_894;
        PyObject *tmp_import_name_from_753;
        CHECK_OBJECT(tmp_import_from_137__module);
        tmp_import_name_from_753 = tmp_import_from_137__module;
        if (PyModule_Check(tmp_import_name_from_753)) {
            tmp_assign_source_894 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_753,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1739],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_894 = IMPORT_NAME(tmp_import_name_from_753, mod_consts[1739]);
        }

        if (tmp_assign_source_894 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1003;

            goto try_except_handler_137;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1739], tmp_assign_source_894);
    }
    {
        PyObject *tmp_assign_source_895;
        PyObject *tmp_import_name_from_754;
        CHECK_OBJECT(tmp_import_from_137__module);
        tmp_import_name_from_754 = tmp_import_from_137__module;
        if (PyModule_Check(tmp_import_name_from_754)) {
            tmp_assign_source_895 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_754,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1740],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_895 = IMPORT_NAME(tmp_import_name_from_754, mod_consts[1740]);
        }

        if (tmp_assign_source_895 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1003;

            goto try_except_handler_137;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1740], tmp_assign_source_895);
    }
    goto try_end_137;
    // Exception handler code:
    try_except_handler_137:;
    exception_keeper_type_137 = exception_type;
    exception_keeper_value_137 = exception_value;
    exception_keeper_tb_137 = exception_tb;
    exception_keeper_lineno_137 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_137__module);
    Py_DECREF(tmp_import_from_137__module);
    tmp_import_from_137__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_137;
    exception_value = exception_keeper_value_137;
    exception_tb = exception_keeper_tb_137;
    exception_lineno = exception_keeper_lineno_137;

    goto frame_exception_exit_1;
    // End of try:
    try_end_137:;
    CHECK_OBJECT(tmp_import_from_137__module);
    Py_DECREF(tmp_import_from_137__module);
    tmp_import_from_137__module = NULL;
    {
        PyObject *tmp_assign_source_896;
        PyObject *tmp_import_name_from_755;
        PyObject *tmp_name_value_490;
        PyObject *tmp_globals_arg_value_490;
        PyObject *tmp_locals_arg_value_490;
        PyObject *tmp_fromlist_value_490;
        PyObject *tmp_level_value_490;
        tmp_name_value_490 = mod_consts[1741];
        tmp_globals_arg_value_490 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_490 = Py_None;
        tmp_fromlist_value_490 = mod_consts[1742];
        tmp_level_value_490 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1007;
        tmp_import_name_from_755 = IMPORT_MODULE5(tmp_name_value_490, tmp_globals_arg_value_490, tmp_locals_arg_value_490, tmp_fromlist_value_490, tmp_level_value_490);
        if (tmp_import_name_from_755 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1007;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_755)) {
            tmp_assign_source_896 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_755,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1743],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_896 = IMPORT_NAME(tmp_import_name_from_755, mod_consts[1743]);
        }

        Py_DECREF(tmp_import_name_from_755);
        if (tmp_assign_source_896 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1007;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1743], tmp_assign_source_896);
    }
    {
        PyObject *tmp_assign_source_897;
        PyObject *tmp_import_name_from_756;
        PyObject *tmp_name_value_491;
        PyObject *tmp_globals_arg_value_491;
        PyObject *tmp_locals_arg_value_491;
        PyObject *tmp_fromlist_value_491;
        PyObject *tmp_level_value_491;
        tmp_name_value_491 = mod_consts[1744];
        tmp_globals_arg_value_491 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_491 = Py_None;
        tmp_fromlist_value_491 = mod_consts[1745];
        tmp_level_value_491 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1008;
        tmp_import_name_from_756 = IMPORT_MODULE5(tmp_name_value_491, tmp_globals_arg_value_491, tmp_locals_arg_value_491, tmp_fromlist_value_491, tmp_level_value_491);
        if (tmp_import_name_from_756 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1008;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_756)) {
            tmp_assign_source_897 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_756,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1746],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_897 = IMPORT_NAME(tmp_import_name_from_756, mod_consts[1746]);
        }

        Py_DECREF(tmp_import_name_from_756);
        if (tmp_assign_source_897 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1008;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1746], tmp_assign_source_897);
    }
    {
        PyObject *tmp_assign_source_898;
        PyObject *tmp_import_name_from_757;
        PyObject *tmp_name_value_492;
        PyObject *tmp_globals_arg_value_492;
        PyObject *tmp_locals_arg_value_492;
        PyObject *tmp_fromlist_value_492;
        PyObject *tmp_level_value_492;
        tmp_name_value_492 = mod_consts[1747];
        tmp_globals_arg_value_492 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_492 = Py_None;
        tmp_fromlist_value_492 = mod_consts[1748];
        tmp_level_value_492 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1009;
        tmp_import_name_from_757 = IMPORT_MODULE5(tmp_name_value_492, tmp_globals_arg_value_492, tmp_locals_arg_value_492, tmp_fromlist_value_492, tmp_level_value_492);
        if (tmp_import_name_from_757 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1009;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_757)) {
            tmp_assign_source_898 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_757,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1749],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_898 = IMPORT_NAME(tmp_import_name_from_757, mod_consts[1749]);
        }

        Py_DECREF(tmp_import_name_from_757);
        if (tmp_assign_source_898 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1009;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1749], tmp_assign_source_898);
    }
    {
        PyObject *tmp_assign_source_899;
        PyObject *tmp_import_name_from_758;
        PyObject *tmp_name_value_493;
        PyObject *tmp_globals_arg_value_493;
        PyObject *tmp_locals_arg_value_493;
        PyObject *tmp_fromlist_value_493;
        PyObject *tmp_level_value_493;
        tmp_name_value_493 = mod_consts[1750];
        tmp_globals_arg_value_493 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_493 = Py_None;
        tmp_fromlist_value_493 = mod_consts[1751];
        tmp_level_value_493 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1010;
        tmp_import_name_from_758 = IMPORT_MODULE5(tmp_name_value_493, tmp_globals_arg_value_493, tmp_locals_arg_value_493, tmp_fromlist_value_493, tmp_level_value_493);
        if (tmp_import_name_from_758 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1010;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_758)) {
            tmp_assign_source_899 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_758,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1752],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_899 = IMPORT_NAME(tmp_import_name_from_758, mod_consts[1752]);
        }

        Py_DECREF(tmp_import_name_from_758);
        if (tmp_assign_source_899 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1010;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1752], tmp_assign_source_899);
    }
    {
        PyObject *tmp_assign_source_900;
        PyObject *tmp_import_name_from_759;
        PyObject *tmp_name_value_494;
        PyObject *tmp_globals_arg_value_494;
        PyObject *tmp_locals_arg_value_494;
        PyObject *tmp_fromlist_value_494;
        PyObject *tmp_level_value_494;
        tmp_name_value_494 = mod_consts[1753];
        tmp_globals_arg_value_494 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_494 = Py_None;
        tmp_fromlist_value_494 = mod_consts[1754];
        tmp_level_value_494 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1011;
        tmp_import_name_from_759 = IMPORT_MODULE5(tmp_name_value_494, tmp_globals_arg_value_494, tmp_locals_arg_value_494, tmp_fromlist_value_494, tmp_level_value_494);
        if (tmp_import_name_from_759 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1011;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_759)) {
            tmp_assign_source_900 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_759,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1755],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_900 = IMPORT_NAME(tmp_import_name_from_759, mod_consts[1755]);
        }

        Py_DECREF(tmp_import_name_from_759);
        if (tmp_assign_source_900 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1011;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1755], tmp_assign_source_900);
    }
    {
        PyObject *tmp_assign_source_901;
        PyObject *tmp_import_name_from_760;
        PyObject *tmp_name_value_495;
        PyObject *tmp_globals_arg_value_495;
        PyObject *tmp_locals_arg_value_495;
        PyObject *tmp_fromlist_value_495;
        PyObject *tmp_level_value_495;
        tmp_name_value_495 = mod_consts[1756];
        tmp_globals_arg_value_495 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_495 = Py_None;
        tmp_fromlist_value_495 = mod_consts[1757];
        tmp_level_value_495 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1012;
        tmp_import_name_from_760 = IMPORT_MODULE5(tmp_name_value_495, tmp_globals_arg_value_495, tmp_locals_arg_value_495, tmp_fromlist_value_495, tmp_level_value_495);
        if (tmp_import_name_from_760 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1012;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_760)) {
            tmp_assign_source_901 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_760,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1758],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_901 = IMPORT_NAME(tmp_import_name_from_760, mod_consts[1758]);
        }

        Py_DECREF(tmp_import_name_from_760);
        if (tmp_assign_source_901 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1012;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1758], tmp_assign_source_901);
    }
    {
        PyObject *tmp_assign_source_902;
        PyObject *tmp_import_name_from_761;
        PyObject *tmp_name_value_496;
        PyObject *tmp_globals_arg_value_496;
        PyObject *tmp_locals_arg_value_496;
        PyObject *tmp_fromlist_value_496;
        PyObject *tmp_level_value_496;
        tmp_name_value_496 = mod_consts[1759];
        tmp_globals_arg_value_496 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_496 = Py_None;
        tmp_fromlist_value_496 = mod_consts[1760];
        tmp_level_value_496 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1013;
        tmp_import_name_from_761 = IMPORT_MODULE5(tmp_name_value_496, tmp_globals_arg_value_496, tmp_locals_arg_value_496, tmp_fromlist_value_496, tmp_level_value_496);
        if (tmp_import_name_from_761 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1013;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_761)) {
            tmp_assign_source_902 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_761,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1761],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_902 = IMPORT_NAME(tmp_import_name_from_761, mod_consts[1761]);
        }

        Py_DECREF(tmp_import_name_from_761);
        if (tmp_assign_source_902 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1013;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1761], tmp_assign_source_902);
    }
    {
        PyObject *tmp_assign_source_903;
        PyObject *tmp_import_name_from_762;
        PyObject *tmp_name_value_497;
        PyObject *tmp_globals_arg_value_497;
        PyObject *tmp_locals_arg_value_497;
        PyObject *tmp_fromlist_value_497;
        PyObject *tmp_level_value_497;
        tmp_name_value_497 = mod_consts[1762];
        tmp_globals_arg_value_497 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_497 = Py_None;
        tmp_fromlist_value_497 = mod_consts[1763];
        tmp_level_value_497 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1014;
        tmp_import_name_from_762 = IMPORT_MODULE5(tmp_name_value_497, tmp_globals_arg_value_497, tmp_locals_arg_value_497, tmp_fromlist_value_497, tmp_level_value_497);
        if (tmp_import_name_from_762 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1014;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_762)) {
            tmp_assign_source_903 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_762,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1764],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_903 = IMPORT_NAME(tmp_import_name_from_762, mod_consts[1764]);
        }

        Py_DECREF(tmp_import_name_from_762);
        if (tmp_assign_source_903 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1014;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1764], tmp_assign_source_903);
    }
    {
        PyObject *tmp_assign_source_904;
        PyObject *tmp_import_name_from_763;
        PyObject *tmp_name_value_498;
        PyObject *tmp_globals_arg_value_498;
        PyObject *tmp_locals_arg_value_498;
        PyObject *tmp_fromlist_value_498;
        PyObject *tmp_level_value_498;
        tmp_name_value_498 = mod_consts[1765];
        tmp_globals_arg_value_498 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_498 = Py_None;
        tmp_fromlist_value_498 = mod_consts[1766];
        tmp_level_value_498 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1015;
        tmp_import_name_from_763 = IMPORT_MODULE5(tmp_name_value_498, tmp_globals_arg_value_498, tmp_locals_arg_value_498, tmp_fromlist_value_498, tmp_level_value_498);
        if (tmp_import_name_from_763 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1015;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_763)) {
            tmp_assign_source_904 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_763,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1767],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_904 = IMPORT_NAME(tmp_import_name_from_763, mod_consts[1767]);
        }

        Py_DECREF(tmp_import_name_from_763);
        if (tmp_assign_source_904 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1015;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1767], tmp_assign_source_904);
    }
    {
        PyObject *tmp_assign_source_905;
        PyObject *tmp_import_name_from_764;
        PyObject *tmp_name_value_499;
        PyObject *tmp_globals_arg_value_499;
        PyObject *tmp_locals_arg_value_499;
        PyObject *tmp_fromlist_value_499;
        PyObject *tmp_level_value_499;
        tmp_name_value_499 = mod_consts[1768];
        tmp_globals_arg_value_499 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_499 = Py_None;
        tmp_fromlist_value_499 = mod_consts[1769];
        tmp_level_value_499 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1016;
        tmp_import_name_from_764 = IMPORT_MODULE5(tmp_name_value_499, tmp_globals_arg_value_499, tmp_locals_arg_value_499, tmp_fromlist_value_499, tmp_level_value_499);
        if (tmp_import_name_from_764 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1016;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_764)) {
            tmp_assign_source_905 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_764,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1770],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_905 = IMPORT_NAME(tmp_import_name_from_764, mod_consts[1770]);
        }

        Py_DECREF(tmp_import_name_from_764);
        if (tmp_assign_source_905 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1016;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1770], tmp_assign_source_905);
    }
    {
        PyObject *tmp_assign_source_906;
        PyObject *tmp_import_name_from_765;
        PyObject *tmp_name_value_500;
        PyObject *tmp_globals_arg_value_500;
        PyObject *tmp_locals_arg_value_500;
        PyObject *tmp_fromlist_value_500;
        PyObject *tmp_level_value_500;
        tmp_name_value_500 = mod_consts[1771];
        tmp_globals_arg_value_500 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_500 = Py_None;
        tmp_fromlist_value_500 = mod_consts[1772];
        tmp_level_value_500 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1017;
        tmp_import_name_from_765 = IMPORT_MODULE5(tmp_name_value_500, tmp_globals_arg_value_500, tmp_locals_arg_value_500, tmp_fromlist_value_500, tmp_level_value_500);
        if (tmp_import_name_from_765 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1017;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_765)) {
            tmp_assign_source_906 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_765,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1773],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_906 = IMPORT_NAME(tmp_import_name_from_765, mod_consts[1773]);
        }

        Py_DECREF(tmp_import_name_from_765);
        if (tmp_assign_source_906 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1017;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1773], tmp_assign_source_906);
    }
    {
        PyObject *tmp_assign_source_907;
        PyObject *tmp_import_name_from_766;
        PyObject *tmp_name_value_501;
        PyObject *tmp_globals_arg_value_501;
        PyObject *tmp_locals_arg_value_501;
        PyObject *tmp_fromlist_value_501;
        PyObject *tmp_level_value_501;
        tmp_name_value_501 = mod_consts[1774];
        tmp_globals_arg_value_501 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_501 = Py_None;
        tmp_fromlist_value_501 = mod_consts[1775];
        tmp_level_value_501 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1018;
        tmp_import_name_from_766 = IMPORT_MODULE5(tmp_name_value_501, tmp_globals_arg_value_501, tmp_locals_arg_value_501, tmp_fromlist_value_501, tmp_level_value_501);
        if (tmp_import_name_from_766 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1018;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_766)) {
            tmp_assign_source_907 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_766,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1776],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_907 = IMPORT_NAME(tmp_import_name_from_766, mod_consts[1776]);
        }

        Py_DECREF(tmp_import_name_from_766);
        if (tmp_assign_source_907 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1018;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1776], tmp_assign_source_907);
    }
    {
        PyObject *tmp_assign_source_908;
        PyObject *tmp_name_value_502;
        PyObject *tmp_globals_arg_value_502;
        PyObject *tmp_locals_arg_value_502;
        PyObject *tmp_fromlist_value_502;
        PyObject *tmp_level_value_502;
        tmp_name_value_502 = mod_consts[1777];
        tmp_globals_arg_value_502 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_502 = Py_None;
        tmp_fromlist_value_502 = mod_consts[1778];
        tmp_level_value_502 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1019;
        tmp_assign_source_908 = IMPORT_MODULE5(tmp_name_value_502, tmp_globals_arg_value_502, tmp_locals_arg_value_502, tmp_fromlist_value_502, tmp_level_value_502);
        if (tmp_assign_source_908 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1019;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_138__module == NULL);
        tmp_import_from_138__module = tmp_assign_source_908;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_909;
        PyObject *tmp_import_name_from_767;
        CHECK_OBJECT(tmp_import_from_138__module);
        tmp_import_name_from_767 = tmp_import_from_138__module;
        if (PyModule_Check(tmp_import_name_from_767)) {
            tmp_assign_source_909 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_767,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1779],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_909 = IMPORT_NAME(tmp_import_name_from_767, mod_consts[1779]);
        }

        if (tmp_assign_source_909 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1019;

            goto try_except_handler_138;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1779], tmp_assign_source_909);
    }
    {
        PyObject *tmp_assign_source_910;
        PyObject *tmp_import_name_from_768;
        CHECK_OBJECT(tmp_import_from_138__module);
        tmp_import_name_from_768 = tmp_import_from_138__module;
        if (PyModule_Check(tmp_import_name_from_768)) {
            tmp_assign_source_910 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_768,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1780],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_910 = IMPORT_NAME(tmp_import_name_from_768, mod_consts[1780]);
        }

        if (tmp_assign_source_910 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1019;

            goto try_except_handler_138;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1780], tmp_assign_source_910);
    }
    goto try_end_138;
    // Exception handler code:
    try_except_handler_138:;
    exception_keeper_type_138 = exception_type;
    exception_keeper_value_138 = exception_value;
    exception_keeper_tb_138 = exception_tb;
    exception_keeper_lineno_138 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_138__module);
    Py_DECREF(tmp_import_from_138__module);
    tmp_import_from_138__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_138;
    exception_value = exception_keeper_value_138;
    exception_tb = exception_keeper_tb_138;
    exception_lineno = exception_keeper_lineno_138;

    goto frame_exception_exit_1;
    // End of try:
    try_end_138:;
    CHECK_OBJECT(tmp_import_from_138__module);
    Py_DECREF(tmp_import_from_138__module);
    tmp_import_from_138__module = NULL;
    {
        PyObject *tmp_assign_source_911;
        PyObject *tmp_import_name_from_769;
        PyObject *tmp_name_value_503;
        PyObject *tmp_globals_arg_value_503;
        PyObject *tmp_locals_arg_value_503;
        PyObject *tmp_fromlist_value_503;
        PyObject *tmp_level_value_503;
        tmp_name_value_503 = mod_consts[1781];
        tmp_globals_arg_value_503 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_503 = Py_None;
        tmp_fromlist_value_503 = mod_consts[1782];
        tmp_level_value_503 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1020;
        tmp_import_name_from_769 = IMPORT_MODULE5(tmp_name_value_503, tmp_globals_arg_value_503, tmp_locals_arg_value_503, tmp_fromlist_value_503, tmp_level_value_503);
        if (tmp_import_name_from_769 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1020;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_769)) {
            tmp_assign_source_911 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_769,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1783],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_911 = IMPORT_NAME(tmp_import_name_from_769, mod_consts[1783]);
        }

        Py_DECREF(tmp_import_name_from_769);
        if (tmp_assign_source_911 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1020;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1783], tmp_assign_source_911);
    }
    {
        PyObject *tmp_assign_source_912;
        PyObject *tmp_name_value_504;
        PyObject *tmp_globals_arg_value_504;
        PyObject *tmp_locals_arg_value_504;
        PyObject *tmp_fromlist_value_504;
        PyObject *tmp_level_value_504;
        tmp_name_value_504 = mod_consts[1784];
        tmp_globals_arg_value_504 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_504 = Py_None;
        tmp_fromlist_value_504 = mod_consts[1785];
        tmp_level_value_504 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1021;
        tmp_assign_source_912 = IMPORT_MODULE5(tmp_name_value_504, tmp_globals_arg_value_504, tmp_locals_arg_value_504, tmp_fromlist_value_504, tmp_level_value_504);
        if (tmp_assign_source_912 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1021;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_139__module == NULL);
        tmp_import_from_139__module = tmp_assign_source_912;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_913;
        PyObject *tmp_import_name_from_770;
        CHECK_OBJECT(tmp_import_from_139__module);
        tmp_import_name_from_770 = tmp_import_from_139__module;
        if (PyModule_Check(tmp_import_name_from_770)) {
            tmp_assign_source_913 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_770,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1786],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_913 = IMPORT_NAME(tmp_import_name_from_770, mod_consts[1786]);
        }

        if (tmp_assign_source_913 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1021;

            goto try_except_handler_139;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1786], tmp_assign_source_913);
    }
    {
        PyObject *tmp_assign_source_914;
        PyObject *tmp_import_name_from_771;
        CHECK_OBJECT(tmp_import_from_139__module);
        tmp_import_name_from_771 = tmp_import_from_139__module;
        if (PyModule_Check(tmp_import_name_from_771)) {
            tmp_assign_source_914 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_771,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1787],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_914 = IMPORT_NAME(tmp_import_name_from_771, mod_consts[1787]);
        }

        if (tmp_assign_source_914 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1021;

            goto try_except_handler_139;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1787], tmp_assign_source_914);
    }
    {
        PyObject *tmp_assign_source_915;
        PyObject *tmp_import_name_from_772;
        CHECK_OBJECT(tmp_import_from_139__module);
        tmp_import_name_from_772 = tmp_import_from_139__module;
        if (PyModule_Check(tmp_import_name_from_772)) {
            tmp_assign_source_915 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_772,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1788],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_915 = IMPORT_NAME(tmp_import_name_from_772, mod_consts[1788]);
        }

        if (tmp_assign_source_915 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1021;

            goto try_except_handler_139;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1788], tmp_assign_source_915);
    }
    goto try_end_139;
    // Exception handler code:
    try_except_handler_139:;
    exception_keeper_type_139 = exception_type;
    exception_keeper_value_139 = exception_value;
    exception_keeper_tb_139 = exception_tb;
    exception_keeper_lineno_139 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_139__module);
    Py_DECREF(tmp_import_from_139__module);
    tmp_import_from_139__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_139;
    exception_value = exception_keeper_value_139;
    exception_tb = exception_keeper_tb_139;
    exception_lineno = exception_keeper_lineno_139;

    goto frame_exception_exit_1;
    // End of try:
    try_end_139:;
    CHECK_OBJECT(tmp_import_from_139__module);
    Py_DECREF(tmp_import_from_139__module);
    tmp_import_from_139__module = NULL;
    {
        PyObject *tmp_assign_source_916;
        PyObject *tmp_import_name_from_773;
        PyObject *tmp_name_value_505;
        PyObject *tmp_globals_arg_value_505;
        PyObject *tmp_locals_arg_value_505;
        PyObject *tmp_fromlist_value_505;
        PyObject *tmp_level_value_505;
        tmp_name_value_505 = mod_consts[1789];
        tmp_globals_arg_value_505 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_505 = Py_None;
        tmp_fromlist_value_505 = mod_consts[1790];
        tmp_level_value_505 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1026;
        tmp_import_name_from_773 = IMPORT_MODULE5(tmp_name_value_505, tmp_globals_arg_value_505, tmp_locals_arg_value_505, tmp_fromlist_value_505, tmp_level_value_505);
        if (tmp_import_name_from_773 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1026;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_773)) {
            tmp_assign_source_916 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_773,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1791],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_916 = IMPORT_NAME(tmp_import_name_from_773, mod_consts[1791]);
        }

        Py_DECREF(tmp_import_name_from_773);
        if (tmp_assign_source_916 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1026;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1791], tmp_assign_source_916);
    }
    {
        PyObject *tmp_assign_source_917;
        PyObject *tmp_import_name_from_774;
        PyObject *tmp_name_value_506;
        PyObject *tmp_globals_arg_value_506;
        PyObject *tmp_locals_arg_value_506;
        PyObject *tmp_fromlist_value_506;
        PyObject *tmp_level_value_506;
        tmp_name_value_506 = mod_consts[1792];
        tmp_globals_arg_value_506 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_506 = Py_None;
        tmp_fromlist_value_506 = mod_consts[1793];
        tmp_level_value_506 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1027;
        tmp_import_name_from_774 = IMPORT_MODULE5(tmp_name_value_506, tmp_globals_arg_value_506, tmp_locals_arg_value_506, tmp_fromlist_value_506, tmp_level_value_506);
        if (tmp_import_name_from_774 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1027;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_774)) {
            tmp_assign_source_917 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_774,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1794],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_917 = IMPORT_NAME(tmp_import_name_from_774, mod_consts[1794]);
        }

        Py_DECREF(tmp_import_name_from_774);
        if (tmp_assign_source_917 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1027;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1794], tmp_assign_source_917);
    }
    {
        PyObject *tmp_assign_source_918;
        PyObject *tmp_name_value_507;
        PyObject *tmp_globals_arg_value_507;
        PyObject *tmp_locals_arg_value_507;
        PyObject *tmp_fromlist_value_507;
        PyObject *tmp_level_value_507;
        tmp_name_value_507 = mod_consts[1795];
        tmp_globals_arg_value_507 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_507 = Py_None;
        tmp_fromlist_value_507 = mod_consts[1796];
        tmp_level_value_507 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1028;
        tmp_assign_source_918 = IMPORT_MODULE5(tmp_name_value_507, tmp_globals_arg_value_507, tmp_locals_arg_value_507, tmp_fromlist_value_507, tmp_level_value_507);
        if (tmp_assign_source_918 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1028;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_140__module == NULL);
        tmp_import_from_140__module = tmp_assign_source_918;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_919;
        PyObject *tmp_import_name_from_775;
        CHECK_OBJECT(tmp_import_from_140__module);
        tmp_import_name_from_775 = tmp_import_from_140__module;
        if (PyModule_Check(tmp_import_name_from_775)) {
            tmp_assign_source_919 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_775,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1797],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_919 = IMPORT_NAME(tmp_import_name_from_775, mod_consts[1797]);
        }

        if (tmp_assign_source_919 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1028;

            goto try_except_handler_140;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1797], tmp_assign_source_919);
    }
    {
        PyObject *tmp_assign_source_920;
        PyObject *tmp_import_name_from_776;
        CHECK_OBJECT(tmp_import_from_140__module);
        tmp_import_name_from_776 = tmp_import_from_140__module;
        if (PyModule_Check(tmp_import_name_from_776)) {
            tmp_assign_source_920 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_776,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1798],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_920 = IMPORT_NAME(tmp_import_name_from_776, mod_consts[1798]);
        }

        if (tmp_assign_source_920 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1028;

            goto try_except_handler_140;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1798], tmp_assign_source_920);
    }
    {
        PyObject *tmp_assign_source_921;
        PyObject *tmp_import_name_from_777;
        CHECK_OBJECT(tmp_import_from_140__module);
        tmp_import_name_from_777 = tmp_import_from_140__module;
        if (PyModule_Check(tmp_import_name_from_777)) {
            tmp_assign_source_921 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_777,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1799],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_921 = IMPORT_NAME(tmp_import_name_from_777, mod_consts[1799]);
        }

        if (tmp_assign_source_921 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1028;

            goto try_except_handler_140;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1799], tmp_assign_source_921);
    }
    {
        PyObject *tmp_assign_source_922;
        PyObject *tmp_import_name_from_778;
        CHECK_OBJECT(tmp_import_from_140__module);
        tmp_import_name_from_778 = tmp_import_from_140__module;
        if (PyModule_Check(tmp_import_name_from_778)) {
            tmp_assign_source_922 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_778,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1798],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_922 = IMPORT_NAME(tmp_import_name_from_778, mod_consts[1798]);
        }

        if (tmp_assign_source_922 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1028;

            goto try_except_handler_140;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1798], tmp_assign_source_922);
    }
    {
        PyObject *tmp_assign_source_923;
        PyObject *tmp_import_name_from_779;
        CHECK_OBJECT(tmp_import_from_140__module);
        tmp_import_name_from_779 = tmp_import_from_140__module;
        if (PyModule_Check(tmp_import_name_from_779)) {
            tmp_assign_source_923 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_779,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1800],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_923 = IMPORT_NAME(tmp_import_name_from_779, mod_consts[1800]);
        }

        if (tmp_assign_source_923 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1028;

            goto try_except_handler_140;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1800], tmp_assign_source_923);
    }
    goto try_end_140;
    // Exception handler code:
    try_except_handler_140:;
    exception_keeper_type_140 = exception_type;
    exception_keeper_value_140 = exception_value;
    exception_keeper_tb_140 = exception_tb;
    exception_keeper_lineno_140 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_140__module);
    Py_DECREF(tmp_import_from_140__module);
    tmp_import_from_140__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_140;
    exception_value = exception_keeper_value_140;
    exception_tb = exception_keeper_tb_140;
    exception_lineno = exception_keeper_lineno_140;

    goto frame_exception_exit_1;
    // End of try:
    try_end_140:;
    CHECK_OBJECT(tmp_import_from_140__module);
    Py_DECREF(tmp_import_from_140__module);
    tmp_import_from_140__module = NULL;
    {
        PyObject *tmp_assign_source_924;
        PyObject *tmp_import_name_from_780;
        PyObject *tmp_name_value_508;
        PyObject *tmp_globals_arg_value_508;
        PyObject *tmp_locals_arg_value_508;
        PyObject *tmp_fromlist_value_508;
        PyObject *tmp_level_value_508;
        tmp_name_value_508 = mod_consts[1801];
        tmp_globals_arg_value_508 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_508 = Py_None;
        tmp_fromlist_value_508 = mod_consts[1802];
        tmp_level_value_508 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1029;
        tmp_import_name_from_780 = IMPORT_MODULE5(tmp_name_value_508, tmp_globals_arg_value_508, tmp_locals_arg_value_508, tmp_fromlist_value_508, tmp_level_value_508);
        if (tmp_import_name_from_780 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1029;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_780)) {
            tmp_assign_source_924 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_780,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1803],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_924 = IMPORT_NAME(tmp_import_name_from_780, mod_consts[1803]);
        }

        Py_DECREF(tmp_import_name_from_780);
        if (tmp_assign_source_924 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1029;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1803], tmp_assign_source_924);
    }
    {
        PyObject *tmp_assign_source_925;
        PyObject *tmp_import_name_from_781;
        PyObject *tmp_name_value_509;
        PyObject *tmp_globals_arg_value_509;
        PyObject *tmp_locals_arg_value_509;
        PyObject *tmp_fromlist_value_509;
        PyObject *tmp_level_value_509;
        tmp_name_value_509 = mod_consts[1804];
        tmp_globals_arg_value_509 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_509 = Py_None;
        tmp_fromlist_value_509 = mod_consts[1805];
        tmp_level_value_509 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1030;
        tmp_import_name_from_781 = IMPORT_MODULE5(tmp_name_value_509, tmp_globals_arg_value_509, tmp_locals_arg_value_509, tmp_fromlist_value_509, tmp_level_value_509);
        if (tmp_import_name_from_781 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1030;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_781)) {
            tmp_assign_source_925 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_781,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1806],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_925 = IMPORT_NAME(tmp_import_name_from_781, mod_consts[1806]);
        }

        Py_DECREF(tmp_import_name_from_781);
        if (tmp_assign_source_925 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1030;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1806], tmp_assign_source_925);
    }
    {
        PyObject *tmp_assign_source_926;
        PyObject *tmp_import_name_from_782;
        PyObject *tmp_name_value_510;
        PyObject *tmp_globals_arg_value_510;
        PyObject *tmp_locals_arg_value_510;
        PyObject *tmp_fromlist_value_510;
        PyObject *tmp_level_value_510;
        tmp_name_value_510 = mod_consts[1807];
        tmp_globals_arg_value_510 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_510 = Py_None;
        tmp_fromlist_value_510 = mod_consts[1808];
        tmp_level_value_510 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1031;
        tmp_import_name_from_782 = IMPORT_MODULE5(tmp_name_value_510, tmp_globals_arg_value_510, tmp_locals_arg_value_510, tmp_fromlist_value_510, tmp_level_value_510);
        if (tmp_import_name_from_782 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1031;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_782)) {
            tmp_assign_source_926 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_782,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1809],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_926 = IMPORT_NAME(tmp_import_name_from_782, mod_consts[1809]);
        }

        Py_DECREF(tmp_import_name_from_782);
        if (tmp_assign_source_926 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1031;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1809], tmp_assign_source_926);
    }
    {
        PyObject *tmp_assign_source_927;
        PyObject *tmp_import_name_from_783;
        PyObject *tmp_name_value_511;
        PyObject *tmp_globals_arg_value_511;
        PyObject *tmp_locals_arg_value_511;
        PyObject *tmp_fromlist_value_511;
        PyObject *tmp_level_value_511;
        tmp_name_value_511 = mod_consts[1810];
        tmp_globals_arg_value_511 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_511 = Py_None;
        tmp_fromlist_value_511 = mod_consts[1811];
        tmp_level_value_511 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1032;
        tmp_import_name_from_783 = IMPORT_MODULE5(tmp_name_value_511, tmp_globals_arg_value_511, tmp_locals_arg_value_511, tmp_fromlist_value_511, tmp_level_value_511);
        if (tmp_import_name_from_783 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1032;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_783)) {
            tmp_assign_source_927 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_783,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1812],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_927 = IMPORT_NAME(tmp_import_name_from_783, mod_consts[1812]);
        }

        Py_DECREF(tmp_import_name_from_783);
        if (tmp_assign_source_927 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1032;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1812], tmp_assign_source_927);
    }
    {
        PyObject *tmp_assign_source_928;
        PyObject *tmp_name_value_512;
        PyObject *tmp_globals_arg_value_512;
        PyObject *tmp_locals_arg_value_512;
        PyObject *tmp_fromlist_value_512;
        PyObject *tmp_level_value_512;
        tmp_name_value_512 = mod_consts[1813];
        tmp_globals_arg_value_512 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_512 = Py_None;
        tmp_fromlist_value_512 = mod_consts[1814];
        tmp_level_value_512 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1033;
        tmp_assign_source_928 = IMPORT_MODULE5(tmp_name_value_512, tmp_globals_arg_value_512, tmp_locals_arg_value_512, tmp_fromlist_value_512, tmp_level_value_512);
        if (tmp_assign_source_928 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1033;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_141__module == NULL);
        tmp_import_from_141__module = tmp_assign_source_928;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_929;
        PyObject *tmp_import_name_from_784;
        CHECK_OBJECT(tmp_import_from_141__module);
        tmp_import_name_from_784 = tmp_import_from_141__module;
        if (PyModule_Check(tmp_import_name_from_784)) {
            tmp_assign_source_929 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_784,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1815],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_929 = IMPORT_NAME(tmp_import_name_from_784, mod_consts[1815]);
        }

        if (tmp_assign_source_929 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1033;

            goto try_except_handler_141;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1815], tmp_assign_source_929);
    }
    {
        PyObject *tmp_assign_source_930;
        PyObject *tmp_import_name_from_785;
        CHECK_OBJECT(tmp_import_from_141__module);
        tmp_import_name_from_785 = tmp_import_from_141__module;
        if (PyModule_Check(tmp_import_name_from_785)) {
            tmp_assign_source_930 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_785,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1816],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_930 = IMPORT_NAME(tmp_import_name_from_785, mod_consts[1816]);
        }

        if (tmp_assign_source_930 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1033;

            goto try_except_handler_141;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1816], tmp_assign_source_930);
    }
    {
        PyObject *tmp_assign_source_931;
        PyObject *tmp_import_name_from_786;
        CHECK_OBJECT(tmp_import_from_141__module);
        tmp_import_name_from_786 = tmp_import_from_141__module;
        if (PyModule_Check(tmp_import_name_from_786)) {
            tmp_assign_source_931 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_786,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1817],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_931 = IMPORT_NAME(tmp_import_name_from_786, mod_consts[1817]);
        }

        if (tmp_assign_source_931 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1033;

            goto try_except_handler_141;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1817], tmp_assign_source_931);
    }
    {
        PyObject *tmp_assign_source_932;
        PyObject *tmp_import_name_from_787;
        CHECK_OBJECT(tmp_import_from_141__module);
        tmp_import_name_from_787 = tmp_import_from_141__module;
        if (PyModule_Check(tmp_import_name_from_787)) {
            tmp_assign_source_932 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_787,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1818],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_932 = IMPORT_NAME(tmp_import_name_from_787, mod_consts[1818]);
        }

        if (tmp_assign_source_932 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1033;

            goto try_except_handler_141;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1818], tmp_assign_source_932);
    }
    {
        PyObject *tmp_assign_source_933;
        PyObject *tmp_import_name_from_788;
        CHECK_OBJECT(tmp_import_from_141__module);
        tmp_import_name_from_788 = tmp_import_from_141__module;
        if (PyModule_Check(tmp_import_name_from_788)) {
            tmp_assign_source_933 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_788,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1819],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_933 = IMPORT_NAME(tmp_import_name_from_788, mod_consts[1819]);
        }

        if (tmp_assign_source_933 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1033;

            goto try_except_handler_141;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1819], tmp_assign_source_933);
    }
    {
        PyObject *tmp_assign_source_934;
        PyObject *tmp_import_name_from_789;
        CHECK_OBJECT(tmp_import_from_141__module);
        tmp_import_name_from_789 = tmp_import_from_141__module;
        if (PyModule_Check(tmp_import_name_from_789)) {
            tmp_assign_source_934 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_789,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1820],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_934 = IMPORT_NAME(tmp_import_name_from_789, mod_consts[1820]);
        }

        if (tmp_assign_source_934 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1033;

            goto try_except_handler_141;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1820], tmp_assign_source_934);
    }
    goto try_end_141;
    // Exception handler code:
    try_except_handler_141:;
    exception_keeper_type_141 = exception_type;
    exception_keeper_value_141 = exception_value;
    exception_keeper_tb_141 = exception_tb;
    exception_keeper_lineno_141 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_141__module);
    Py_DECREF(tmp_import_from_141__module);
    tmp_import_from_141__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_141;
    exception_value = exception_keeper_value_141;
    exception_tb = exception_keeper_tb_141;
    exception_lineno = exception_keeper_lineno_141;

    goto frame_exception_exit_1;
    // End of try:
    try_end_141:;
    CHECK_OBJECT(tmp_import_from_141__module);
    Py_DECREF(tmp_import_from_141__module);
    tmp_import_from_141__module = NULL;
    {
        PyObject *tmp_assign_source_935;
        PyObject *tmp_import_name_from_790;
        PyObject *tmp_name_value_513;
        PyObject *tmp_globals_arg_value_513;
        PyObject *tmp_locals_arg_value_513;
        PyObject *tmp_fromlist_value_513;
        PyObject *tmp_level_value_513;
        tmp_name_value_513 = mod_consts[1821];
        tmp_globals_arg_value_513 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_513 = Py_None;
        tmp_fromlist_value_513 = mod_consts[1822];
        tmp_level_value_513 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1041;
        tmp_import_name_from_790 = IMPORT_MODULE5(tmp_name_value_513, tmp_globals_arg_value_513, tmp_locals_arg_value_513, tmp_fromlist_value_513, tmp_level_value_513);
        if (tmp_import_name_from_790 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1041;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_790)) {
            tmp_assign_source_935 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_790,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1823],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_935 = IMPORT_NAME(tmp_import_name_from_790, mod_consts[1823]);
        }

        Py_DECREF(tmp_import_name_from_790);
        if (tmp_assign_source_935 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1041;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1823], tmp_assign_source_935);
    }
    {
        PyObject *tmp_assign_source_936;
        PyObject *tmp_import_name_from_791;
        PyObject *tmp_name_value_514;
        PyObject *tmp_globals_arg_value_514;
        PyObject *tmp_locals_arg_value_514;
        PyObject *tmp_fromlist_value_514;
        PyObject *tmp_level_value_514;
        tmp_name_value_514 = mod_consts[1824];
        tmp_globals_arg_value_514 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_514 = Py_None;
        tmp_fromlist_value_514 = mod_consts[1825];
        tmp_level_value_514 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1042;
        tmp_import_name_from_791 = IMPORT_MODULE5(tmp_name_value_514, tmp_globals_arg_value_514, tmp_locals_arg_value_514, tmp_fromlist_value_514, tmp_level_value_514);
        if (tmp_import_name_from_791 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1042;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_791)) {
            tmp_assign_source_936 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_791,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1826],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_936 = IMPORT_NAME(tmp_import_name_from_791, mod_consts[1826]);
        }

        Py_DECREF(tmp_import_name_from_791);
        if (tmp_assign_source_936 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1042;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1826], tmp_assign_source_936);
    }
    {
        PyObject *tmp_assign_source_937;
        PyObject *tmp_import_name_from_792;
        PyObject *tmp_name_value_515;
        PyObject *tmp_globals_arg_value_515;
        PyObject *tmp_locals_arg_value_515;
        PyObject *tmp_fromlist_value_515;
        PyObject *tmp_level_value_515;
        tmp_name_value_515 = mod_consts[1827];
        tmp_globals_arg_value_515 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_515 = Py_None;
        tmp_fromlist_value_515 = mod_consts[1828];
        tmp_level_value_515 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1043;
        tmp_import_name_from_792 = IMPORT_MODULE5(tmp_name_value_515, tmp_globals_arg_value_515, tmp_locals_arg_value_515, tmp_fromlist_value_515, tmp_level_value_515);
        if (tmp_import_name_from_792 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1043;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_792)) {
            tmp_assign_source_937 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_792,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1829],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_937 = IMPORT_NAME(tmp_import_name_from_792, mod_consts[1829]);
        }

        Py_DECREF(tmp_import_name_from_792);
        if (tmp_assign_source_937 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1043;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1829], tmp_assign_source_937);
    }
    {
        PyObject *tmp_assign_source_938;
        PyObject *tmp_name_value_516;
        PyObject *tmp_globals_arg_value_516;
        PyObject *tmp_locals_arg_value_516;
        PyObject *tmp_fromlist_value_516;
        PyObject *tmp_level_value_516;
        tmp_name_value_516 = mod_consts[1830];
        tmp_globals_arg_value_516 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_516 = Py_None;
        tmp_fromlist_value_516 = mod_consts[1831];
        tmp_level_value_516 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1044;
        tmp_assign_source_938 = IMPORT_MODULE5(tmp_name_value_516, tmp_globals_arg_value_516, tmp_locals_arg_value_516, tmp_fromlist_value_516, tmp_level_value_516);
        if (tmp_assign_source_938 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1044;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_142__module == NULL);
        tmp_import_from_142__module = tmp_assign_source_938;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_939;
        PyObject *tmp_import_name_from_793;
        CHECK_OBJECT(tmp_import_from_142__module);
        tmp_import_name_from_793 = tmp_import_from_142__module;
        if (PyModule_Check(tmp_import_name_from_793)) {
            tmp_assign_source_939 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_793,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1832],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_939 = IMPORT_NAME(tmp_import_name_from_793, mod_consts[1832]);
        }

        if (tmp_assign_source_939 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1044;

            goto try_except_handler_142;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1832], tmp_assign_source_939);
    }
    {
        PyObject *tmp_assign_source_940;
        PyObject *tmp_import_name_from_794;
        CHECK_OBJECT(tmp_import_from_142__module);
        tmp_import_name_from_794 = tmp_import_from_142__module;
        if (PyModule_Check(tmp_import_name_from_794)) {
            tmp_assign_source_940 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_794,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1833],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_940 = IMPORT_NAME(tmp_import_name_from_794, mod_consts[1833]);
        }

        if (tmp_assign_source_940 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1044;

            goto try_except_handler_142;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1833], tmp_assign_source_940);
    }
    {
        PyObject *tmp_assign_source_941;
        PyObject *tmp_import_name_from_795;
        CHECK_OBJECT(tmp_import_from_142__module);
        tmp_import_name_from_795 = tmp_import_from_142__module;
        if (PyModule_Check(tmp_import_name_from_795)) {
            tmp_assign_source_941 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_795,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1834],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_941 = IMPORT_NAME(tmp_import_name_from_795, mod_consts[1834]);
        }

        if (tmp_assign_source_941 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1044;

            goto try_except_handler_142;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1834], tmp_assign_source_941);
    }
    goto try_end_142;
    // Exception handler code:
    try_except_handler_142:;
    exception_keeper_type_142 = exception_type;
    exception_keeper_value_142 = exception_value;
    exception_keeper_tb_142 = exception_tb;
    exception_keeper_lineno_142 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_142__module);
    Py_DECREF(tmp_import_from_142__module);
    tmp_import_from_142__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_142;
    exception_value = exception_keeper_value_142;
    exception_tb = exception_keeper_tb_142;
    exception_lineno = exception_keeper_lineno_142;

    goto frame_exception_exit_1;
    // End of try:
    try_end_142:;
    CHECK_OBJECT(tmp_import_from_142__module);
    Py_DECREF(tmp_import_from_142__module);
    tmp_import_from_142__module = NULL;
    {
        PyObject *tmp_assign_source_942;
        PyObject *tmp_import_name_from_796;
        PyObject *tmp_name_value_517;
        PyObject *tmp_globals_arg_value_517;
        PyObject *tmp_locals_arg_value_517;
        PyObject *tmp_fromlist_value_517;
        PyObject *tmp_level_value_517;
        tmp_name_value_517 = mod_consts[1835];
        tmp_globals_arg_value_517 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_517 = Py_None;
        tmp_fromlist_value_517 = mod_consts[1836];
        tmp_level_value_517 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1049;
        tmp_import_name_from_796 = IMPORT_MODULE5(tmp_name_value_517, tmp_globals_arg_value_517, tmp_locals_arg_value_517, tmp_fromlist_value_517, tmp_level_value_517);
        if (tmp_import_name_from_796 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1049;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_796)) {
            tmp_assign_source_942 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_796,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1837],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_942 = IMPORT_NAME(tmp_import_name_from_796, mod_consts[1837]);
        }

        Py_DECREF(tmp_import_name_from_796);
        if (tmp_assign_source_942 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1049;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1837], tmp_assign_source_942);
    }
    {
        PyObject *tmp_assign_source_943;
        PyObject *tmp_import_name_from_797;
        PyObject *tmp_name_value_518;
        PyObject *tmp_globals_arg_value_518;
        PyObject *tmp_locals_arg_value_518;
        PyObject *tmp_fromlist_value_518;
        PyObject *tmp_level_value_518;
        tmp_name_value_518 = mod_consts[1838];
        tmp_globals_arg_value_518 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_518 = Py_None;
        tmp_fromlist_value_518 = mod_consts[1839];
        tmp_level_value_518 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1050;
        tmp_import_name_from_797 = IMPORT_MODULE5(tmp_name_value_518, tmp_globals_arg_value_518, tmp_locals_arg_value_518, tmp_fromlist_value_518, tmp_level_value_518);
        if (tmp_import_name_from_797 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1050;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_797)) {
            tmp_assign_source_943 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_797,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1840],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_943 = IMPORT_NAME(tmp_import_name_from_797, mod_consts[1840]);
        }

        Py_DECREF(tmp_import_name_from_797);
        if (tmp_assign_source_943 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1050;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1840], tmp_assign_source_943);
    }
    {
        PyObject *tmp_assign_source_944;
        PyObject *tmp_import_name_from_798;
        PyObject *tmp_name_value_519;
        PyObject *tmp_globals_arg_value_519;
        PyObject *tmp_locals_arg_value_519;
        PyObject *tmp_fromlist_value_519;
        PyObject *tmp_level_value_519;
        tmp_name_value_519 = mod_consts[1841];
        tmp_globals_arg_value_519 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_519 = Py_None;
        tmp_fromlist_value_519 = mod_consts[1842];
        tmp_level_value_519 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1051;
        tmp_import_name_from_798 = IMPORT_MODULE5(tmp_name_value_519, tmp_globals_arg_value_519, tmp_locals_arg_value_519, tmp_fromlist_value_519, tmp_level_value_519);
        if (tmp_import_name_from_798 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1051;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_798)) {
            tmp_assign_source_944 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_798,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1843],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_944 = IMPORT_NAME(tmp_import_name_from_798, mod_consts[1843]);
        }

        Py_DECREF(tmp_import_name_from_798);
        if (tmp_assign_source_944 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1051;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1843], tmp_assign_source_944);
    }
    {
        PyObject *tmp_assign_source_945;
        PyObject *tmp_import_name_from_799;
        PyObject *tmp_name_value_520;
        PyObject *tmp_globals_arg_value_520;
        PyObject *tmp_locals_arg_value_520;
        PyObject *tmp_fromlist_value_520;
        PyObject *tmp_level_value_520;
        tmp_name_value_520 = mod_consts[1844];
        tmp_globals_arg_value_520 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_520 = Py_None;
        tmp_fromlist_value_520 = mod_consts[1845];
        tmp_level_value_520 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1052;
        tmp_import_name_from_799 = IMPORT_MODULE5(tmp_name_value_520, tmp_globals_arg_value_520, tmp_locals_arg_value_520, tmp_fromlist_value_520, tmp_level_value_520);
        if (tmp_import_name_from_799 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1052;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_799)) {
            tmp_assign_source_945 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_799,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1846],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_945 = IMPORT_NAME(tmp_import_name_from_799, mod_consts[1846]);
        }

        Py_DECREF(tmp_import_name_from_799);
        if (tmp_assign_source_945 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1052;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1846], tmp_assign_source_945);
    }
    {
        PyObject *tmp_assign_source_946;
        PyObject *tmp_import_name_from_800;
        PyObject *tmp_name_value_521;
        PyObject *tmp_globals_arg_value_521;
        PyObject *tmp_locals_arg_value_521;
        PyObject *tmp_fromlist_value_521;
        PyObject *tmp_level_value_521;
        tmp_name_value_521 = mod_consts[1847];
        tmp_globals_arg_value_521 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_521 = Py_None;
        tmp_fromlist_value_521 = mod_consts[1848];
        tmp_level_value_521 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1053;
        tmp_import_name_from_800 = IMPORT_MODULE5(tmp_name_value_521, tmp_globals_arg_value_521, tmp_locals_arg_value_521, tmp_fromlist_value_521, tmp_level_value_521);
        if (tmp_import_name_from_800 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1053;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_800)) {
            tmp_assign_source_946 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_800,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1849],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_946 = IMPORT_NAME(tmp_import_name_from_800, mod_consts[1849]);
        }

        Py_DECREF(tmp_import_name_from_800);
        if (tmp_assign_source_946 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1053;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1849], tmp_assign_source_946);
    }
    {
        PyObject *tmp_assign_source_947;
        PyObject *tmp_import_name_from_801;
        PyObject *tmp_name_value_522;
        PyObject *tmp_globals_arg_value_522;
        PyObject *tmp_locals_arg_value_522;
        PyObject *tmp_fromlist_value_522;
        PyObject *tmp_level_value_522;
        tmp_name_value_522 = mod_consts[1850];
        tmp_globals_arg_value_522 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_522 = Py_None;
        tmp_fromlist_value_522 = mod_consts[1851];
        tmp_level_value_522 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1054;
        tmp_import_name_from_801 = IMPORT_MODULE5(tmp_name_value_522, tmp_globals_arg_value_522, tmp_locals_arg_value_522, tmp_fromlist_value_522, tmp_level_value_522);
        if (tmp_import_name_from_801 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1054;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_801)) {
            tmp_assign_source_947 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_801,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1852],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_947 = IMPORT_NAME(tmp_import_name_from_801, mod_consts[1852]);
        }

        Py_DECREF(tmp_import_name_from_801);
        if (tmp_assign_source_947 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1054;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1852], tmp_assign_source_947);
    }
    {
        PyObject *tmp_assign_source_948;
        PyObject *tmp_name_value_523;
        PyObject *tmp_globals_arg_value_523;
        PyObject *tmp_locals_arg_value_523;
        PyObject *tmp_fromlist_value_523;
        PyObject *tmp_level_value_523;
        tmp_name_value_523 = mod_consts[1853];
        tmp_globals_arg_value_523 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_523 = Py_None;
        tmp_fromlist_value_523 = mod_consts[1854];
        tmp_level_value_523 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1055;
        tmp_assign_source_948 = IMPORT_MODULE5(tmp_name_value_523, tmp_globals_arg_value_523, tmp_locals_arg_value_523, tmp_fromlist_value_523, tmp_level_value_523);
        if (tmp_assign_source_948 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1055;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_143__module == NULL);
        tmp_import_from_143__module = tmp_assign_source_948;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_949;
        PyObject *tmp_import_name_from_802;
        CHECK_OBJECT(tmp_import_from_143__module);
        tmp_import_name_from_802 = tmp_import_from_143__module;
        if (PyModule_Check(tmp_import_name_from_802)) {
            tmp_assign_source_949 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_802,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1855],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_949 = IMPORT_NAME(tmp_import_name_from_802, mod_consts[1855]);
        }

        if (tmp_assign_source_949 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1055;

            goto try_except_handler_143;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1855], tmp_assign_source_949);
    }
    {
        PyObject *tmp_assign_source_950;
        PyObject *tmp_import_name_from_803;
        CHECK_OBJECT(tmp_import_from_143__module);
        tmp_import_name_from_803 = tmp_import_from_143__module;
        if (PyModule_Check(tmp_import_name_from_803)) {
            tmp_assign_source_950 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_803,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1856],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_950 = IMPORT_NAME(tmp_import_name_from_803, mod_consts[1856]);
        }

        if (tmp_assign_source_950 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1055;

            goto try_except_handler_143;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1856], tmp_assign_source_950);
    }
    goto try_end_143;
    // Exception handler code:
    try_except_handler_143:;
    exception_keeper_type_143 = exception_type;
    exception_keeper_value_143 = exception_value;
    exception_keeper_tb_143 = exception_tb;
    exception_keeper_lineno_143 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_143__module);
    Py_DECREF(tmp_import_from_143__module);
    tmp_import_from_143__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_143;
    exception_value = exception_keeper_value_143;
    exception_tb = exception_keeper_tb_143;
    exception_lineno = exception_keeper_lineno_143;

    goto frame_exception_exit_1;
    // End of try:
    try_end_143:;
    CHECK_OBJECT(tmp_import_from_143__module);
    Py_DECREF(tmp_import_from_143__module);
    tmp_import_from_143__module = NULL;
    {
        PyObject *tmp_assign_source_951;
        PyObject *tmp_name_value_524;
        PyObject *tmp_globals_arg_value_524;
        PyObject *tmp_locals_arg_value_524;
        PyObject *tmp_fromlist_value_524;
        PyObject *tmp_level_value_524;
        tmp_name_value_524 = mod_consts[1857];
        tmp_globals_arg_value_524 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_524 = Py_None;
        tmp_fromlist_value_524 = mod_consts[1858];
        tmp_level_value_524 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1059;
        tmp_assign_source_951 = IMPORT_MODULE5(tmp_name_value_524, tmp_globals_arg_value_524, tmp_locals_arg_value_524, tmp_fromlist_value_524, tmp_level_value_524);
        if (tmp_assign_source_951 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1059;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_144__module == NULL);
        tmp_import_from_144__module = tmp_assign_source_951;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_952;
        PyObject *tmp_import_name_from_804;
        CHECK_OBJECT(tmp_import_from_144__module);
        tmp_import_name_from_804 = tmp_import_from_144__module;
        if (PyModule_Check(tmp_import_name_from_804)) {
            tmp_assign_source_952 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_804,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1859],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_952 = IMPORT_NAME(tmp_import_name_from_804, mod_consts[1859]);
        }

        if (tmp_assign_source_952 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1059;

            goto try_except_handler_144;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1859], tmp_assign_source_952);
    }
    {
        PyObject *tmp_assign_source_953;
        PyObject *tmp_import_name_from_805;
        CHECK_OBJECT(tmp_import_from_144__module);
        tmp_import_name_from_805 = tmp_import_from_144__module;
        if (PyModule_Check(tmp_import_name_from_805)) {
            tmp_assign_source_953 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_805,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1860],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_953 = IMPORT_NAME(tmp_import_name_from_805, mod_consts[1860]);
        }

        if (tmp_assign_source_953 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1059;

            goto try_except_handler_144;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1860], tmp_assign_source_953);
    }
    goto try_end_144;
    // Exception handler code:
    try_except_handler_144:;
    exception_keeper_type_144 = exception_type;
    exception_keeper_value_144 = exception_value;
    exception_keeper_tb_144 = exception_tb;
    exception_keeper_lineno_144 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_144__module);
    Py_DECREF(tmp_import_from_144__module);
    tmp_import_from_144__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_144;
    exception_value = exception_keeper_value_144;
    exception_tb = exception_keeper_tb_144;
    exception_lineno = exception_keeper_lineno_144;

    goto frame_exception_exit_1;
    // End of try:
    try_end_144:;
    CHECK_OBJECT(tmp_import_from_144__module);
    Py_DECREF(tmp_import_from_144__module);
    tmp_import_from_144__module = NULL;
    {
        PyObject *tmp_assign_source_954;
        PyObject *tmp_import_name_from_806;
        PyObject *tmp_name_value_525;
        PyObject *tmp_globals_arg_value_525;
        PyObject *tmp_locals_arg_value_525;
        PyObject *tmp_fromlist_value_525;
        PyObject *tmp_level_value_525;
        tmp_name_value_525 = mod_consts[1861];
        tmp_globals_arg_value_525 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_525 = Py_None;
        tmp_fromlist_value_525 = mod_consts[1862];
        tmp_level_value_525 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1063;
        tmp_import_name_from_806 = IMPORT_MODULE5(tmp_name_value_525, tmp_globals_arg_value_525, tmp_locals_arg_value_525, tmp_fromlist_value_525, tmp_level_value_525);
        if (tmp_import_name_from_806 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1063;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_806)) {
            tmp_assign_source_954 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_806,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1863],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_954 = IMPORT_NAME(tmp_import_name_from_806, mod_consts[1863]);
        }

        Py_DECREF(tmp_import_name_from_806);
        if (tmp_assign_source_954 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1063;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1863], tmp_assign_source_954);
    }
    {
        PyObject *tmp_assign_source_955;
        PyObject *tmp_import_name_from_807;
        PyObject *tmp_name_value_526;
        PyObject *tmp_globals_arg_value_526;
        PyObject *tmp_locals_arg_value_526;
        PyObject *tmp_fromlist_value_526;
        PyObject *tmp_level_value_526;
        tmp_name_value_526 = mod_consts[1864];
        tmp_globals_arg_value_526 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_526 = Py_None;
        tmp_fromlist_value_526 = mod_consts[1865];
        tmp_level_value_526 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1064;
        tmp_import_name_from_807 = IMPORT_MODULE5(tmp_name_value_526, tmp_globals_arg_value_526, tmp_locals_arg_value_526, tmp_fromlist_value_526, tmp_level_value_526);
        if (tmp_import_name_from_807 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1064;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_807)) {
            tmp_assign_source_955 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_807,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1866],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_955 = IMPORT_NAME(tmp_import_name_from_807, mod_consts[1866]);
        }

        Py_DECREF(tmp_import_name_from_807);
        if (tmp_assign_source_955 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1064;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1866], tmp_assign_source_955);
    }
    {
        PyObject *tmp_assign_source_956;
        PyObject *tmp_import_name_from_808;
        PyObject *tmp_name_value_527;
        PyObject *tmp_globals_arg_value_527;
        PyObject *tmp_locals_arg_value_527;
        PyObject *tmp_fromlist_value_527;
        PyObject *tmp_level_value_527;
        tmp_name_value_527 = mod_consts[1867];
        tmp_globals_arg_value_527 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_527 = Py_None;
        tmp_fromlist_value_527 = mod_consts[1868];
        tmp_level_value_527 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1065;
        tmp_import_name_from_808 = IMPORT_MODULE5(tmp_name_value_527, tmp_globals_arg_value_527, tmp_locals_arg_value_527, tmp_fromlist_value_527, tmp_level_value_527);
        if (tmp_import_name_from_808 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1065;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_808)) {
            tmp_assign_source_956 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_808,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1869],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_956 = IMPORT_NAME(tmp_import_name_from_808, mod_consts[1869]);
        }

        Py_DECREF(tmp_import_name_from_808);
        if (tmp_assign_source_956 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1065;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1869], tmp_assign_source_956);
    }
    {
        PyObject *tmp_assign_source_957;
        PyObject *tmp_import_name_from_809;
        PyObject *tmp_name_value_528;
        PyObject *tmp_globals_arg_value_528;
        PyObject *tmp_locals_arg_value_528;
        PyObject *tmp_fromlist_value_528;
        PyObject *tmp_level_value_528;
        tmp_name_value_528 = mod_consts[1870];
        tmp_globals_arg_value_528 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_528 = Py_None;
        tmp_fromlist_value_528 = mod_consts[1871];
        tmp_level_value_528 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1066;
        tmp_import_name_from_809 = IMPORT_MODULE5(tmp_name_value_528, tmp_globals_arg_value_528, tmp_locals_arg_value_528, tmp_fromlist_value_528, tmp_level_value_528);
        if (tmp_import_name_from_809 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1066;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_809)) {
            tmp_assign_source_957 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_809,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1872],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_957 = IMPORT_NAME(tmp_import_name_from_809, mod_consts[1872]);
        }

        Py_DECREF(tmp_import_name_from_809);
        if (tmp_assign_source_957 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1066;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1872], tmp_assign_source_957);
    }
    {
        PyObject *tmp_assign_source_958;
        PyObject *tmp_import_name_from_810;
        PyObject *tmp_name_value_529;
        PyObject *tmp_globals_arg_value_529;
        PyObject *tmp_locals_arg_value_529;
        PyObject *tmp_fromlist_value_529;
        PyObject *tmp_level_value_529;
        tmp_name_value_529 = mod_consts[1873];
        tmp_globals_arg_value_529 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_529 = Py_None;
        tmp_fromlist_value_529 = mod_consts[1874];
        tmp_level_value_529 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1067;
        tmp_import_name_from_810 = IMPORT_MODULE5(tmp_name_value_529, tmp_globals_arg_value_529, tmp_locals_arg_value_529, tmp_fromlist_value_529, tmp_level_value_529);
        if (tmp_import_name_from_810 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1067;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_810)) {
            tmp_assign_source_958 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_810,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1875],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_958 = IMPORT_NAME(tmp_import_name_from_810, mod_consts[1875]);
        }

        Py_DECREF(tmp_import_name_from_810);
        if (tmp_assign_source_958 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1067;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1875], tmp_assign_source_958);
    }
    {
        PyObject *tmp_assign_source_959;
        PyObject *tmp_import_name_from_811;
        PyObject *tmp_name_value_530;
        PyObject *tmp_globals_arg_value_530;
        PyObject *tmp_locals_arg_value_530;
        PyObject *tmp_fromlist_value_530;
        PyObject *tmp_level_value_530;
        tmp_name_value_530 = mod_consts[1876];
        tmp_globals_arg_value_530 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_530 = Py_None;
        tmp_fromlist_value_530 = mod_consts[1877];
        tmp_level_value_530 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1068;
        tmp_import_name_from_811 = IMPORT_MODULE5(tmp_name_value_530, tmp_globals_arg_value_530, tmp_locals_arg_value_530, tmp_fromlist_value_530, tmp_level_value_530);
        if (tmp_import_name_from_811 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1068;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_811)) {
            tmp_assign_source_959 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_811,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1878],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_959 = IMPORT_NAME(tmp_import_name_from_811, mod_consts[1878]);
        }

        Py_DECREF(tmp_import_name_from_811);
        if (tmp_assign_source_959 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1068;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1878], tmp_assign_source_959);
    }
    {
        PyObject *tmp_assign_source_960;
        PyObject *tmp_name_value_531;
        PyObject *tmp_globals_arg_value_531;
        PyObject *tmp_locals_arg_value_531;
        PyObject *tmp_fromlist_value_531;
        PyObject *tmp_level_value_531;
        tmp_name_value_531 = mod_consts[1879];
        tmp_globals_arg_value_531 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_531 = Py_None;
        tmp_fromlist_value_531 = mod_consts[1880];
        tmp_level_value_531 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1069;
        tmp_assign_source_960 = IMPORT_MODULE5(tmp_name_value_531, tmp_globals_arg_value_531, tmp_locals_arg_value_531, tmp_fromlist_value_531, tmp_level_value_531);
        if (tmp_assign_source_960 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1069;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_145__module == NULL);
        tmp_import_from_145__module = tmp_assign_source_960;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_961;
        PyObject *tmp_import_name_from_812;
        CHECK_OBJECT(tmp_import_from_145__module);
        tmp_import_name_from_812 = tmp_import_from_145__module;
        if (PyModule_Check(tmp_import_name_from_812)) {
            tmp_assign_source_961 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_812,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1881],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_961 = IMPORT_NAME(tmp_import_name_from_812, mod_consts[1881]);
        }

        if (tmp_assign_source_961 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1069;

            goto try_except_handler_145;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1881], tmp_assign_source_961);
    }
    {
        PyObject *tmp_assign_source_962;
        PyObject *tmp_import_name_from_813;
        CHECK_OBJECT(tmp_import_from_145__module);
        tmp_import_name_from_813 = tmp_import_from_145__module;
        if (PyModule_Check(tmp_import_name_from_813)) {
            tmp_assign_source_962 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_813,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1882],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_962 = IMPORT_NAME(tmp_import_name_from_813, mod_consts[1882]);
        }

        if (tmp_assign_source_962 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1069;

            goto try_except_handler_145;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1882], tmp_assign_source_962);
    }
    goto try_end_145;
    // Exception handler code:
    try_except_handler_145:;
    exception_keeper_type_145 = exception_type;
    exception_keeper_value_145 = exception_value;
    exception_keeper_tb_145 = exception_tb;
    exception_keeper_lineno_145 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_145__module);
    Py_DECREF(tmp_import_from_145__module);
    tmp_import_from_145__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_145;
    exception_value = exception_keeper_value_145;
    exception_tb = exception_keeper_tb_145;
    exception_lineno = exception_keeper_lineno_145;

    goto frame_exception_exit_1;
    // End of try:
    try_end_145:;
    CHECK_OBJECT(tmp_import_from_145__module);
    Py_DECREF(tmp_import_from_145__module);
    tmp_import_from_145__module = NULL;
    {
        PyObject *tmp_assign_source_963;
        PyObject *tmp_name_value_532;
        PyObject *tmp_globals_arg_value_532;
        PyObject *tmp_locals_arg_value_532;
        PyObject *tmp_fromlist_value_532;
        PyObject *tmp_level_value_532;
        tmp_name_value_532 = mod_consts[1883];
        tmp_globals_arg_value_532 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_532 = Py_None;
        tmp_fromlist_value_532 = mod_consts[1884];
        tmp_level_value_532 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1073;
        tmp_assign_source_963 = IMPORT_MODULE5(tmp_name_value_532, tmp_globals_arg_value_532, tmp_locals_arg_value_532, tmp_fromlist_value_532, tmp_level_value_532);
        if (tmp_assign_source_963 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1073;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_146__module == NULL);
        tmp_import_from_146__module = tmp_assign_source_963;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_964;
        PyObject *tmp_import_name_from_814;
        CHECK_OBJECT(tmp_import_from_146__module);
        tmp_import_name_from_814 = tmp_import_from_146__module;
        if (PyModule_Check(tmp_import_name_from_814)) {
            tmp_assign_source_964 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_814,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1885],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_964 = IMPORT_NAME(tmp_import_name_from_814, mod_consts[1885]);
        }

        if (tmp_assign_source_964 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1073;

            goto try_except_handler_146;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1885], tmp_assign_source_964);
    }
    {
        PyObject *tmp_assign_source_965;
        PyObject *tmp_import_name_from_815;
        CHECK_OBJECT(tmp_import_from_146__module);
        tmp_import_name_from_815 = tmp_import_from_146__module;
        if (PyModule_Check(tmp_import_name_from_815)) {
            tmp_assign_source_965 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_815,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1886],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_965 = IMPORT_NAME(tmp_import_name_from_815, mod_consts[1886]);
        }

        if (tmp_assign_source_965 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1073;

            goto try_except_handler_146;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1886], tmp_assign_source_965);
    }
    goto try_end_146;
    // Exception handler code:
    try_except_handler_146:;
    exception_keeper_type_146 = exception_type;
    exception_keeper_value_146 = exception_value;
    exception_keeper_tb_146 = exception_tb;
    exception_keeper_lineno_146 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_146__module);
    Py_DECREF(tmp_import_from_146__module);
    tmp_import_from_146__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_146;
    exception_value = exception_keeper_value_146;
    exception_tb = exception_keeper_tb_146;
    exception_lineno = exception_keeper_lineno_146;

    goto frame_exception_exit_1;
    // End of try:
    try_end_146:;
    CHECK_OBJECT(tmp_import_from_146__module);
    Py_DECREF(tmp_import_from_146__module);
    tmp_import_from_146__module = NULL;
    {
        PyObject *tmp_assign_source_966;
        PyObject *tmp_name_value_533;
        PyObject *tmp_globals_arg_value_533;
        PyObject *tmp_locals_arg_value_533;
        PyObject *tmp_fromlist_value_533;
        PyObject *tmp_level_value_533;
        tmp_name_value_533 = mod_consts[1887];
        tmp_globals_arg_value_533 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_533 = Py_None;
        tmp_fromlist_value_533 = mod_consts[1888];
        tmp_level_value_533 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1077;
        tmp_assign_source_966 = IMPORT_MODULE5(tmp_name_value_533, tmp_globals_arg_value_533, tmp_locals_arg_value_533, tmp_fromlist_value_533, tmp_level_value_533);
        if (tmp_assign_source_966 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1077;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_147__module == NULL);
        tmp_import_from_147__module = tmp_assign_source_966;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_967;
        PyObject *tmp_import_name_from_816;
        CHECK_OBJECT(tmp_import_from_147__module);
        tmp_import_name_from_816 = tmp_import_from_147__module;
        if (PyModule_Check(tmp_import_name_from_816)) {
            tmp_assign_source_967 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_816,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1889],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_967 = IMPORT_NAME(tmp_import_name_from_816, mod_consts[1889]);
        }

        if (tmp_assign_source_967 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1077;

            goto try_except_handler_147;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1889], tmp_assign_source_967);
    }
    {
        PyObject *tmp_assign_source_968;
        PyObject *tmp_import_name_from_817;
        CHECK_OBJECT(tmp_import_from_147__module);
        tmp_import_name_from_817 = tmp_import_from_147__module;
        if (PyModule_Check(tmp_import_name_from_817)) {
            tmp_assign_source_968 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_817,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1890],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_968 = IMPORT_NAME(tmp_import_name_from_817, mod_consts[1890]);
        }

        if (tmp_assign_source_968 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1077;

            goto try_except_handler_147;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1890], tmp_assign_source_968);
    }
    goto try_end_147;
    // Exception handler code:
    try_except_handler_147:;
    exception_keeper_type_147 = exception_type;
    exception_keeper_value_147 = exception_value;
    exception_keeper_tb_147 = exception_tb;
    exception_keeper_lineno_147 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_147__module);
    Py_DECREF(tmp_import_from_147__module);
    tmp_import_from_147__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_147;
    exception_value = exception_keeper_value_147;
    exception_tb = exception_keeper_tb_147;
    exception_lineno = exception_keeper_lineno_147;

    goto frame_exception_exit_1;
    // End of try:
    try_end_147:;
    CHECK_OBJECT(tmp_import_from_147__module);
    Py_DECREF(tmp_import_from_147__module);
    tmp_import_from_147__module = NULL;
    {
        PyObject *tmp_assign_source_969;
        PyObject *tmp_import_name_from_818;
        PyObject *tmp_name_value_534;
        PyObject *tmp_globals_arg_value_534;
        PyObject *tmp_locals_arg_value_534;
        PyObject *tmp_fromlist_value_534;
        PyObject *tmp_level_value_534;
        tmp_name_value_534 = mod_consts[1891];
        tmp_globals_arg_value_534 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_534 = Py_None;
        tmp_fromlist_value_534 = mod_consts[1892];
        tmp_level_value_534 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1081;
        tmp_import_name_from_818 = IMPORT_MODULE5(tmp_name_value_534, tmp_globals_arg_value_534, tmp_locals_arg_value_534, tmp_fromlist_value_534, tmp_level_value_534);
        if (tmp_import_name_from_818 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1081;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_818)) {
            tmp_assign_source_969 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_818,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1893],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_969 = IMPORT_NAME(tmp_import_name_from_818, mod_consts[1893]);
        }

        Py_DECREF(tmp_import_name_from_818);
        if (tmp_assign_source_969 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1081;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1893], tmp_assign_source_969);
    }
    {
        PyObject *tmp_assign_source_970;
        PyObject *tmp_name_value_535;
        PyObject *tmp_globals_arg_value_535;
        PyObject *tmp_locals_arg_value_535;
        PyObject *tmp_fromlist_value_535;
        PyObject *tmp_level_value_535;
        tmp_name_value_535 = mod_consts[1894];
        tmp_globals_arg_value_535 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_535 = Py_None;
        tmp_fromlist_value_535 = mod_consts[1895];
        tmp_level_value_535 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1082;
        tmp_assign_source_970 = IMPORT_MODULE5(tmp_name_value_535, tmp_globals_arg_value_535, tmp_locals_arg_value_535, tmp_fromlist_value_535, tmp_level_value_535);
        if (tmp_assign_source_970 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1082;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_148__module == NULL);
        tmp_import_from_148__module = tmp_assign_source_970;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_971;
        PyObject *tmp_import_name_from_819;
        CHECK_OBJECT(tmp_import_from_148__module);
        tmp_import_name_from_819 = tmp_import_from_148__module;
        if (PyModule_Check(tmp_import_name_from_819)) {
            tmp_assign_source_971 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_819,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1896],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_971 = IMPORT_NAME(tmp_import_name_from_819, mod_consts[1896]);
        }

        if (tmp_assign_source_971 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1082;

            goto try_except_handler_148;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1896], tmp_assign_source_971);
    }
    {
        PyObject *tmp_assign_source_972;
        PyObject *tmp_import_name_from_820;
        CHECK_OBJECT(tmp_import_from_148__module);
        tmp_import_name_from_820 = tmp_import_from_148__module;
        if (PyModule_Check(tmp_import_name_from_820)) {
            tmp_assign_source_972 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_820,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1897],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_972 = IMPORT_NAME(tmp_import_name_from_820, mod_consts[1897]);
        }

        if (tmp_assign_source_972 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1082;

            goto try_except_handler_148;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1897], tmp_assign_source_972);
    }
    {
        PyObject *tmp_assign_source_973;
        PyObject *tmp_import_name_from_821;
        CHECK_OBJECT(tmp_import_from_148__module);
        tmp_import_name_from_821 = tmp_import_from_148__module;
        if (PyModule_Check(tmp_import_name_from_821)) {
            tmp_assign_source_973 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_821,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1898],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_973 = IMPORT_NAME(tmp_import_name_from_821, mod_consts[1898]);
        }

        if (tmp_assign_source_973 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1082;

            goto try_except_handler_148;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1898], tmp_assign_source_973);
    }
    goto try_end_148;
    // Exception handler code:
    try_except_handler_148:;
    exception_keeper_type_148 = exception_type;
    exception_keeper_value_148 = exception_value;
    exception_keeper_tb_148 = exception_tb;
    exception_keeper_lineno_148 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_148__module);
    Py_DECREF(tmp_import_from_148__module);
    tmp_import_from_148__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_148;
    exception_value = exception_keeper_value_148;
    exception_tb = exception_keeper_tb_148;
    exception_lineno = exception_keeper_lineno_148;

    goto frame_exception_exit_1;
    // End of try:
    try_end_148:;
    CHECK_OBJECT(tmp_import_from_148__module);
    Py_DECREF(tmp_import_from_148__module);
    tmp_import_from_148__module = NULL;
    {
        PyObject *tmp_assign_source_974;
        PyObject *tmp_import_name_from_822;
        PyObject *tmp_name_value_536;
        PyObject *tmp_globals_arg_value_536;
        PyObject *tmp_locals_arg_value_536;
        PyObject *tmp_fromlist_value_536;
        PyObject *tmp_level_value_536;
        tmp_name_value_536 = mod_consts[1899];
        tmp_globals_arg_value_536 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_536 = Py_None;
        tmp_fromlist_value_536 = mod_consts[1900];
        tmp_level_value_536 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1087;
        tmp_import_name_from_822 = IMPORT_MODULE5(tmp_name_value_536, tmp_globals_arg_value_536, tmp_locals_arg_value_536, tmp_fromlist_value_536, tmp_level_value_536);
        if (tmp_import_name_from_822 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1087;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_822)) {
            tmp_assign_source_974 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_822,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1901],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_974 = IMPORT_NAME(tmp_import_name_from_822, mod_consts[1901]);
        }

        Py_DECREF(tmp_import_name_from_822);
        if (tmp_assign_source_974 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1087;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1901], tmp_assign_source_974);
    }
    {
        PyObject *tmp_assign_source_975;
        PyObject *tmp_import_name_from_823;
        PyObject *tmp_name_value_537;
        PyObject *tmp_globals_arg_value_537;
        PyObject *tmp_locals_arg_value_537;
        PyObject *tmp_fromlist_value_537;
        PyObject *tmp_level_value_537;
        tmp_name_value_537 = mod_consts[1902];
        tmp_globals_arg_value_537 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_537 = Py_None;
        tmp_fromlist_value_537 = mod_consts[1903];
        tmp_level_value_537 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1088;
        tmp_import_name_from_823 = IMPORT_MODULE5(tmp_name_value_537, tmp_globals_arg_value_537, tmp_locals_arg_value_537, tmp_fromlist_value_537, tmp_level_value_537);
        if (tmp_import_name_from_823 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1088;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_823)) {
            tmp_assign_source_975 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_823,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1904],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_975 = IMPORT_NAME(tmp_import_name_from_823, mod_consts[1904]);
        }

        Py_DECREF(tmp_import_name_from_823);
        if (tmp_assign_source_975 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1088;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1904], tmp_assign_source_975);
    }
    {
        PyObject *tmp_assign_source_976;
        PyObject *tmp_name_value_538;
        PyObject *tmp_globals_arg_value_538;
        PyObject *tmp_locals_arg_value_538;
        PyObject *tmp_fromlist_value_538;
        PyObject *tmp_level_value_538;
        tmp_name_value_538 = mod_consts[1905];
        tmp_globals_arg_value_538 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_538 = Py_None;
        tmp_fromlist_value_538 = mod_consts[1906];
        tmp_level_value_538 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1089;
        tmp_assign_source_976 = IMPORT_MODULE5(tmp_name_value_538, tmp_globals_arg_value_538, tmp_locals_arg_value_538, tmp_fromlist_value_538, tmp_level_value_538);
        if (tmp_assign_source_976 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1089;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_149__module == NULL);
        tmp_import_from_149__module = tmp_assign_source_976;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_977;
        PyObject *tmp_import_name_from_824;
        CHECK_OBJECT(tmp_import_from_149__module);
        tmp_import_name_from_824 = tmp_import_from_149__module;
        if (PyModule_Check(tmp_import_name_from_824)) {
            tmp_assign_source_977 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_824,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1907],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_977 = IMPORT_NAME(tmp_import_name_from_824, mod_consts[1907]);
        }

        if (tmp_assign_source_977 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1089;

            goto try_except_handler_149;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1907], tmp_assign_source_977);
    }
    {
        PyObject *tmp_assign_source_978;
        PyObject *tmp_import_name_from_825;
        CHECK_OBJECT(tmp_import_from_149__module);
        tmp_import_name_from_825 = tmp_import_from_149__module;
        if (PyModule_Check(tmp_import_name_from_825)) {
            tmp_assign_source_978 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_825,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1908],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_978 = IMPORT_NAME(tmp_import_name_from_825, mod_consts[1908]);
        }

        if (tmp_assign_source_978 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1089;

            goto try_except_handler_149;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1908], tmp_assign_source_978);
    }
    {
        PyObject *tmp_assign_source_979;
        PyObject *tmp_import_name_from_826;
        CHECK_OBJECT(tmp_import_from_149__module);
        tmp_import_name_from_826 = tmp_import_from_149__module;
        if (PyModule_Check(tmp_import_name_from_826)) {
            tmp_assign_source_979 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_826,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1909],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_979 = IMPORT_NAME(tmp_import_name_from_826, mod_consts[1909]);
        }

        if (tmp_assign_source_979 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1089;

            goto try_except_handler_149;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1909], tmp_assign_source_979);
    }
    {
        PyObject *tmp_assign_source_980;
        PyObject *tmp_import_name_from_827;
        CHECK_OBJECT(tmp_import_from_149__module);
        tmp_import_name_from_827 = tmp_import_from_149__module;
        if (PyModule_Check(tmp_import_name_from_827)) {
            tmp_assign_source_980 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_827,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1910],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_980 = IMPORT_NAME(tmp_import_name_from_827, mod_consts[1910]);
        }

        if (tmp_assign_source_980 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1089;

            goto try_except_handler_149;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1910], tmp_assign_source_980);
    }
    {
        PyObject *tmp_assign_source_981;
        PyObject *tmp_import_name_from_828;
        CHECK_OBJECT(tmp_import_from_149__module);
        tmp_import_name_from_828 = tmp_import_from_149__module;
        if (PyModule_Check(tmp_import_name_from_828)) {
            tmp_assign_source_981 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_828,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1911],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_981 = IMPORT_NAME(tmp_import_name_from_828, mod_consts[1911]);
        }

        if (tmp_assign_source_981 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1089;

            goto try_except_handler_149;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1911], tmp_assign_source_981);
    }
    {
        PyObject *tmp_assign_source_982;
        PyObject *tmp_import_name_from_829;
        CHECK_OBJECT(tmp_import_from_149__module);
        tmp_import_name_from_829 = tmp_import_from_149__module;
        if (PyModule_Check(tmp_import_name_from_829)) {
            tmp_assign_source_982 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_829,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1912],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_982 = IMPORT_NAME(tmp_import_name_from_829, mod_consts[1912]);
        }

        if (tmp_assign_source_982 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1089;

            goto try_except_handler_149;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1912], tmp_assign_source_982);
    }
    {
        PyObject *tmp_assign_source_983;
        PyObject *tmp_import_name_from_830;
        CHECK_OBJECT(tmp_import_from_149__module);
        tmp_import_name_from_830 = tmp_import_from_149__module;
        if (PyModule_Check(tmp_import_name_from_830)) {
            tmp_assign_source_983 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_830,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1913],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_983 = IMPORT_NAME(tmp_import_name_from_830, mod_consts[1913]);
        }

        if (tmp_assign_source_983 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1089;

            goto try_except_handler_149;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1913], tmp_assign_source_983);
    }
    {
        PyObject *tmp_assign_source_984;
        PyObject *tmp_import_name_from_831;
        CHECK_OBJECT(tmp_import_from_149__module);
        tmp_import_name_from_831 = tmp_import_from_149__module;
        if (PyModule_Check(tmp_import_name_from_831)) {
            tmp_assign_source_984 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_831,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1914],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_984 = IMPORT_NAME(tmp_import_name_from_831, mod_consts[1914]);
        }

        if (tmp_assign_source_984 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1089;

            goto try_except_handler_149;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1914], tmp_assign_source_984);
    }
    goto try_end_149;
    // Exception handler code:
    try_except_handler_149:;
    exception_keeper_type_149 = exception_type;
    exception_keeper_value_149 = exception_value;
    exception_keeper_tb_149 = exception_tb;
    exception_keeper_lineno_149 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_149__module);
    Py_DECREF(tmp_import_from_149__module);
    tmp_import_from_149__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_149;
    exception_value = exception_keeper_value_149;
    exception_tb = exception_keeper_tb_149;
    exception_lineno = exception_keeper_lineno_149;

    goto frame_exception_exit_1;
    // End of try:
    try_end_149:;
    CHECK_OBJECT(tmp_import_from_149__module);
    Py_DECREF(tmp_import_from_149__module);
    tmp_import_from_149__module = NULL;
    {
        PyObject *tmp_assign_source_985;
        PyObject *tmp_import_name_from_832;
        PyObject *tmp_name_value_539;
        PyObject *tmp_globals_arg_value_539;
        PyObject *tmp_locals_arg_value_539;
        PyObject *tmp_fromlist_value_539;
        PyObject *tmp_level_value_539;
        tmp_name_value_539 = mod_consts[1915];
        tmp_globals_arg_value_539 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_539 = Py_None;
        tmp_fromlist_value_539 = mod_consts[1916];
        tmp_level_value_539 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1099;
        tmp_import_name_from_832 = IMPORT_MODULE5(tmp_name_value_539, tmp_globals_arg_value_539, tmp_locals_arg_value_539, tmp_fromlist_value_539, tmp_level_value_539);
        if (tmp_import_name_from_832 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1099;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_832)) {
            tmp_assign_source_985 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_832,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1917],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_985 = IMPORT_NAME(tmp_import_name_from_832, mod_consts[1917]);
        }

        Py_DECREF(tmp_import_name_from_832);
        if (tmp_assign_source_985 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1099;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1917], tmp_assign_source_985);
    }
    {
        PyObject *tmp_assign_source_986;
        PyObject *tmp_name_value_540;
        PyObject *tmp_globals_arg_value_540;
        PyObject *tmp_locals_arg_value_540;
        PyObject *tmp_fromlist_value_540;
        PyObject *tmp_level_value_540;
        tmp_name_value_540 = mod_consts[1918];
        tmp_globals_arg_value_540 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_540 = Py_None;
        tmp_fromlist_value_540 = mod_consts[1919];
        tmp_level_value_540 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1100;
        tmp_assign_source_986 = IMPORT_MODULE5(tmp_name_value_540, tmp_globals_arg_value_540, tmp_locals_arg_value_540, tmp_fromlist_value_540, tmp_level_value_540);
        if (tmp_assign_source_986 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1100;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_150__module == NULL);
        tmp_import_from_150__module = tmp_assign_source_986;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_987;
        PyObject *tmp_import_name_from_833;
        CHECK_OBJECT(tmp_import_from_150__module);
        tmp_import_name_from_833 = tmp_import_from_150__module;
        if (PyModule_Check(tmp_import_name_from_833)) {
            tmp_assign_source_987 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_833,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1920],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_987 = IMPORT_NAME(tmp_import_name_from_833, mod_consts[1920]);
        }

        if (tmp_assign_source_987 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1100;

            goto try_except_handler_150;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1920], tmp_assign_source_987);
    }
    {
        PyObject *tmp_assign_source_988;
        PyObject *tmp_import_name_from_834;
        CHECK_OBJECT(tmp_import_from_150__module);
        tmp_import_name_from_834 = tmp_import_from_150__module;
        if (PyModule_Check(tmp_import_name_from_834)) {
            tmp_assign_source_988 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_834,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1921],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_988 = IMPORT_NAME(tmp_import_name_from_834, mod_consts[1921]);
        }

        if (tmp_assign_source_988 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1100;

            goto try_except_handler_150;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1921], tmp_assign_source_988);
    }
    goto try_end_150;
    // Exception handler code:
    try_except_handler_150:;
    exception_keeper_type_150 = exception_type;
    exception_keeper_value_150 = exception_value;
    exception_keeper_tb_150 = exception_tb;
    exception_keeper_lineno_150 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_150__module);
    Py_DECREF(tmp_import_from_150__module);
    tmp_import_from_150__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_150;
    exception_value = exception_keeper_value_150;
    exception_tb = exception_keeper_tb_150;
    exception_lineno = exception_keeper_lineno_150;

    goto frame_exception_exit_1;
    // End of try:
    try_end_150:;
    CHECK_OBJECT(tmp_import_from_150__module);
    Py_DECREF(tmp_import_from_150__module);
    tmp_import_from_150__module = NULL;
    {
        PyObject *tmp_assign_source_989;
        PyObject *tmp_name_value_541;
        PyObject *tmp_globals_arg_value_541;
        PyObject *tmp_locals_arg_value_541;
        PyObject *tmp_fromlist_value_541;
        PyObject *tmp_level_value_541;
        tmp_name_value_541 = mod_consts[1922];
        tmp_globals_arg_value_541 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_541 = Py_None;
        tmp_fromlist_value_541 = mod_consts[1923];
        tmp_level_value_541 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1104;
        tmp_assign_source_989 = IMPORT_MODULE5(tmp_name_value_541, tmp_globals_arg_value_541, tmp_locals_arg_value_541, tmp_fromlist_value_541, tmp_level_value_541);
        if (tmp_assign_source_989 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1104;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_151__module == NULL);
        tmp_import_from_151__module = tmp_assign_source_989;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_990;
        PyObject *tmp_import_name_from_835;
        CHECK_OBJECT(tmp_import_from_151__module);
        tmp_import_name_from_835 = tmp_import_from_151__module;
        if (PyModule_Check(tmp_import_name_from_835)) {
            tmp_assign_source_990 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_835,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1924],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_990 = IMPORT_NAME(tmp_import_name_from_835, mod_consts[1924]);
        }

        if (tmp_assign_source_990 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1104;

            goto try_except_handler_151;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1924], tmp_assign_source_990);
    }
    {
        PyObject *tmp_assign_source_991;
        PyObject *tmp_import_name_from_836;
        CHECK_OBJECT(tmp_import_from_151__module);
        tmp_import_name_from_836 = tmp_import_from_151__module;
        if (PyModule_Check(tmp_import_name_from_836)) {
            tmp_assign_source_991 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_836,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1925],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_991 = IMPORT_NAME(tmp_import_name_from_836, mod_consts[1925]);
        }

        if (tmp_assign_source_991 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1104;

            goto try_except_handler_151;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1925], tmp_assign_source_991);
    }
    {
        PyObject *tmp_assign_source_992;
        PyObject *tmp_import_name_from_837;
        CHECK_OBJECT(tmp_import_from_151__module);
        tmp_import_name_from_837 = tmp_import_from_151__module;
        if (PyModule_Check(tmp_import_name_from_837)) {
            tmp_assign_source_992 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_837,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1926],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_992 = IMPORT_NAME(tmp_import_name_from_837, mod_consts[1926]);
        }

        if (tmp_assign_source_992 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1104;

            goto try_except_handler_151;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1926], tmp_assign_source_992);
    }
    goto try_end_151;
    // Exception handler code:
    try_except_handler_151:;
    exception_keeper_type_151 = exception_type;
    exception_keeper_value_151 = exception_value;
    exception_keeper_tb_151 = exception_tb;
    exception_keeper_lineno_151 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_151__module);
    Py_DECREF(tmp_import_from_151__module);
    tmp_import_from_151__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_151;
    exception_value = exception_keeper_value_151;
    exception_tb = exception_keeper_tb_151;
    exception_lineno = exception_keeper_lineno_151;

    goto frame_exception_exit_1;
    // End of try:
    try_end_151:;
    CHECK_OBJECT(tmp_import_from_151__module);
    Py_DECREF(tmp_import_from_151__module);
    tmp_import_from_151__module = NULL;
    {
        PyObject *tmp_assign_source_993;
        PyObject *tmp_import_name_from_838;
        PyObject *tmp_name_value_542;
        PyObject *tmp_globals_arg_value_542;
        PyObject *tmp_locals_arg_value_542;
        PyObject *tmp_fromlist_value_542;
        PyObject *tmp_level_value_542;
        tmp_name_value_542 = mod_consts[1927];
        tmp_globals_arg_value_542 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_542 = Py_None;
        tmp_fromlist_value_542 = mod_consts[1928];
        tmp_level_value_542 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1109;
        tmp_import_name_from_838 = IMPORT_MODULE5(tmp_name_value_542, tmp_globals_arg_value_542, tmp_locals_arg_value_542, tmp_fromlist_value_542, tmp_level_value_542);
        if (tmp_import_name_from_838 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1109;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_838)) {
            tmp_assign_source_993 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_838,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1929],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_993 = IMPORT_NAME(tmp_import_name_from_838, mod_consts[1929]);
        }

        Py_DECREF(tmp_import_name_from_838);
        if (tmp_assign_source_993 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1109;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1929], tmp_assign_source_993);
    }
    {
        PyObject *tmp_assign_source_994;
        PyObject *tmp_import_name_from_839;
        PyObject *tmp_name_value_543;
        PyObject *tmp_globals_arg_value_543;
        PyObject *tmp_locals_arg_value_543;
        PyObject *tmp_fromlist_value_543;
        PyObject *tmp_level_value_543;
        tmp_name_value_543 = mod_consts[1930];
        tmp_globals_arg_value_543 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_543 = Py_None;
        tmp_fromlist_value_543 = mod_consts[1931];
        tmp_level_value_543 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1110;
        tmp_import_name_from_839 = IMPORT_MODULE5(tmp_name_value_543, tmp_globals_arg_value_543, tmp_locals_arg_value_543, tmp_fromlist_value_543, tmp_level_value_543);
        if (tmp_import_name_from_839 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1110;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_839)) {
            tmp_assign_source_994 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_839,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1932],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_994 = IMPORT_NAME(tmp_import_name_from_839, mod_consts[1932]);
        }

        Py_DECREF(tmp_import_name_from_839);
        if (tmp_assign_source_994 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1110;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1932], tmp_assign_source_994);
    }
    {
        PyObject *tmp_assign_source_995;
        PyObject *tmp_import_name_from_840;
        PyObject *tmp_name_value_544;
        PyObject *tmp_globals_arg_value_544;
        PyObject *tmp_locals_arg_value_544;
        PyObject *tmp_fromlist_value_544;
        PyObject *tmp_level_value_544;
        tmp_name_value_544 = mod_consts[1933];
        tmp_globals_arg_value_544 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_544 = Py_None;
        tmp_fromlist_value_544 = mod_consts[1934];
        tmp_level_value_544 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1111;
        tmp_import_name_from_840 = IMPORT_MODULE5(tmp_name_value_544, tmp_globals_arg_value_544, tmp_locals_arg_value_544, tmp_fromlist_value_544, tmp_level_value_544);
        if (tmp_import_name_from_840 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1111;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_840)) {
            tmp_assign_source_995 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_840,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1935],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_995 = IMPORT_NAME(tmp_import_name_from_840, mod_consts[1935]);
        }

        Py_DECREF(tmp_import_name_from_840);
        if (tmp_assign_source_995 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1111;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1935], tmp_assign_source_995);
    }
    {
        PyObject *tmp_assign_source_996;
        PyObject *tmp_import_name_from_841;
        PyObject *tmp_name_value_545;
        PyObject *tmp_globals_arg_value_545;
        PyObject *tmp_locals_arg_value_545;
        PyObject *tmp_fromlist_value_545;
        PyObject *tmp_level_value_545;
        tmp_name_value_545 = mod_consts[1936];
        tmp_globals_arg_value_545 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_545 = Py_None;
        tmp_fromlist_value_545 = mod_consts[1937];
        tmp_level_value_545 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1112;
        tmp_import_name_from_841 = IMPORT_MODULE5(tmp_name_value_545, tmp_globals_arg_value_545, tmp_locals_arg_value_545, tmp_fromlist_value_545, tmp_level_value_545);
        if (tmp_import_name_from_841 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1112;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_841)) {
            tmp_assign_source_996 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_841,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1938],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_996 = IMPORT_NAME(tmp_import_name_from_841, mod_consts[1938]);
        }

        Py_DECREF(tmp_import_name_from_841);
        if (tmp_assign_source_996 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1112;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1938], tmp_assign_source_996);
    }
    {
        PyObject *tmp_assign_source_997;
        PyObject *tmp_import_name_from_842;
        PyObject *tmp_name_value_546;
        PyObject *tmp_globals_arg_value_546;
        PyObject *tmp_locals_arg_value_546;
        PyObject *tmp_fromlist_value_546;
        PyObject *tmp_level_value_546;
        tmp_name_value_546 = mod_consts[1939];
        tmp_globals_arg_value_546 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_546 = Py_None;
        tmp_fromlist_value_546 = mod_consts[1940];
        tmp_level_value_546 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1113;
        tmp_import_name_from_842 = IMPORT_MODULE5(tmp_name_value_546, tmp_globals_arg_value_546, tmp_locals_arg_value_546, tmp_fromlist_value_546, tmp_level_value_546);
        if (tmp_import_name_from_842 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1113;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_842)) {
            tmp_assign_source_997 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_842,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1941],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_997 = IMPORT_NAME(tmp_import_name_from_842, mod_consts[1941]);
        }

        Py_DECREF(tmp_import_name_from_842);
        if (tmp_assign_source_997 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1113;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1941], tmp_assign_source_997);
    }
    {
        PyObject *tmp_assign_source_998;
        PyObject *tmp_import_name_from_843;
        PyObject *tmp_name_value_547;
        PyObject *tmp_globals_arg_value_547;
        PyObject *tmp_locals_arg_value_547;
        PyObject *tmp_fromlist_value_547;
        PyObject *tmp_level_value_547;
        tmp_name_value_547 = mod_consts[1942];
        tmp_globals_arg_value_547 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_547 = Py_None;
        tmp_fromlist_value_547 = mod_consts[1943];
        tmp_level_value_547 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1114;
        tmp_import_name_from_843 = IMPORT_MODULE5(tmp_name_value_547, tmp_globals_arg_value_547, tmp_locals_arg_value_547, tmp_fromlist_value_547, tmp_level_value_547);
        if (tmp_import_name_from_843 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1114;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_843)) {
            tmp_assign_source_998 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_843,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1944],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_998 = IMPORT_NAME(tmp_import_name_from_843, mod_consts[1944]);
        }

        Py_DECREF(tmp_import_name_from_843);
        if (tmp_assign_source_998 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1114;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1944], tmp_assign_source_998);
    }
    {
        PyObject *tmp_assign_source_999;
        PyObject *tmp_name_value_548;
        PyObject *tmp_globals_arg_value_548;
        PyObject *tmp_locals_arg_value_548;
        PyObject *tmp_fromlist_value_548;
        PyObject *tmp_level_value_548;
        tmp_name_value_548 = mod_consts[1945];
        tmp_globals_arg_value_548 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_548 = Py_None;
        tmp_fromlist_value_548 = mod_consts[1946];
        tmp_level_value_548 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1115;
        tmp_assign_source_999 = IMPORT_MODULE5(tmp_name_value_548, tmp_globals_arg_value_548, tmp_locals_arg_value_548, tmp_fromlist_value_548, tmp_level_value_548);
        if (tmp_assign_source_999 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1115;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_152__module == NULL);
        tmp_import_from_152__module = tmp_assign_source_999;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1000;
        PyObject *tmp_import_name_from_844;
        CHECK_OBJECT(tmp_import_from_152__module);
        tmp_import_name_from_844 = tmp_import_from_152__module;
        if (PyModule_Check(tmp_import_name_from_844)) {
            tmp_assign_source_1000 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_844,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1947],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1000 = IMPORT_NAME(tmp_import_name_from_844, mod_consts[1947]);
        }

        if (tmp_assign_source_1000 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1115;

            goto try_except_handler_152;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1947], tmp_assign_source_1000);
    }
    {
        PyObject *tmp_assign_source_1001;
        PyObject *tmp_import_name_from_845;
        CHECK_OBJECT(tmp_import_from_152__module);
        tmp_import_name_from_845 = tmp_import_from_152__module;
        if (PyModule_Check(tmp_import_name_from_845)) {
            tmp_assign_source_1001 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_845,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1948],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1001 = IMPORT_NAME(tmp_import_name_from_845, mod_consts[1948]);
        }

        if (tmp_assign_source_1001 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1115;

            goto try_except_handler_152;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1948], tmp_assign_source_1001);
    }
    {
        PyObject *tmp_assign_source_1002;
        PyObject *tmp_import_name_from_846;
        CHECK_OBJECT(tmp_import_from_152__module);
        tmp_import_name_from_846 = tmp_import_from_152__module;
        if (PyModule_Check(tmp_import_name_from_846)) {
            tmp_assign_source_1002 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_846,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1949],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1002 = IMPORT_NAME(tmp_import_name_from_846, mod_consts[1949]);
        }

        if (tmp_assign_source_1002 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1115;

            goto try_except_handler_152;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1949], tmp_assign_source_1002);
    }
    {
        PyObject *tmp_assign_source_1003;
        PyObject *tmp_import_name_from_847;
        CHECK_OBJECT(tmp_import_from_152__module);
        tmp_import_name_from_847 = tmp_import_from_152__module;
        if (PyModule_Check(tmp_import_name_from_847)) {
            tmp_assign_source_1003 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_847,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1950],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1003 = IMPORT_NAME(tmp_import_name_from_847, mod_consts[1950]);
        }

        if (tmp_assign_source_1003 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1115;

            goto try_except_handler_152;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1950], tmp_assign_source_1003);
    }
    {
        PyObject *tmp_assign_source_1004;
        PyObject *tmp_import_name_from_848;
        CHECK_OBJECT(tmp_import_from_152__module);
        tmp_import_name_from_848 = tmp_import_from_152__module;
        if (PyModule_Check(tmp_import_name_from_848)) {
            tmp_assign_source_1004 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_848,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1951],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1004 = IMPORT_NAME(tmp_import_name_from_848, mod_consts[1951]);
        }

        if (tmp_assign_source_1004 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1115;

            goto try_except_handler_152;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1951], tmp_assign_source_1004);
    }
    {
        PyObject *tmp_assign_source_1005;
        PyObject *tmp_import_name_from_849;
        CHECK_OBJECT(tmp_import_from_152__module);
        tmp_import_name_from_849 = tmp_import_from_152__module;
        if (PyModule_Check(tmp_import_name_from_849)) {
            tmp_assign_source_1005 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_849,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1952],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1005 = IMPORT_NAME(tmp_import_name_from_849, mod_consts[1952]);
        }

        if (tmp_assign_source_1005 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1115;

            goto try_except_handler_152;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1952], tmp_assign_source_1005);
    }
    {
        PyObject *tmp_assign_source_1006;
        PyObject *tmp_import_name_from_850;
        CHECK_OBJECT(tmp_import_from_152__module);
        tmp_import_name_from_850 = tmp_import_from_152__module;
        if (PyModule_Check(tmp_import_name_from_850)) {
            tmp_assign_source_1006 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_850,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1953],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1006 = IMPORT_NAME(tmp_import_name_from_850, mod_consts[1953]);
        }

        if (tmp_assign_source_1006 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1115;

            goto try_except_handler_152;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1953], tmp_assign_source_1006);
    }
    goto try_end_152;
    // Exception handler code:
    try_except_handler_152:;
    exception_keeper_type_152 = exception_type;
    exception_keeper_value_152 = exception_value;
    exception_keeper_tb_152 = exception_tb;
    exception_keeper_lineno_152 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_152__module);
    Py_DECREF(tmp_import_from_152__module);
    tmp_import_from_152__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_152;
    exception_value = exception_keeper_value_152;
    exception_tb = exception_keeper_tb_152;
    exception_lineno = exception_keeper_lineno_152;

    goto frame_exception_exit_1;
    // End of try:
    try_end_152:;
    CHECK_OBJECT(tmp_import_from_152__module);
    Py_DECREF(tmp_import_from_152__module);
    tmp_import_from_152__module = NULL;
    {
        PyObject *tmp_assign_source_1007;
        PyObject *tmp_name_value_549;
        PyObject *tmp_globals_arg_value_549;
        PyObject *tmp_locals_arg_value_549;
        PyObject *tmp_fromlist_value_549;
        PyObject *tmp_level_value_549;
        tmp_name_value_549 = mod_consts[1954];
        tmp_globals_arg_value_549 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_549 = Py_None;
        tmp_fromlist_value_549 = mod_consts[1955];
        tmp_level_value_549 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1124;
        tmp_assign_source_1007 = IMPORT_MODULE5(tmp_name_value_549, tmp_globals_arg_value_549, tmp_locals_arg_value_549, tmp_fromlist_value_549, tmp_level_value_549);
        if (tmp_assign_source_1007 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1124;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_153__module == NULL);
        tmp_import_from_153__module = tmp_assign_source_1007;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1008;
        PyObject *tmp_import_name_from_851;
        CHECK_OBJECT(tmp_import_from_153__module);
        tmp_import_name_from_851 = tmp_import_from_153__module;
        if (PyModule_Check(tmp_import_name_from_851)) {
            tmp_assign_source_1008 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_851,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1956],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1008 = IMPORT_NAME(tmp_import_name_from_851, mod_consts[1956]);
        }

        if (tmp_assign_source_1008 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1124;

            goto try_except_handler_153;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1956], tmp_assign_source_1008);
    }
    {
        PyObject *tmp_assign_source_1009;
        PyObject *tmp_import_name_from_852;
        CHECK_OBJECT(tmp_import_from_153__module);
        tmp_import_name_from_852 = tmp_import_from_153__module;
        if (PyModule_Check(tmp_import_name_from_852)) {
            tmp_assign_source_1009 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_852,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1957],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1009 = IMPORT_NAME(tmp_import_name_from_852, mod_consts[1957]);
        }

        if (tmp_assign_source_1009 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1124;

            goto try_except_handler_153;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1957], tmp_assign_source_1009);
    }
    goto try_end_153;
    // Exception handler code:
    try_except_handler_153:;
    exception_keeper_type_153 = exception_type;
    exception_keeper_value_153 = exception_value;
    exception_keeper_tb_153 = exception_tb;
    exception_keeper_lineno_153 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_153__module);
    Py_DECREF(tmp_import_from_153__module);
    tmp_import_from_153__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_153;
    exception_value = exception_keeper_value_153;
    exception_tb = exception_keeper_tb_153;
    exception_lineno = exception_keeper_lineno_153;

    goto frame_exception_exit_1;
    // End of try:
    try_end_153:;
    CHECK_OBJECT(tmp_import_from_153__module);
    Py_DECREF(tmp_import_from_153__module);
    tmp_import_from_153__module = NULL;
    {
        PyObject *tmp_assign_source_1010;
        PyObject *tmp_name_value_550;
        PyObject *tmp_globals_arg_value_550;
        PyObject *tmp_locals_arg_value_550;
        PyObject *tmp_fromlist_value_550;
        PyObject *tmp_level_value_550;
        tmp_name_value_550 = mod_consts[1958];
        tmp_globals_arg_value_550 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_550 = Py_None;
        tmp_fromlist_value_550 = mod_consts[1959];
        tmp_level_value_550 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1128;
        tmp_assign_source_1010 = IMPORT_MODULE5(tmp_name_value_550, tmp_globals_arg_value_550, tmp_locals_arg_value_550, tmp_fromlist_value_550, tmp_level_value_550);
        if (tmp_assign_source_1010 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1128;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_154__module == NULL);
        tmp_import_from_154__module = tmp_assign_source_1010;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1011;
        PyObject *tmp_import_name_from_853;
        CHECK_OBJECT(tmp_import_from_154__module);
        tmp_import_name_from_853 = tmp_import_from_154__module;
        if (PyModule_Check(tmp_import_name_from_853)) {
            tmp_assign_source_1011 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_853,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1960],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1011 = IMPORT_NAME(tmp_import_name_from_853, mod_consts[1960]);
        }

        if (tmp_assign_source_1011 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1128;

            goto try_except_handler_154;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1960], tmp_assign_source_1011);
    }
    {
        PyObject *tmp_assign_source_1012;
        PyObject *tmp_import_name_from_854;
        CHECK_OBJECT(tmp_import_from_154__module);
        tmp_import_name_from_854 = tmp_import_from_154__module;
        if (PyModule_Check(tmp_import_name_from_854)) {
            tmp_assign_source_1012 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_854,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1961],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1012 = IMPORT_NAME(tmp_import_name_from_854, mod_consts[1961]);
        }

        if (tmp_assign_source_1012 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1128;

            goto try_except_handler_154;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1961], tmp_assign_source_1012);
    }
    {
        PyObject *tmp_assign_source_1013;
        PyObject *tmp_import_name_from_855;
        CHECK_OBJECT(tmp_import_from_154__module);
        tmp_import_name_from_855 = tmp_import_from_154__module;
        if (PyModule_Check(tmp_import_name_from_855)) {
            tmp_assign_source_1013 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_855,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1962],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1013 = IMPORT_NAME(tmp_import_name_from_855, mod_consts[1962]);
        }

        if (tmp_assign_source_1013 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1128;

            goto try_except_handler_154;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1962], tmp_assign_source_1013);
    }
    {
        PyObject *tmp_assign_source_1014;
        PyObject *tmp_import_name_from_856;
        CHECK_OBJECT(tmp_import_from_154__module);
        tmp_import_name_from_856 = tmp_import_from_154__module;
        if (PyModule_Check(tmp_import_name_from_856)) {
            tmp_assign_source_1014 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_856,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1963],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1014 = IMPORT_NAME(tmp_import_name_from_856, mod_consts[1963]);
        }

        if (tmp_assign_source_1014 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1128;

            goto try_except_handler_154;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1963], tmp_assign_source_1014);
    }
    {
        PyObject *tmp_assign_source_1015;
        PyObject *tmp_import_name_from_857;
        CHECK_OBJECT(tmp_import_from_154__module);
        tmp_import_name_from_857 = tmp_import_from_154__module;
        if (PyModule_Check(tmp_import_name_from_857)) {
            tmp_assign_source_1015 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_857,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1964],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1015 = IMPORT_NAME(tmp_import_name_from_857, mod_consts[1964]);
        }

        if (tmp_assign_source_1015 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1128;

            goto try_except_handler_154;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1964], tmp_assign_source_1015);
    }
    goto try_end_154;
    // Exception handler code:
    try_except_handler_154:;
    exception_keeper_type_154 = exception_type;
    exception_keeper_value_154 = exception_value;
    exception_keeper_tb_154 = exception_tb;
    exception_keeper_lineno_154 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_154__module);
    Py_DECREF(tmp_import_from_154__module);
    tmp_import_from_154__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_154;
    exception_value = exception_keeper_value_154;
    exception_tb = exception_keeper_tb_154;
    exception_lineno = exception_keeper_lineno_154;

    goto frame_exception_exit_1;
    // End of try:
    try_end_154:;
    CHECK_OBJECT(tmp_import_from_154__module);
    Py_DECREF(tmp_import_from_154__module);
    tmp_import_from_154__module = NULL;
    {
        PyObject *tmp_assign_source_1016;
        PyObject *tmp_name_value_551;
        PyObject *tmp_globals_arg_value_551;
        PyObject *tmp_locals_arg_value_551;
        PyObject *tmp_fromlist_value_551;
        PyObject *tmp_level_value_551;
        tmp_name_value_551 = mod_consts[1965];
        tmp_globals_arg_value_551 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_551 = Py_None;
        tmp_fromlist_value_551 = mod_consts[1966];
        tmp_level_value_551 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1135;
        tmp_assign_source_1016 = IMPORT_MODULE5(tmp_name_value_551, tmp_globals_arg_value_551, tmp_locals_arg_value_551, tmp_fromlist_value_551, tmp_level_value_551);
        if (tmp_assign_source_1016 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1135;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_155__module == NULL);
        tmp_import_from_155__module = tmp_assign_source_1016;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1017;
        PyObject *tmp_import_name_from_858;
        CHECK_OBJECT(tmp_import_from_155__module);
        tmp_import_name_from_858 = tmp_import_from_155__module;
        if (PyModule_Check(tmp_import_name_from_858)) {
            tmp_assign_source_1017 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_858,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1967],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1017 = IMPORT_NAME(tmp_import_name_from_858, mod_consts[1967]);
        }

        if (tmp_assign_source_1017 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1135;

            goto try_except_handler_155;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1967], tmp_assign_source_1017);
    }
    {
        PyObject *tmp_assign_source_1018;
        PyObject *tmp_import_name_from_859;
        CHECK_OBJECT(tmp_import_from_155__module);
        tmp_import_name_from_859 = tmp_import_from_155__module;
        if (PyModule_Check(tmp_import_name_from_859)) {
            tmp_assign_source_1018 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_859,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1968],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1018 = IMPORT_NAME(tmp_import_name_from_859, mod_consts[1968]);
        }

        if (tmp_assign_source_1018 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1135;

            goto try_except_handler_155;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1968], tmp_assign_source_1018);
    }
    goto try_end_155;
    // Exception handler code:
    try_except_handler_155:;
    exception_keeper_type_155 = exception_type;
    exception_keeper_value_155 = exception_value;
    exception_keeper_tb_155 = exception_tb;
    exception_keeper_lineno_155 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_155__module);
    Py_DECREF(tmp_import_from_155__module);
    tmp_import_from_155__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_155;
    exception_value = exception_keeper_value_155;
    exception_tb = exception_keeper_tb_155;
    exception_lineno = exception_keeper_lineno_155;

    goto frame_exception_exit_1;
    // End of try:
    try_end_155:;
    CHECK_OBJECT(tmp_import_from_155__module);
    Py_DECREF(tmp_import_from_155__module);
    tmp_import_from_155__module = NULL;
    {
        PyObject *tmp_assign_source_1019;
        PyObject *tmp_import_name_from_860;
        PyObject *tmp_name_value_552;
        PyObject *tmp_globals_arg_value_552;
        PyObject *tmp_locals_arg_value_552;
        PyObject *tmp_fromlist_value_552;
        PyObject *tmp_level_value_552;
        tmp_name_value_552 = mod_consts[1969];
        tmp_globals_arg_value_552 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_552 = Py_None;
        tmp_fromlist_value_552 = mod_consts[1970];
        tmp_level_value_552 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1139;
        tmp_import_name_from_860 = IMPORT_MODULE5(tmp_name_value_552, tmp_globals_arg_value_552, tmp_locals_arg_value_552, tmp_fromlist_value_552, tmp_level_value_552);
        if (tmp_import_name_from_860 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1139;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_860)) {
            tmp_assign_source_1019 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_860,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1971],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1019 = IMPORT_NAME(tmp_import_name_from_860, mod_consts[1971]);
        }

        Py_DECREF(tmp_import_name_from_860);
        if (tmp_assign_source_1019 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1139;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1971], tmp_assign_source_1019);
    }
    {
        PyObject *tmp_assign_source_1020;
        PyObject *tmp_import_name_from_861;
        PyObject *tmp_name_value_553;
        PyObject *tmp_globals_arg_value_553;
        PyObject *tmp_locals_arg_value_553;
        PyObject *tmp_fromlist_value_553;
        PyObject *tmp_level_value_553;
        tmp_name_value_553 = mod_consts[1972];
        tmp_globals_arg_value_553 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_553 = Py_None;
        tmp_fromlist_value_553 = mod_consts[1973];
        tmp_level_value_553 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1140;
        tmp_import_name_from_861 = IMPORT_MODULE5(tmp_name_value_553, tmp_globals_arg_value_553, tmp_locals_arg_value_553, tmp_fromlist_value_553, tmp_level_value_553);
        if (tmp_import_name_from_861 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1140;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_861)) {
            tmp_assign_source_1020 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_861,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1974],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1020 = IMPORT_NAME(tmp_import_name_from_861, mod_consts[1974]);
        }

        Py_DECREF(tmp_import_name_from_861);
        if (tmp_assign_source_1020 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1140;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1974], tmp_assign_source_1020);
    }
    {
        PyObject *tmp_assign_source_1021;
        PyObject *tmp_name_value_554;
        PyObject *tmp_globals_arg_value_554;
        PyObject *tmp_locals_arg_value_554;
        PyObject *tmp_fromlist_value_554;
        PyObject *tmp_level_value_554;
        tmp_name_value_554 = mod_consts[1975];
        tmp_globals_arg_value_554 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_554 = Py_None;
        tmp_fromlist_value_554 = mod_consts[1976];
        tmp_level_value_554 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1141;
        tmp_assign_source_1021 = IMPORT_MODULE5(tmp_name_value_554, tmp_globals_arg_value_554, tmp_locals_arg_value_554, tmp_fromlist_value_554, tmp_level_value_554);
        if (tmp_assign_source_1021 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1141;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_156__module == NULL);
        tmp_import_from_156__module = tmp_assign_source_1021;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1022;
        PyObject *tmp_import_name_from_862;
        CHECK_OBJECT(tmp_import_from_156__module);
        tmp_import_name_from_862 = tmp_import_from_156__module;
        if (PyModule_Check(tmp_import_name_from_862)) {
            tmp_assign_source_1022 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_862,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1977],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1022 = IMPORT_NAME(tmp_import_name_from_862, mod_consts[1977]);
        }

        if (tmp_assign_source_1022 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1141;

            goto try_except_handler_156;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1977], tmp_assign_source_1022);
    }
    {
        PyObject *tmp_assign_source_1023;
        PyObject *tmp_import_name_from_863;
        CHECK_OBJECT(tmp_import_from_156__module);
        tmp_import_name_from_863 = tmp_import_from_156__module;
        if (PyModule_Check(tmp_import_name_from_863)) {
            tmp_assign_source_1023 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_863,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1978],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1023 = IMPORT_NAME(tmp_import_name_from_863, mod_consts[1978]);
        }

        if (tmp_assign_source_1023 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1141;

            goto try_except_handler_156;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1978], tmp_assign_source_1023);
    }
    goto try_end_156;
    // Exception handler code:
    try_except_handler_156:;
    exception_keeper_type_156 = exception_type;
    exception_keeper_value_156 = exception_value;
    exception_keeper_tb_156 = exception_tb;
    exception_keeper_lineno_156 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_156__module);
    Py_DECREF(tmp_import_from_156__module);
    tmp_import_from_156__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_156;
    exception_value = exception_keeper_value_156;
    exception_tb = exception_keeper_tb_156;
    exception_lineno = exception_keeper_lineno_156;

    goto frame_exception_exit_1;
    // End of try:
    try_end_156:;
    CHECK_OBJECT(tmp_import_from_156__module);
    Py_DECREF(tmp_import_from_156__module);
    tmp_import_from_156__module = NULL;
    {
        PyObject *tmp_assign_source_1024;
        PyObject *tmp_name_value_555;
        PyObject *tmp_globals_arg_value_555;
        PyObject *tmp_locals_arg_value_555;
        PyObject *tmp_fromlist_value_555;
        PyObject *tmp_level_value_555;
        tmp_name_value_555 = mod_consts[1979];
        tmp_globals_arg_value_555 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_555 = Py_None;
        tmp_fromlist_value_555 = mod_consts[1980];
        tmp_level_value_555 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1145;
        tmp_assign_source_1024 = IMPORT_MODULE5(tmp_name_value_555, tmp_globals_arg_value_555, tmp_locals_arg_value_555, tmp_fromlist_value_555, tmp_level_value_555);
        if (tmp_assign_source_1024 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1145;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_157__module == NULL);
        tmp_import_from_157__module = tmp_assign_source_1024;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1025;
        PyObject *tmp_import_name_from_864;
        CHECK_OBJECT(tmp_import_from_157__module);
        tmp_import_name_from_864 = tmp_import_from_157__module;
        if (PyModule_Check(tmp_import_name_from_864)) {
            tmp_assign_source_1025 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_864,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1981],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1025 = IMPORT_NAME(tmp_import_name_from_864, mod_consts[1981]);
        }

        if (tmp_assign_source_1025 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1145;

            goto try_except_handler_157;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1981], tmp_assign_source_1025);
    }
    {
        PyObject *tmp_assign_source_1026;
        PyObject *tmp_import_name_from_865;
        CHECK_OBJECT(tmp_import_from_157__module);
        tmp_import_name_from_865 = tmp_import_from_157__module;
        if (PyModule_Check(tmp_import_name_from_865)) {
            tmp_assign_source_1026 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_865,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1982],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1026 = IMPORT_NAME(tmp_import_name_from_865, mod_consts[1982]);
        }

        if (tmp_assign_source_1026 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1145;

            goto try_except_handler_157;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1982], tmp_assign_source_1026);
    }
    goto try_end_157;
    // Exception handler code:
    try_except_handler_157:;
    exception_keeper_type_157 = exception_type;
    exception_keeper_value_157 = exception_value;
    exception_keeper_tb_157 = exception_tb;
    exception_keeper_lineno_157 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_157__module);
    Py_DECREF(tmp_import_from_157__module);
    tmp_import_from_157__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_157;
    exception_value = exception_keeper_value_157;
    exception_tb = exception_keeper_tb_157;
    exception_lineno = exception_keeper_lineno_157;

    goto frame_exception_exit_1;
    // End of try:
    try_end_157:;
    CHECK_OBJECT(tmp_import_from_157__module);
    Py_DECREF(tmp_import_from_157__module);
    tmp_import_from_157__module = NULL;
    {
        PyObject *tmp_assign_source_1027;
        PyObject *tmp_import_name_from_866;
        PyObject *tmp_name_value_556;
        PyObject *tmp_globals_arg_value_556;
        PyObject *tmp_locals_arg_value_556;
        PyObject *tmp_fromlist_value_556;
        PyObject *tmp_level_value_556;
        tmp_name_value_556 = mod_consts[1983];
        tmp_globals_arg_value_556 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_556 = Py_None;
        tmp_fromlist_value_556 = mod_consts[1984];
        tmp_level_value_556 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1149;
        tmp_import_name_from_866 = IMPORT_MODULE5(tmp_name_value_556, tmp_globals_arg_value_556, tmp_locals_arg_value_556, tmp_fromlist_value_556, tmp_level_value_556);
        if (tmp_import_name_from_866 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1149;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_866)) {
            tmp_assign_source_1027 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_866,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1985],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1027 = IMPORT_NAME(tmp_import_name_from_866, mod_consts[1985]);
        }

        Py_DECREF(tmp_import_name_from_866);
        if (tmp_assign_source_1027 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1149;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1985], tmp_assign_source_1027);
    }
    {
        PyObject *tmp_assign_source_1028;
        PyObject *tmp_import_name_from_867;
        PyObject *tmp_name_value_557;
        PyObject *tmp_globals_arg_value_557;
        PyObject *tmp_locals_arg_value_557;
        PyObject *tmp_fromlist_value_557;
        PyObject *tmp_level_value_557;
        tmp_name_value_557 = mod_consts[1986];
        tmp_globals_arg_value_557 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_557 = Py_None;
        tmp_fromlist_value_557 = mod_consts[1987];
        tmp_level_value_557 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1150;
        tmp_import_name_from_867 = IMPORT_MODULE5(tmp_name_value_557, tmp_globals_arg_value_557, tmp_locals_arg_value_557, tmp_fromlist_value_557, tmp_level_value_557);
        if (tmp_import_name_from_867 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1150;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_867)) {
            tmp_assign_source_1028 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_867,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1988],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1028 = IMPORT_NAME(tmp_import_name_from_867, mod_consts[1988]);
        }

        Py_DECREF(tmp_import_name_from_867);
        if (tmp_assign_source_1028 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1150;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1988], tmp_assign_source_1028);
    }
    {
        PyObject *tmp_assign_source_1029;
        PyObject *tmp_import_name_from_868;
        PyObject *tmp_name_value_558;
        PyObject *tmp_globals_arg_value_558;
        PyObject *tmp_locals_arg_value_558;
        PyObject *tmp_fromlist_value_558;
        PyObject *tmp_level_value_558;
        tmp_name_value_558 = mod_consts[1989];
        tmp_globals_arg_value_558 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_558 = Py_None;
        tmp_fromlist_value_558 = mod_consts[1990];
        tmp_level_value_558 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1151;
        tmp_import_name_from_868 = IMPORT_MODULE5(tmp_name_value_558, tmp_globals_arg_value_558, tmp_locals_arg_value_558, tmp_fromlist_value_558, tmp_level_value_558);
        if (tmp_import_name_from_868 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1151;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_868)) {
            tmp_assign_source_1029 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_868,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1991],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1029 = IMPORT_NAME(tmp_import_name_from_868, mod_consts[1991]);
        }

        Py_DECREF(tmp_import_name_from_868);
        if (tmp_assign_source_1029 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1151;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1991], tmp_assign_source_1029);
    }
    {
        PyObject *tmp_assign_source_1030;
        PyObject *tmp_name_value_559;
        PyObject *tmp_globals_arg_value_559;
        PyObject *tmp_locals_arg_value_559;
        PyObject *tmp_fromlist_value_559;
        PyObject *tmp_level_value_559;
        tmp_name_value_559 = mod_consts[1992];
        tmp_globals_arg_value_559 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_559 = Py_None;
        tmp_fromlist_value_559 = mod_consts[1993];
        tmp_level_value_559 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1152;
        tmp_assign_source_1030 = IMPORT_MODULE5(tmp_name_value_559, tmp_globals_arg_value_559, tmp_locals_arg_value_559, tmp_fromlist_value_559, tmp_level_value_559);
        if (tmp_assign_source_1030 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1152;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_158__module == NULL);
        tmp_import_from_158__module = tmp_assign_source_1030;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1031;
        PyObject *tmp_import_name_from_869;
        CHECK_OBJECT(tmp_import_from_158__module);
        tmp_import_name_from_869 = tmp_import_from_158__module;
        if (PyModule_Check(tmp_import_name_from_869)) {
            tmp_assign_source_1031 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_869,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1994],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1031 = IMPORT_NAME(tmp_import_name_from_869, mod_consts[1994]);
        }

        if (tmp_assign_source_1031 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1152;

            goto try_except_handler_158;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1994], tmp_assign_source_1031);
    }
    {
        PyObject *tmp_assign_source_1032;
        PyObject *tmp_import_name_from_870;
        CHECK_OBJECT(tmp_import_from_158__module);
        tmp_import_name_from_870 = tmp_import_from_158__module;
        if (PyModule_Check(tmp_import_name_from_870)) {
            tmp_assign_source_1032 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_870,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1995],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1032 = IMPORT_NAME(tmp_import_name_from_870, mod_consts[1995]);
        }

        if (tmp_assign_source_1032 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1152;

            goto try_except_handler_158;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1995], tmp_assign_source_1032);
    }
    goto try_end_158;
    // Exception handler code:
    try_except_handler_158:;
    exception_keeper_type_158 = exception_type;
    exception_keeper_value_158 = exception_value;
    exception_keeper_tb_158 = exception_tb;
    exception_keeper_lineno_158 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_158__module);
    Py_DECREF(tmp_import_from_158__module);
    tmp_import_from_158__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_158;
    exception_value = exception_keeper_value_158;
    exception_tb = exception_keeper_tb_158;
    exception_lineno = exception_keeper_lineno_158;

    goto frame_exception_exit_1;
    // End of try:
    try_end_158:;
    CHECK_OBJECT(tmp_import_from_158__module);
    Py_DECREF(tmp_import_from_158__module);
    tmp_import_from_158__module = NULL;
    {
        PyObject *tmp_assign_source_1033;
        PyObject *tmp_name_value_560;
        PyObject *tmp_globals_arg_value_560;
        PyObject *tmp_locals_arg_value_560;
        PyObject *tmp_fromlist_value_560;
        PyObject *tmp_level_value_560;
        tmp_name_value_560 = mod_consts[1996];
        tmp_globals_arg_value_560 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_560 = Py_None;
        tmp_fromlist_value_560 = mod_consts[1997];
        tmp_level_value_560 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1156;
        tmp_assign_source_1033 = IMPORT_MODULE5(tmp_name_value_560, tmp_globals_arg_value_560, tmp_locals_arg_value_560, tmp_fromlist_value_560, tmp_level_value_560);
        if (tmp_assign_source_1033 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1156;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_159__module == NULL);
        tmp_import_from_159__module = tmp_assign_source_1033;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1034;
        PyObject *tmp_import_name_from_871;
        CHECK_OBJECT(tmp_import_from_159__module);
        tmp_import_name_from_871 = tmp_import_from_159__module;
        if (PyModule_Check(tmp_import_name_from_871)) {
            tmp_assign_source_1034 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_871,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1998],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1034 = IMPORT_NAME(tmp_import_name_from_871, mod_consts[1998]);
        }

        if (tmp_assign_source_1034 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1156;

            goto try_except_handler_159;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1998], tmp_assign_source_1034);
    }
    {
        PyObject *tmp_assign_source_1035;
        PyObject *tmp_import_name_from_872;
        CHECK_OBJECT(tmp_import_from_159__module);
        tmp_import_name_from_872 = tmp_import_from_159__module;
        if (PyModule_Check(tmp_import_name_from_872)) {
            tmp_assign_source_1035 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_872,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[1999],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1035 = IMPORT_NAME(tmp_import_name_from_872, mod_consts[1999]);
        }

        if (tmp_assign_source_1035 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1156;

            goto try_except_handler_159;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[1999], tmp_assign_source_1035);
    }
    {
        PyObject *tmp_assign_source_1036;
        PyObject *tmp_import_name_from_873;
        CHECK_OBJECT(tmp_import_from_159__module);
        tmp_import_name_from_873 = tmp_import_from_159__module;
        if (PyModule_Check(tmp_import_name_from_873)) {
            tmp_assign_source_1036 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_873,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2000],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1036 = IMPORT_NAME(tmp_import_name_from_873, mod_consts[2000]);
        }

        if (tmp_assign_source_1036 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1156;

            goto try_except_handler_159;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2000], tmp_assign_source_1036);
    }
    {
        PyObject *tmp_assign_source_1037;
        PyObject *tmp_import_name_from_874;
        CHECK_OBJECT(tmp_import_from_159__module);
        tmp_import_name_from_874 = tmp_import_from_159__module;
        if (PyModule_Check(tmp_import_name_from_874)) {
            tmp_assign_source_1037 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_874,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2001],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1037 = IMPORT_NAME(tmp_import_name_from_874, mod_consts[2001]);
        }

        if (tmp_assign_source_1037 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1156;

            goto try_except_handler_159;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2001], tmp_assign_source_1037);
    }
    goto try_end_159;
    // Exception handler code:
    try_except_handler_159:;
    exception_keeper_type_159 = exception_type;
    exception_keeper_value_159 = exception_value;
    exception_keeper_tb_159 = exception_tb;
    exception_keeper_lineno_159 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_159__module);
    Py_DECREF(tmp_import_from_159__module);
    tmp_import_from_159__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_159;
    exception_value = exception_keeper_value_159;
    exception_tb = exception_keeper_tb_159;
    exception_lineno = exception_keeper_lineno_159;

    goto frame_exception_exit_1;
    // End of try:
    try_end_159:;
    CHECK_OBJECT(tmp_import_from_159__module);
    Py_DECREF(tmp_import_from_159__module);
    tmp_import_from_159__module = NULL;
    {
        PyObject *tmp_assign_source_1038;
        PyObject *tmp_import_name_from_875;
        PyObject *tmp_name_value_561;
        PyObject *tmp_globals_arg_value_561;
        PyObject *tmp_locals_arg_value_561;
        PyObject *tmp_fromlist_value_561;
        PyObject *tmp_level_value_561;
        tmp_name_value_561 = mod_consts[2002];
        tmp_globals_arg_value_561 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_561 = Py_None;
        tmp_fromlist_value_561 = mod_consts[2003];
        tmp_level_value_561 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1162;
        tmp_import_name_from_875 = IMPORT_MODULE5(tmp_name_value_561, tmp_globals_arg_value_561, tmp_locals_arg_value_561, tmp_fromlist_value_561, tmp_level_value_561);
        if (tmp_import_name_from_875 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1162;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_875)) {
            tmp_assign_source_1038 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_875,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2004],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1038 = IMPORT_NAME(tmp_import_name_from_875, mod_consts[2004]);
        }

        Py_DECREF(tmp_import_name_from_875);
        if (tmp_assign_source_1038 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1162;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2004], tmp_assign_source_1038);
    }
    {
        PyObject *tmp_assign_source_1039;
        PyObject *tmp_import_name_from_876;
        PyObject *tmp_name_value_562;
        PyObject *tmp_globals_arg_value_562;
        PyObject *tmp_locals_arg_value_562;
        PyObject *tmp_fromlist_value_562;
        PyObject *tmp_level_value_562;
        tmp_name_value_562 = mod_consts[2005];
        tmp_globals_arg_value_562 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_562 = Py_None;
        tmp_fromlist_value_562 = mod_consts[2006];
        tmp_level_value_562 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1163;
        tmp_import_name_from_876 = IMPORT_MODULE5(tmp_name_value_562, tmp_globals_arg_value_562, tmp_locals_arg_value_562, tmp_fromlist_value_562, tmp_level_value_562);
        if (tmp_import_name_from_876 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1163;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_876)) {
            tmp_assign_source_1039 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_876,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2007],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1039 = IMPORT_NAME(tmp_import_name_from_876, mod_consts[2007]);
        }

        Py_DECREF(tmp_import_name_from_876);
        if (tmp_assign_source_1039 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1163;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2007], tmp_assign_source_1039);
    }
    {
        PyObject *tmp_assign_source_1040;
        PyObject *tmp_name_value_563;
        PyObject *tmp_globals_arg_value_563;
        PyObject *tmp_locals_arg_value_563;
        PyObject *tmp_fromlist_value_563;
        PyObject *tmp_level_value_563;
        tmp_name_value_563 = mod_consts[2008];
        tmp_globals_arg_value_563 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_563 = Py_None;
        tmp_fromlist_value_563 = mod_consts[2009];
        tmp_level_value_563 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1164;
        tmp_assign_source_1040 = IMPORT_MODULE5(tmp_name_value_563, tmp_globals_arg_value_563, tmp_locals_arg_value_563, tmp_fromlist_value_563, tmp_level_value_563);
        if (tmp_assign_source_1040 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1164;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_160__module == NULL);
        tmp_import_from_160__module = tmp_assign_source_1040;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1041;
        PyObject *tmp_import_name_from_877;
        CHECK_OBJECT(tmp_import_from_160__module);
        tmp_import_name_from_877 = tmp_import_from_160__module;
        if (PyModule_Check(tmp_import_name_from_877)) {
            tmp_assign_source_1041 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_877,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2010],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1041 = IMPORT_NAME(tmp_import_name_from_877, mod_consts[2010]);
        }

        if (tmp_assign_source_1041 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1164;

            goto try_except_handler_160;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2010], tmp_assign_source_1041);
    }
    {
        PyObject *tmp_assign_source_1042;
        PyObject *tmp_import_name_from_878;
        CHECK_OBJECT(tmp_import_from_160__module);
        tmp_import_name_from_878 = tmp_import_from_160__module;
        if (PyModule_Check(tmp_import_name_from_878)) {
            tmp_assign_source_1042 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_878,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2011],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1042 = IMPORT_NAME(tmp_import_name_from_878, mod_consts[2011]);
        }

        if (tmp_assign_source_1042 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1164;

            goto try_except_handler_160;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2011], tmp_assign_source_1042);
    }
    goto try_end_160;
    // Exception handler code:
    try_except_handler_160:;
    exception_keeper_type_160 = exception_type;
    exception_keeper_value_160 = exception_value;
    exception_keeper_tb_160 = exception_tb;
    exception_keeper_lineno_160 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_160__module);
    Py_DECREF(tmp_import_from_160__module);
    tmp_import_from_160__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_160;
    exception_value = exception_keeper_value_160;
    exception_tb = exception_keeper_tb_160;
    exception_lineno = exception_keeper_lineno_160;

    goto frame_exception_exit_1;
    // End of try:
    try_end_160:;
    CHECK_OBJECT(tmp_import_from_160__module);
    Py_DECREF(tmp_import_from_160__module);
    tmp_import_from_160__module = NULL;
    {
        PyObject *tmp_assign_source_1043;
        PyObject *tmp_import_name_from_879;
        PyObject *tmp_name_value_564;
        PyObject *tmp_globals_arg_value_564;
        PyObject *tmp_locals_arg_value_564;
        PyObject *tmp_fromlist_value_564;
        PyObject *tmp_level_value_564;
        tmp_name_value_564 = mod_consts[2012];
        tmp_globals_arg_value_564 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_564 = Py_None;
        tmp_fromlist_value_564 = mod_consts[2013];
        tmp_level_value_564 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1168;
        tmp_import_name_from_879 = IMPORT_MODULE5(tmp_name_value_564, tmp_globals_arg_value_564, tmp_locals_arg_value_564, tmp_fromlist_value_564, tmp_level_value_564);
        if (tmp_import_name_from_879 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1168;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_879)) {
            tmp_assign_source_1043 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_879,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2014],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1043 = IMPORT_NAME(tmp_import_name_from_879, mod_consts[2014]);
        }

        Py_DECREF(tmp_import_name_from_879);
        if (tmp_assign_source_1043 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1168;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2014], tmp_assign_source_1043);
    }
    {
        PyObject *tmp_assign_source_1044;
        PyObject *tmp_import_name_from_880;
        PyObject *tmp_name_value_565;
        PyObject *tmp_globals_arg_value_565;
        PyObject *tmp_locals_arg_value_565;
        PyObject *tmp_fromlist_value_565;
        PyObject *tmp_level_value_565;
        tmp_name_value_565 = mod_consts[2015];
        tmp_globals_arg_value_565 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_565 = Py_None;
        tmp_fromlist_value_565 = mod_consts[2016];
        tmp_level_value_565 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1169;
        tmp_import_name_from_880 = IMPORT_MODULE5(tmp_name_value_565, tmp_globals_arg_value_565, tmp_locals_arg_value_565, tmp_fromlist_value_565, tmp_level_value_565);
        if (tmp_import_name_from_880 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1169;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_880)) {
            tmp_assign_source_1044 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_880,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2017],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1044 = IMPORT_NAME(tmp_import_name_from_880, mod_consts[2017]);
        }

        Py_DECREF(tmp_import_name_from_880);
        if (tmp_assign_source_1044 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1169;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2017], tmp_assign_source_1044);
    }
    {
        PyObject *tmp_assign_source_1045;
        PyObject *tmp_import_name_from_881;
        PyObject *tmp_name_value_566;
        PyObject *tmp_globals_arg_value_566;
        PyObject *tmp_locals_arg_value_566;
        PyObject *tmp_fromlist_value_566;
        PyObject *tmp_level_value_566;
        tmp_name_value_566 = mod_consts[2018];
        tmp_globals_arg_value_566 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_566 = Py_None;
        tmp_fromlist_value_566 = mod_consts[2019];
        tmp_level_value_566 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1170;
        tmp_import_name_from_881 = IMPORT_MODULE5(tmp_name_value_566, tmp_globals_arg_value_566, tmp_locals_arg_value_566, tmp_fromlist_value_566, tmp_level_value_566);
        if (tmp_import_name_from_881 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1170;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_881)) {
            tmp_assign_source_1045 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_881,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2020],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1045 = IMPORT_NAME(tmp_import_name_from_881, mod_consts[2020]);
        }

        Py_DECREF(tmp_import_name_from_881);
        if (tmp_assign_source_1045 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1170;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2020], tmp_assign_source_1045);
    }
    {
        PyObject *tmp_assign_source_1046;
        PyObject *tmp_name_value_567;
        PyObject *tmp_globals_arg_value_567;
        PyObject *tmp_locals_arg_value_567;
        PyObject *tmp_fromlist_value_567;
        PyObject *tmp_level_value_567;
        tmp_name_value_567 = mod_consts[2021];
        tmp_globals_arg_value_567 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_567 = Py_None;
        tmp_fromlist_value_567 = mod_consts[2022];
        tmp_level_value_567 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1171;
        tmp_assign_source_1046 = IMPORT_MODULE5(tmp_name_value_567, tmp_globals_arg_value_567, tmp_locals_arg_value_567, tmp_fromlist_value_567, tmp_level_value_567);
        if (tmp_assign_source_1046 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1171;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_161__module == NULL);
        tmp_import_from_161__module = tmp_assign_source_1046;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1047;
        PyObject *tmp_import_name_from_882;
        CHECK_OBJECT(tmp_import_from_161__module);
        tmp_import_name_from_882 = tmp_import_from_161__module;
        if (PyModule_Check(tmp_import_name_from_882)) {
            tmp_assign_source_1047 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_882,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2023],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1047 = IMPORT_NAME(tmp_import_name_from_882, mod_consts[2023]);
        }

        if (tmp_assign_source_1047 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1171;

            goto try_except_handler_161;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2023], tmp_assign_source_1047);
    }
    {
        PyObject *tmp_assign_source_1048;
        PyObject *tmp_import_name_from_883;
        CHECK_OBJECT(tmp_import_from_161__module);
        tmp_import_name_from_883 = tmp_import_from_161__module;
        if (PyModule_Check(tmp_import_name_from_883)) {
            tmp_assign_source_1048 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_883,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2024],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1048 = IMPORT_NAME(tmp_import_name_from_883, mod_consts[2024]);
        }

        if (tmp_assign_source_1048 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1171;

            goto try_except_handler_161;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2024], tmp_assign_source_1048);
    }
    {
        PyObject *tmp_assign_source_1049;
        PyObject *tmp_import_name_from_884;
        CHECK_OBJECT(tmp_import_from_161__module);
        tmp_import_name_from_884 = tmp_import_from_161__module;
        if (PyModule_Check(tmp_import_name_from_884)) {
            tmp_assign_source_1049 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_884,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2025],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1049 = IMPORT_NAME(tmp_import_name_from_884, mod_consts[2025]);
        }

        if (tmp_assign_source_1049 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1171;

            goto try_except_handler_161;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2025], tmp_assign_source_1049);
    }
    goto try_end_161;
    // Exception handler code:
    try_except_handler_161:;
    exception_keeper_type_161 = exception_type;
    exception_keeper_value_161 = exception_value;
    exception_keeper_tb_161 = exception_tb;
    exception_keeper_lineno_161 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_161__module);
    Py_DECREF(tmp_import_from_161__module);
    tmp_import_from_161__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_161;
    exception_value = exception_keeper_value_161;
    exception_tb = exception_keeper_tb_161;
    exception_lineno = exception_keeper_lineno_161;

    goto frame_exception_exit_1;
    // End of try:
    try_end_161:;
    CHECK_OBJECT(tmp_import_from_161__module);
    Py_DECREF(tmp_import_from_161__module);
    tmp_import_from_161__module = NULL;
    {
        PyObject *tmp_assign_source_1050;
        PyObject *tmp_import_name_from_885;
        PyObject *tmp_name_value_568;
        PyObject *tmp_globals_arg_value_568;
        PyObject *tmp_locals_arg_value_568;
        PyObject *tmp_fromlist_value_568;
        PyObject *tmp_level_value_568;
        tmp_name_value_568 = mod_consts[2026];
        tmp_globals_arg_value_568 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_568 = Py_None;
        tmp_fromlist_value_568 = mod_consts[2027];
        tmp_level_value_568 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1176;
        tmp_import_name_from_885 = IMPORT_MODULE5(tmp_name_value_568, tmp_globals_arg_value_568, tmp_locals_arg_value_568, tmp_fromlist_value_568, tmp_level_value_568);
        if (tmp_import_name_from_885 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1176;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_885)) {
            tmp_assign_source_1050 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_885,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2028],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1050 = IMPORT_NAME(tmp_import_name_from_885, mod_consts[2028]);
        }

        Py_DECREF(tmp_import_name_from_885);
        if (tmp_assign_source_1050 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1176;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2028], tmp_assign_source_1050);
    }
    {
        PyObject *tmp_assign_source_1051;
        PyObject *tmp_import_name_from_886;
        PyObject *tmp_name_value_569;
        PyObject *tmp_globals_arg_value_569;
        PyObject *tmp_locals_arg_value_569;
        PyObject *tmp_fromlist_value_569;
        PyObject *tmp_level_value_569;
        tmp_name_value_569 = mod_consts[2029];
        tmp_globals_arg_value_569 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_569 = Py_None;
        tmp_fromlist_value_569 = mod_consts[2030];
        tmp_level_value_569 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1177;
        tmp_import_name_from_886 = IMPORT_MODULE5(tmp_name_value_569, tmp_globals_arg_value_569, tmp_locals_arg_value_569, tmp_fromlist_value_569, tmp_level_value_569);
        if (tmp_import_name_from_886 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1177;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_886)) {
            tmp_assign_source_1051 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_886,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2031],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1051 = IMPORT_NAME(tmp_import_name_from_886, mod_consts[2031]);
        }

        Py_DECREF(tmp_import_name_from_886);
        if (tmp_assign_source_1051 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1177;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2031], tmp_assign_source_1051);
    }
    {
        PyObject *tmp_assign_source_1052;
        PyObject *tmp_import_name_from_887;
        PyObject *tmp_name_value_570;
        PyObject *tmp_globals_arg_value_570;
        PyObject *tmp_locals_arg_value_570;
        PyObject *tmp_fromlist_value_570;
        PyObject *tmp_level_value_570;
        tmp_name_value_570 = mod_consts[2032];
        tmp_globals_arg_value_570 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_570 = Py_None;
        tmp_fromlist_value_570 = mod_consts[2033];
        tmp_level_value_570 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1178;
        tmp_import_name_from_887 = IMPORT_MODULE5(tmp_name_value_570, tmp_globals_arg_value_570, tmp_locals_arg_value_570, tmp_fromlist_value_570, tmp_level_value_570);
        if (tmp_import_name_from_887 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1178;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_887)) {
            tmp_assign_source_1052 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_887,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2034],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1052 = IMPORT_NAME(tmp_import_name_from_887, mod_consts[2034]);
        }

        Py_DECREF(tmp_import_name_from_887);
        if (tmp_assign_source_1052 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1178;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2034], tmp_assign_source_1052);
    }
    {
        PyObject *tmp_assign_source_1053;
        PyObject *tmp_import_name_from_888;
        PyObject *tmp_name_value_571;
        PyObject *tmp_globals_arg_value_571;
        PyObject *tmp_locals_arg_value_571;
        PyObject *tmp_fromlist_value_571;
        PyObject *tmp_level_value_571;
        tmp_name_value_571 = mod_consts[2035];
        tmp_globals_arg_value_571 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_571 = Py_None;
        tmp_fromlist_value_571 = mod_consts[2036];
        tmp_level_value_571 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1179;
        tmp_import_name_from_888 = IMPORT_MODULE5(tmp_name_value_571, tmp_globals_arg_value_571, tmp_locals_arg_value_571, tmp_fromlist_value_571, tmp_level_value_571);
        if (tmp_import_name_from_888 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1179;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_888)) {
            tmp_assign_source_1053 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_888,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2037],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1053 = IMPORT_NAME(tmp_import_name_from_888, mod_consts[2037]);
        }

        Py_DECREF(tmp_import_name_from_888);
        if (tmp_assign_source_1053 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1179;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2037], tmp_assign_source_1053);
    }
    {
        PyObject *tmp_assign_source_1054;
        PyObject *tmp_import_name_from_889;
        PyObject *tmp_name_value_572;
        PyObject *tmp_globals_arg_value_572;
        PyObject *tmp_locals_arg_value_572;
        PyObject *tmp_fromlist_value_572;
        PyObject *tmp_level_value_572;
        tmp_name_value_572 = mod_consts[2038];
        tmp_globals_arg_value_572 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_572 = Py_None;
        tmp_fromlist_value_572 = mod_consts[2039];
        tmp_level_value_572 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1180;
        tmp_import_name_from_889 = IMPORT_MODULE5(tmp_name_value_572, tmp_globals_arg_value_572, tmp_locals_arg_value_572, tmp_fromlist_value_572, tmp_level_value_572);
        if (tmp_import_name_from_889 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1180;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_889)) {
            tmp_assign_source_1054 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_889,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2040],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1054 = IMPORT_NAME(tmp_import_name_from_889, mod_consts[2040]);
        }

        Py_DECREF(tmp_import_name_from_889);
        if (tmp_assign_source_1054 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1180;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2040], tmp_assign_source_1054);
    }
    {
        PyObject *tmp_assign_source_1055;
        PyObject *tmp_import_name_from_890;
        PyObject *tmp_name_value_573;
        PyObject *tmp_globals_arg_value_573;
        PyObject *tmp_locals_arg_value_573;
        PyObject *tmp_fromlist_value_573;
        PyObject *tmp_level_value_573;
        tmp_name_value_573 = mod_consts[2041];
        tmp_globals_arg_value_573 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_573 = Py_None;
        tmp_fromlist_value_573 = mod_consts[2042];
        tmp_level_value_573 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1181;
        tmp_import_name_from_890 = IMPORT_MODULE5(tmp_name_value_573, tmp_globals_arg_value_573, tmp_locals_arg_value_573, tmp_fromlist_value_573, tmp_level_value_573);
        if (tmp_import_name_from_890 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1181;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_890)) {
            tmp_assign_source_1055 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_890,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2043],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1055 = IMPORT_NAME(tmp_import_name_from_890, mod_consts[2043]);
        }

        Py_DECREF(tmp_import_name_from_890);
        if (tmp_assign_source_1055 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1181;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2043], tmp_assign_source_1055);
    }
    {
        PyObject *tmp_assign_source_1056;
        PyObject *tmp_import_name_from_891;
        PyObject *tmp_name_value_574;
        PyObject *tmp_globals_arg_value_574;
        PyObject *tmp_locals_arg_value_574;
        PyObject *tmp_fromlist_value_574;
        PyObject *tmp_level_value_574;
        tmp_name_value_574 = mod_consts[2044];
        tmp_globals_arg_value_574 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_574 = Py_None;
        tmp_fromlist_value_574 = mod_consts[2045];
        tmp_level_value_574 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1182;
        tmp_import_name_from_891 = IMPORT_MODULE5(tmp_name_value_574, tmp_globals_arg_value_574, tmp_locals_arg_value_574, tmp_fromlist_value_574, tmp_level_value_574);
        if (tmp_import_name_from_891 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1182;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_891)) {
            tmp_assign_source_1056 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_891,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2046],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1056 = IMPORT_NAME(tmp_import_name_from_891, mod_consts[2046]);
        }

        Py_DECREF(tmp_import_name_from_891);
        if (tmp_assign_source_1056 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1182;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2046], tmp_assign_source_1056);
    }
    {
        PyObject *tmp_assign_source_1057;
        PyObject *tmp_name_value_575;
        PyObject *tmp_globals_arg_value_575;
        PyObject *tmp_locals_arg_value_575;
        PyObject *tmp_fromlist_value_575;
        PyObject *tmp_level_value_575;
        tmp_name_value_575 = mod_consts[2047];
        tmp_globals_arg_value_575 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_575 = Py_None;
        tmp_fromlist_value_575 = mod_consts[2048];
        tmp_level_value_575 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1183;
        tmp_assign_source_1057 = IMPORT_MODULE5(tmp_name_value_575, tmp_globals_arg_value_575, tmp_locals_arg_value_575, tmp_fromlist_value_575, tmp_level_value_575);
        if (tmp_assign_source_1057 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1183;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_162__module == NULL);
        tmp_import_from_162__module = tmp_assign_source_1057;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1058;
        PyObject *tmp_import_name_from_892;
        CHECK_OBJECT(tmp_import_from_162__module);
        tmp_import_name_from_892 = tmp_import_from_162__module;
        if (PyModule_Check(tmp_import_name_from_892)) {
            tmp_assign_source_1058 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_892,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2049],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1058 = IMPORT_NAME(tmp_import_name_from_892, mod_consts[2049]);
        }

        if (tmp_assign_source_1058 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1183;

            goto try_except_handler_162;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2049], tmp_assign_source_1058);
    }
    {
        PyObject *tmp_assign_source_1059;
        PyObject *tmp_import_name_from_893;
        CHECK_OBJECT(tmp_import_from_162__module);
        tmp_import_name_from_893 = tmp_import_from_162__module;
        if (PyModule_Check(tmp_import_name_from_893)) {
            tmp_assign_source_1059 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_893,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2050],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1059 = IMPORT_NAME(tmp_import_name_from_893, mod_consts[2050]);
        }

        if (tmp_assign_source_1059 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1183;

            goto try_except_handler_162;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2050], tmp_assign_source_1059);
    }
    goto try_end_162;
    // Exception handler code:
    try_except_handler_162:;
    exception_keeper_type_162 = exception_type;
    exception_keeper_value_162 = exception_value;
    exception_keeper_tb_162 = exception_tb;
    exception_keeper_lineno_162 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_162__module);
    Py_DECREF(tmp_import_from_162__module);
    tmp_import_from_162__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_162;
    exception_value = exception_keeper_value_162;
    exception_tb = exception_keeper_tb_162;
    exception_lineno = exception_keeper_lineno_162;

    goto frame_exception_exit_1;
    // End of try:
    try_end_162:;
    CHECK_OBJECT(tmp_import_from_162__module);
    Py_DECREF(tmp_import_from_162__module);
    tmp_import_from_162__module = NULL;
    {
        PyObject *tmp_assign_source_1060;
        PyObject *tmp_name_value_576;
        PyObject *tmp_globals_arg_value_576;
        PyObject *tmp_locals_arg_value_576;
        PyObject *tmp_fromlist_value_576;
        PyObject *tmp_level_value_576;
        tmp_name_value_576 = mod_consts[2051];
        tmp_globals_arg_value_576 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_576 = Py_None;
        tmp_fromlist_value_576 = mod_consts[2052];
        tmp_level_value_576 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1187;
        tmp_assign_source_1060 = IMPORT_MODULE5(tmp_name_value_576, tmp_globals_arg_value_576, tmp_locals_arg_value_576, tmp_fromlist_value_576, tmp_level_value_576);
        if (tmp_assign_source_1060 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1187;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_163__module == NULL);
        tmp_import_from_163__module = tmp_assign_source_1060;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1061;
        PyObject *tmp_import_name_from_894;
        CHECK_OBJECT(tmp_import_from_163__module);
        tmp_import_name_from_894 = tmp_import_from_163__module;
        if (PyModule_Check(tmp_import_name_from_894)) {
            tmp_assign_source_1061 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_894,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2053],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1061 = IMPORT_NAME(tmp_import_name_from_894, mod_consts[2053]);
        }

        if (tmp_assign_source_1061 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1187;

            goto try_except_handler_163;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2053], tmp_assign_source_1061);
    }
    {
        PyObject *tmp_assign_source_1062;
        PyObject *tmp_import_name_from_895;
        CHECK_OBJECT(tmp_import_from_163__module);
        tmp_import_name_from_895 = tmp_import_from_163__module;
        if (PyModule_Check(tmp_import_name_from_895)) {
            tmp_assign_source_1062 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_895,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2054],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1062 = IMPORT_NAME(tmp_import_name_from_895, mod_consts[2054]);
        }

        if (tmp_assign_source_1062 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1187;

            goto try_except_handler_163;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2054], tmp_assign_source_1062);
    }
    {
        PyObject *tmp_assign_source_1063;
        PyObject *tmp_import_name_from_896;
        CHECK_OBJECT(tmp_import_from_163__module);
        tmp_import_name_from_896 = tmp_import_from_163__module;
        if (PyModule_Check(tmp_import_name_from_896)) {
            tmp_assign_source_1063 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_896,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2055],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1063 = IMPORT_NAME(tmp_import_name_from_896, mod_consts[2055]);
        }

        if (tmp_assign_source_1063 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1187;

            goto try_except_handler_163;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2055], tmp_assign_source_1063);
    }
    {
        PyObject *tmp_assign_source_1064;
        PyObject *tmp_import_name_from_897;
        CHECK_OBJECT(tmp_import_from_163__module);
        tmp_import_name_from_897 = tmp_import_from_163__module;
        if (PyModule_Check(tmp_import_name_from_897)) {
            tmp_assign_source_1064 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_897,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2056],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1064 = IMPORT_NAME(tmp_import_name_from_897, mod_consts[2056]);
        }

        if (tmp_assign_source_1064 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1187;

            goto try_except_handler_163;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2056], tmp_assign_source_1064);
    }
    goto try_end_163;
    // Exception handler code:
    try_except_handler_163:;
    exception_keeper_type_163 = exception_type;
    exception_keeper_value_163 = exception_value;
    exception_keeper_tb_163 = exception_tb;
    exception_keeper_lineno_163 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_163__module);
    Py_DECREF(tmp_import_from_163__module);
    tmp_import_from_163__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_163;
    exception_value = exception_keeper_value_163;
    exception_tb = exception_keeper_tb_163;
    exception_lineno = exception_keeper_lineno_163;

    goto frame_exception_exit_1;
    // End of try:
    try_end_163:;
    CHECK_OBJECT(tmp_import_from_163__module);
    Py_DECREF(tmp_import_from_163__module);
    tmp_import_from_163__module = NULL;
    {
        PyObject *tmp_assign_source_1065;
        PyObject *tmp_import_name_from_898;
        PyObject *tmp_name_value_577;
        PyObject *tmp_globals_arg_value_577;
        PyObject *tmp_locals_arg_value_577;
        PyObject *tmp_fromlist_value_577;
        PyObject *tmp_level_value_577;
        tmp_name_value_577 = mod_consts[2057];
        tmp_globals_arg_value_577 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_577 = Py_None;
        tmp_fromlist_value_577 = mod_consts[2058];
        tmp_level_value_577 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1193;
        tmp_import_name_from_898 = IMPORT_MODULE5(tmp_name_value_577, tmp_globals_arg_value_577, tmp_locals_arg_value_577, tmp_fromlist_value_577, tmp_level_value_577);
        if (tmp_import_name_from_898 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1193;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_898)) {
            tmp_assign_source_1065 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_898,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2059],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1065 = IMPORT_NAME(tmp_import_name_from_898, mod_consts[2059]);
        }

        Py_DECREF(tmp_import_name_from_898);
        if (tmp_assign_source_1065 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1193;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2059], tmp_assign_source_1065);
    }
    {
        PyObject *tmp_assign_source_1066;
        PyObject *tmp_import_name_from_899;
        PyObject *tmp_name_value_578;
        PyObject *tmp_globals_arg_value_578;
        PyObject *tmp_locals_arg_value_578;
        PyObject *tmp_fromlist_value_578;
        PyObject *tmp_level_value_578;
        tmp_name_value_578 = mod_consts[2060];
        tmp_globals_arg_value_578 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_578 = Py_None;
        tmp_fromlist_value_578 = mod_consts[2061];
        tmp_level_value_578 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1194;
        tmp_import_name_from_899 = IMPORT_MODULE5(tmp_name_value_578, tmp_globals_arg_value_578, tmp_locals_arg_value_578, tmp_fromlist_value_578, tmp_level_value_578);
        if (tmp_import_name_from_899 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1194;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_899)) {
            tmp_assign_source_1066 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_899,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2062],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1066 = IMPORT_NAME(tmp_import_name_from_899, mod_consts[2062]);
        }

        Py_DECREF(tmp_import_name_from_899);
        if (tmp_assign_source_1066 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1194;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2062], tmp_assign_source_1066);
    }
    {
        PyObject *tmp_assign_source_1067;
        PyObject *tmp_import_name_from_900;
        PyObject *tmp_name_value_579;
        PyObject *tmp_globals_arg_value_579;
        PyObject *tmp_locals_arg_value_579;
        PyObject *tmp_fromlist_value_579;
        PyObject *tmp_level_value_579;
        tmp_name_value_579 = mod_consts[2063];
        tmp_globals_arg_value_579 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_579 = Py_None;
        tmp_fromlist_value_579 = mod_consts[2064];
        tmp_level_value_579 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1195;
        tmp_import_name_from_900 = IMPORT_MODULE5(tmp_name_value_579, tmp_globals_arg_value_579, tmp_locals_arg_value_579, tmp_fromlist_value_579, tmp_level_value_579);
        if (tmp_import_name_from_900 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1195;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_900)) {
            tmp_assign_source_1067 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_900,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2065],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1067 = IMPORT_NAME(tmp_import_name_from_900, mod_consts[2065]);
        }

        Py_DECREF(tmp_import_name_from_900);
        if (tmp_assign_source_1067 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1195;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2065], tmp_assign_source_1067);
    }
    {
        PyObject *tmp_assign_source_1068;
        PyObject *tmp_name_value_580;
        PyObject *tmp_globals_arg_value_580;
        PyObject *tmp_locals_arg_value_580;
        PyObject *tmp_fromlist_value_580;
        PyObject *tmp_level_value_580;
        tmp_name_value_580 = mod_consts[2066];
        tmp_globals_arg_value_580 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_580 = Py_None;
        tmp_fromlist_value_580 = mod_consts[2067];
        tmp_level_value_580 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1196;
        tmp_assign_source_1068 = IMPORT_MODULE5(tmp_name_value_580, tmp_globals_arg_value_580, tmp_locals_arg_value_580, tmp_fromlist_value_580, tmp_level_value_580);
        if (tmp_assign_source_1068 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1196;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_164__module == NULL);
        tmp_import_from_164__module = tmp_assign_source_1068;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1069;
        PyObject *tmp_import_name_from_901;
        CHECK_OBJECT(tmp_import_from_164__module);
        tmp_import_name_from_901 = tmp_import_from_164__module;
        if (PyModule_Check(tmp_import_name_from_901)) {
            tmp_assign_source_1069 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_901,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2068],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1069 = IMPORT_NAME(tmp_import_name_from_901, mod_consts[2068]);
        }

        if (tmp_assign_source_1069 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1196;

            goto try_except_handler_164;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2068], tmp_assign_source_1069);
    }
    {
        PyObject *tmp_assign_source_1070;
        PyObject *tmp_import_name_from_902;
        CHECK_OBJECT(tmp_import_from_164__module);
        tmp_import_name_from_902 = tmp_import_from_164__module;
        if (PyModule_Check(tmp_import_name_from_902)) {
            tmp_assign_source_1070 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_902,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2069],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1070 = IMPORT_NAME(tmp_import_name_from_902, mod_consts[2069]);
        }

        if (tmp_assign_source_1070 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1196;

            goto try_except_handler_164;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2069], tmp_assign_source_1070);
    }
    goto try_end_164;
    // Exception handler code:
    try_except_handler_164:;
    exception_keeper_type_164 = exception_type;
    exception_keeper_value_164 = exception_value;
    exception_keeper_tb_164 = exception_tb;
    exception_keeper_lineno_164 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_164__module);
    Py_DECREF(tmp_import_from_164__module);
    tmp_import_from_164__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_164;
    exception_value = exception_keeper_value_164;
    exception_tb = exception_keeper_tb_164;
    exception_lineno = exception_keeper_lineno_164;

    goto frame_exception_exit_1;
    // End of try:
    try_end_164:;
    CHECK_OBJECT(tmp_import_from_164__module);
    Py_DECREF(tmp_import_from_164__module);
    tmp_import_from_164__module = NULL;
    {
        PyObject *tmp_assign_source_1071;
        PyObject *tmp_import_name_from_903;
        PyObject *tmp_name_value_581;
        PyObject *tmp_globals_arg_value_581;
        PyObject *tmp_locals_arg_value_581;
        PyObject *tmp_fromlist_value_581;
        PyObject *tmp_level_value_581;
        tmp_name_value_581 = mod_consts[2070];
        tmp_globals_arg_value_581 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_581 = Py_None;
        tmp_fromlist_value_581 = mod_consts[2071];
        tmp_level_value_581 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1200;
        tmp_import_name_from_903 = IMPORT_MODULE5(tmp_name_value_581, tmp_globals_arg_value_581, tmp_locals_arg_value_581, tmp_fromlist_value_581, tmp_level_value_581);
        if (tmp_import_name_from_903 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1200;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_903)) {
            tmp_assign_source_1071 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_903,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2072],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1071 = IMPORT_NAME(tmp_import_name_from_903, mod_consts[2072]);
        }

        Py_DECREF(tmp_import_name_from_903);
        if (tmp_assign_source_1071 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1200;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2072], tmp_assign_source_1071);
    }
    {
        PyObject *tmp_assign_source_1072;
        PyObject *tmp_import_name_from_904;
        PyObject *tmp_name_value_582;
        PyObject *tmp_globals_arg_value_582;
        PyObject *tmp_locals_arg_value_582;
        PyObject *tmp_fromlist_value_582;
        PyObject *tmp_level_value_582;
        tmp_name_value_582 = mod_consts[2073];
        tmp_globals_arg_value_582 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_582 = Py_None;
        tmp_fromlist_value_582 = mod_consts[2074];
        tmp_level_value_582 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1201;
        tmp_import_name_from_904 = IMPORT_MODULE5(tmp_name_value_582, tmp_globals_arg_value_582, tmp_locals_arg_value_582, tmp_fromlist_value_582, tmp_level_value_582);
        if (tmp_import_name_from_904 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1201;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_904)) {
            tmp_assign_source_1072 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_904,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2075],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1072 = IMPORT_NAME(tmp_import_name_from_904, mod_consts[2075]);
        }

        Py_DECREF(tmp_import_name_from_904);
        if (tmp_assign_source_1072 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1201;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2075], tmp_assign_source_1072);
    }
    {
        PyObject *tmp_assign_source_1073;
        PyObject *tmp_import_name_from_905;
        PyObject *tmp_name_value_583;
        PyObject *tmp_globals_arg_value_583;
        PyObject *tmp_locals_arg_value_583;
        PyObject *tmp_fromlist_value_583;
        PyObject *tmp_level_value_583;
        tmp_name_value_583 = mod_consts[2076];
        tmp_globals_arg_value_583 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_583 = Py_None;
        tmp_fromlist_value_583 = mod_consts[2077];
        tmp_level_value_583 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1202;
        tmp_import_name_from_905 = IMPORT_MODULE5(tmp_name_value_583, tmp_globals_arg_value_583, tmp_locals_arg_value_583, tmp_fromlist_value_583, tmp_level_value_583);
        if (tmp_import_name_from_905 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1202;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_905)) {
            tmp_assign_source_1073 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_905,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2078],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1073 = IMPORT_NAME(tmp_import_name_from_905, mod_consts[2078]);
        }

        Py_DECREF(tmp_import_name_from_905);
        if (tmp_assign_source_1073 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1202;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2078], tmp_assign_source_1073);
    }
    {
        PyObject *tmp_assign_source_1074;
        PyObject *tmp_name_value_584;
        PyObject *tmp_globals_arg_value_584;
        PyObject *tmp_locals_arg_value_584;
        PyObject *tmp_fromlist_value_584;
        PyObject *tmp_level_value_584;
        tmp_name_value_584 = mod_consts[2079];
        tmp_globals_arg_value_584 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_584 = Py_None;
        tmp_fromlist_value_584 = mod_consts[2080];
        tmp_level_value_584 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1203;
        tmp_assign_source_1074 = IMPORT_MODULE5(tmp_name_value_584, tmp_globals_arg_value_584, tmp_locals_arg_value_584, tmp_fromlist_value_584, tmp_level_value_584);
        if (tmp_assign_source_1074 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1203;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_165__module == NULL);
        tmp_import_from_165__module = tmp_assign_source_1074;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1075;
        PyObject *tmp_import_name_from_906;
        CHECK_OBJECT(tmp_import_from_165__module);
        tmp_import_name_from_906 = tmp_import_from_165__module;
        if (PyModule_Check(tmp_import_name_from_906)) {
            tmp_assign_source_1075 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_906,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2081],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1075 = IMPORT_NAME(tmp_import_name_from_906, mod_consts[2081]);
        }

        if (tmp_assign_source_1075 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1203;

            goto try_except_handler_165;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2081], tmp_assign_source_1075);
    }
    {
        PyObject *tmp_assign_source_1076;
        PyObject *tmp_import_name_from_907;
        CHECK_OBJECT(tmp_import_from_165__module);
        tmp_import_name_from_907 = tmp_import_from_165__module;
        if (PyModule_Check(tmp_import_name_from_907)) {
            tmp_assign_source_1076 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_907,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2082],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1076 = IMPORT_NAME(tmp_import_name_from_907, mod_consts[2082]);
        }

        if (tmp_assign_source_1076 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1203;

            goto try_except_handler_165;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2082], tmp_assign_source_1076);
    }
    goto try_end_165;
    // Exception handler code:
    try_except_handler_165:;
    exception_keeper_type_165 = exception_type;
    exception_keeper_value_165 = exception_value;
    exception_keeper_tb_165 = exception_tb;
    exception_keeper_lineno_165 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_165__module);
    Py_DECREF(tmp_import_from_165__module);
    tmp_import_from_165__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_165;
    exception_value = exception_keeper_value_165;
    exception_tb = exception_keeper_tb_165;
    exception_lineno = exception_keeper_lineno_165;

    goto frame_exception_exit_1;
    // End of try:
    try_end_165:;
    CHECK_OBJECT(tmp_import_from_165__module);
    Py_DECREF(tmp_import_from_165__module);
    tmp_import_from_165__module = NULL;
    {
        PyObject *tmp_assign_source_1077;
        PyObject *tmp_name_value_585;
        PyObject *tmp_globals_arg_value_585;
        PyObject *tmp_locals_arg_value_585;
        PyObject *tmp_fromlist_value_585;
        PyObject *tmp_level_value_585;
        tmp_name_value_585 = mod_consts[2083];
        tmp_globals_arg_value_585 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_585 = Py_None;
        tmp_fromlist_value_585 = mod_consts[2084];
        tmp_level_value_585 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1207;
        tmp_assign_source_1077 = IMPORT_MODULE5(tmp_name_value_585, tmp_globals_arg_value_585, tmp_locals_arg_value_585, tmp_fromlist_value_585, tmp_level_value_585);
        if (tmp_assign_source_1077 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1207;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_166__module == NULL);
        tmp_import_from_166__module = tmp_assign_source_1077;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1078;
        PyObject *tmp_import_name_from_908;
        CHECK_OBJECT(tmp_import_from_166__module);
        tmp_import_name_from_908 = tmp_import_from_166__module;
        if (PyModule_Check(tmp_import_name_from_908)) {
            tmp_assign_source_1078 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_908,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2085],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1078 = IMPORT_NAME(tmp_import_name_from_908, mod_consts[2085]);
        }

        if (tmp_assign_source_1078 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1207;

            goto try_except_handler_166;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2085], tmp_assign_source_1078);
    }
    {
        PyObject *tmp_assign_source_1079;
        PyObject *tmp_import_name_from_909;
        CHECK_OBJECT(tmp_import_from_166__module);
        tmp_import_name_from_909 = tmp_import_from_166__module;
        if (PyModule_Check(tmp_import_name_from_909)) {
            tmp_assign_source_1079 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_909,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2086],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1079 = IMPORT_NAME(tmp_import_name_from_909, mod_consts[2086]);
        }

        if (tmp_assign_source_1079 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1207;

            goto try_except_handler_166;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2086], tmp_assign_source_1079);
    }
    goto try_end_166;
    // Exception handler code:
    try_except_handler_166:;
    exception_keeper_type_166 = exception_type;
    exception_keeper_value_166 = exception_value;
    exception_keeper_tb_166 = exception_tb;
    exception_keeper_lineno_166 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_166__module);
    Py_DECREF(tmp_import_from_166__module);
    tmp_import_from_166__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_166;
    exception_value = exception_keeper_value_166;
    exception_tb = exception_keeper_tb_166;
    exception_lineno = exception_keeper_lineno_166;

    goto frame_exception_exit_1;
    // End of try:
    try_end_166:;
    CHECK_OBJECT(tmp_import_from_166__module);
    Py_DECREF(tmp_import_from_166__module);
    tmp_import_from_166__module = NULL;
    {
        PyObject *tmp_assign_source_1080;
        PyObject *tmp_import_name_from_910;
        PyObject *tmp_name_value_586;
        PyObject *tmp_globals_arg_value_586;
        PyObject *tmp_locals_arg_value_586;
        PyObject *tmp_fromlist_value_586;
        PyObject *tmp_level_value_586;
        tmp_name_value_586 = mod_consts[2087];
        tmp_globals_arg_value_586 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_586 = Py_None;
        tmp_fromlist_value_586 = mod_consts[2088];
        tmp_level_value_586 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1211;
        tmp_import_name_from_910 = IMPORT_MODULE5(tmp_name_value_586, tmp_globals_arg_value_586, tmp_locals_arg_value_586, tmp_fromlist_value_586, tmp_level_value_586);
        if (tmp_import_name_from_910 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1211;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_910)) {
            tmp_assign_source_1080 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_910,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2089],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1080 = IMPORT_NAME(tmp_import_name_from_910, mod_consts[2089]);
        }

        Py_DECREF(tmp_import_name_from_910);
        if (tmp_assign_source_1080 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1211;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2089], tmp_assign_source_1080);
    }
    {
        PyObject *tmp_assign_source_1081;
        PyObject *tmp_import_name_from_911;
        PyObject *tmp_name_value_587;
        PyObject *tmp_globals_arg_value_587;
        PyObject *tmp_locals_arg_value_587;
        PyObject *tmp_fromlist_value_587;
        PyObject *tmp_level_value_587;
        tmp_name_value_587 = mod_consts[2090];
        tmp_globals_arg_value_587 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_587 = Py_None;
        tmp_fromlist_value_587 = mod_consts[2091];
        tmp_level_value_587 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1212;
        tmp_import_name_from_911 = IMPORT_MODULE5(tmp_name_value_587, tmp_globals_arg_value_587, tmp_locals_arg_value_587, tmp_fromlist_value_587, tmp_level_value_587);
        if (tmp_import_name_from_911 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1212;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_911)) {
            tmp_assign_source_1081 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_911,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2092],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1081 = IMPORT_NAME(tmp_import_name_from_911, mod_consts[2092]);
        }

        Py_DECREF(tmp_import_name_from_911);
        if (tmp_assign_source_1081 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1212;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2092], tmp_assign_source_1081);
    }
    {
        PyObject *tmp_assign_source_1082;
        PyObject *tmp_import_name_from_912;
        PyObject *tmp_name_value_588;
        PyObject *tmp_globals_arg_value_588;
        PyObject *tmp_locals_arg_value_588;
        PyObject *tmp_fromlist_value_588;
        PyObject *tmp_level_value_588;
        tmp_name_value_588 = mod_consts[2093];
        tmp_globals_arg_value_588 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_588 = Py_None;
        tmp_fromlist_value_588 = mod_consts[2094];
        tmp_level_value_588 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1213;
        tmp_import_name_from_912 = IMPORT_MODULE5(tmp_name_value_588, tmp_globals_arg_value_588, tmp_locals_arg_value_588, tmp_fromlist_value_588, tmp_level_value_588);
        if (tmp_import_name_from_912 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1213;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_912)) {
            tmp_assign_source_1082 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_912,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2095],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1082 = IMPORT_NAME(tmp_import_name_from_912, mod_consts[2095]);
        }

        Py_DECREF(tmp_import_name_from_912);
        if (tmp_assign_source_1082 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1213;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2095], tmp_assign_source_1082);
    }
    {
        PyObject *tmp_assign_source_1083;
        PyObject *tmp_import_name_from_913;
        PyObject *tmp_name_value_589;
        PyObject *tmp_globals_arg_value_589;
        PyObject *tmp_locals_arg_value_589;
        PyObject *tmp_fromlist_value_589;
        PyObject *tmp_level_value_589;
        tmp_name_value_589 = mod_consts[2096];
        tmp_globals_arg_value_589 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_589 = Py_None;
        tmp_fromlist_value_589 = mod_consts[2097];
        tmp_level_value_589 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1214;
        tmp_import_name_from_913 = IMPORT_MODULE5(tmp_name_value_589, tmp_globals_arg_value_589, tmp_locals_arg_value_589, tmp_fromlist_value_589, tmp_level_value_589);
        if (tmp_import_name_from_913 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1214;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_913)) {
            tmp_assign_source_1083 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_913,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2098],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1083 = IMPORT_NAME(tmp_import_name_from_913, mod_consts[2098]);
        }

        Py_DECREF(tmp_import_name_from_913);
        if (tmp_assign_source_1083 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1214;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2098], tmp_assign_source_1083);
    }
    {
        PyObject *tmp_assign_source_1084;
        PyObject *tmp_import_name_from_914;
        PyObject *tmp_name_value_590;
        PyObject *tmp_globals_arg_value_590;
        PyObject *tmp_locals_arg_value_590;
        PyObject *tmp_fromlist_value_590;
        PyObject *tmp_level_value_590;
        tmp_name_value_590 = mod_consts[2099];
        tmp_globals_arg_value_590 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_590 = Py_None;
        tmp_fromlist_value_590 = mod_consts[2100];
        tmp_level_value_590 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1215;
        tmp_import_name_from_914 = IMPORT_MODULE5(tmp_name_value_590, tmp_globals_arg_value_590, tmp_locals_arg_value_590, tmp_fromlist_value_590, tmp_level_value_590);
        if (tmp_import_name_from_914 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1215;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_914)) {
            tmp_assign_source_1084 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_914,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2101],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1084 = IMPORT_NAME(tmp_import_name_from_914, mod_consts[2101]);
        }

        Py_DECREF(tmp_import_name_from_914);
        if (tmp_assign_source_1084 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1215;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2101], tmp_assign_source_1084);
    }
    {
        PyObject *tmp_assign_source_1085;
        PyObject *tmp_import_name_from_915;
        PyObject *tmp_name_value_591;
        PyObject *tmp_globals_arg_value_591;
        PyObject *tmp_locals_arg_value_591;
        PyObject *tmp_fromlist_value_591;
        PyObject *tmp_level_value_591;
        tmp_name_value_591 = mod_consts[2102];
        tmp_globals_arg_value_591 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_591 = Py_None;
        tmp_fromlist_value_591 = mod_consts[2103];
        tmp_level_value_591 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1216;
        tmp_import_name_from_915 = IMPORT_MODULE5(tmp_name_value_591, tmp_globals_arg_value_591, tmp_locals_arg_value_591, tmp_fromlist_value_591, tmp_level_value_591);
        if (tmp_import_name_from_915 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1216;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_915)) {
            tmp_assign_source_1085 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_915,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2104],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1085 = IMPORT_NAME(tmp_import_name_from_915, mod_consts[2104]);
        }

        Py_DECREF(tmp_import_name_from_915);
        if (tmp_assign_source_1085 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1216;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2104], tmp_assign_source_1085);
    }
    {
        PyObject *tmp_assign_source_1086;
        PyObject *tmp_import_name_from_916;
        PyObject *tmp_name_value_592;
        PyObject *tmp_globals_arg_value_592;
        PyObject *tmp_locals_arg_value_592;
        PyObject *tmp_fromlist_value_592;
        PyObject *tmp_level_value_592;
        tmp_name_value_592 = mod_consts[2105];
        tmp_globals_arg_value_592 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_592 = Py_None;
        tmp_fromlist_value_592 = mod_consts[2106];
        tmp_level_value_592 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1217;
        tmp_import_name_from_916 = IMPORT_MODULE5(tmp_name_value_592, tmp_globals_arg_value_592, tmp_locals_arg_value_592, tmp_fromlist_value_592, tmp_level_value_592);
        if (tmp_import_name_from_916 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1217;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_916)) {
            tmp_assign_source_1086 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_916,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2107],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1086 = IMPORT_NAME(tmp_import_name_from_916, mod_consts[2107]);
        }

        Py_DECREF(tmp_import_name_from_916);
        if (tmp_assign_source_1086 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1217;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2107], tmp_assign_source_1086);
    }
    {
        PyObject *tmp_assign_source_1087;
        PyObject *tmp_import_name_from_917;
        PyObject *tmp_name_value_593;
        PyObject *tmp_globals_arg_value_593;
        PyObject *tmp_locals_arg_value_593;
        PyObject *tmp_fromlist_value_593;
        PyObject *tmp_level_value_593;
        tmp_name_value_593 = mod_consts[2108];
        tmp_globals_arg_value_593 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_593 = Py_None;
        tmp_fromlist_value_593 = mod_consts[2109];
        tmp_level_value_593 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1218;
        tmp_import_name_from_917 = IMPORT_MODULE5(tmp_name_value_593, tmp_globals_arg_value_593, tmp_locals_arg_value_593, tmp_fromlist_value_593, tmp_level_value_593);
        if (tmp_import_name_from_917 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1218;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_917)) {
            tmp_assign_source_1087 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_917,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2110],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1087 = IMPORT_NAME(tmp_import_name_from_917, mod_consts[2110]);
        }

        Py_DECREF(tmp_import_name_from_917);
        if (tmp_assign_source_1087 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1218;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2110], tmp_assign_source_1087);
    }
    {
        PyObject *tmp_assign_source_1088;
        PyObject *tmp_import_name_from_918;
        PyObject *tmp_name_value_594;
        PyObject *tmp_globals_arg_value_594;
        PyObject *tmp_locals_arg_value_594;
        PyObject *tmp_fromlist_value_594;
        PyObject *tmp_level_value_594;
        tmp_name_value_594 = mod_consts[2111];
        tmp_globals_arg_value_594 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_594 = Py_None;
        tmp_fromlist_value_594 = mod_consts[2112];
        tmp_level_value_594 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1219;
        tmp_import_name_from_918 = IMPORT_MODULE5(tmp_name_value_594, tmp_globals_arg_value_594, tmp_locals_arg_value_594, tmp_fromlist_value_594, tmp_level_value_594);
        if (tmp_import_name_from_918 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1219;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_918)) {
            tmp_assign_source_1088 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_918,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2113],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1088 = IMPORT_NAME(tmp_import_name_from_918, mod_consts[2113]);
        }

        Py_DECREF(tmp_import_name_from_918);
        if (tmp_assign_source_1088 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1219;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2113], tmp_assign_source_1088);
    }
    {
        PyObject *tmp_assign_source_1089;
        PyObject *tmp_import_name_from_919;
        PyObject *tmp_name_value_595;
        PyObject *tmp_globals_arg_value_595;
        PyObject *tmp_locals_arg_value_595;
        PyObject *tmp_fromlist_value_595;
        PyObject *tmp_level_value_595;
        tmp_name_value_595 = mod_consts[2114];
        tmp_globals_arg_value_595 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_595 = Py_None;
        tmp_fromlist_value_595 = mod_consts[2115];
        tmp_level_value_595 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1220;
        tmp_import_name_from_919 = IMPORT_MODULE5(tmp_name_value_595, tmp_globals_arg_value_595, tmp_locals_arg_value_595, tmp_fromlist_value_595, tmp_level_value_595);
        if (tmp_import_name_from_919 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1220;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_919)) {
            tmp_assign_source_1089 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_919,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2116],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1089 = IMPORT_NAME(tmp_import_name_from_919, mod_consts[2116]);
        }

        Py_DECREF(tmp_import_name_from_919);
        if (tmp_assign_source_1089 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1220;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2116], tmp_assign_source_1089);
    }
    {
        PyObject *tmp_assign_source_1090;
        PyObject *tmp_import_name_from_920;
        PyObject *tmp_name_value_596;
        PyObject *tmp_globals_arg_value_596;
        PyObject *tmp_locals_arg_value_596;
        PyObject *tmp_fromlist_value_596;
        PyObject *tmp_level_value_596;
        tmp_name_value_596 = mod_consts[2117];
        tmp_globals_arg_value_596 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_596 = Py_None;
        tmp_fromlist_value_596 = mod_consts[2118];
        tmp_level_value_596 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1221;
        tmp_import_name_from_920 = IMPORT_MODULE5(tmp_name_value_596, tmp_globals_arg_value_596, tmp_locals_arg_value_596, tmp_fromlist_value_596, tmp_level_value_596);
        if (tmp_import_name_from_920 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1221;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_920)) {
            tmp_assign_source_1090 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_920,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2119],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1090 = IMPORT_NAME(tmp_import_name_from_920, mod_consts[2119]);
        }

        Py_DECREF(tmp_import_name_from_920);
        if (tmp_assign_source_1090 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1221;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2119], tmp_assign_source_1090);
    }
    {
        PyObject *tmp_assign_source_1091;
        PyObject *tmp_name_value_597;
        PyObject *tmp_globals_arg_value_597;
        PyObject *tmp_locals_arg_value_597;
        PyObject *tmp_fromlist_value_597;
        PyObject *tmp_level_value_597;
        tmp_name_value_597 = mod_consts[2120];
        tmp_globals_arg_value_597 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_597 = Py_None;
        tmp_fromlist_value_597 = mod_consts[2121];
        tmp_level_value_597 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1222;
        tmp_assign_source_1091 = IMPORT_MODULE5(tmp_name_value_597, tmp_globals_arg_value_597, tmp_locals_arg_value_597, tmp_fromlist_value_597, tmp_level_value_597);
        if (tmp_assign_source_1091 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1222;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_167__module == NULL);
        tmp_import_from_167__module = tmp_assign_source_1091;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1092;
        PyObject *tmp_import_name_from_921;
        CHECK_OBJECT(tmp_import_from_167__module);
        tmp_import_name_from_921 = tmp_import_from_167__module;
        if (PyModule_Check(tmp_import_name_from_921)) {
            tmp_assign_source_1092 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_921,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2122],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1092 = IMPORT_NAME(tmp_import_name_from_921, mod_consts[2122]);
        }

        if (tmp_assign_source_1092 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1222;

            goto try_except_handler_167;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2122], tmp_assign_source_1092);
    }
    {
        PyObject *tmp_assign_source_1093;
        PyObject *tmp_import_name_from_922;
        CHECK_OBJECT(tmp_import_from_167__module);
        tmp_import_name_from_922 = tmp_import_from_167__module;
        if (PyModule_Check(tmp_import_name_from_922)) {
            tmp_assign_source_1093 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_922,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2123],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1093 = IMPORT_NAME(tmp_import_name_from_922, mod_consts[2123]);
        }

        if (tmp_assign_source_1093 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1222;

            goto try_except_handler_167;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2123], tmp_assign_source_1093);
    }
    {
        PyObject *tmp_assign_source_1094;
        PyObject *tmp_import_name_from_923;
        CHECK_OBJECT(tmp_import_from_167__module);
        tmp_import_name_from_923 = tmp_import_from_167__module;
        if (PyModule_Check(tmp_import_name_from_923)) {
            tmp_assign_source_1094 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_923,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2124],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1094 = IMPORT_NAME(tmp_import_name_from_923, mod_consts[2124]);
        }

        if (tmp_assign_source_1094 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1222;

            goto try_except_handler_167;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2124], tmp_assign_source_1094);
    }
    {
        PyObject *tmp_assign_source_1095;
        PyObject *tmp_import_name_from_924;
        CHECK_OBJECT(tmp_import_from_167__module);
        tmp_import_name_from_924 = tmp_import_from_167__module;
        if (PyModule_Check(tmp_import_name_from_924)) {
            tmp_assign_source_1095 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_924,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2125],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1095 = IMPORT_NAME(tmp_import_name_from_924, mod_consts[2125]);
        }

        if (tmp_assign_source_1095 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1222;

            goto try_except_handler_167;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2125], tmp_assign_source_1095);
    }
    {
        PyObject *tmp_assign_source_1096;
        PyObject *tmp_import_name_from_925;
        CHECK_OBJECT(tmp_import_from_167__module);
        tmp_import_name_from_925 = tmp_import_from_167__module;
        if (PyModule_Check(tmp_import_name_from_925)) {
            tmp_assign_source_1096 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_925,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2126],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1096 = IMPORT_NAME(tmp_import_name_from_925, mod_consts[2126]);
        }

        if (tmp_assign_source_1096 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1222;

            goto try_except_handler_167;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2126], tmp_assign_source_1096);
    }
    goto try_end_167;
    // Exception handler code:
    try_except_handler_167:;
    exception_keeper_type_167 = exception_type;
    exception_keeper_value_167 = exception_value;
    exception_keeper_tb_167 = exception_tb;
    exception_keeper_lineno_167 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_167__module);
    Py_DECREF(tmp_import_from_167__module);
    tmp_import_from_167__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_167;
    exception_value = exception_keeper_value_167;
    exception_tb = exception_keeper_tb_167;
    exception_lineno = exception_keeper_lineno_167;

    goto frame_exception_exit_1;
    // End of try:
    try_end_167:;
    CHECK_OBJECT(tmp_import_from_167__module);
    Py_DECREF(tmp_import_from_167__module);
    tmp_import_from_167__module = NULL;
    {
        PyObject *tmp_assign_source_1097;
        PyObject *tmp_import_name_from_926;
        PyObject *tmp_name_value_598;
        PyObject *tmp_globals_arg_value_598;
        PyObject *tmp_locals_arg_value_598;
        PyObject *tmp_fromlist_value_598;
        PyObject *tmp_level_value_598;
        tmp_name_value_598 = mod_consts[2127];
        tmp_globals_arg_value_598 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_598 = Py_None;
        tmp_fromlist_value_598 = mod_consts[2128];
        tmp_level_value_598 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1229;
        tmp_import_name_from_926 = IMPORT_MODULE5(tmp_name_value_598, tmp_globals_arg_value_598, tmp_locals_arg_value_598, tmp_fromlist_value_598, tmp_level_value_598);
        if (tmp_import_name_from_926 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1229;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_926)) {
            tmp_assign_source_1097 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_926,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2129],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1097 = IMPORT_NAME(tmp_import_name_from_926, mod_consts[2129]);
        }

        Py_DECREF(tmp_import_name_from_926);
        if (tmp_assign_source_1097 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1229;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2129], tmp_assign_source_1097);
    }
    {
        PyObject *tmp_assign_source_1098;
        PyObject *tmp_import_name_from_927;
        PyObject *tmp_name_value_599;
        PyObject *tmp_globals_arg_value_599;
        PyObject *tmp_locals_arg_value_599;
        PyObject *tmp_fromlist_value_599;
        PyObject *tmp_level_value_599;
        tmp_name_value_599 = mod_consts[2130];
        tmp_globals_arg_value_599 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_599 = Py_None;
        tmp_fromlist_value_599 = mod_consts[2131];
        tmp_level_value_599 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1230;
        tmp_import_name_from_927 = IMPORT_MODULE5(tmp_name_value_599, tmp_globals_arg_value_599, tmp_locals_arg_value_599, tmp_fromlist_value_599, tmp_level_value_599);
        if (tmp_import_name_from_927 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1230;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_927)) {
            tmp_assign_source_1098 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_927,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2132],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1098 = IMPORT_NAME(tmp_import_name_from_927, mod_consts[2132]);
        }

        Py_DECREF(tmp_import_name_from_927);
        if (tmp_assign_source_1098 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1230;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2132], tmp_assign_source_1098);
    }
    {
        PyObject *tmp_assign_source_1099;
        PyObject *tmp_import_name_from_928;
        PyObject *tmp_name_value_600;
        PyObject *tmp_globals_arg_value_600;
        PyObject *tmp_locals_arg_value_600;
        PyObject *tmp_fromlist_value_600;
        PyObject *tmp_level_value_600;
        tmp_name_value_600 = mod_consts[2133];
        tmp_globals_arg_value_600 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_600 = Py_None;
        tmp_fromlist_value_600 = mod_consts[2134];
        tmp_level_value_600 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1231;
        tmp_import_name_from_928 = IMPORT_MODULE5(tmp_name_value_600, tmp_globals_arg_value_600, tmp_locals_arg_value_600, tmp_fromlist_value_600, tmp_level_value_600);
        if (tmp_import_name_from_928 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_928)) {
            tmp_assign_source_1099 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_928,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2135],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1099 = IMPORT_NAME(tmp_import_name_from_928, mod_consts[2135]);
        }

        Py_DECREF(tmp_import_name_from_928);
        if (tmp_assign_source_1099 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1231;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2135], tmp_assign_source_1099);
    }
    {
        PyObject *tmp_assign_source_1100;
        PyObject *tmp_import_name_from_929;
        PyObject *tmp_name_value_601;
        PyObject *tmp_globals_arg_value_601;
        PyObject *tmp_locals_arg_value_601;
        PyObject *tmp_fromlist_value_601;
        PyObject *tmp_level_value_601;
        tmp_name_value_601 = mod_consts[2136];
        tmp_globals_arg_value_601 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_601 = Py_None;
        tmp_fromlist_value_601 = mod_consts[2137];
        tmp_level_value_601 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1232;
        tmp_import_name_from_929 = IMPORT_MODULE5(tmp_name_value_601, tmp_globals_arg_value_601, tmp_locals_arg_value_601, tmp_fromlist_value_601, tmp_level_value_601);
        if (tmp_import_name_from_929 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1232;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_929)) {
            tmp_assign_source_1100 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_929,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2138],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1100 = IMPORT_NAME(tmp_import_name_from_929, mod_consts[2138]);
        }

        Py_DECREF(tmp_import_name_from_929);
        if (tmp_assign_source_1100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1232;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2138], tmp_assign_source_1100);
    }
    {
        PyObject *tmp_assign_source_1101;
        PyObject *tmp_import_name_from_930;
        PyObject *tmp_name_value_602;
        PyObject *tmp_globals_arg_value_602;
        PyObject *tmp_locals_arg_value_602;
        PyObject *tmp_fromlist_value_602;
        PyObject *tmp_level_value_602;
        tmp_name_value_602 = mod_consts[2139];
        tmp_globals_arg_value_602 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_602 = Py_None;
        tmp_fromlist_value_602 = mod_consts[2140];
        tmp_level_value_602 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1233;
        tmp_import_name_from_930 = IMPORT_MODULE5(tmp_name_value_602, tmp_globals_arg_value_602, tmp_locals_arg_value_602, tmp_fromlist_value_602, tmp_level_value_602);
        if (tmp_import_name_from_930 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1233;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_930)) {
            tmp_assign_source_1101 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_930,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2141],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1101 = IMPORT_NAME(tmp_import_name_from_930, mod_consts[2141]);
        }

        Py_DECREF(tmp_import_name_from_930);
        if (tmp_assign_source_1101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1233;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2141], tmp_assign_source_1101);
    }
    {
        PyObject *tmp_assign_source_1102;
        PyObject *tmp_import_name_from_931;
        PyObject *tmp_name_value_603;
        PyObject *tmp_globals_arg_value_603;
        PyObject *tmp_locals_arg_value_603;
        PyObject *tmp_fromlist_value_603;
        PyObject *tmp_level_value_603;
        tmp_name_value_603 = mod_consts[2142];
        tmp_globals_arg_value_603 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_603 = Py_None;
        tmp_fromlist_value_603 = mod_consts[2143];
        tmp_level_value_603 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1234;
        tmp_import_name_from_931 = IMPORT_MODULE5(tmp_name_value_603, tmp_globals_arg_value_603, tmp_locals_arg_value_603, tmp_fromlist_value_603, tmp_level_value_603);
        if (tmp_import_name_from_931 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1234;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_931)) {
            tmp_assign_source_1102 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_931,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2144],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1102 = IMPORT_NAME(tmp_import_name_from_931, mod_consts[2144]);
        }

        Py_DECREF(tmp_import_name_from_931);
        if (tmp_assign_source_1102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1234;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2144], tmp_assign_source_1102);
    }
    {
        PyObject *tmp_assign_source_1103;
        PyObject *tmp_import_name_from_932;
        PyObject *tmp_name_value_604;
        PyObject *tmp_globals_arg_value_604;
        PyObject *tmp_locals_arg_value_604;
        PyObject *tmp_fromlist_value_604;
        PyObject *tmp_level_value_604;
        tmp_name_value_604 = mod_consts[2145];
        tmp_globals_arg_value_604 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_604 = Py_None;
        tmp_fromlist_value_604 = mod_consts[2146];
        tmp_level_value_604 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1235;
        tmp_import_name_from_932 = IMPORT_MODULE5(tmp_name_value_604, tmp_globals_arg_value_604, tmp_locals_arg_value_604, tmp_fromlist_value_604, tmp_level_value_604);
        if (tmp_import_name_from_932 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1235;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_932)) {
            tmp_assign_source_1103 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_932,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2147],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1103 = IMPORT_NAME(tmp_import_name_from_932, mod_consts[2147]);
        }

        Py_DECREF(tmp_import_name_from_932);
        if (tmp_assign_source_1103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1235;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2147], tmp_assign_source_1103);
    }
    {
        PyObject *tmp_assign_source_1104;
        PyObject *tmp_import_name_from_933;
        PyObject *tmp_name_value_605;
        PyObject *tmp_globals_arg_value_605;
        PyObject *tmp_locals_arg_value_605;
        PyObject *tmp_fromlist_value_605;
        PyObject *tmp_level_value_605;
        tmp_name_value_605 = mod_consts[2148];
        tmp_globals_arg_value_605 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_605 = Py_None;
        tmp_fromlist_value_605 = mod_consts[2149];
        tmp_level_value_605 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1236;
        tmp_import_name_from_933 = IMPORT_MODULE5(tmp_name_value_605, tmp_globals_arg_value_605, tmp_locals_arg_value_605, tmp_fromlist_value_605, tmp_level_value_605);
        if (tmp_import_name_from_933 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1236;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_933)) {
            tmp_assign_source_1104 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_933,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2150],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1104 = IMPORT_NAME(tmp_import_name_from_933, mod_consts[2150]);
        }

        Py_DECREF(tmp_import_name_from_933);
        if (tmp_assign_source_1104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1236;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2150], tmp_assign_source_1104);
    }
    {
        PyObject *tmp_assign_source_1105;
        PyObject *tmp_name_value_606;
        PyObject *tmp_globals_arg_value_606;
        PyObject *tmp_locals_arg_value_606;
        PyObject *tmp_fromlist_value_606;
        PyObject *tmp_level_value_606;
        tmp_name_value_606 = mod_consts[2151];
        tmp_globals_arg_value_606 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_606 = Py_None;
        tmp_fromlist_value_606 = mod_consts[2152];
        tmp_level_value_606 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1237;
        tmp_assign_source_1105 = IMPORT_MODULE5(tmp_name_value_606, tmp_globals_arg_value_606, tmp_locals_arg_value_606, tmp_fromlist_value_606, tmp_level_value_606);
        if (tmp_assign_source_1105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1237;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_168__module == NULL);
        tmp_import_from_168__module = tmp_assign_source_1105;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1106;
        PyObject *tmp_import_name_from_934;
        CHECK_OBJECT(tmp_import_from_168__module);
        tmp_import_name_from_934 = tmp_import_from_168__module;
        if (PyModule_Check(tmp_import_name_from_934)) {
            tmp_assign_source_1106 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_934,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2153],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1106 = IMPORT_NAME(tmp_import_name_from_934, mod_consts[2153]);
        }

        if (tmp_assign_source_1106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1237;

            goto try_except_handler_168;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2153], tmp_assign_source_1106);
    }
    {
        PyObject *tmp_assign_source_1107;
        PyObject *tmp_import_name_from_935;
        CHECK_OBJECT(tmp_import_from_168__module);
        tmp_import_name_from_935 = tmp_import_from_168__module;
        if (PyModule_Check(tmp_import_name_from_935)) {
            tmp_assign_source_1107 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_935,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2154],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1107 = IMPORT_NAME(tmp_import_name_from_935, mod_consts[2154]);
        }

        if (tmp_assign_source_1107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1237;

            goto try_except_handler_168;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2154], tmp_assign_source_1107);
    }
    goto try_end_168;
    // Exception handler code:
    try_except_handler_168:;
    exception_keeper_type_168 = exception_type;
    exception_keeper_value_168 = exception_value;
    exception_keeper_tb_168 = exception_tb;
    exception_keeper_lineno_168 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_168__module);
    Py_DECREF(tmp_import_from_168__module);
    tmp_import_from_168__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_168;
    exception_value = exception_keeper_value_168;
    exception_tb = exception_keeper_tb_168;
    exception_lineno = exception_keeper_lineno_168;

    goto frame_exception_exit_1;
    // End of try:
    try_end_168:;
    CHECK_OBJECT(tmp_import_from_168__module);
    Py_DECREF(tmp_import_from_168__module);
    tmp_import_from_168__module = NULL;
    {
        PyObject *tmp_assign_source_1108;
        PyObject *tmp_import_name_from_936;
        PyObject *tmp_name_value_607;
        PyObject *tmp_globals_arg_value_607;
        PyObject *tmp_locals_arg_value_607;
        PyObject *tmp_fromlist_value_607;
        PyObject *tmp_level_value_607;
        tmp_name_value_607 = mod_consts[2155];
        tmp_globals_arg_value_607 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_607 = Py_None;
        tmp_fromlist_value_607 = mod_consts[2156];
        tmp_level_value_607 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1241;
        tmp_import_name_from_936 = IMPORT_MODULE5(tmp_name_value_607, tmp_globals_arg_value_607, tmp_locals_arg_value_607, tmp_fromlist_value_607, tmp_level_value_607);
        if (tmp_import_name_from_936 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1241;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_936)) {
            tmp_assign_source_1108 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_936,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2157],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1108 = IMPORT_NAME(tmp_import_name_from_936, mod_consts[2157]);
        }

        Py_DECREF(tmp_import_name_from_936);
        if (tmp_assign_source_1108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1241;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2157], tmp_assign_source_1108);
    }
    {
        PyObject *tmp_assign_source_1109;
        PyObject *tmp_import_name_from_937;
        PyObject *tmp_name_value_608;
        PyObject *tmp_globals_arg_value_608;
        PyObject *tmp_locals_arg_value_608;
        PyObject *tmp_fromlist_value_608;
        PyObject *tmp_level_value_608;
        tmp_name_value_608 = mod_consts[2158];
        tmp_globals_arg_value_608 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_608 = Py_None;
        tmp_fromlist_value_608 = mod_consts[2159];
        tmp_level_value_608 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1242;
        tmp_import_name_from_937 = IMPORT_MODULE5(tmp_name_value_608, tmp_globals_arg_value_608, tmp_locals_arg_value_608, tmp_fromlist_value_608, tmp_level_value_608);
        if (tmp_import_name_from_937 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1242;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_937)) {
            tmp_assign_source_1109 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_937,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2160],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1109 = IMPORT_NAME(tmp_import_name_from_937, mod_consts[2160]);
        }

        Py_DECREF(tmp_import_name_from_937);
        if (tmp_assign_source_1109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1242;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2160], tmp_assign_source_1109);
    }
    {
        PyObject *tmp_assign_source_1110;
        PyObject *tmp_import_name_from_938;
        PyObject *tmp_name_value_609;
        PyObject *tmp_globals_arg_value_609;
        PyObject *tmp_locals_arg_value_609;
        PyObject *tmp_fromlist_value_609;
        PyObject *tmp_level_value_609;
        tmp_name_value_609 = mod_consts[2161];
        tmp_globals_arg_value_609 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_609 = Py_None;
        tmp_fromlist_value_609 = mod_consts[2162];
        tmp_level_value_609 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1243;
        tmp_import_name_from_938 = IMPORT_MODULE5(tmp_name_value_609, tmp_globals_arg_value_609, tmp_locals_arg_value_609, tmp_fromlist_value_609, tmp_level_value_609);
        if (tmp_import_name_from_938 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1243;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_938)) {
            tmp_assign_source_1110 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_938,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2163],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1110 = IMPORT_NAME(tmp_import_name_from_938, mod_consts[2163]);
        }

        Py_DECREF(tmp_import_name_from_938);
        if (tmp_assign_source_1110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1243;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2163], tmp_assign_source_1110);
    }
    {
        PyObject *tmp_assign_source_1111;
        PyObject *tmp_import_name_from_939;
        PyObject *tmp_name_value_610;
        PyObject *tmp_globals_arg_value_610;
        PyObject *tmp_locals_arg_value_610;
        PyObject *tmp_fromlist_value_610;
        PyObject *tmp_level_value_610;
        tmp_name_value_610 = mod_consts[2164];
        tmp_globals_arg_value_610 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_610 = Py_None;
        tmp_fromlist_value_610 = mod_consts[2165];
        tmp_level_value_610 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1244;
        tmp_import_name_from_939 = IMPORT_MODULE5(tmp_name_value_610, tmp_globals_arg_value_610, tmp_locals_arg_value_610, tmp_fromlist_value_610, tmp_level_value_610);
        if (tmp_import_name_from_939 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1244;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_939)) {
            tmp_assign_source_1111 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_939,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2166],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1111 = IMPORT_NAME(tmp_import_name_from_939, mod_consts[2166]);
        }

        Py_DECREF(tmp_import_name_from_939);
        if (tmp_assign_source_1111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1244;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2166], tmp_assign_source_1111);
    }
    {
        PyObject *tmp_assign_source_1112;
        PyObject *tmp_import_name_from_940;
        PyObject *tmp_name_value_611;
        PyObject *tmp_globals_arg_value_611;
        PyObject *tmp_locals_arg_value_611;
        PyObject *tmp_fromlist_value_611;
        PyObject *tmp_level_value_611;
        tmp_name_value_611 = mod_consts[2167];
        tmp_globals_arg_value_611 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_611 = Py_None;
        tmp_fromlist_value_611 = mod_consts[2168];
        tmp_level_value_611 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1245;
        tmp_import_name_from_940 = IMPORT_MODULE5(tmp_name_value_611, tmp_globals_arg_value_611, tmp_locals_arg_value_611, tmp_fromlist_value_611, tmp_level_value_611);
        if (tmp_import_name_from_940 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1245;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_940)) {
            tmp_assign_source_1112 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_940,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2169],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1112 = IMPORT_NAME(tmp_import_name_from_940, mod_consts[2169]);
        }

        Py_DECREF(tmp_import_name_from_940);
        if (tmp_assign_source_1112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1245;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2169], tmp_assign_source_1112);
    }
    {
        PyObject *tmp_assign_source_1113;
        PyObject *tmp_import_name_from_941;
        PyObject *tmp_name_value_612;
        PyObject *tmp_globals_arg_value_612;
        PyObject *tmp_locals_arg_value_612;
        PyObject *tmp_fromlist_value_612;
        PyObject *tmp_level_value_612;
        tmp_name_value_612 = mod_consts[2170];
        tmp_globals_arg_value_612 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_612 = Py_None;
        tmp_fromlist_value_612 = mod_consts[2171];
        tmp_level_value_612 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1246;
        tmp_import_name_from_941 = IMPORT_MODULE5(tmp_name_value_612, tmp_globals_arg_value_612, tmp_locals_arg_value_612, tmp_fromlist_value_612, tmp_level_value_612);
        if (tmp_import_name_from_941 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1246;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_941)) {
            tmp_assign_source_1113 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_941,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2172],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1113 = IMPORT_NAME(tmp_import_name_from_941, mod_consts[2172]);
        }

        Py_DECREF(tmp_import_name_from_941);
        if (tmp_assign_source_1113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1246;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2172], tmp_assign_source_1113);
    }
    {
        PyObject *tmp_assign_source_1114;
        PyObject *tmp_import_name_from_942;
        PyObject *tmp_name_value_613;
        PyObject *tmp_globals_arg_value_613;
        PyObject *tmp_locals_arg_value_613;
        PyObject *tmp_fromlist_value_613;
        PyObject *tmp_level_value_613;
        tmp_name_value_613 = mod_consts[2173];
        tmp_globals_arg_value_613 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_613 = Py_None;
        tmp_fromlist_value_613 = mod_consts[2174];
        tmp_level_value_613 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1247;
        tmp_import_name_from_942 = IMPORT_MODULE5(tmp_name_value_613, tmp_globals_arg_value_613, tmp_locals_arg_value_613, tmp_fromlist_value_613, tmp_level_value_613);
        if (tmp_import_name_from_942 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1247;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_942)) {
            tmp_assign_source_1114 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_942,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2175],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1114 = IMPORT_NAME(tmp_import_name_from_942, mod_consts[2175]);
        }

        Py_DECREF(tmp_import_name_from_942);
        if (tmp_assign_source_1114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1247;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2175], tmp_assign_source_1114);
    }
    {
        PyObject *tmp_assign_source_1115;
        PyObject *tmp_import_name_from_943;
        PyObject *tmp_name_value_614;
        PyObject *tmp_globals_arg_value_614;
        PyObject *tmp_locals_arg_value_614;
        PyObject *tmp_fromlist_value_614;
        PyObject *tmp_level_value_614;
        tmp_name_value_614 = mod_consts[2176];
        tmp_globals_arg_value_614 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_614 = Py_None;
        tmp_fromlist_value_614 = mod_consts[2177];
        tmp_level_value_614 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1248;
        tmp_import_name_from_943 = IMPORT_MODULE5(tmp_name_value_614, tmp_globals_arg_value_614, tmp_locals_arg_value_614, tmp_fromlist_value_614, tmp_level_value_614);
        if (tmp_import_name_from_943 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1248;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_943)) {
            tmp_assign_source_1115 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_943,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2178],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1115 = IMPORT_NAME(tmp_import_name_from_943, mod_consts[2178]);
        }

        Py_DECREF(tmp_import_name_from_943);
        if (tmp_assign_source_1115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1248;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2178], tmp_assign_source_1115);
    }
    {
        PyObject *tmp_assign_source_1116;
        PyObject *tmp_name_value_615;
        PyObject *tmp_globals_arg_value_615;
        PyObject *tmp_locals_arg_value_615;
        PyObject *tmp_fromlist_value_615;
        PyObject *tmp_level_value_615;
        tmp_name_value_615 = mod_consts[2179];
        tmp_globals_arg_value_615 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_615 = Py_None;
        tmp_fromlist_value_615 = mod_consts[2180];
        tmp_level_value_615 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1249;
        tmp_assign_source_1116 = IMPORT_MODULE5(tmp_name_value_615, tmp_globals_arg_value_615, tmp_locals_arg_value_615, tmp_fromlist_value_615, tmp_level_value_615);
        if (tmp_assign_source_1116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1249;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_169__module == NULL);
        tmp_import_from_169__module = tmp_assign_source_1116;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1117;
        PyObject *tmp_import_name_from_944;
        CHECK_OBJECT(tmp_import_from_169__module);
        tmp_import_name_from_944 = tmp_import_from_169__module;
        if (PyModule_Check(tmp_import_name_from_944)) {
            tmp_assign_source_1117 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_944,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2181],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1117 = IMPORT_NAME(tmp_import_name_from_944, mod_consts[2181]);
        }

        if (tmp_assign_source_1117 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1249;

            goto try_except_handler_169;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2181], tmp_assign_source_1117);
    }
    {
        PyObject *tmp_assign_source_1118;
        PyObject *tmp_import_name_from_945;
        CHECK_OBJECT(tmp_import_from_169__module);
        tmp_import_name_from_945 = tmp_import_from_169__module;
        if (PyModule_Check(tmp_import_name_from_945)) {
            tmp_assign_source_1118 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_945,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2182],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1118 = IMPORT_NAME(tmp_import_name_from_945, mod_consts[2182]);
        }

        if (tmp_assign_source_1118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1249;

            goto try_except_handler_169;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2182], tmp_assign_source_1118);
    }
    goto try_end_169;
    // Exception handler code:
    try_except_handler_169:;
    exception_keeper_type_169 = exception_type;
    exception_keeper_value_169 = exception_value;
    exception_keeper_tb_169 = exception_tb;
    exception_keeper_lineno_169 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_169__module);
    Py_DECREF(tmp_import_from_169__module);
    tmp_import_from_169__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_169;
    exception_value = exception_keeper_value_169;
    exception_tb = exception_keeper_tb_169;
    exception_lineno = exception_keeper_lineno_169;

    goto frame_exception_exit_1;
    // End of try:
    try_end_169:;
    CHECK_OBJECT(tmp_import_from_169__module);
    Py_DECREF(tmp_import_from_169__module);
    tmp_import_from_169__module = NULL;
    {
        PyObject *tmp_assign_source_1119;
        PyObject *tmp_import_name_from_946;
        PyObject *tmp_name_value_616;
        PyObject *tmp_globals_arg_value_616;
        PyObject *tmp_locals_arg_value_616;
        PyObject *tmp_fromlist_value_616;
        PyObject *tmp_level_value_616;
        tmp_name_value_616 = mod_consts[2183];
        tmp_globals_arg_value_616 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_616 = Py_None;
        tmp_fromlist_value_616 = mod_consts[2184];
        tmp_level_value_616 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1253;
        tmp_import_name_from_946 = IMPORT_MODULE5(tmp_name_value_616, tmp_globals_arg_value_616, tmp_locals_arg_value_616, tmp_fromlist_value_616, tmp_level_value_616);
        if (tmp_import_name_from_946 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1253;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_946)) {
            tmp_assign_source_1119 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_946,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2185],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1119 = IMPORT_NAME(tmp_import_name_from_946, mod_consts[2185]);
        }

        Py_DECREF(tmp_import_name_from_946);
        if (tmp_assign_source_1119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1253;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2185], tmp_assign_source_1119);
    }
    {
        PyObject *tmp_assign_source_1120;
        PyObject *tmp_name_value_617;
        PyObject *tmp_globals_arg_value_617;
        PyObject *tmp_locals_arg_value_617;
        PyObject *tmp_fromlist_value_617;
        PyObject *tmp_level_value_617;
        tmp_name_value_617 = mod_consts[2186];
        tmp_globals_arg_value_617 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_617 = Py_None;
        tmp_fromlist_value_617 = mod_consts[2187];
        tmp_level_value_617 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1254;
        tmp_assign_source_1120 = IMPORT_MODULE5(tmp_name_value_617, tmp_globals_arg_value_617, tmp_locals_arg_value_617, tmp_fromlist_value_617, tmp_level_value_617);
        if (tmp_assign_source_1120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1254;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_170__module == NULL);
        tmp_import_from_170__module = tmp_assign_source_1120;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1121;
        PyObject *tmp_import_name_from_947;
        CHECK_OBJECT(tmp_import_from_170__module);
        tmp_import_name_from_947 = tmp_import_from_170__module;
        if (PyModule_Check(tmp_import_name_from_947)) {
            tmp_assign_source_1121 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_947,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2188],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1121 = IMPORT_NAME(tmp_import_name_from_947, mod_consts[2188]);
        }

        if (tmp_assign_source_1121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1254;

            goto try_except_handler_170;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2188], tmp_assign_source_1121);
    }
    {
        PyObject *tmp_assign_source_1122;
        PyObject *tmp_import_name_from_948;
        CHECK_OBJECT(tmp_import_from_170__module);
        tmp_import_name_from_948 = tmp_import_from_170__module;
        if (PyModule_Check(tmp_import_name_from_948)) {
            tmp_assign_source_1122 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_948,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2189],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1122 = IMPORT_NAME(tmp_import_name_from_948, mod_consts[2189]);
        }

        if (tmp_assign_source_1122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1254;

            goto try_except_handler_170;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2189], tmp_assign_source_1122);
    }
    goto try_end_170;
    // Exception handler code:
    try_except_handler_170:;
    exception_keeper_type_170 = exception_type;
    exception_keeper_value_170 = exception_value;
    exception_keeper_tb_170 = exception_tb;
    exception_keeper_lineno_170 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_170__module);
    Py_DECREF(tmp_import_from_170__module);
    tmp_import_from_170__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_170;
    exception_value = exception_keeper_value_170;
    exception_tb = exception_keeper_tb_170;
    exception_lineno = exception_keeper_lineno_170;

    goto frame_exception_exit_1;
    // End of try:
    try_end_170:;
    CHECK_OBJECT(tmp_import_from_170__module);
    Py_DECREF(tmp_import_from_170__module);
    tmp_import_from_170__module = NULL;
    {
        PyObject *tmp_assign_source_1123;
        PyObject *tmp_name_value_618;
        PyObject *tmp_globals_arg_value_618;
        PyObject *tmp_locals_arg_value_618;
        PyObject *tmp_fromlist_value_618;
        PyObject *tmp_level_value_618;
        tmp_name_value_618 = mod_consts[2190];
        tmp_globals_arg_value_618 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_618 = Py_None;
        tmp_fromlist_value_618 = mod_consts[2191];
        tmp_level_value_618 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1258;
        tmp_assign_source_1123 = IMPORT_MODULE5(tmp_name_value_618, tmp_globals_arg_value_618, tmp_locals_arg_value_618, tmp_fromlist_value_618, tmp_level_value_618);
        if (tmp_assign_source_1123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1258;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_171__module == NULL);
        tmp_import_from_171__module = tmp_assign_source_1123;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1124;
        PyObject *tmp_import_name_from_949;
        CHECK_OBJECT(tmp_import_from_171__module);
        tmp_import_name_from_949 = tmp_import_from_171__module;
        if (PyModule_Check(tmp_import_name_from_949)) {
            tmp_assign_source_1124 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_949,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2192],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1124 = IMPORT_NAME(tmp_import_name_from_949, mod_consts[2192]);
        }

        if (tmp_assign_source_1124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1258;

            goto try_except_handler_171;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2192], tmp_assign_source_1124);
    }
    {
        PyObject *tmp_assign_source_1125;
        PyObject *tmp_import_name_from_950;
        CHECK_OBJECT(tmp_import_from_171__module);
        tmp_import_name_from_950 = tmp_import_from_171__module;
        if (PyModule_Check(tmp_import_name_from_950)) {
            tmp_assign_source_1125 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_950,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2193],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1125 = IMPORT_NAME(tmp_import_name_from_950, mod_consts[2193]);
        }

        if (tmp_assign_source_1125 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1258;

            goto try_except_handler_171;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2193], tmp_assign_source_1125);
    }
    {
        PyObject *tmp_assign_source_1126;
        PyObject *tmp_import_name_from_951;
        CHECK_OBJECT(tmp_import_from_171__module);
        tmp_import_name_from_951 = tmp_import_from_171__module;
        if (PyModule_Check(tmp_import_name_from_951)) {
            tmp_assign_source_1126 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_951,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2194],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1126 = IMPORT_NAME(tmp_import_name_from_951, mod_consts[2194]);
        }

        if (tmp_assign_source_1126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1258;

            goto try_except_handler_171;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2194], tmp_assign_source_1126);
    }
    {
        PyObject *tmp_assign_source_1127;
        PyObject *tmp_import_name_from_952;
        CHECK_OBJECT(tmp_import_from_171__module);
        tmp_import_name_from_952 = tmp_import_from_171__module;
        if (PyModule_Check(tmp_import_name_from_952)) {
            tmp_assign_source_1127 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_952,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2195],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1127 = IMPORT_NAME(tmp_import_name_from_952, mod_consts[2195]);
        }

        if (tmp_assign_source_1127 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1258;

            goto try_except_handler_171;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2195], tmp_assign_source_1127);
    }
    goto try_end_171;
    // Exception handler code:
    try_except_handler_171:;
    exception_keeper_type_171 = exception_type;
    exception_keeper_value_171 = exception_value;
    exception_keeper_tb_171 = exception_tb;
    exception_keeper_lineno_171 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_171__module);
    Py_DECREF(tmp_import_from_171__module);
    tmp_import_from_171__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_171;
    exception_value = exception_keeper_value_171;
    exception_tb = exception_keeper_tb_171;
    exception_lineno = exception_keeper_lineno_171;

    goto frame_exception_exit_1;
    // End of try:
    try_end_171:;
    CHECK_OBJECT(tmp_import_from_171__module);
    Py_DECREF(tmp_import_from_171__module);
    tmp_import_from_171__module = NULL;
    {
        PyObject *tmp_assign_source_1128;
        PyObject *tmp_name_value_619;
        PyObject *tmp_globals_arg_value_619;
        PyObject *tmp_locals_arg_value_619;
        PyObject *tmp_fromlist_value_619;
        PyObject *tmp_level_value_619;
        tmp_name_value_619 = mod_consts[2196];
        tmp_globals_arg_value_619 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_619 = Py_None;
        tmp_fromlist_value_619 = mod_consts[2197];
        tmp_level_value_619 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1264;
        tmp_assign_source_1128 = IMPORT_MODULE5(tmp_name_value_619, tmp_globals_arg_value_619, tmp_locals_arg_value_619, tmp_fromlist_value_619, tmp_level_value_619);
        if (tmp_assign_source_1128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1264;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_172__module == NULL);
        tmp_import_from_172__module = tmp_assign_source_1128;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1129;
        PyObject *tmp_import_name_from_953;
        CHECK_OBJECT(tmp_import_from_172__module);
        tmp_import_name_from_953 = tmp_import_from_172__module;
        if (PyModule_Check(tmp_import_name_from_953)) {
            tmp_assign_source_1129 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_953,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2198],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1129 = IMPORT_NAME(tmp_import_name_from_953, mod_consts[2198]);
        }

        if (tmp_assign_source_1129 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1264;

            goto try_except_handler_172;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2198], tmp_assign_source_1129);
    }
    {
        PyObject *tmp_assign_source_1130;
        PyObject *tmp_import_name_from_954;
        CHECK_OBJECT(tmp_import_from_172__module);
        tmp_import_name_from_954 = tmp_import_from_172__module;
        if (PyModule_Check(tmp_import_name_from_954)) {
            tmp_assign_source_1130 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_954,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2199],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1130 = IMPORT_NAME(tmp_import_name_from_954, mod_consts[2199]);
        }

        if (tmp_assign_source_1130 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1264;

            goto try_except_handler_172;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2199], tmp_assign_source_1130);
    }
    goto try_end_172;
    // Exception handler code:
    try_except_handler_172:;
    exception_keeper_type_172 = exception_type;
    exception_keeper_value_172 = exception_value;
    exception_keeper_tb_172 = exception_tb;
    exception_keeper_lineno_172 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_172__module);
    Py_DECREF(tmp_import_from_172__module);
    tmp_import_from_172__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_172;
    exception_value = exception_keeper_value_172;
    exception_tb = exception_keeper_tb_172;
    exception_lineno = exception_keeper_lineno_172;

    goto frame_exception_exit_1;
    // End of try:
    try_end_172:;
    CHECK_OBJECT(tmp_import_from_172__module);
    Py_DECREF(tmp_import_from_172__module);
    tmp_import_from_172__module = NULL;
    {
        PyObject *tmp_assign_source_1131;
        PyObject *tmp_import_name_from_955;
        PyObject *tmp_name_value_620;
        PyObject *tmp_globals_arg_value_620;
        PyObject *tmp_locals_arg_value_620;
        PyObject *tmp_fromlist_value_620;
        PyObject *tmp_level_value_620;
        tmp_name_value_620 = mod_consts[2200];
        tmp_globals_arg_value_620 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_620 = Py_None;
        tmp_fromlist_value_620 = mod_consts[2201];
        tmp_level_value_620 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1268;
        tmp_import_name_from_955 = IMPORT_MODULE5(tmp_name_value_620, tmp_globals_arg_value_620, tmp_locals_arg_value_620, tmp_fromlist_value_620, tmp_level_value_620);
        if (tmp_import_name_from_955 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1268;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_955)) {
            tmp_assign_source_1131 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_955,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2202],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1131 = IMPORT_NAME(tmp_import_name_from_955, mod_consts[2202]);
        }

        Py_DECREF(tmp_import_name_from_955);
        if (tmp_assign_source_1131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1268;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2202], tmp_assign_source_1131);
    }
    {
        PyObject *tmp_assign_source_1132;
        PyObject *tmp_import_name_from_956;
        PyObject *tmp_name_value_621;
        PyObject *tmp_globals_arg_value_621;
        PyObject *tmp_locals_arg_value_621;
        PyObject *tmp_fromlist_value_621;
        PyObject *tmp_level_value_621;
        tmp_name_value_621 = mod_consts[2203];
        tmp_globals_arg_value_621 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_621 = Py_None;
        tmp_fromlist_value_621 = mod_consts[2204];
        tmp_level_value_621 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1269;
        tmp_import_name_from_956 = IMPORT_MODULE5(tmp_name_value_621, tmp_globals_arg_value_621, tmp_locals_arg_value_621, tmp_fromlist_value_621, tmp_level_value_621);
        if (tmp_import_name_from_956 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1269;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_956)) {
            tmp_assign_source_1132 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_956,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2205],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1132 = IMPORT_NAME(tmp_import_name_from_956, mod_consts[2205]);
        }

        Py_DECREF(tmp_import_name_from_956);
        if (tmp_assign_source_1132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1269;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2205], tmp_assign_source_1132);
    }
    {
        PyObject *tmp_assign_source_1133;
        PyObject *tmp_import_name_from_957;
        PyObject *tmp_name_value_622;
        PyObject *tmp_globals_arg_value_622;
        PyObject *tmp_locals_arg_value_622;
        PyObject *tmp_fromlist_value_622;
        PyObject *tmp_level_value_622;
        tmp_name_value_622 = mod_consts[2206];
        tmp_globals_arg_value_622 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_622 = Py_None;
        tmp_fromlist_value_622 = mod_consts[2207];
        tmp_level_value_622 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1270;
        tmp_import_name_from_957 = IMPORT_MODULE5(tmp_name_value_622, tmp_globals_arg_value_622, tmp_locals_arg_value_622, tmp_fromlist_value_622, tmp_level_value_622);
        if (tmp_import_name_from_957 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1270;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_957)) {
            tmp_assign_source_1133 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_957,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2208],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1133 = IMPORT_NAME(tmp_import_name_from_957, mod_consts[2208]);
        }

        Py_DECREF(tmp_import_name_from_957);
        if (tmp_assign_source_1133 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1270;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2208], tmp_assign_source_1133);
    }
    {
        PyObject *tmp_assign_source_1134;
        PyObject *tmp_name_value_623;
        PyObject *tmp_globals_arg_value_623;
        PyObject *tmp_locals_arg_value_623;
        PyObject *tmp_fromlist_value_623;
        PyObject *tmp_level_value_623;
        tmp_name_value_623 = mod_consts[2209];
        tmp_globals_arg_value_623 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_623 = Py_None;
        tmp_fromlist_value_623 = mod_consts[2210];
        tmp_level_value_623 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1271;
        tmp_assign_source_1134 = IMPORT_MODULE5(tmp_name_value_623, tmp_globals_arg_value_623, tmp_locals_arg_value_623, tmp_fromlist_value_623, tmp_level_value_623);
        if (tmp_assign_source_1134 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1271;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_173__module == NULL);
        tmp_import_from_173__module = tmp_assign_source_1134;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1135;
        PyObject *tmp_import_name_from_958;
        CHECK_OBJECT(tmp_import_from_173__module);
        tmp_import_name_from_958 = tmp_import_from_173__module;
        if (PyModule_Check(tmp_import_name_from_958)) {
            tmp_assign_source_1135 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_958,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2211],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1135 = IMPORT_NAME(tmp_import_name_from_958, mod_consts[2211]);
        }

        if (tmp_assign_source_1135 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1271;

            goto try_except_handler_173;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2211], tmp_assign_source_1135);
    }
    {
        PyObject *tmp_assign_source_1136;
        PyObject *tmp_import_name_from_959;
        CHECK_OBJECT(tmp_import_from_173__module);
        tmp_import_name_from_959 = tmp_import_from_173__module;
        if (PyModule_Check(tmp_import_name_from_959)) {
            tmp_assign_source_1136 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_959,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2212],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1136 = IMPORT_NAME(tmp_import_name_from_959, mod_consts[2212]);
        }

        if (tmp_assign_source_1136 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1271;

            goto try_except_handler_173;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2212], tmp_assign_source_1136);
    }
    goto try_end_173;
    // Exception handler code:
    try_except_handler_173:;
    exception_keeper_type_173 = exception_type;
    exception_keeper_value_173 = exception_value;
    exception_keeper_tb_173 = exception_tb;
    exception_keeper_lineno_173 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_173__module);
    Py_DECREF(tmp_import_from_173__module);
    tmp_import_from_173__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_173;
    exception_value = exception_keeper_value_173;
    exception_tb = exception_keeper_tb_173;
    exception_lineno = exception_keeper_lineno_173;

    goto frame_exception_exit_1;
    // End of try:
    try_end_173:;
    CHECK_OBJECT(tmp_import_from_173__module);
    Py_DECREF(tmp_import_from_173__module);
    tmp_import_from_173__module = NULL;
    {
        PyObject *tmp_assign_source_1137;
        PyObject *tmp_import_name_from_960;
        PyObject *tmp_name_value_624;
        PyObject *tmp_globals_arg_value_624;
        PyObject *tmp_locals_arg_value_624;
        PyObject *tmp_fromlist_value_624;
        PyObject *tmp_level_value_624;
        tmp_name_value_624 = mod_consts[2213];
        tmp_globals_arg_value_624 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_624 = Py_None;
        tmp_fromlist_value_624 = mod_consts[2214];
        tmp_level_value_624 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1272;
        tmp_import_name_from_960 = IMPORT_MODULE5(tmp_name_value_624, tmp_globals_arg_value_624, tmp_locals_arg_value_624, tmp_fromlist_value_624, tmp_level_value_624);
        if (tmp_import_name_from_960 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1272;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_960)) {
            tmp_assign_source_1137 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_960,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2215],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1137 = IMPORT_NAME(tmp_import_name_from_960, mod_consts[2215]);
        }

        Py_DECREF(tmp_import_name_from_960);
        if (tmp_assign_source_1137 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1272;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2215], tmp_assign_source_1137);
    }
    {
        PyObject *tmp_assign_source_1138;
        PyObject *tmp_import_name_from_961;
        PyObject *tmp_name_value_625;
        PyObject *tmp_globals_arg_value_625;
        PyObject *tmp_locals_arg_value_625;
        PyObject *tmp_fromlist_value_625;
        PyObject *tmp_level_value_625;
        tmp_name_value_625 = mod_consts[2216];
        tmp_globals_arg_value_625 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_625 = Py_None;
        tmp_fromlist_value_625 = mod_consts[2217];
        tmp_level_value_625 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1273;
        tmp_import_name_from_961 = IMPORT_MODULE5(tmp_name_value_625, tmp_globals_arg_value_625, tmp_locals_arg_value_625, tmp_fromlist_value_625, tmp_level_value_625);
        if (tmp_import_name_from_961 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1273;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_961)) {
            tmp_assign_source_1138 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_961,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2218],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1138 = IMPORT_NAME(tmp_import_name_from_961, mod_consts[2218]);
        }

        Py_DECREF(tmp_import_name_from_961);
        if (tmp_assign_source_1138 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1273;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2218], tmp_assign_source_1138);
    }
    {
        PyObject *tmp_assign_source_1139;
        PyObject *tmp_name_value_626;
        PyObject *tmp_globals_arg_value_626;
        PyObject *tmp_locals_arg_value_626;
        PyObject *tmp_fromlist_value_626;
        PyObject *tmp_level_value_626;
        tmp_name_value_626 = mod_consts[2219];
        tmp_globals_arg_value_626 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_626 = Py_None;
        tmp_fromlist_value_626 = mod_consts[2220];
        tmp_level_value_626 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1274;
        tmp_assign_source_1139 = IMPORT_MODULE5(tmp_name_value_626, tmp_globals_arg_value_626, tmp_locals_arg_value_626, tmp_fromlist_value_626, tmp_level_value_626);
        if (tmp_assign_source_1139 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1274;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_174__module == NULL);
        tmp_import_from_174__module = tmp_assign_source_1139;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1140;
        PyObject *tmp_import_name_from_962;
        CHECK_OBJECT(tmp_import_from_174__module);
        tmp_import_name_from_962 = tmp_import_from_174__module;
        if (PyModule_Check(tmp_import_name_from_962)) {
            tmp_assign_source_1140 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_962,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2221],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1140 = IMPORT_NAME(tmp_import_name_from_962, mod_consts[2221]);
        }

        if (tmp_assign_source_1140 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1274;

            goto try_except_handler_174;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2221], tmp_assign_source_1140);
    }
    {
        PyObject *tmp_assign_source_1141;
        PyObject *tmp_import_name_from_963;
        CHECK_OBJECT(tmp_import_from_174__module);
        tmp_import_name_from_963 = tmp_import_from_174__module;
        if (PyModule_Check(tmp_import_name_from_963)) {
            tmp_assign_source_1141 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_963,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2222],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1141 = IMPORT_NAME(tmp_import_name_from_963, mod_consts[2222]);
        }

        if (tmp_assign_source_1141 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1274;

            goto try_except_handler_174;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2222], tmp_assign_source_1141);
    }
    goto try_end_174;
    // Exception handler code:
    try_except_handler_174:;
    exception_keeper_type_174 = exception_type;
    exception_keeper_value_174 = exception_value;
    exception_keeper_tb_174 = exception_tb;
    exception_keeper_lineno_174 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_174__module);
    Py_DECREF(tmp_import_from_174__module);
    tmp_import_from_174__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_174;
    exception_value = exception_keeper_value_174;
    exception_tb = exception_keeper_tb_174;
    exception_lineno = exception_keeper_lineno_174;

    goto frame_exception_exit_1;
    // End of try:
    try_end_174:;
    CHECK_OBJECT(tmp_import_from_174__module);
    Py_DECREF(tmp_import_from_174__module);
    tmp_import_from_174__module = NULL;
    {
        PyObject *tmp_assign_source_1142;
        PyObject *tmp_import_name_from_964;
        PyObject *tmp_name_value_627;
        PyObject *tmp_globals_arg_value_627;
        PyObject *tmp_locals_arg_value_627;
        PyObject *tmp_fromlist_value_627;
        PyObject *tmp_level_value_627;
        tmp_name_value_627 = mod_consts[2223];
        tmp_globals_arg_value_627 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_627 = Py_None;
        tmp_fromlist_value_627 = mod_consts[2224];
        tmp_level_value_627 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1278;
        tmp_import_name_from_964 = IMPORT_MODULE5(tmp_name_value_627, tmp_globals_arg_value_627, tmp_locals_arg_value_627, tmp_fromlist_value_627, tmp_level_value_627);
        if (tmp_import_name_from_964 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1278;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_964)) {
            tmp_assign_source_1142 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_964,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2225],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1142 = IMPORT_NAME(tmp_import_name_from_964, mod_consts[2225]);
        }

        Py_DECREF(tmp_import_name_from_964);
        if (tmp_assign_source_1142 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1278;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2225], tmp_assign_source_1142);
    }
    {
        PyObject *tmp_assign_source_1143;
        PyObject *tmp_import_name_from_965;
        PyObject *tmp_name_value_628;
        PyObject *tmp_globals_arg_value_628;
        PyObject *tmp_locals_arg_value_628;
        PyObject *tmp_fromlist_value_628;
        PyObject *tmp_level_value_628;
        tmp_name_value_628 = mod_consts[2226];
        tmp_globals_arg_value_628 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_628 = Py_None;
        tmp_fromlist_value_628 = mod_consts[2227];
        tmp_level_value_628 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1279;
        tmp_import_name_from_965 = IMPORT_MODULE5(tmp_name_value_628, tmp_globals_arg_value_628, tmp_locals_arg_value_628, tmp_fromlist_value_628, tmp_level_value_628);
        if (tmp_import_name_from_965 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1279;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_965)) {
            tmp_assign_source_1143 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_965,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2228],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1143 = IMPORT_NAME(tmp_import_name_from_965, mod_consts[2228]);
        }

        Py_DECREF(tmp_import_name_from_965);
        if (tmp_assign_source_1143 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1279;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2228], tmp_assign_source_1143);
    }
    {
        PyObject *tmp_assign_source_1144;
        PyObject *tmp_import_name_from_966;
        PyObject *tmp_name_value_629;
        PyObject *tmp_globals_arg_value_629;
        PyObject *tmp_locals_arg_value_629;
        PyObject *tmp_fromlist_value_629;
        PyObject *tmp_level_value_629;
        tmp_name_value_629 = mod_consts[2229];
        tmp_globals_arg_value_629 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_629 = Py_None;
        tmp_fromlist_value_629 = mod_consts[2230];
        tmp_level_value_629 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1280;
        tmp_import_name_from_966 = IMPORT_MODULE5(tmp_name_value_629, tmp_globals_arg_value_629, tmp_locals_arg_value_629, tmp_fromlist_value_629, tmp_level_value_629);
        if (tmp_import_name_from_966 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1280;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_966)) {
            tmp_assign_source_1144 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_966,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2231],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1144 = IMPORT_NAME(tmp_import_name_from_966, mod_consts[2231]);
        }

        Py_DECREF(tmp_import_name_from_966);
        if (tmp_assign_source_1144 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1280;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2231], tmp_assign_source_1144);
    }
    {
        PyObject *tmp_assign_source_1145;
        PyObject *tmp_import_name_from_967;
        PyObject *tmp_name_value_630;
        PyObject *tmp_globals_arg_value_630;
        PyObject *tmp_locals_arg_value_630;
        PyObject *tmp_fromlist_value_630;
        PyObject *tmp_level_value_630;
        tmp_name_value_630 = mod_consts[2232];
        tmp_globals_arg_value_630 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_630 = Py_None;
        tmp_fromlist_value_630 = mod_consts[2233];
        tmp_level_value_630 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1281;
        tmp_import_name_from_967 = IMPORT_MODULE5(tmp_name_value_630, tmp_globals_arg_value_630, tmp_locals_arg_value_630, tmp_fromlist_value_630, tmp_level_value_630);
        if (tmp_import_name_from_967 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1281;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_967)) {
            tmp_assign_source_1145 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_967,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2234],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1145 = IMPORT_NAME(tmp_import_name_from_967, mod_consts[2234]);
        }

        Py_DECREF(tmp_import_name_from_967);
        if (tmp_assign_source_1145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1281;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2234], tmp_assign_source_1145);
    }
    {
        PyObject *tmp_assign_source_1146;
        PyObject *tmp_import_name_from_968;
        PyObject *tmp_name_value_631;
        PyObject *tmp_globals_arg_value_631;
        PyObject *tmp_locals_arg_value_631;
        PyObject *tmp_fromlist_value_631;
        PyObject *tmp_level_value_631;
        tmp_name_value_631 = mod_consts[2235];
        tmp_globals_arg_value_631 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_631 = Py_None;
        tmp_fromlist_value_631 = mod_consts[2236];
        tmp_level_value_631 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1282;
        tmp_import_name_from_968 = IMPORT_MODULE5(tmp_name_value_631, tmp_globals_arg_value_631, tmp_locals_arg_value_631, tmp_fromlist_value_631, tmp_level_value_631);
        if (tmp_import_name_from_968 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1282;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_968)) {
            tmp_assign_source_1146 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_968,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2237],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1146 = IMPORT_NAME(tmp_import_name_from_968, mod_consts[2237]);
        }

        Py_DECREF(tmp_import_name_from_968);
        if (tmp_assign_source_1146 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1282;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2237], tmp_assign_source_1146);
    }
    {
        PyObject *tmp_assign_source_1147;
        PyObject *tmp_name_value_632;
        PyObject *tmp_globals_arg_value_632;
        PyObject *tmp_locals_arg_value_632;
        PyObject *tmp_fromlist_value_632;
        PyObject *tmp_level_value_632;
        tmp_name_value_632 = mod_consts[2238];
        tmp_globals_arg_value_632 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_632 = Py_None;
        tmp_fromlist_value_632 = mod_consts[2239];
        tmp_level_value_632 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1283;
        tmp_assign_source_1147 = IMPORT_MODULE5(tmp_name_value_632, tmp_globals_arg_value_632, tmp_locals_arg_value_632, tmp_fromlist_value_632, tmp_level_value_632);
        if (tmp_assign_source_1147 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1283;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_175__module == NULL);
        tmp_import_from_175__module = tmp_assign_source_1147;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1148;
        PyObject *tmp_import_name_from_969;
        CHECK_OBJECT(tmp_import_from_175__module);
        tmp_import_name_from_969 = tmp_import_from_175__module;
        if (PyModule_Check(tmp_import_name_from_969)) {
            tmp_assign_source_1148 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_969,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2240],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1148 = IMPORT_NAME(tmp_import_name_from_969, mod_consts[2240]);
        }

        if (tmp_assign_source_1148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1283;

            goto try_except_handler_175;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2240], tmp_assign_source_1148);
    }
    {
        PyObject *tmp_assign_source_1149;
        PyObject *tmp_import_name_from_970;
        CHECK_OBJECT(tmp_import_from_175__module);
        tmp_import_name_from_970 = tmp_import_from_175__module;
        if (PyModule_Check(tmp_import_name_from_970)) {
            tmp_assign_source_1149 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_970,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2241],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1149 = IMPORT_NAME(tmp_import_name_from_970, mod_consts[2241]);
        }

        if (tmp_assign_source_1149 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1283;

            goto try_except_handler_175;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2241], tmp_assign_source_1149);
    }
    {
        PyObject *tmp_assign_source_1150;
        PyObject *tmp_import_name_from_971;
        CHECK_OBJECT(tmp_import_from_175__module);
        tmp_import_name_from_971 = tmp_import_from_175__module;
        if (PyModule_Check(tmp_import_name_from_971)) {
            tmp_assign_source_1150 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_971,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2242],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1150 = IMPORT_NAME(tmp_import_name_from_971, mod_consts[2242]);
        }

        if (tmp_assign_source_1150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1283;

            goto try_except_handler_175;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2242], tmp_assign_source_1150);
    }
    {
        PyObject *tmp_assign_source_1151;
        PyObject *tmp_import_name_from_972;
        CHECK_OBJECT(tmp_import_from_175__module);
        tmp_import_name_from_972 = tmp_import_from_175__module;
        if (PyModule_Check(tmp_import_name_from_972)) {
            tmp_assign_source_1151 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_972,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2243],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1151 = IMPORT_NAME(tmp_import_name_from_972, mod_consts[2243]);
        }

        if (tmp_assign_source_1151 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1283;

            goto try_except_handler_175;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2243], tmp_assign_source_1151);
    }
    {
        PyObject *tmp_assign_source_1152;
        PyObject *tmp_import_name_from_973;
        CHECK_OBJECT(tmp_import_from_175__module);
        tmp_import_name_from_973 = tmp_import_from_175__module;
        if (PyModule_Check(tmp_import_name_from_973)) {
            tmp_assign_source_1152 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_973,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2244],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1152 = IMPORT_NAME(tmp_import_name_from_973, mod_consts[2244]);
        }

        if (tmp_assign_source_1152 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1283;

            goto try_except_handler_175;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2244], tmp_assign_source_1152);
    }
    goto try_end_175;
    // Exception handler code:
    try_except_handler_175:;
    exception_keeper_type_175 = exception_type;
    exception_keeper_value_175 = exception_value;
    exception_keeper_tb_175 = exception_tb;
    exception_keeper_lineno_175 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_175__module);
    Py_DECREF(tmp_import_from_175__module);
    tmp_import_from_175__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_175;
    exception_value = exception_keeper_value_175;
    exception_tb = exception_keeper_tb_175;
    exception_lineno = exception_keeper_lineno_175;

    goto frame_exception_exit_1;
    // End of try:
    try_end_175:;
    CHECK_OBJECT(tmp_import_from_175__module);
    Py_DECREF(tmp_import_from_175__module);
    tmp_import_from_175__module = NULL;
    {
        PyObject *tmp_assign_source_1153;
        PyObject *tmp_import_name_from_974;
        PyObject *tmp_name_value_633;
        PyObject *tmp_globals_arg_value_633;
        PyObject *tmp_locals_arg_value_633;
        PyObject *tmp_fromlist_value_633;
        PyObject *tmp_level_value_633;
        tmp_name_value_633 = mod_consts[2245];
        tmp_globals_arg_value_633 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_633 = Py_None;
        tmp_fromlist_value_633 = mod_consts[2246];
        tmp_level_value_633 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1290;
        tmp_import_name_from_974 = IMPORT_MODULE5(tmp_name_value_633, tmp_globals_arg_value_633, tmp_locals_arg_value_633, tmp_fromlist_value_633, tmp_level_value_633);
        if (tmp_import_name_from_974 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1290;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_974)) {
            tmp_assign_source_1153 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_974,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2247],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1153 = IMPORT_NAME(tmp_import_name_from_974, mod_consts[2247]);
        }

        Py_DECREF(tmp_import_name_from_974);
        if (tmp_assign_source_1153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1290;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2247], tmp_assign_source_1153);
    }
    {
        PyObject *tmp_assign_source_1154;
        PyObject *tmp_import_name_from_975;
        PyObject *tmp_name_value_634;
        PyObject *tmp_globals_arg_value_634;
        PyObject *tmp_locals_arg_value_634;
        PyObject *tmp_fromlist_value_634;
        PyObject *tmp_level_value_634;
        tmp_name_value_634 = mod_consts[2248];
        tmp_globals_arg_value_634 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_634 = Py_None;
        tmp_fromlist_value_634 = mod_consts[2249];
        tmp_level_value_634 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1291;
        tmp_import_name_from_975 = IMPORT_MODULE5(tmp_name_value_634, tmp_globals_arg_value_634, tmp_locals_arg_value_634, tmp_fromlist_value_634, tmp_level_value_634);
        if (tmp_import_name_from_975 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1291;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_975)) {
            tmp_assign_source_1154 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_975,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2250],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1154 = IMPORT_NAME(tmp_import_name_from_975, mod_consts[2250]);
        }

        Py_DECREF(tmp_import_name_from_975);
        if (tmp_assign_source_1154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1291;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2250], tmp_assign_source_1154);
    }
    {
        PyObject *tmp_assign_source_1155;
        PyObject *tmp_name_value_635;
        PyObject *tmp_globals_arg_value_635;
        PyObject *tmp_locals_arg_value_635;
        PyObject *tmp_fromlist_value_635;
        PyObject *tmp_level_value_635;
        tmp_name_value_635 = mod_consts[2251];
        tmp_globals_arg_value_635 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_635 = Py_None;
        tmp_fromlist_value_635 = mod_consts[2252];
        tmp_level_value_635 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1292;
        tmp_assign_source_1155 = IMPORT_MODULE5(tmp_name_value_635, tmp_globals_arg_value_635, tmp_locals_arg_value_635, tmp_fromlist_value_635, tmp_level_value_635);
        if (tmp_assign_source_1155 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1292;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_176__module == NULL);
        tmp_import_from_176__module = tmp_assign_source_1155;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1156;
        PyObject *tmp_import_name_from_976;
        CHECK_OBJECT(tmp_import_from_176__module);
        tmp_import_name_from_976 = tmp_import_from_176__module;
        if (PyModule_Check(tmp_import_name_from_976)) {
            tmp_assign_source_1156 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_976,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2253],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1156 = IMPORT_NAME(tmp_import_name_from_976, mod_consts[2253]);
        }

        if (tmp_assign_source_1156 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1292;

            goto try_except_handler_176;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2253], tmp_assign_source_1156);
    }
    {
        PyObject *tmp_assign_source_1157;
        PyObject *tmp_import_name_from_977;
        CHECK_OBJECT(tmp_import_from_176__module);
        tmp_import_name_from_977 = tmp_import_from_176__module;
        if (PyModule_Check(tmp_import_name_from_977)) {
            tmp_assign_source_1157 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_977,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2254],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1157 = IMPORT_NAME(tmp_import_name_from_977, mod_consts[2254]);
        }

        if (tmp_assign_source_1157 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1292;

            goto try_except_handler_176;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2254], tmp_assign_source_1157);
    }
    {
        PyObject *tmp_assign_source_1158;
        PyObject *tmp_import_name_from_978;
        CHECK_OBJECT(tmp_import_from_176__module);
        tmp_import_name_from_978 = tmp_import_from_176__module;
        if (PyModule_Check(tmp_import_name_from_978)) {
            tmp_assign_source_1158 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_978,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2255],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1158 = IMPORT_NAME(tmp_import_name_from_978, mod_consts[2255]);
        }

        if (tmp_assign_source_1158 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1292;

            goto try_except_handler_176;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2255], tmp_assign_source_1158);
    }
    {
        PyObject *tmp_assign_source_1159;
        PyObject *tmp_import_name_from_979;
        CHECK_OBJECT(tmp_import_from_176__module);
        tmp_import_name_from_979 = tmp_import_from_176__module;
        if (PyModule_Check(tmp_import_name_from_979)) {
            tmp_assign_source_1159 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_979,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2256],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1159 = IMPORT_NAME(tmp_import_name_from_979, mod_consts[2256]);
        }

        if (tmp_assign_source_1159 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1292;

            goto try_except_handler_176;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2256], tmp_assign_source_1159);
    }
    goto try_end_176;
    // Exception handler code:
    try_except_handler_176:;
    exception_keeper_type_176 = exception_type;
    exception_keeper_value_176 = exception_value;
    exception_keeper_tb_176 = exception_tb;
    exception_keeper_lineno_176 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_176__module);
    Py_DECREF(tmp_import_from_176__module);
    tmp_import_from_176__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_176;
    exception_value = exception_keeper_value_176;
    exception_tb = exception_keeper_tb_176;
    exception_lineno = exception_keeper_lineno_176;

    goto frame_exception_exit_1;
    // End of try:
    try_end_176:;
    CHECK_OBJECT(tmp_import_from_176__module);
    Py_DECREF(tmp_import_from_176__module);
    tmp_import_from_176__module = NULL;
    {
        PyObject *tmp_assign_source_1160;
        PyObject *tmp_name_value_636;
        PyObject *tmp_globals_arg_value_636;
        PyObject *tmp_locals_arg_value_636;
        PyObject *tmp_fromlist_value_636;
        PyObject *tmp_level_value_636;
        tmp_name_value_636 = mod_consts[2257];
        tmp_globals_arg_value_636 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_636 = Py_None;
        tmp_fromlist_value_636 = mod_consts[2258];
        tmp_level_value_636 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1298;
        tmp_assign_source_1160 = IMPORT_MODULE5(tmp_name_value_636, tmp_globals_arg_value_636, tmp_locals_arg_value_636, tmp_fromlist_value_636, tmp_level_value_636);
        if (tmp_assign_source_1160 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1298;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_177__module == NULL);
        tmp_import_from_177__module = tmp_assign_source_1160;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1161;
        PyObject *tmp_import_name_from_980;
        CHECK_OBJECT(tmp_import_from_177__module);
        tmp_import_name_from_980 = tmp_import_from_177__module;
        if (PyModule_Check(tmp_import_name_from_980)) {
            tmp_assign_source_1161 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_980,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2259],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1161 = IMPORT_NAME(tmp_import_name_from_980, mod_consts[2259]);
        }

        if (tmp_assign_source_1161 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1298;

            goto try_except_handler_177;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2259], tmp_assign_source_1161);
    }
    {
        PyObject *tmp_assign_source_1162;
        PyObject *tmp_import_name_from_981;
        CHECK_OBJECT(tmp_import_from_177__module);
        tmp_import_name_from_981 = tmp_import_from_177__module;
        if (PyModule_Check(tmp_import_name_from_981)) {
            tmp_assign_source_1162 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_981,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2260],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1162 = IMPORT_NAME(tmp_import_name_from_981, mod_consts[2260]);
        }

        if (tmp_assign_source_1162 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1298;

            goto try_except_handler_177;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2260], tmp_assign_source_1162);
    }
    goto try_end_177;
    // Exception handler code:
    try_except_handler_177:;
    exception_keeper_type_177 = exception_type;
    exception_keeper_value_177 = exception_value;
    exception_keeper_tb_177 = exception_tb;
    exception_keeper_lineno_177 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_177__module);
    Py_DECREF(tmp_import_from_177__module);
    tmp_import_from_177__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_177;
    exception_value = exception_keeper_value_177;
    exception_tb = exception_keeper_tb_177;
    exception_lineno = exception_keeper_lineno_177;

    goto frame_exception_exit_1;
    // End of try:
    try_end_177:;
    CHECK_OBJECT(tmp_import_from_177__module);
    Py_DECREF(tmp_import_from_177__module);
    tmp_import_from_177__module = NULL;
    {
        PyObject *tmp_assign_source_1163;
        PyObject *tmp_import_name_from_982;
        PyObject *tmp_name_value_637;
        PyObject *tmp_globals_arg_value_637;
        PyObject *tmp_locals_arg_value_637;
        PyObject *tmp_fromlist_value_637;
        PyObject *tmp_level_value_637;
        tmp_name_value_637 = mod_consts[2261];
        tmp_globals_arg_value_637 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_637 = Py_None;
        tmp_fromlist_value_637 = mod_consts[2262];
        tmp_level_value_637 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1302;
        tmp_import_name_from_982 = IMPORT_MODULE5(tmp_name_value_637, tmp_globals_arg_value_637, tmp_locals_arg_value_637, tmp_fromlist_value_637, tmp_level_value_637);
        if (tmp_import_name_from_982 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1302;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_982)) {
            tmp_assign_source_1163 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_982,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2263],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1163 = IMPORT_NAME(tmp_import_name_from_982, mod_consts[2263]);
        }

        Py_DECREF(tmp_import_name_from_982);
        if (tmp_assign_source_1163 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1302;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2263], tmp_assign_source_1163);
    }
    {
        PyObject *tmp_assign_source_1164;
        PyObject *tmp_import_name_from_983;
        PyObject *tmp_name_value_638;
        PyObject *tmp_globals_arg_value_638;
        PyObject *tmp_locals_arg_value_638;
        PyObject *tmp_fromlist_value_638;
        PyObject *tmp_level_value_638;
        tmp_name_value_638 = mod_consts[2264];
        tmp_globals_arg_value_638 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_638 = Py_None;
        tmp_fromlist_value_638 = mod_consts[2265];
        tmp_level_value_638 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1303;
        tmp_import_name_from_983 = IMPORT_MODULE5(tmp_name_value_638, tmp_globals_arg_value_638, tmp_locals_arg_value_638, tmp_fromlist_value_638, tmp_level_value_638);
        if (tmp_import_name_from_983 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1303;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_983)) {
            tmp_assign_source_1164 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_983,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2266],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1164 = IMPORT_NAME(tmp_import_name_from_983, mod_consts[2266]);
        }

        Py_DECREF(tmp_import_name_from_983);
        if (tmp_assign_source_1164 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1303;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2266], tmp_assign_source_1164);
    }
    {
        PyObject *tmp_assign_source_1165;
        PyObject *tmp_import_name_from_984;
        PyObject *tmp_name_value_639;
        PyObject *tmp_globals_arg_value_639;
        PyObject *tmp_locals_arg_value_639;
        PyObject *tmp_fromlist_value_639;
        PyObject *tmp_level_value_639;
        tmp_name_value_639 = mod_consts[2267];
        tmp_globals_arg_value_639 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_639 = Py_None;
        tmp_fromlist_value_639 = mod_consts[2268];
        tmp_level_value_639 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1304;
        tmp_import_name_from_984 = IMPORT_MODULE5(tmp_name_value_639, tmp_globals_arg_value_639, tmp_locals_arg_value_639, tmp_fromlist_value_639, tmp_level_value_639);
        if (tmp_import_name_from_984 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1304;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_984)) {
            tmp_assign_source_1165 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_984,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2269],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1165 = IMPORT_NAME(tmp_import_name_from_984, mod_consts[2269]);
        }

        Py_DECREF(tmp_import_name_from_984);
        if (tmp_assign_source_1165 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1304;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2269], tmp_assign_source_1165);
    }
    {
        PyObject *tmp_assign_source_1166;
        PyObject *tmp_name_value_640;
        PyObject *tmp_globals_arg_value_640;
        PyObject *tmp_locals_arg_value_640;
        PyObject *tmp_fromlist_value_640;
        PyObject *tmp_level_value_640;
        tmp_name_value_640 = mod_consts[2270];
        tmp_globals_arg_value_640 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_640 = Py_None;
        tmp_fromlist_value_640 = mod_consts[2271];
        tmp_level_value_640 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1305;
        tmp_assign_source_1166 = IMPORT_MODULE5(tmp_name_value_640, tmp_globals_arg_value_640, tmp_locals_arg_value_640, tmp_fromlist_value_640, tmp_level_value_640);
        if (tmp_assign_source_1166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1305;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_178__module == NULL);
        tmp_import_from_178__module = tmp_assign_source_1166;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1167;
        PyObject *tmp_import_name_from_985;
        CHECK_OBJECT(tmp_import_from_178__module);
        tmp_import_name_from_985 = tmp_import_from_178__module;
        if (PyModule_Check(tmp_import_name_from_985)) {
            tmp_assign_source_1167 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_985,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2272],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1167 = IMPORT_NAME(tmp_import_name_from_985, mod_consts[2272]);
        }

        if (tmp_assign_source_1167 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1305;

            goto try_except_handler_178;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2272], tmp_assign_source_1167);
    }
    {
        PyObject *tmp_assign_source_1168;
        PyObject *tmp_import_name_from_986;
        CHECK_OBJECT(tmp_import_from_178__module);
        tmp_import_name_from_986 = tmp_import_from_178__module;
        if (PyModule_Check(tmp_import_name_from_986)) {
            tmp_assign_source_1168 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_986,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2273],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1168 = IMPORT_NAME(tmp_import_name_from_986, mod_consts[2273]);
        }

        if (tmp_assign_source_1168 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1305;

            goto try_except_handler_178;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2273], tmp_assign_source_1168);
    }
    goto try_end_178;
    // Exception handler code:
    try_except_handler_178:;
    exception_keeper_type_178 = exception_type;
    exception_keeper_value_178 = exception_value;
    exception_keeper_tb_178 = exception_tb;
    exception_keeper_lineno_178 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_178__module);
    Py_DECREF(tmp_import_from_178__module);
    tmp_import_from_178__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_178;
    exception_value = exception_keeper_value_178;
    exception_tb = exception_keeper_tb_178;
    exception_lineno = exception_keeper_lineno_178;

    goto frame_exception_exit_1;
    // End of try:
    try_end_178:;
    CHECK_OBJECT(tmp_import_from_178__module);
    Py_DECREF(tmp_import_from_178__module);
    tmp_import_from_178__module = NULL;
    {
        PyObject *tmp_assign_source_1169;
        PyObject *tmp_name_value_641;
        PyObject *tmp_globals_arg_value_641;
        PyObject *tmp_locals_arg_value_641;
        PyObject *tmp_fromlist_value_641;
        PyObject *tmp_level_value_641;
        tmp_name_value_641 = mod_consts[2274];
        tmp_globals_arg_value_641 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_641 = Py_None;
        tmp_fromlist_value_641 = mod_consts[2275];
        tmp_level_value_641 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1309;
        tmp_assign_source_1169 = IMPORT_MODULE5(tmp_name_value_641, tmp_globals_arg_value_641, tmp_locals_arg_value_641, tmp_fromlist_value_641, tmp_level_value_641);
        if (tmp_assign_source_1169 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1309;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_179__module == NULL);
        tmp_import_from_179__module = tmp_assign_source_1169;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1170;
        PyObject *tmp_import_name_from_987;
        CHECK_OBJECT(tmp_import_from_179__module);
        tmp_import_name_from_987 = tmp_import_from_179__module;
        if (PyModule_Check(tmp_import_name_from_987)) {
            tmp_assign_source_1170 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_987,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2276],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1170 = IMPORT_NAME(tmp_import_name_from_987, mod_consts[2276]);
        }

        if (tmp_assign_source_1170 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1309;

            goto try_except_handler_179;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2276], tmp_assign_source_1170);
    }
    {
        PyObject *tmp_assign_source_1171;
        PyObject *tmp_import_name_from_988;
        CHECK_OBJECT(tmp_import_from_179__module);
        tmp_import_name_from_988 = tmp_import_from_179__module;
        if (PyModule_Check(tmp_import_name_from_988)) {
            tmp_assign_source_1171 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_988,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2277],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1171 = IMPORT_NAME(tmp_import_name_from_988, mod_consts[2277]);
        }

        if (tmp_assign_source_1171 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1309;

            goto try_except_handler_179;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2277], tmp_assign_source_1171);
    }
    goto try_end_179;
    // Exception handler code:
    try_except_handler_179:;
    exception_keeper_type_179 = exception_type;
    exception_keeper_value_179 = exception_value;
    exception_keeper_tb_179 = exception_tb;
    exception_keeper_lineno_179 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_179__module);
    Py_DECREF(tmp_import_from_179__module);
    tmp_import_from_179__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_179;
    exception_value = exception_keeper_value_179;
    exception_tb = exception_keeper_tb_179;
    exception_lineno = exception_keeper_lineno_179;

    goto frame_exception_exit_1;
    // End of try:
    try_end_179:;
    CHECK_OBJECT(tmp_import_from_179__module);
    Py_DECREF(tmp_import_from_179__module);
    tmp_import_from_179__module = NULL;
    {
        PyObject *tmp_assign_source_1172;
        PyObject *tmp_name_value_642;
        PyObject *tmp_globals_arg_value_642;
        PyObject *tmp_locals_arg_value_642;
        PyObject *tmp_fromlist_value_642;
        PyObject *tmp_level_value_642;
        tmp_name_value_642 = mod_consts[2278];
        tmp_globals_arg_value_642 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_642 = Py_None;
        tmp_fromlist_value_642 = mod_consts[2279];
        tmp_level_value_642 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1313;
        tmp_assign_source_1172 = IMPORT_MODULE5(tmp_name_value_642, tmp_globals_arg_value_642, tmp_locals_arg_value_642, tmp_fromlist_value_642, tmp_level_value_642);
        if (tmp_assign_source_1172 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1313;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_180__module == NULL);
        tmp_import_from_180__module = tmp_assign_source_1172;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1173;
        PyObject *tmp_import_name_from_989;
        CHECK_OBJECT(tmp_import_from_180__module);
        tmp_import_name_from_989 = tmp_import_from_180__module;
        if (PyModule_Check(tmp_import_name_from_989)) {
            tmp_assign_source_1173 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_989,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2280],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1173 = IMPORT_NAME(tmp_import_name_from_989, mod_consts[2280]);
        }

        if (tmp_assign_source_1173 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1313;

            goto try_except_handler_180;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2280], tmp_assign_source_1173);
    }
    {
        PyObject *tmp_assign_source_1174;
        PyObject *tmp_import_name_from_990;
        CHECK_OBJECT(tmp_import_from_180__module);
        tmp_import_name_from_990 = tmp_import_from_180__module;
        if (PyModule_Check(tmp_import_name_from_990)) {
            tmp_assign_source_1174 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_990,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2281],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1174 = IMPORT_NAME(tmp_import_name_from_990, mod_consts[2281]);
        }

        if (tmp_assign_source_1174 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1313;

            goto try_except_handler_180;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2281], tmp_assign_source_1174);
    }
    goto try_end_180;
    // Exception handler code:
    try_except_handler_180:;
    exception_keeper_type_180 = exception_type;
    exception_keeper_value_180 = exception_value;
    exception_keeper_tb_180 = exception_tb;
    exception_keeper_lineno_180 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_180__module);
    Py_DECREF(tmp_import_from_180__module);
    tmp_import_from_180__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_180;
    exception_value = exception_keeper_value_180;
    exception_tb = exception_keeper_tb_180;
    exception_lineno = exception_keeper_lineno_180;

    goto frame_exception_exit_1;
    // End of try:
    try_end_180:;
    CHECK_OBJECT(tmp_import_from_180__module);
    Py_DECREF(tmp_import_from_180__module);
    tmp_import_from_180__module = NULL;
    {
        PyObject *tmp_assign_source_1175;
        PyObject *tmp_name_value_643;
        PyObject *tmp_globals_arg_value_643;
        PyObject *tmp_locals_arg_value_643;
        PyObject *tmp_fromlist_value_643;
        PyObject *tmp_level_value_643;
        tmp_name_value_643 = mod_consts[2282];
        tmp_globals_arg_value_643 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_643 = Py_None;
        tmp_fromlist_value_643 = mod_consts[2283];
        tmp_level_value_643 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1317;
        tmp_assign_source_1175 = IMPORT_MODULE5(tmp_name_value_643, tmp_globals_arg_value_643, tmp_locals_arg_value_643, tmp_fromlist_value_643, tmp_level_value_643);
        if (tmp_assign_source_1175 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1317;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_181__module == NULL);
        tmp_import_from_181__module = tmp_assign_source_1175;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1176;
        PyObject *tmp_import_name_from_991;
        CHECK_OBJECT(tmp_import_from_181__module);
        tmp_import_name_from_991 = tmp_import_from_181__module;
        if (PyModule_Check(tmp_import_name_from_991)) {
            tmp_assign_source_1176 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_991,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2284],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1176 = IMPORT_NAME(tmp_import_name_from_991, mod_consts[2284]);
        }

        if (tmp_assign_source_1176 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1317;

            goto try_except_handler_181;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2284], tmp_assign_source_1176);
    }
    {
        PyObject *tmp_assign_source_1177;
        PyObject *tmp_import_name_from_992;
        CHECK_OBJECT(tmp_import_from_181__module);
        tmp_import_name_from_992 = tmp_import_from_181__module;
        if (PyModule_Check(tmp_import_name_from_992)) {
            tmp_assign_source_1177 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_992,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2285],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1177 = IMPORT_NAME(tmp_import_name_from_992, mod_consts[2285]);
        }

        if (tmp_assign_source_1177 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1317;

            goto try_except_handler_181;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2285], tmp_assign_source_1177);
    }
    goto try_end_181;
    // Exception handler code:
    try_except_handler_181:;
    exception_keeper_type_181 = exception_type;
    exception_keeper_value_181 = exception_value;
    exception_keeper_tb_181 = exception_tb;
    exception_keeper_lineno_181 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_181__module);
    Py_DECREF(tmp_import_from_181__module);
    tmp_import_from_181__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_181;
    exception_value = exception_keeper_value_181;
    exception_tb = exception_keeper_tb_181;
    exception_lineno = exception_keeper_lineno_181;

    goto frame_exception_exit_1;
    // End of try:
    try_end_181:;
    CHECK_OBJECT(tmp_import_from_181__module);
    Py_DECREF(tmp_import_from_181__module);
    tmp_import_from_181__module = NULL;
    {
        PyObject *tmp_assign_source_1178;
        PyObject *tmp_import_name_from_993;
        PyObject *tmp_name_value_644;
        PyObject *tmp_globals_arg_value_644;
        PyObject *tmp_locals_arg_value_644;
        PyObject *tmp_fromlist_value_644;
        PyObject *tmp_level_value_644;
        tmp_name_value_644 = mod_consts[2286];
        tmp_globals_arg_value_644 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_644 = Py_None;
        tmp_fromlist_value_644 = mod_consts[2287];
        tmp_level_value_644 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1321;
        tmp_import_name_from_993 = IMPORT_MODULE5(tmp_name_value_644, tmp_globals_arg_value_644, tmp_locals_arg_value_644, tmp_fromlist_value_644, tmp_level_value_644);
        if (tmp_import_name_from_993 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1321;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_993)) {
            tmp_assign_source_1178 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_993,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2288],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1178 = IMPORT_NAME(tmp_import_name_from_993, mod_consts[2288]);
        }

        Py_DECREF(tmp_import_name_from_993);
        if (tmp_assign_source_1178 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1321;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2288], tmp_assign_source_1178);
    }
    {
        PyObject *tmp_assign_source_1179;
        PyObject *tmp_import_name_from_994;
        PyObject *tmp_name_value_645;
        PyObject *tmp_globals_arg_value_645;
        PyObject *tmp_locals_arg_value_645;
        PyObject *tmp_fromlist_value_645;
        PyObject *tmp_level_value_645;
        tmp_name_value_645 = mod_consts[2289];
        tmp_globals_arg_value_645 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_645 = Py_None;
        tmp_fromlist_value_645 = mod_consts[2290];
        tmp_level_value_645 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1322;
        tmp_import_name_from_994 = IMPORT_MODULE5(tmp_name_value_645, tmp_globals_arg_value_645, tmp_locals_arg_value_645, tmp_fromlist_value_645, tmp_level_value_645);
        if (tmp_import_name_from_994 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1322;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_994)) {
            tmp_assign_source_1179 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_994,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2291],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1179 = IMPORT_NAME(tmp_import_name_from_994, mod_consts[2291]);
        }

        Py_DECREF(tmp_import_name_from_994);
        if (tmp_assign_source_1179 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1322;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2291], tmp_assign_source_1179);
    }
    {
        PyObject *tmp_assign_source_1180;
        PyObject *tmp_import_name_from_995;
        PyObject *tmp_name_value_646;
        PyObject *tmp_globals_arg_value_646;
        PyObject *tmp_locals_arg_value_646;
        PyObject *tmp_fromlist_value_646;
        PyObject *tmp_level_value_646;
        tmp_name_value_646 = mod_consts[2292];
        tmp_globals_arg_value_646 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_646 = Py_None;
        tmp_fromlist_value_646 = mod_consts[2293];
        tmp_level_value_646 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1323;
        tmp_import_name_from_995 = IMPORT_MODULE5(tmp_name_value_646, tmp_globals_arg_value_646, tmp_locals_arg_value_646, tmp_fromlist_value_646, tmp_level_value_646);
        if (tmp_import_name_from_995 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1323;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_995)) {
            tmp_assign_source_1180 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_995,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2294],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1180 = IMPORT_NAME(tmp_import_name_from_995, mod_consts[2294]);
        }

        Py_DECREF(tmp_import_name_from_995);
        if (tmp_assign_source_1180 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1323;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2294], tmp_assign_source_1180);
    }
    {
        PyObject *tmp_assign_source_1181;
        PyObject *tmp_import_name_from_996;
        PyObject *tmp_name_value_647;
        PyObject *tmp_globals_arg_value_647;
        PyObject *tmp_locals_arg_value_647;
        PyObject *tmp_fromlist_value_647;
        PyObject *tmp_level_value_647;
        tmp_name_value_647 = mod_consts[2295];
        tmp_globals_arg_value_647 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_647 = Py_None;
        tmp_fromlist_value_647 = mod_consts[2296];
        tmp_level_value_647 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1324;
        tmp_import_name_from_996 = IMPORT_MODULE5(tmp_name_value_647, tmp_globals_arg_value_647, tmp_locals_arg_value_647, tmp_fromlist_value_647, tmp_level_value_647);
        if (tmp_import_name_from_996 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1324;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_996)) {
            tmp_assign_source_1181 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_996,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2297],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1181 = IMPORT_NAME(tmp_import_name_from_996, mod_consts[2297]);
        }

        Py_DECREF(tmp_import_name_from_996);
        if (tmp_assign_source_1181 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1324;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2297], tmp_assign_source_1181);
    }
    {
        PyObject *tmp_assign_source_1182;
        PyObject *tmp_import_name_from_997;
        PyObject *tmp_name_value_648;
        PyObject *tmp_globals_arg_value_648;
        PyObject *tmp_locals_arg_value_648;
        PyObject *tmp_fromlist_value_648;
        PyObject *tmp_level_value_648;
        tmp_name_value_648 = mod_consts[2298];
        tmp_globals_arg_value_648 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_648 = Py_None;
        tmp_fromlist_value_648 = mod_consts[2299];
        tmp_level_value_648 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1325;
        tmp_import_name_from_997 = IMPORT_MODULE5(tmp_name_value_648, tmp_globals_arg_value_648, tmp_locals_arg_value_648, tmp_fromlist_value_648, tmp_level_value_648);
        if (tmp_import_name_from_997 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1325;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_997)) {
            tmp_assign_source_1182 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_997,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2300],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1182 = IMPORT_NAME(tmp_import_name_from_997, mod_consts[2300]);
        }

        Py_DECREF(tmp_import_name_from_997);
        if (tmp_assign_source_1182 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1325;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2300], tmp_assign_source_1182);
    }
    {
        PyObject *tmp_assign_source_1183;
        PyObject *tmp_import_name_from_998;
        PyObject *tmp_name_value_649;
        PyObject *tmp_globals_arg_value_649;
        PyObject *tmp_locals_arg_value_649;
        PyObject *tmp_fromlist_value_649;
        PyObject *tmp_level_value_649;
        tmp_name_value_649 = mod_consts[2301];
        tmp_globals_arg_value_649 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_649 = Py_None;
        tmp_fromlist_value_649 = mod_consts[2302];
        tmp_level_value_649 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1326;
        tmp_import_name_from_998 = IMPORT_MODULE5(tmp_name_value_649, tmp_globals_arg_value_649, tmp_locals_arg_value_649, tmp_fromlist_value_649, tmp_level_value_649);
        if (tmp_import_name_from_998 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_998)) {
            tmp_assign_source_1183 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_998,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2303],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1183 = IMPORT_NAME(tmp_import_name_from_998, mod_consts[2303]);
        }

        Py_DECREF(tmp_import_name_from_998);
        if (tmp_assign_source_1183 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1326;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2303], tmp_assign_source_1183);
    }
    {
        PyObject *tmp_assign_source_1184;
        PyObject *tmp_name_value_650;
        PyObject *tmp_globals_arg_value_650;
        PyObject *tmp_locals_arg_value_650;
        PyObject *tmp_fromlist_value_650;
        PyObject *tmp_level_value_650;
        tmp_name_value_650 = mod_consts[2304];
        tmp_globals_arg_value_650 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_650 = Py_None;
        tmp_fromlist_value_650 = mod_consts[2305];
        tmp_level_value_650 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1327;
        tmp_assign_source_1184 = IMPORT_MODULE5(tmp_name_value_650, tmp_globals_arg_value_650, tmp_locals_arg_value_650, tmp_fromlist_value_650, tmp_level_value_650);
        if (tmp_assign_source_1184 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1327;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_182__module == NULL);
        tmp_import_from_182__module = tmp_assign_source_1184;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1185;
        PyObject *tmp_import_name_from_999;
        CHECK_OBJECT(tmp_import_from_182__module);
        tmp_import_name_from_999 = tmp_import_from_182__module;
        if (PyModule_Check(tmp_import_name_from_999)) {
            tmp_assign_source_1185 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_999,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2306],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1185 = IMPORT_NAME(tmp_import_name_from_999, mod_consts[2306]);
        }

        if (tmp_assign_source_1185 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1327;

            goto try_except_handler_182;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2306], tmp_assign_source_1185);
    }
    {
        PyObject *tmp_assign_source_1186;
        PyObject *tmp_import_name_from_1000;
        CHECK_OBJECT(tmp_import_from_182__module);
        tmp_import_name_from_1000 = tmp_import_from_182__module;
        if (PyModule_Check(tmp_import_name_from_1000)) {
            tmp_assign_source_1186 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1000,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2307],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1186 = IMPORT_NAME(tmp_import_name_from_1000, mod_consts[2307]);
        }

        if (tmp_assign_source_1186 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1327;

            goto try_except_handler_182;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2307], tmp_assign_source_1186);
    }
    {
        PyObject *tmp_assign_source_1187;
        PyObject *tmp_import_name_from_1001;
        CHECK_OBJECT(tmp_import_from_182__module);
        tmp_import_name_from_1001 = tmp_import_from_182__module;
        if (PyModule_Check(tmp_import_name_from_1001)) {
            tmp_assign_source_1187 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1001,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2308],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1187 = IMPORT_NAME(tmp_import_name_from_1001, mod_consts[2308]);
        }

        if (tmp_assign_source_1187 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1327;

            goto try_except_handler_182;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2308], tmp_assign_source_1187);
    }
    {
        PyObject *tmp_assign_source_1188;
        PyObject *tmp_import_name_from_1002;
        CHECK_OBJECT(tmp_import_from_182__module);
        tmp_import_name_from_1002 = tmp_import_from_182__module;
        if (PyModule_Check(tmp_import_name_from_1002)) {
            tmp_assign_source_1188 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1002,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2309],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1188 = IMPORT_NAME(tmp_import_name_from_1002, mod_consts[2309]);
        }

        if (tmp_assign_source_1188 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1327;

            goto try_except_handler_182;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2309], tmp_assign_source_1188);
    }
    {
        PyObject *tmp_assign_source_1189;
        PyObject *tmp_import_name_from_1003;
        CHECK_OBJECT(tmp_import_from_182__module);
        tmp_import_name_from_1003 = tmp_import_from_182__module;
        if (PyModule_Check(tmp_import_name_from_1003)) {
            tmp_assign_source_1189 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1003,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2310],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1189 = IMPORT_NAME(tmp_import_name_from_1003, mod_consts[2310]);
        }

        if (tmp_assign_source_1189 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1327;

            goto try_except_handler_182;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2310], tmp_assign_source_1189);
    }
    goto try_end_182;
    // Exception handler code:
    try_except_handler_182:;
    exception_keeper_type_182 = exception_type;
    exception_keeper_value_182 = exception_value;
    exception_keeper_tb_182 = exception_tb;
    exception_keeper_lineno_182 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_182__module);
    Py_DECREF(tmp_import_from_182__module);
    tmp_import_from_182__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_182;
    exception_value = exception_keeper_value_182;
    exception_tb = exception_keeper_tb_182;
    exception_lineno = exception_keeper_lineno_182;

    goto frame_exception_exit_1;
    // End of try:
    try_end_182:;
    CHECK_OBJECT(tmp_import_from_182__module);
    Py_DECREF(tmp_import_from_182__module);
    tmp_import_from_182__module = NULL;
    {
        PyObject *tmp_assign_source_1190;
        PyObject *tmp_name_value_651;
        PyObject *tmp_globals_arg_value_651;
        PyObject *tmp_locals_arg_value_651;
        PyObject *tmp_fromlist_value_651;
        PyObject *tmp_level_value_651;
        tmp_name_value_651 = mod_consts[2311];
        tmp_globals_arg_value_651 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_651 = Py_None;
        tmp_fromlist_value_651 = mod_consts[2312];
        tmp_level_value_651 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1334;
        tmp_assign_source_1190 = IMPORT_MODULE5(tmp_name_value_651, tmp_globals_arg_value_651, tmp_locals_arg_value_651, tmp_fromlist_value_651, tmp_level_value_651);
        if (tmp_assign_source_1190 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1334;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_183__module == NULL);
        tmp_import_from_183__module = tmp_assign_source_1190;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1191;
        PyObject *tmp_import_name_from_1004;
        CHECK_OBJECT(tmp_import_from_183__module);
        tmp_import_name_from_1004 = tmp_import_from_183__module;
        if (PyModule_Check(tmp_import_name_from_1004)) {
            tmp_assign_source_1191 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1004,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2313],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1191 = IMPORT_NAME(tmp_import_name_from_1004, mod_consts[2313]);
        }

        if (tmp_assign_source_1191 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1334;

            goto try_except_handler_183;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2313], tmp_assign_source_1191);
    }
    {
        PyObject *tmp_assign_source_1192;
        PyObject *tmp_import_name_from_1005;
        CHECK_OBJECT(tmp_import_from_183__module);
        tmp_import_name_from_1005 = tmp_import_from_183__module;
        if (PyModule_Check(tmp_import_name_from_1005)) {
            tmp_assign_source_1192 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1005,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2314],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1192 = IMPORT_NAME(tmp_import_name_from_1005, mod_consts[2314]);
        }

        if (tmp_assign_source_1192 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1334;

            goto try_except_handler_183;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2314], tmp_assign_source_1192);
    }
    {
        PyObject *tmp_assign_source_1193;
        PyObject *tmp_import_name_from_1006;
        CHECK_OBJECT(tmp_import_from_183__module);
        tmp_import_name_from_1006 = tmp_import_from_183__module;
        if (PyModule_Check(tmp_import_name_from_1006)) {
            tmp_assign_source_1193 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1006,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2315],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1193 = IMPORT_NAME(tmp_import_name_from_1006, mod_consts[2315]);
        }

        if (tmp_assign_source_1193 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1334;

            goto try_except_handler_183;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2315], tmp_assign_source_1193);
    }
    goto try_end_183;
    // Exception handler code:
    try_except_handler_183:;
    exception_keeper_type_183 = exception_type;
    exception_keeper_value_183 = exception_value;
    exception_keeper_tb_183 = exception_tb;
    exception_keeper_lineno_183 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_183__module);
    Py_DECREF(tmp_import_from_183__module);
    tmp_import_from_183__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_183;
    exception_value = exception_keeper_value_183;
    exception_tb = exception_keeper_tb_183;
    exception_lineno = exception_keeper_lineno_183;

    goto frame_exception_exit_1;
    // End of try:
    try_end_183:;
    CHECK_OBJECT(tmp_import_from_183__module);
    Py_DECREF(tmp_import_from_183__module);
    tmp_import_from_183__module = NULL;
    {
        PyObject *tmp_assign_source_1194;
        PyObject *tmp_name_value_652;
        PyObject *tmp_globals_arg_value_652;
        PyObject *tmp_locals_arg_value_652;
        PyObject *tmp_fromlist_value_652;
        PyObject *tmp_level_value_652;
        tmp_name_value_652 = mod_consts[2316];
        tmp_globals_arg_value_652 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_652 = Py_None;
        tmp_fromlist_value_652 = mod_consts[2317];
        tmp_level_value_652 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1339;
        tmp_assign_source_1194 = IMPORT_MODULE5(tmp_name_value_652, tmp_globals_arg_value_652, tmp_locals_arg_value_652, tmp_fromlist_value_652, tmp_level_value_652);
        if (tmp_assign_source_1194 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1339;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_184__module == NULL);
        tmp_import_from_184__module = tmp_assign_source_1194;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1195;
        PyObject *tmp_import_name_from_1007;
        CHECK_OBJECT(tmp_import_from_184__module);
        tmp_import_name_from_1007 = tmp_import_from_184__module;
        if (PyModule_Check(tmp_import_name_from_1007)) {
            tmp_assign_source_1195 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1007,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2318],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1195 = IMPORT_NAME(tmp_import_name_from_1007, mod_consts[2318]);
        }

        if (tmp_assign_source_1195 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1339;

            goto try_except_handler_184;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2318], tmp_assign_source_1195);
    }
    {
        PyObject *tmp_assign_source_1196;
        PyObject *tmp_import_name_from_1008;
        CHECK_OBJECT(tmp_import_from_184__module);
        tmp_import_name_from_1008 = tmp_import_from_184__module;
        if (PyModule_Check(tmp_import_name_from_1008)) {
            tmp_assign_source_1196 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1008,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2319],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1196 = IMPORT_NAME(tmp_import_name_from_1008, mod_consts[2319]);
        }

        if (tmp_assign_source_1196 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1339;

            goto try_except_handler_184;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2319], tmp_assign_source_1196);
    }
    {
        PyObject *tmp_assign_source_1197;
        PyObject *tmp_import_name_from_1009;
        CHECK_OBJECT(tmp_import_from_184__module);
        tmp_import_name_from_1009 = tmp_import_from_184__module;
        if (PyModule_Check(tmp_import_name_from_1009)) {
            tmp_assign_source_1197 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1009,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2320],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1197 = IMPORT_NAME(tmp_import_name_from_1009, mod_consts[2320]);
        }

        if (tmp_assign_source_1197 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1339;

            goto try_except_handler_184;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2320], tmp_assign_source_1197);
    }
    goto try_end_184;
    // Exception handler code:
    try_except_handler_184:;
    exception_keeper_type_184 = exception_type;
    exception_keeper_value_184 = exception_value;
    exception_keeper_tb_184 = exception_tb;
    exception_keeper_lineno_184 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_184__module);
    Py_DECREF(tmp_import_from_184__module);
    tmp_import_from_184__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_184;
    exception_value = exception_keeper_value_184;
    exception_tb = exception_keeper_tb_184;
    exception_lineno = exception_keeper_lineno_184;

    goto frame_exception_exit_1;
    // End of try:
    try_end_184:;
    CHECK_OBJECT(tmp_import_from_184__module);
    Py_DECREF(tmp_import_from_184__module);
    tmp_import_from_184__module = NULL;
    {
        PyObject *tmp_assign_source_1198;
        PyObject *tmp_import_name_from_1010;
        PyObject *tmp_name_value_653;
        PyObject *tmp_globals_arg_value_653;
        PyObject *tmp_locals_arg_value_653;
        PyObject *tmp_fromlist_value_653;
        PyObject *tmp_level_value_653;
        tmp_name_value_653 = mod_consts[2321];
        tmp_globals_arg_value_653 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_653 = Py_None;
        tmp_fromlist_value_653 = mod_consts[2322];
        tmp_level_value_653 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1344;
        tmp_import_name_from_1010 = IMPORT_MODULE5(tmp_name_value_653, tmp_globals_arg_value_653, tmp_locals_arg_value_653, tmp_fromlist_value_653, tmp_level_value_653);
        if (tmp_import_name_from_1010 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1344;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1010)) {
            tmp_assign_source_1198 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1010,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2323],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1198 = IMPORT_NAME(tmp_import_name_from_1010, mod_consts[2323]);
        }

        Py_DECREF(tmp_import_name_from_1010);
        if (tmp_assign_source_1198 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1344;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2323], tmp_assign_source_1198);
    }
    {
        PyObject *tmp_assign_source_1199;
        PyObject *tmp_import_name_from_1011;
        PyObject *tmp_name_value_654;
        PyObject *tmp_globals_arg_value_654;
        PyObject *tmp_locals_arg_value_654;
        PyObject *tmp_fromlist_value_654;
        PyObject *tmp_level_value_654;
        tmp_name_value_654 = mod_consts[2324];
        tmp_globals_arg_value_654 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_654 = Py_None;
        tmp_fromlist_value_654 = mod_consts[2325];
        tmp_level_value_654 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1345;
        tmp_import_name_from_1011 = IMPORT_MODULE5(tmp_name_value_654, tmp_globals_arg_value_654, tmp_locals_arg_value_654, tmp_fromlist_value_654, tmp_level_value_654);
        if (tmp_import_name_from_1011 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1345;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1011)) {
            tmp_assign_source_1199 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1011,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2326],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1199 = IMPORT_NAME(tmp_import_name_from_1011, mod_consts[2326]);
        }

        Py_DECREF(tmp_import_name_from_1011);
        if (tmp_assign_source_1199 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1345;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2326], tmp_assign_source_1199);
    }
    {
        PyObject *tmp_assign_source_1200;
        PyObject *tmp_import_name_from_1012;
        PyObject *tmp_name_value_655;
        PyObject *tmp_globals_arg_value_655;
        PyObject *tmp_locals_arg_value_655;
        PyObject *tmp_fromlist_value_655;
        PyObject *tmp_level_value_655;
        tmp_name_value_655 = mod_consts[2327];
        tmp_globals_arg_value_655 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_655 = Py_None;
        tmp_fromlist_value_655 = mod_consts[2328];
        tmp_level_value_655 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1346;
        tmp_import_name_from_1012 = IMPORT_MODULE5(tmp_name_value_655, tmp_globals_arg_value_655, tmp_locals_arg_value_655, tmp_fromlist_value_655, tmp_level_value_655);
        if (tmp_import_name_from_1012 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1346;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1012)) {
            tmp_assign_source_1200 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1012,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2329],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1200 = IMPORT_NAME(tmp_import_name_from_1012, mod_consts[2329]);
        }

        Py_DECREF(tmp_import_name_from_1012);
        if (tmp_assign_source_1200 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1346;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2329], tmp_assign_source_1200);
    }
    {
        PyObject *tmp_assign_source_1201;
        PyObject *tmp_import_name_from_1013;
        PyObject *tmp_name_value_656;
        PyObject *tmp_globals_arg_value_656;
        PyObject *tmp_locals_arg_value_656;
        PyObject *tmp_fromlist_value_656;
        PyObject *tmp_level_value_656;
        tmp_name_value_656 = mod_consts[2330];
        tmp_globals_arg_value_656 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_656 = Py_None;
        tmp_fromlist_value_656 = mod_consts[2331];
        tmp_level_value_656 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1347;
        tmp_import_name_from_1013 = IMPORT_MODULE5(tmp_name_value_656, tmp_globals_arg_value_656, tmp_locals_arg_value_656, tmp_fromlist_value_656, tmp_level_value_656);
        if (tmp_import_name_from_1013 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1347;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1013)) {
            tmp_assign_source_1201 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1013,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2332],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1201 = IMPORT_NAME(tmp_import_name_from_1013, mod_consts[2332]);
        }

        Py_DECREF(tmp_import_name_from_1013);
        if (tmp_assign_source_1201 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1347;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2332], tmp_assign_source_1201);
    }
    {
        PyObject *tmp_assign_source_1202;
        PyObject *tmp_import_name_from_1014;
        PyObject *tmp_name_value_657;
        PyObject *tmp_globals_arg_value_657;
        PyObject *tmp_locals_arg_value_657;
        PyObject *tmp_fromlist_value_657;
        PyObject *tmp_level_value_657;
        tmp_name_value_657 = mod_consts[2333];
        tmp_globals_arg_value_657 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_657 = Py_None;
        tmp_fromlist_value_657 = mod_consts[2334];
        tmp_level_value_657 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1348;
        tmp_import_name_from_1014 = IMPORT_MODULE5(tmp_name_value_657, tmp_globals_arg_value_657, tmp_locals_arg_value_657, tmp_fromlist_value_657, tmp_level_value_657);
        if (tmp_import_name_from_1014 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1348;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1014)) {
            tmp_assign_source_1202 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1014,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2335],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1202 = IMPORT_NAME(tmp_import_name_from_1014, mod_consts[2335]);
        }

        Py_DECREF(tmp_import_name_from_1014);
        if (tmp_assign_source_1202 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1348;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2335], tmp_assign_source_1202);
    }
    {
        PyObject *tmp_assign_source_1203;
        PyObject *tmp_import_name_from_1015;
        PyObject *tmp_name_value_658;
        PyObject *tmp_globals_arg_value_658;
        PyObject *tmp_locals_arg_value_658;
        PyObject *tmp_fromlist_value_658;
        PyObject *tmp_level_value_658;
        tmp_name_value_658 = mod_consts[2336];
        tmp_globals_arg_value_658 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_658 = Py_None;
        tmp_fromlist_value_658 = mod_consts[2337];
        tmp_level_value_658 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1349;
        tmp_import_name_from_1015 = IMPORT_MODULE5(tmp_name_value_658, tmp_globals_arg_value_658, tmp_locals_arg_value_658, tmp_fromlist_value_658, tmp_level_value_658);
        if (tmp_import_name_from_1015 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1349;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1015)) {
            tmp_assign_source_1203 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1015,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2338],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1203 = IMPORT_NAME(tmp_import_name_from_1015, mod_consts[2338]);
        }

        Py_DECREF(tmp_import_name_from_1015);
        if (tmp_assign_source_1203 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1349;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2338], tmp_assign_source_1203);
    }
    {
        PyObject *tmp_assign_source_1204;
        PyObject *tmp_name_value_659;
        PyObject *tmp_globals_arg_value_659;
        PyObject *tmp_locals_arg_value_659;
        PyObject *tmp_fromlist_value_659;
        PyObject *tmp_level_value_659;
        tmp_name_value_659 = mod_consts[2339];
        tmp_globals_arg_value_659 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_659 = Py_None;
        tmp_fromlist_value_659 = mod_consts[2340];
        tmp_level_value_659 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1350;
        tmp_assign_source_1204 = IMPORT_MODULE5(tmp_name_value_659, tmp_globals_arg_value_659, tmp_locals_arg_value_659, tmp_fromlist_value_659, tmp_level_value_659);
        if (tmp_assign_source_1204 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1350;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_185__module == NULL);
        tmp_import_from_185__module = tmp_assign_source_1204;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1205;
        PyObject *tmp_import_name_from_1016;
        CHECK_OBJECT(tmp_import_from_185__module);
        tmp_import_name_from_1016 = tmp_import_from_185__module;
        if (PyModule_Check(tmp_import_name_from_1016)) {
            tmp_assign_source_1205 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1016,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2341],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1205 = IMPORT_NAME(tmp_import_name_from_1016, mod_consts[2341]);
        }

        if (tmp_assign_source_1205 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1350;

            goto try_except_handler_185;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2341], tmp_assign_source_1205);
    }
    {
        PyObject *tmp_assign_source_1206;
        PyObject *tmp_import_name_from_1017;
        CHECK_OBJECT(tmp_import_from_185__module);
        tmp_import_name_from_1017 = tmp_import_from_185__module;
        if (PyModule_Check(tmp_import_name_from_1017)) {
            tmp_assign_source_1206 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1017,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2342],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1206 = IMPORT_NAME(tmp_import_name_from_1017, mod_consts[2342]);
        }

        if (tmp_assign_source_1206 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1350;

            goto try_except_handler_185;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2342], tmp_assign_source_1206);
    }
    {
        PyObject *tmp_assign_source_1207;
        PyObject *tmp_import_name_from_1018;
        CHECK_OBJECT(tmp_import_from_185__module);
        tmp_import_name_from_1018 = tmp_import_from_185__module;
        if (PyModule_Check(tmp_import_name_from_1018)) {
            tmp_assign_source_1207 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1018,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2343],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1207 = IMPORT_NAME(tmp_import_name_from_1018, mod_consts[2343]);
        }

        if (tmp_assign_source_1207 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1350;

            goto try_except_handler_185;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2343], tmp_assign_source_1207);
    }
    {
        PyObject *tmp_assign_source_1208;
        PyObject *tmp_import_name_from_1019;
        CHECK_OBJECT(tmp_import_from_185__module);
        tmp_import_name_from_1019 = tmp_import_from_185__module;
        if (PyModule_Check(tmp_import_name_from_1019)) {
            tmp_assign_source_1208 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1019,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2344],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1208 = IMPORT_NAME(tmp_import_name_from_1019, mod_consts[2344]);
        }

        if (tmp_assign_source_1208 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1350;

            goto try_except_handler_185;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2344], tmp_assign_source_1208);
    }
    {
        PyObject *tmp_assign_source_1209;
        PyObject *tmp_import_name_from_1020;
        CHECK_OBJECT(tmp_import_from_185__module);
        tmp_import_name_from_1020 = tmp_import_from_185__module;
        if (PyModule_Check(tmp_import_name_from_1020)) {
            tmp_assign_source_1209 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1020,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2345],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1209 = IMPORT_NAME(tmp_import_name_from_1020, mod_consts[2345]);
        }

        if (tmp_assign_source_1209 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1350;

            goto try_except_handler_185;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2345], tmp_assign_source_1209);
    }
    {
        PyObject *tmp_assign_source_1210;
        PyObject *tmp_import_name_from_1021;
        CHECK_OBJECT(tmp_import_from_185__module);
        tmp_import_name_from_1021 = tmp_import_from_185__module;
        if (PyModule_Check(tmp_import_name_from_1021)) {
            tmp_assign_source_1210 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1021,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2346],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1210 = IMPORT_NAME(tmp_import_name_from_1021, mod_consts[2346]);
        }

        if (tmp_assign_source_1210 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1350;

            goto try_except_handler_185;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2346], tmp_assign_source_1210);
    }
    {
        PyObject *tmp_assign_source_1211;
        PyObject *tmp_import_name_from_1022;
        CHECK_OBJECT(tmp_import_from_185__module);
        tmp_import_name_from_1022 = tmp_import_from_185__module;
        if (PyModule_Check(tmp_import_name_from_1022)) {
            tmp_assign_source_1211 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1022,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2347],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1211 = IMPORT_NAME(tmp_import_name_from_1022, mod_consts[2347]);
        }

        if (tmp_assign_source_1211 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1350;

            goto try_except_handler_185;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2347], tmp_assign_source_1211);
    }
    goto try_end_185;
    // Exception handler code:
    try_except_handler_185:;
    exception_keeper_type_185 = exception_type;
    exception_keeper_value_185 = exception_value;
    exception_keeper_tb_185 = exception_tb;
    exception_keeper_lineno_185 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_185__module);
    Py_DECREF(tmp_import_from_185__module);
    tmp_import_from_185__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_185;
    exception_value = exception_keeper_value_185;
    exception_tb = exception_keeper_tb_185;
    exception_lineno = exception_keeper_lineno_185;

    goto frame_exception_exit_1;
    // End of try:
    try_end_185:;
    CHECK_OBJECT(tmp_import_from_185__module);
    Py_DECREF(tmp_import_from_185__module);
    tmp_import_from_185__module = NULL;
    {
        PyObject *tmp_assign_source_1212;
        PyObject *tmp_name_value_660;
        PyObject *tmp_globals_arg_value_660;
        PyObject *tmp_locals_arg_value_660;
        PyObject *tmp_fromlist_value_660;
        PyObject *tmp_level_value_660;
        tmp_name_value_660 = mod_consts[2348];
        tmp_globals_arg_value_660 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_660 = Py_None;
        tmp_fromlist_value_660 = mod_consts[2349];
        tmp_level_value_660 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1359;
        tmp_assign_source_1212 = IMPORT_MODULE5(tmp_name_value_660, tmp_globals_arg_value_660, tmp_locals_arg_value_660, tmp_fromlist_value_660, tmp_level_value_660);
        if (tmp_assign_source_1212 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1359;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_186__module == NULL);
        tmp_import_from_186__module = tmp_assign_source_1212;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1213;
        PyObject *tmp_import_name_from_1023;
        CHECK_OBJECT(tmp_import_from_186__module);
        tmp_import_name_from_1023 = tmp_import_from_186__module;
        if (PyModule_Check(tmp_import_name_from_1023)) {
            tmp_assign_source_1213 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1023,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2350],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1213 = IMPORT_NAME(tmp_import_name_from_1023, mod_consts[2350]);
        }

        if (tmp_assign_source_1213 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1359;

            goto try_except_handler_186;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2350], tmp_assign_source_1213);
    }
    {
        PyObject *tmp_assign_source_1214;
        PyObject *tmp_import_name_from_1024;
        CHECK_OBJECT(tmp_import_from_186__module);
        tmp_import_name_from_1024 = tmp_import_from_186__module;
        if (PyModule_Check(tmp_import_name_from_1024)) {
            tmp_assign_source_1214 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1024,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2351],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1214 = IMPORT_NAME(tmp_import_name_from_1024, mod_consts[2351]);
        }

        if (tmp_assign_source_1214 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1359;

            goto try_except_handler_186;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2351], tmp_assign_source_1214);
    }
    {
        PyObject *tmp_assign_source_1215;
        PyObject *tmp_import_name_from_1025;
        CHECK_OBJECT(tmp_import_from_186__module);
        tmp_import_name_from_1025 = tmp_import_from_186__module;
        if (PyModule_Check(tmp_import_name_from_1025)) {
            tmp_assign_source_1215 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1025,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2352],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1215 = IMPORT_NAME(tmp_import_name_from_1025, mod_consts[2352]);
        }

        if (tmp_assign_source_1215 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1359;

            goto try_except_handler_186;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2352], tmp_assign_source_1215);
    }
    {
        PyObject *tmp_assign_source_1216;
        PyObject *tmp_import_name_from_1026;
        CHECK_OBJECT(tmp_import_from_186__module);
        tmp_import_name_from_1026 = tmp_import_from_186__module;
        if (PyModule_Check(tmp_import_name_from_1026)) {
            tmp_assign_source_1216 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1026,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2353],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1216 = IMPORT_NAME(tmp_import_name_from_1026, mod_consts[2353]);
        }

        if (tmp_assign_source_1216 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1359;

            goto try_except_handler_186;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2353], tmp_assign_source_1216);
    }
    goto try_end_186;
    // Exception handler code:
    try_except_handler_186:;
    exception_keeper_type_186 = exception_type;
    exception_keeper_value_186 = exception_value;
    exception_keeper_tb_186 = exception_tb;
    exception_keeper_lineno_186 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_186__module);
    Py_DECREF(tmp_import_from_186__module);
    tmp_import_from_186__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_186;
    exception_value = exception_keeper_value_186;
    exception_tb = exception_keeper_tb_186;
    exception_lineno = exception_keeper_lineno_186;

    goto frame_exception_exit_1;
    // End of try:
    try_end_186:;
    CHECK_OBJECT(tmp_import_from_186__module);
    Py_DECREF(tmp_import_from_186__module);
    tmp_import_from_186__module = NULL;
    {
        PyObject *tmp_assign_source_1217;
        PyObject *tmp_name_value_661;
        PyObject *tmp_globals_arg_value_661;
        PyObject *tmp_locals_arg_value_661;
        PyObject *tmp_fromlist_value_661;
        PyObject *tmp_level_value_661;
        tmp_name_value_661 = mod_consts[2354];
        tmp_globals_arg_value_661 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_661 = Py_None;
        tmp_fromlist_value_661 = mod_consts[2355];
        tmp_level_value_661 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1365;
        tmp_assign_source_1217 = IMPORT_MODULE5(tmp_name_value_661, tmp_globals_arg_value_661, tmp_locals_arg_value_661, tmp_fromlist_value_661, tmp_level_value_661);
        if (tmp_assign_source_1217 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1365;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_187__module == NULL);
        tmp_import_from_187__module = tmp_assign_source_1217;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1218;
        PyObject *tmp_import_name_from_1027;
        CHECK_OBJECT(tmp_import_from_187__module);
        tmp_import_name_from_1027 = tmp_import_from_187__module;
        if (PyModule_Check(tmp_import_name_from_1027)) {
            tmp_assign_source_1218 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1027,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2356],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1218 = IMPORT_NAME(tmp_import_name_from_1027, mod_consts[2356]);
        }

        if (tmp_assign_source_1218 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1365;

            goto try_except_handler_187;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2356], tmp_assign_source_1218);
    }
    {
        PyObject *tmp_assign_source_1219;
        PyObject *tmp_import_name_from_1028;
        CHECK_OBJECT(tmp_import_from_187__module);
        tmp_import_name_from_1028 = tmp_import_from_187__module;
        if (PyModule_Check(tmp_import_name_from_1028)) {
            tmp_assign_source_1219 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1028,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2357],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1219 = IMPORT_NAME(tmp_import_name_from_1028, mod_consts[2357]);
        }

        if (tmp_assign_source_1219 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1365;

            goto try_except_handler_187;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2357], tmp_assign_source_1219);
    }
    goto try_end_187;
    // Exception handler code:
    try_except_handler_187:;
    exception_keeper_type_187 = exception_type;
    exception_keeper_value_187 = exception_value;
    exception_keeper_tb_187 = exception_tb;
    exception_keeper_lineno_187 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_187__module);
    Py_DECREF(tmp_import_from_187__module);
    tmp_import_from_187__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_187;
    exception_value = exception_keeper_value_187;
    exception_tb = exception_keeper_tb_187;
    exception_lineno = exception_keeper_lineno_187;

    goto frame_exception_exit_1;
    // End of try:
    try_end_187:;
    CHECK_OBJECT(tmp_import_from_187__module);
    Py_DECREF(tmp_import_from_187__module);
    tmp_import_from_187__module = NULL;
    {
        PyObject *tmp_assign_source_1220;
        PyObject *tmp_import_name_from_1029;
        PyObject *tmp_name_value_662;
        PyObject *tmp_globals_arg_value_662;
        PyObject *tmp_locals_arg_value_662;
        PyObject *tmp_fromlist_value_662;
        PyObject *tmp_level_value_662;
        tmp_name_value_662 = mod_consts[2358];
        tmp_globals_arg_value_662 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_662 = Py_None;
        tmp_fromlist_value_662 = mod_consts[2359];
        tmp_level_value_662 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1369;
        tmp_import_name_from_1029 = IMPORT_MODULE5(tmp_name_value_662, tmp_globals_arg_value_662, tmp_locals_arg_value_662, tmp_fromlist_value_662, tmp_level_value_662);
        if (tmp_import_name_from_1029 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1369;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1029)) {
            tmp_assign_source_1220 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1029,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2360],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1220 = IMPORT_NAME(tmp_import_name_from_1029, mod_consts[2360]);
        }

        Py_DECREF(tmp_import_name_from_1029);
        if (tmp_assign_source_1220 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1369;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2360], tmp_assign_source_1220);
    }
    {
        PyObject *tmp_assign_source_1221;
        PyObject *tmp_name_value_663;
        PyObject *tmp_globals_arg_value_663;
        PyObject *tmp_locals_arg_value_663;
        PyObject *tmp_fromlist_value_663;
        PyObject *tmp_level_value_663;
        tmp_name_value_663 = mod_consts[2361];
        tmp_globals_arg_value_663 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_663 = Py_None;
        tmp_fromlist_value_663 = mod_consts[2362];
        tmp_level_value_663 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1370;
        tmp_assign_source_1221 = IMPORT_MODULE5(tmp_name_value_663, tmp_globals_arg_value_663, tmp_locals_arg_value_663, tmp_fromlist_value_663, tmp_level_value_663);
        if (tmp_assign_source_1221 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1370;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_188__module == NULL);
        tmp_import_from_188__module = tmp_assign_source_1221;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1222;
        PyObject *tmp_import_name_from_1030;
        CHECK_OBJECT(tmp_import_from_188__module);
        tmp_import_name_from_1030 = tmp_import_from_188__module;
        if (PyModule_Check(tmp_import_name_from_1030)) {
            tmp_assign_source_1222 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1030,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2363],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1222 = IMPORT_NAME(tmp_import_name_from_1030, mod_consts[2363]);
        }

        if (tmp_assign_source_1222 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1370;

            goto try_except_handler_188;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2363], tmp_assign_source_1222);
    }
    {
        PyObject *tmp_assign_source_1223;
        PyObject *tmp_import_name_from_1031;
        CHECK_OBJECT(tmp_import_from_188__module);
        tmp_import_name_from_1031 = tmp_import_from_188__module;
        if (PyModule_Check(tmp_import_name_from_1031)) {
            tmp_assign_source_1223 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1031,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2364],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1223 = IMPORT_NAME(tmp_import_name_from_1031, mod_consts[2364]);
        }

        if (tmp_assign_source_1223 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1370;

            goto try_except_handler_188;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2364], tmp_assign_source_1223);
    }
    goto try_end_188;
    // Exception handler code:
    try_except_handler_188:;
    exception_keeper_type_188 = exception_type;
    exception_keeper_value_188 = exception_value;
    exception_keeper_tb_188 = exception_tb;
    exception_keeper_lineno_188 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_188__module);
    Py_DECREF(tmp_import_from_188__module);
    tmp_import_from_188__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_188;
    exception_value = exception_keeper_value_188;
    exception_tb = exception_keeper_tb_188;
    exception_lineno = exception_keeper_lineno_188;

    goto frame_exception_exit_1;
    // End of try:
    try_end_188:;
    CHECK_OBJECT(tmp_import_from_188__module);
    Py_DECREF(tmp_import_from_188__module);
    tmp_import_from_188__module = NULL;
    {
        PyObject *tmp_assign_source_1224;
        PyObject *tmp_import_name_from_1032;
        PyObject *tmp_name_value_664;
        PyObject *tmp_globals_arg_value_664;
        PyObject *tmp_locals_arg_value_664;
        PyObject *tmp_fromlist_value_664;
        PyObject *tmp_level_value_664;
        tmp_name_value_664 = mod_consts[2365];
        tmp_globals_arg_value_664 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_664 = Py_None;
        tmp_fromlist_value_664 = mod_consts[2366];
        tmp_level_value_664 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1374;
        tmp_import_name_from_1032 = IMPORT_MODULE5(tmp_name_value_664, tmp_globals_arg_value_664, tmp_locals_arg_value_664, tmp_fromlist_value_664, tmp_level_value_664);
        if (tmp_import_name_from_1032 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1374;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1032)) {
            tmp_assign_source_1224 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1032,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2367],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1224 = IMPORT_NAME(tmp_import_name_from_1032, mod_consts[2367]);
        }

        Py_DECREF(tmp_import_name_from_1032);
        if (tmp_assign_source_1224 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1374;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2367], tmp_assign_source_1224);
    }
    {
        PyObject *tmp_assign_source_1225;
        PyObject *tmp_import_name_from_1033;
        PyObject *tmp_name_value_665;
        PyObject *tmp_globals_arg_value_665;
        PyObject *tmp_locals_arg_value_665;
        PyObject *tmp_fromlist_value_665;
        PyObject *tmp_level_value_665;
        tmp_name_value_665 = mod_consts[2368];
        tmp_globals_arg_value_665 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_665 = Py_None;
        tmp_fromlist_value_665 = mod_consts[2369];
        tmp_level_value_665 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1375;
        tmp_import_name_from_1033 = IMPORT_MODULE5(tmp_name_value_665, tmp_globals_arg_value_665, tmp_locals_arg_value_665, tmp_fromlist_value_665, tmp_level_value_665);
        if (tmp_import_name_from_1033 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1375;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1033)) {
            tmp_assign_source_1225 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1033,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2370],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1225 = IMPORT_NAME(tmp_import_name_from_1033, mod_consts[2370]);
        }

        Py_DECREF(tmp_import_name_from_1033);
        if (tmp_assign_source_1225 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1375;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2370], tmp_assign_source_1225);
    }
    {
        PyObject *tmp_assign_source_1226;
        PyObject *tmp_name_value_666;
        PyObject *tmp_globals_arg_value_666;
        PyObject *tmp_locals_arg_value_666;
        PyObject *tmp_fromlist_value_666;
        PyObject *tmp_level_value_666;
        tmp_name_value_666 = mod_consts[2371];
        tmp_globals_arg_value_666 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_666 = Py_None;
        tmp_fromlist_value_666 = mod_consts[2372];
        tmp_level_value_666 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1376;
        tmp_assign_source_1226 = IMPORT_MODULE5(tmp_name_value_666, tmp_globals_arg_value_666, tmp_locals_arg_value_666, tmp_fromlist_value_666, tmp_level_value_666);
        if (tmp_assign_source_1226 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1376;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_189__module == NULL);
        tmp_import_from_189__module = tmp_assign_source_1226;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1227;
        PyObject *tmp_import_name_from_1034;
        CHECK_OBJECT(tmp_import_from_189__module);
        tmp_import_name_from_1034 = tmp_import_from_189__module;
        if (PyModule_Check(tmp_import_name_from_1034)) {
            tmp_assign_source_1227 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1034,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2373],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1227 = IMPORT_NAME(tmp_import_name_from_1034, mod_consts[2373]);
        }

        if (tmp_assign_source_1227 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1376;

            goto try_except_handler_189;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2373], tmp_assign_source_1227);
    }
    {
        PyObject *tmp_assign_source_1228;
        PyObject *tmp_import_name_from_1035;
        CHECK_OBJECT(tmp_import_from_189__module);
        tmp_import_name_from_1035 = tmp_import_from_189__module;
        if (PyModule_Check(tmp_import_name_from_1035)) {
            tmp_assign_source_1228 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1035,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2374],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1228 = IMPORT_NAME(tmp_import_name_from_1035, mod_consts[2374]);
        }

        if (tmp_assign_source_1228 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1376;

            goto try_except_handler_189;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2374], tmp_assign_source_1228);
    }
    goto try_end_189;
    // Exception handler code:
    try_except_handler_189:;
    exception_keeper_type_189 = exception_type;
    exception_keeper_value_189 = exception_value;
    exception_keeper_tb_189 = exception_tb;
    exception_keeper_lineno_189 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_189__module);
    Py_DECREF(tmp_import_from_189__module);
    tmp_import_from_189__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_189;
    exception_value = exception_keeper_value_189;
    exception_tb = exception_keeper_tb_189;
    exception_lineno = exception_keeper_lineno_189;

    goto frame_exception_exit_1;
    // End of try:
    try_end_189:;
    CHECK_OBJECT(tmp_import_from_189__module);
    Py_DECREF(tmp_import_from_189__module);
    tmp_import_from_189__module = NULL;
    {
        PyObject *tmp_assign_source_1229;
        PyObject *tmp_import_name_from_1036;
        PyObject *tmp_name_value_667;
        PyObject *tmp_globals_arg_value_667;
        PyObject *tmp_locals_arg_value_667;
        PyObject *tmp_fromlist_value_667;
        PyObject *tmp_level_value_667;
        tmp_name_value_667 = mod_consts[2375];
        tmp_globals_arg_value_667 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_667 = Py_None;
        tmp_fromlist_value_667 = mod_consts[2376];
        tmp_level_value_667 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1380;
        tmp_import_name_from_1036 = IMPORT_MODULE5(tmp_name_value_667, tmp_globals_arg_value_667, tmp_locals_arg_value_667, tmp_fromlist_value_667, tmp_level_value_667);
        if (tmp_import_name_from_1036 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1380;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1036)) {
            tmp_assign_source_1229 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1036,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2377],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1229 = IMPORT_NAME(tmp_import_name_from_1036, mod_consts[2377]);
        }

        Py_DECREF(tmp_import_name_from_1036);
        if (tmp_assign_source_1229 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1380;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2377], tmp_assign_source_1229);
    }
    {
        PyObject *tmp_assign_source_1230;
        PyObject *tmp_import_name_from_1037;
        PyObject *tmp_name_value_668;
        PyObject *tmp_globals_arg_value_668;
        PyObject *tmp_locals_arg_value_668;
        PyObject *tmp_fromlist_value_668;
        PyObject *tmp_level_value_668;
        tmp_name_value_668 = mod_consts[2378];
        tmp_globals_arg_value_668 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_668 = Py_None;
        tmp_fromlist_value_668 = mod_consts[2379];
        tmp_level_value_668 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1381;
        tmp_import_name_from_1037 = IMPORT_MODULE5(tmp_name_value_668, tmp_globals_arg_value_668, tmp_locals_arg_value_668, tmp_fromlist_value_668, tmp_level_value_668);
        if (tmp_import_name_from_1037 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1381;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1037)) {
            tmp_assign_source_1230 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1037,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2380],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1230 = IMPORT_NAME(tmp_import_name_from_1037, mod_consts[2380]);
        }

        Py_DECREF(tmp_import_name_from_1037);
        if (tmp_assign_source_1230 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1381;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2380], tmp_assign_source_1230);
    }
    {
        PyObject *tmp_assign_source_1231;
        PyObject *tmp_import_name_from_1038;
        PyObject *tmp_name_value_669;
        PyObject *tmp_globals_arg_value_669;
        PyObject *tmp_locals_arg_value_669;
        PyObject *tmp_fromlist_value_669;
        PyObject *tmp_level_value_669;
        tmp_name_value_669 = mod_consts[2381];
        tmp_globals_arg_value_669 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_669 = Py_None;
        tmp_fromlist_value_669 = mod_consts[2382];
        tmp_level_value_669 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1382;
        tmp_import_name_from_1038 = IMPORT_MODULE5(tmp_name_value_669, tmp_globals_arg_value_669, tmp_locals_arg_value_669, tmp_fromlist_value_669, tmp_level_value_669);
        if (tmp_import_name_from_1038 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1382;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1038)) {
            tmp_assign_source_1231 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1038,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2383],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1231 = IMPORT_NAME(tmp_import_name_from_1038, mod_consts[2383]);
        }

        Py_DECREF(tmp_import_name_from_1038);
        if (tmp_assign_source_1231 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1382;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2383], tmp_assign_source_1231);
    }
    {
        PyObject *tmp_assign_source_1232;
        PyObject *tmp_import_name_from_1039;
        PyObject *tmp_name_value_670;
        PyObject *tmp_globals_arg_value_670;
        PyObject *tmp_locals_arg_value_670;
        PyObject *tmp_fromlist_value_670;
        PyObject *tmp_level_value_670;
        tmp_name_value_670 = mod_consts[2384];
        tmp_globals_arg_value_670 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_670 = Py_None;
        tmp_fromlist_value_670 = mod_consts[2385];
        tmp_level_value_670 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1383;
        tmp_import_name_from_1039 = IMPORT_MODULE5(tmp_name_value_670, tmp_globals_arg_value_670, tmp_locals_arg_value_670, tmp_fromlist_value_670, tmp_level_value_670);
        if (tmp_import_name_from_1039 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1383;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1039)) {
            tmp_assign_source_1232 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1039,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2386],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1232 = IMPORT_NAME(tmp_import_name_from_1039, mod_consts[2386]);
        }

        Py_DECREF(tmp_import_name_from_1039);
        if (tmp_assign_source_1232 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1383;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2386], tmp_assign_source_1232);
    }
    {
        PyObject *tmp_assign_source_1233;
        PyObject *tmp_name_value_671;
        PyObject *tmp_globals_arg_value_671;
        PyObject *tmp_locals_arg_value_671;
        PyObject *tmp_fromlist_value_671;
        PyObject *tmp_level_value_671;
        tmp_name_value_671 = mod_consts[2387];
        tmp_globals_arg_value_671 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_671 = Py_None;
        tmp_fromlist_value_671 = mod_consts[2388];
        tmp_level_value_671 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1384;
        tmp_assign_source_1233 = IMPORT_MODULE5(tmp_name_value_671, tmp_globals_arg_value_671, tmp_locals_arg_value_671, tmp_fromlist_value_671, tmp_level_value_671);
        if (tmp_assign_source_1233 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1384;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_190__module == NULL);
        tmp_import_from_190__module = tmp_assign_source_1233;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1234;
        PyObject *tmp_import_name_from_1040;
        CHECK_OBJECT(tmp_import_from_190__module);
        tmp_import_name_from_1040 = tmp_import_from_190__module;
        if (PyModule_Check(tmp_import_name_from_1040)) {
            tmp_assign_source_1234 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1040,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2389],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1234 = IMPORT_NAME(tmp_import_name_from_1040, mod_consts[2389]);
        }

        if (tmp_assign_source_1234 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1384;

            goto try_except_handler_190;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2389], tmp_assign_source_1234);
    }
    {
        PyObject *tmp_assign_source_1235;
        PyObject *tmp_import_name_from_1041;
        CHECK_OBJECT(tmp_import_from_190__module);
        tmp_import_name_from_1041 = tmp_import_from_190__module;
        if (PyModule_Check(tmp_import_name_from_1041)) {
            tmp_assign_source_1235 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1041,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2390],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1235 = IMPORT_NAME(tmp_import_name_from_1041, mod_consts[2390]);
        }

        if (tmp_assign_source_1235 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1384;

            goto try_except_handler_190;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2390], tmp_assign_source_1235);
    }
    goto try_end_190;
    // Exception handler code:
    try_except_handler_190:;
    exception_keeper_type_190 = exception_type;
    exception_keeper_value_190 = exception_value;
    exception_keeper_tb_190 = exception_tb;
    exception_keeper_lineno_190 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_190__module);
    Py_DECREF(tmp_import_from_190__module);
    tmp_import_from_190__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_190;
    exception_value = exception_keeper_value_190;
    exception_tb = exception_keeper_tb_190;
    exception_lineno = exception_keeper_lineno_190;

    goto frame_exception_exit_1;
    // End of try:
    try_end_190:;
    CHECK_OBJECT(tmp_import_from_190__module);
    Py_DECREF(tmp_import_from_190__module);
    tmp_import_from_190__module = NULL;
    {
        PyObject *tmp_assign_source_1236;
        PyObject *tmp_import_name_from_1042;
        PyObject *tmp_name_value_672;
        PyObject *tmp_globals_arg_value_672;
        PyObject *tmp_locals_arg_value_672;
        PyObject *tmp_fromlist_value_672;
        PyObject *tmp_level_value_672;
        tmp_name_value_672 = mod_consts[2391];
        tmp_globals_arg_value_672 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_672 = Py_None;
        tmp_fromlist_value_672 = mod_consts[2392];
        tmp_level_value_672 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1388;
        tmp_import_name_from_1042 = IMPORT_MODULE5(tmp_name_value_672, tmp_globals_arg_value_672, tmp_locals_arg_value_672, tmp_fromlist_value_672, tmp_level_value_672);
        if (tmp_import_name_from_1042 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1388;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1042)) {
            tmp_assign_source_1236 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1042,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2393],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1236 = IMPORT_NAME(tmp_import_name_from_1042, mod_consts[2393]);
        }

        Py_DECREF(tmp_import_name_from_1042);
        if (tmp_assign_source_1236 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1388;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2393], tmp_assign_source_1236);
    }
    {
        PyObject *tmp_assign_source_1237;
        PyObject *tmp_import_name_from_1043;
        PyObject *tmp_name_value_673;
        PyObject *tmp_globals_arg_value_673;
        PyObject *tmp_locals_arg_value_673;
        PyObject *tmp_fromlist_value_673;
        PyObject *tmp_level_value_673;
        tmp_name_value_673 = mod_consts[2394];
        tmp_globals_arg_value_673 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_673 = Py_None;
        tmp_fromlist_value_673 = mod_consts[2395];
        tmp_level_value_673 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1389;
        tmp_import_name_from_1043 = IMPORT_MODULE5(tmp_name_value_673, tmp_globals_arg_value_673, tmp_locals_arg_value_673, tmp_fromlist_value_673, tmp_level_value_673);
        if (tmp_import_name_from_1043 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1389;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1043)) {
            tmp_assign_source_1237 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1043,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2396],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1237 = IMPORT_NAME(tmp_import_name_from_1043, mod_consts[2396]);
        }

        Py_DECREF(tmp_import_name_from_1043);
        if (tmp_assign_source_1237 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1389;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2396], tmp_assign_source_1237);
    }
    {
        PyObject *tmp_assign_source_1238;
        PyObject *tmp_import_name_from_1044;
        PyObject *tmp_name_value_674;
        PyObject *tmp_globals_arg_value_674;
        PyObject *tmp_locals_arg_value_674;
        PyObject *tmp_fromlist_value_674;
        PyObject *tmp_level_value_674;
        tmp_name_value_674 = mod_consts[2397];
        tmp_globals_arg_value_674 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_674 = Py_None;
        tmp_fromlist_value_674 = mod_consts[2398];
        tmp_level_value_674 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1390;
        tmp_import_name_from_1044 = IMPORT_MODULE5(tmp_name_value_674, tmp_globals_arg_value_674, tmp_locals_arg_value_674, tmp_fromlist_value_674, tmp_level_value_674);
        if (tmp_import_name_from_1044 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1390;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1044)) {
            tmp_assign_source_1238 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1044,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2399],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1238 = IMPORT_NAME(tmp_import_name_from_1044, mod_consts[2399]);
        }

        Py_DECREF(tmp_import_name_from_1044);
        if (tmp_assign_source_1238 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1390;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2399], tmp_assign_source_1238);
    }
    {
        PyObject *tmp_assign_source_1239;
        PyObject *tmp_import_name_from_1045;
        PyObject *tmp_name_value_675;
        PyObject *tmp_globals_arg_value_675;
        PyObject *tmp_locals_arg_value_675;
        PyObject *tmp_fromlist_value_675;
        PyObject *tmp_level_value_675;
        tmp_name_value_675 = mod_consts[2400];
        tmp_globals_arg_value_675 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_675 = Py_None;
        tmp_fromlist_value_675 = mod_consts[2401];
        tmp_level_value_675 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1391;
        tmp_import_name_from_1045 = IMPORT_MODULE5(tmp_name_value_675, tmp_globals_arg_value_675, tmp_locals_arg_value_675, tmp_fromlist_value_675, tmp_level_value_675);
        if (tmp_import_name_from_1045 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1391;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1045)) {
            tmp_assign_source_1239 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1045,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2402],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1239 = IMPORT_NAME(tmp_import_name_from_1045, mod_consts[2402]);
        }

        Py_DECREF(tmp_import_name_from_1045);
        if (tmp_assign_source_1239 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1391;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2402], tmp_assign_source_1239);
    }
    {
        PyObject *tmp_assign_source_1240;
        PyObject *tmp_name_value_676;
        PyObject *tmp_globals_arg_value_676;
        PyObject *tmp_locals_arg_value_676;
        PyObject *tmp_fromlist_value_676;
        PyObject *tmp_level_value_676;
        tmp_name_value_676 = mod_consts[2403];
        tmp_globals_arg_value_676 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_676 = Py_None;
        tmp_fromlist_value_676 = mod_consts[2404];
        tmp_level_value_676 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1392;
        tmp_assign_source_1240 = IMPORT_MODULE5(tmp_name_value_676, tmp_globals_arg_value_676, tmp_locals_arg_value_676, tmp_fromlist_value_676, tmp_level_value_676);
        if (tmp_assign_source_1240 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1392;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_191__module == NULL);
        tmp_import_from_191__module = tmp_assign_source_1240;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1241;
        PyObject *tmp_import_name_from_1046;
        CHECK_OBJECT(tmp_import_from_191__module);
        tmp_import_name_from_1046 = tmp_import_from_191__module;
        if (PyModule_Check(tmp_import_name_from_1046)) {
            tmp_assign_source_1241 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1046,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2405],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1241 = IMPORT_NAME(tmp_import_name_from_1046, mod_consts[2405]);
        }

        if (tmp_assign_source_1241 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1392;

            goto try_except_handler_191;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2405], tmp_assign_source_1241);
    }
    {
        PyObject *tmp_assign_source_1242;
        PyObject *tmp_import_name_from_1047;
        CHECK_OBJECT(tmp_import_from_191__module);
        tmp_import_name_from_1047 = tmp_import_from_191__module;
        if (PyModule_Check(tmp_import_name_from_1047)) {
            tmp_assign_source_1242 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1047,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2406],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1242 = IMPORT_NAME(tmp_import_name_from_1047, mod_consts[2406]);
        }

        if (tmp_assign_source_1242 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1392;

            goto try_except_handler_191;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2406], tmp_assign_source_1242);
    }
    goto try_end_191;
    // Exception handler code:
    try_except_handler_191:;
    exception_keeper_type_191 = exception_type;
    exception_keeper_value_191 = exception_value;
    exception_keeper_tb_191 = exception_tb;
    exception_keeper_lineno_191 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_191__module);
    Py_DECREF(tmp_import_from_191__module);
    tmp_import_from_191__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_191;
    exception_value = exception_keeper_value_191;
    exception_tb = exception_keeper_tb_191;
    exception_lineno = exception_keeper_lineno_191;

    goto frame_exception_exit_1;
    // End of try:
    try_end_191:;
    CHECK_OBJECT(tmp_import_from_191__module);
    Py_DECREF(tmp_import_from_191__module);
    tmp_import_from_191__module = NULL;
    {
        PyObject *tmp_assign_source_1243;
        PyObject *tmp_name_value_677;
        PyObject *tmp_globals_arg_value_677;
        PyObject *tmp_locals_arg_value_677;
        PyObject *tmp_fromlist_value_677;
        PyObject *tmp_level_value_677;
        tmp_name_value_677 = mod_consts[2407];
        tmp_globals_arg_value_677 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_677 = Py_None;
        tmp_fromlist_value_677 = mod_consts[2408];
        tmp_level_value_677 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1393;
        tmp_assign_source_1243 = IMPORT_MODULE5(tmp_name_value_677, tmp_globals_arg_value_677, tmp_locals_arg_value_677, tmp_fromlist_value_677, tmp_level_value_677);
        if (tmp_assign_source_1243 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1393;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_192__module == NULL);
        tmp_import_from_192__module = tmp_assign_source_1243;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1244;
        PyObject *tmp_import_name_from_1048;
        CHECK_OBJECT(tmp_import_from_192__module);
        tmp_import_name_from_1048 = tmp_import_from_192__module;
        if (PyModule_Check(tmp_import_name_from_1048)) {
            tmp_assign_source_1244 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1048,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2409],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1244 = IMPORT_NAME(tmp_import_name_from_1048, mod_consts[2409]);
        }

        if (tmp_assign_source_1244 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1393;

            goto try_except_handler_192;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2409], tmp_assign_source_1244);
    }
    {
        PyObject *tmp_assign_source_1245;
        PyObject *tmp_import_name_from_1049;
        CHECK_OBJECT(tmp_import_from_192__module);
        tmp_import_name_from_1049 = tmp_import_from_192__module;
        if (PyModule_Check(tmp_import_name_from_1049)) {
            tmp_assign_source_1245 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1049,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2410],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1245 = IMPORT_NAME(tmp_import_name_from_1049, mod_consts[2410]);
        }

        if (tmp_assign_source_1245 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1393;

            goto try_except_handler_192;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2410], tmp_assign_source_1245);
    }
    goto try_end_192;
    // Exception handler code:
    try_except_handler_192:;
    exception_keeper_type_192 = exception_type;
    exception_keeper_value_192 = exception_value;
    exception_keeper_tb_192 = exception_tb;
    exception_keeper_lineno_192 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_192__module);
    Py_DECREF(tmp_import_from_192__module);
    tmp_import_from_192__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_192;
    exception_value = exception_keeper_value_192;
    exception_tb = exception_keeper_tb_192;
    exception_lineno = exception_keeper_lineno_192;

    goto frame_exception_exit_1;
    // End of try:
    try_end_192:;
    CHECK_OBJECT(tmp_import_from_192__module);
    Py_DECREF(tmp_import_from_192__module);
    tmp_import_from_192__module = NULL;
    {
        PyObject *tmp_assign_source_1246;
        PyObject *tmp_import_name_from_1050;
        PyObject *tmp_name_value_678;
        PyObject *tmp_globals_arg_value_678;
        PyObject *tmp_locals_arg_value_678;
        PyObject *tmp_fromlist_value_678;
        PyObject *tmp_level_value_678;
        tmp_name_value_678 = mod_consts[2411];
        tmp_globals_arg_value_678 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_678 = Py_None;
        tmp_fromlist_value_678 = mod_consts[2412];
        tmp_level_value_678 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1397;
        tmp_import_name_from_1050 = IMPORT_MODULE5(tmp_name_value_678, tmp_globals_arg_value_678, tmp_locals_arg_value_678, tmp_fromlist_value_678, tmp_level_value_678);
        if (tmp_import_name_from_1050 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1397;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1050)) {
            tmp_assign_source_1246 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1050,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2413],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1246 = IMPORT_NAME(tmp_import_name_from_1050, mod_consts[2413]);
        }

        Py_DECREF(tmp_import_name_from_1050);
        if (tmp_assign_source_1246 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1397;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2413], tmp_assign_source_1246);
    }
    {
        PyObject *tmp_assign_source_1247;
        PyObject *tmp_import_name_from_1051;
        PyObject *tmp_name_value_679;
        PyObject *tmp_globals_arg_value_679;
        PyObject *tmp_locals_arg_value_679;
        PyObject *tmp_fromlist_value_679;
        PyObject *tmp_level_value_679;
        tmp_name_value_679 = mod_consts[2414];
        tmp_globals_arg_value_679 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_679 = Py_None;
        tmp_fromlist_value_679 = mod_consts[2415];
        tmp_level_value_679 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1398;
        tmp_import_name_from_1051 = IMPORT_MODULE5(tmp_name_value_679, tmp_globals_arg_value_679, tmp_locals_arg_value_679, tmp_fromlist_value_679, tmp_level_value_679);
        if (tmp_import_name_from_1051 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1398;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1051)) {
            tmp_assign_source_1247 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1051,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2416],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1247 = IMPORT_NAME(tmp_import_name_from_1051, mod_consts[2416]);
        }

        Py_DECREF(tmp_import_name_from_1051);
        if (tmp_assign_source_1247 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1398;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2416], tmp_assign_source_1247);
    }
    {
        PyObject *tmp_assign_source_1248;
        PyObject *tmp_import_name_from_1052;
        PyObject *tmp_name_value_680;
        PyObject *tmp_globals_arg_value_680;
        PyObject *tmp_locals_arg_value_680;
        PyObject *tmp_fromlist_value_680;
        PyObject *tmp_level_value_680;
        tmp_name_value_680 = mod_consts[2417];
        tmp_globals_arg_value_680 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_680 = Py_None;
        tmp_fromlist_value_680 = mod_consts[2418];
        tmp_level_value_680 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1399;
        tmp_import_name_from_1052 = IMPORT_MODULE5(tmp_name_value_680, tmp_globals_arg_value_680, tmp_locals_arg_value_680, tmp_fromlist_value_680, tmp_level_value_680);
        if (tmp_import_name_from_1052 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1399;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1052)) {
            tmp_assign_source_1248 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1052,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2419],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1248 = IMPORT_NAME(tmp_import_name_from_1052, mod_consts[2419]);
        }

        Py_DECREF(tmp_import_name_from_1052);
        if (tmp_assign_source_1248 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1399;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2419], tmp_assign_source_1248);
    }
    {
        PyObject *tmp_assign_source_1249;
        PyObject *tmp_import_name_from_1053;
        PyObject *tmp_name_value_681;
        PyObject *tmp_globals_arg_value_681;
        PyObject *tmp_locals_arg_value_681;
        PyObject *tmp_fromlist_value_681;
        PyObject *tmp_level_value_681;
        tmp_name_value_681 = mod_consts[2420];
        tmp_globals_arg_value_681 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_681 = Py_None;
        tmp_fromlist_value_681 = mod_consts[2421];
        tmp_level_value_681 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1400;
        tmp_import_name_from_1053 = IMPORT_MODULE5(tmp_name_value_681, tmp_globals_arg_value_681, tmp_locals_arg_value_681, tmp_fromlist_value_681, tmp_level_value_681);
        if (tmp_import_name_from_1053 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1400;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1053)) {
            tmp_assign_source_1249 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1053,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2422],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1249 = IMPORT_NAME(tmp_import_name_from_1053, mod_consts[2422]);
        }

        Py_DECREF(tmp_import_name_from_1053);
        if (tmp_assign_source_1249 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1400;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2422], tmp_assign_source_1249);
    }
    {
        PyObject *tmp_assign_source_1250;
        PyObject *tmp_import_name_from_1054;
        PyObject *tmp_name_value_682;
        PyObject *tmp_globals_arg_value_682;
        PyObject *tmp_locals_arg_value_682;
        PyObject *tmp_fromlist_value_682;
        PyObject *tmp_level_value_682;
        tmp_name_value_682 = mod_consts[2423];
        tmp_globals_arg_value_682 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_682 = Py_None;
        tmp_fromlist_value_682 = mod_consts[2424];
        tmp_level_value_682 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1401;
        tmp_import_name_from_1054 = IMPORT_MODULE5(tmp_name_value_682, tmp_globals_arg_value_682, tmp_locals_arg_value_682, tmp_fromlist_value_682, tmp_level_value_682);
        if (tmp_import_name_from_1054 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1401;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1054)) {
            tmp_assign_source_1250 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1054,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2425],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1250 = IMPORT_NAME(tmp_import_name_from_1054, mod_consts[2425]);
        }

        Py_DECREF(tmp_import_name_from_1054);
        if (tmp_assign_source_1250 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1401;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2425], tmp_assign_source_1250);
    }
    {
        PyObject *tmp_assign_source_1251;
        PyObject *tmp_name_value_683;
        PyObject *tmp_globals_arg_value_683;
        PyObject *tmp_locals_arg_value_683;
        PyObject *tmp_fromlist_value_683;
        PyObject *tmp_level_value_683;
        tmp_name_value_683 = mod_consts[2426];
        tmp_globals_arg_value_683 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_683 = Py_None;
        tmp_fromlist_value_683 = mod_consts[2427];
        tmp_level_value_683 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1402;
        tmp_assign_source_1251 = IMPORT_MODULE5(tmp_name_value_683, tmp_globals_arg_value_683, tmp_locals_arg_value_683, tmp_fromlist_value_683, tmp_level_value_683);
        if (tmp_assign_source_1251 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1402;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_193__module == NULL);
        tmp_import_from_193__module = tmp_assign_source_1251;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1252;
        PyObject *tmp_import_name_from_1055;
        CHECK_OBJECT(tmp_import_from_193__module);
        tmp_import_name_from_1055 = tmp_import_from_193__module;
        if (PyModule_Check(tmp_import_name_from_1055)) {
            tmp_assign_source_1252 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1055,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2428],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1252 = IMPORT_NAME(tmp_import_name_from_1055, mod_consts[2428]);
        }

        if (tmp_assign_source_1252 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1402;

            goto try_except_handler_193;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2428], tmp_assign_source_1252);
    }
    {
        PyObject *tmp_assign_source_1253;
        PyObject *tmp_import_name_from_1056;
        CHECK_OBJECT(tmp_import_from_193__module);
        tmp_import_name_from_1056 = tmp_import_from_193__module;
        if (PyModule_Check(tmp_import_name_from_1056)) {
            tmp_assign_source_1253 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1056,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2429],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1253 = IMPORT_NAME(tmp_import_name_from_1056, mod_consts[2429]);
        }

        if (tmp_assign_source_1253 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1402;

            goto try_except_handler_193;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2429], tmp_assign_source_1253);
    }
    goto try_end_193;
    // Exception handler code:
    try_except_handler_193:;
    exception_keeper_type_193 = exception_type;
    exception_keeper_value_193 = exception_value;
    exception_keeper_tb_193 = exception_tb;
    exception_keeper_lineno_193 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_193__module);
    Py_DECREF(tmp_import_from_193__module);
    tmp_import_from_193__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_193;
    exception_value = exception_keeper_value_193;
    exception_tb = exception_keeper_tb_193;
    exception_lineno = exception_keeper_lineno_193;

    goto frame_exception_exit_1;
    // End of try:
    try_end_193:;
    CHECK_OBJECT(tmp_import_from_193__module);
    Py_DECREF(tmp_import_from_193__module);
    tmp_import_from_193__module = NULL;
    {
        PyObject *tmp_assign_source_1254;
        PyObject *tmp_name_value_684;
        PyObject *tmp_globals_arg_value_684;
        PyObject *tmp_locals_arg_value_684;
        PyObject *tmp_fromlist_value_684;
        PyObject *tmp_level_value_684;
        tmp_name_value_684 = mod_consts[2430];
        tmp_globals_arg_value_684 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_684 = Py_None;
        tmp_fromlist_value_684 = mod_consts[2431];
        tmp_level_value_684 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1406;
        tmp_assign_source_1254 = IMPORT_MODULE5(tmp_name_value_684, tmp_globals_arg_value_684, tmp_locals_arg_value_684, tmp_fromlist_value_684, tmp_level_value_684);
        if (tmp_assign_source_1254 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1406;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_194__module == NULL);
        tmp_import_from_194__module = tmp_assign_source_1254;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1255;
        PyObject *tmp_import_name_from_1057;
        CHECK_OBJECT(tmp_import_from_194__module);
        tmp_import_name_from_1057 = tmp_import_from_194__module;
        if (PyModule_Check(tmp_import_name_from_1057)) {
            tmp_assign_source_1255 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1057,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2432],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1255 = IMPORT_NAME(tmp_import_name_from_1057, mod_consts[2432]);
        }

        if (tmp_assign_source_1255 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1406;

            goto try_except_handler_194;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2432], tmp_assign_source_1255);
    }
    {
        PyObject *tmp_assign_source_1256;
        PyObject *tmp_import_name_from_1058;
        CHECK_OBJECT(tmp_import_from_194__module);
        tmp_import_name_from_1058 = tmp_import_from_194__module;
        if (PyModule_Check(tmp_import_name_from_1058)) {
            tmp_assign_source_1256 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1058,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2433],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1256 = IMPORT_NAME(tmp_import_name_from_1058, mod_consts[2433]);
        }

        if (tmp_assign_source_1256 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1406;

            goto try_except_handler_194;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2433], tmp_assign_source_1256);
    }
    {
        PyObject *tmp_assign_source_1257;
        PyObject *tmp_import_name_from_1059;
        CHECK_OBJECT(tmp_import_from_194__module);
        tmp_import_name_from_1059 = tmp_import_from_194__module;
        if (PyModule_Check(tmp_import_name_from_1059)) {
            tmp_assign_source_1257 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1059,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2434],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1257 = IMPORT_NAME(tmp_import_name_from_1059, mod_consts[2434]);
        }

        if (tmp_assign_source_1257 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1406;

            goto try_except_handler_194;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2434], tmp_assign_source_1257);
    }
    goto try_end_194;
    // Exception handler code:
    try_except_handler_194:;
    exception_keeper_type_194 = exception_type;
    exception_keeper_value_194 = exception_value;
    exception_keeper_tb_194 = exception_tb;
    exception_keeper_lineno_194 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_194__module);
    Py_DECREF(tmp_import_from_194__module);
    tmp_import_from_194__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_194;
    exception_value = exception_keeper_value_194;
    exception_tb = exception_keeper_tb_194;
    exception_lineno = exception_keeper_lineno_194;

    goto frame_exception_exit_1;
    // End of try:
    try_end_194:;
    CHECK_OBJECT(tmp_import_from_194__module);
    Py_DECREF(tmp_import_from_194__module);
    tmp_import_from_194__module = NULL;
    {
        PyObject *tmp_assign_source_1258;
        PyObject *tmp_import_name_from_1060;
        PyObject *tmp_name_value_685;
        PyObject *tmp_globals_arg_value_685;
        PyObject *tmp_locals_arg_value_685;
        PyObject *tmp_fromlist_value_685;
        PyObject *tmp_level_value_685;
        tmp_name_value_685 = mod_consts[2435];
        tmp_globals_arg_value_685 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_685 = Py_None;
        tmp_fromlist_value_685 = mod_consts[2436];
        tmp_level_value_685 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1411;
        tmp_import_name_from_1060 = IMPORT_MODULE5(tmp_name_value_685, tmp_globals_arg_value_685, tmp_locals_arg_value_685, tmp_fromlist_value_685, tmp_level_value_685);
        if (tmp_import_name_from_1060 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1411;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1060)) {
            tmp_assign_source_1258 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1060,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2437],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1258 = IMPORT_NAME(tmp_import_name_from_1060, mod_consts[2437]);
        }

        Py_DECREF(tmp_import_name_from_1060);
        if (tmp_assign_source_1258 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1411;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2437], tmp_assign_source_1258);
    }
    {
        PyObject *tmp_assign_source_1259;
        PyObject *tmp_name_value_686;
        PyObject *tmp_globals_arg_value_686;
        PyObject *tmp_locals_arg_value_686;
        PyObject *tmp_fromlist_value_686;
        PyObject *tmp_level_value_686;
        tmp_name_value_686 = mod_consts[2438];
        tmp_globals_arg_value_686 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_686 = Py_None;
        tmp_fromlist_value_686 = mod_consts[2439];
        tmp_level_value_686 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1412;
        tmp_assign_source_1259 = IMPORT_MODULE5(tmp_name_value_686, tmp_globals_arg_value_686, tmp_locals_arg_value_686, tmp_fromlist_value_686, tmp_level_value_686);
        if (tmp_assign_source_1259 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1412;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_195__module == NULL);
        tmp_import_from_195__module = tmp_assign_source_1259;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1260;
        PyObject *tmp_import_name_from_1061;
        CHECK_OBJECT(tmp_import_from_195__module);
        tmp_import_name_from_1061 = tmp_import_from_195__module;
        if (PyModule_Check(tmp_import_name_from_1061)) {
            tmp_assign_source_1260 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1061,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2440],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1260 = IMPORT_NAME(tmp_import_name_from_1061, mod_consts[2440]);
        }

        if (tmp_assign_source_1260 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1412;

            goto try_except_handler_195;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2440], tmp_assign_source_1260);
    }
    {
        PyObject *tmp_assign_source_1261;
        PyObject *tmp_import_name_from_1062;
        CHECK_OBJECT(tmp_import_from_195__module);
        tmp_import_name_from_1062 = tmp_import_from_195__module;
        if (PyModule_Check(tmp_import_name_from_1062)) {
            tmp_assign_source_1261 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1062,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2441],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1261 = IMPORT_NAME(tmp_import_name_from_1062, mod_consts[2441]);
        }

        if (tmp_assign_source_1261 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1412;

            goto try_except_handler_195;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2441], tmp_assign_source_1261);
    }
    {
        PyObject *tmp_assign_source_1262;
        PyObject *tmp_import_name_from_1063;
        CHECK_OBJECT(tmp_import_from_195__module);
        tmp_import_name_from_1063 = tmp_import_from_195__module;
        if (PyModule_Check(tmp_import_name_from_1063)) {
            tmp_assign_source_1262 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1063,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2442],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1262 = IMPORT_NAME(tmp_import_name_from_1063, mod_consts[2442]);
        }

        if (tmp_assign_source_1262 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1412;

            goto try_except_handler_195;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2442], tmp_assign_source_1262);
    }
    goto try_end_195;
    // Exception handler code:
    try_except_handler_195:;
    exception_keeper_type_195 = exception_type;
    exception_keeper_value_195 = exception_value;
    exception_keeper_tb_195 = exception_tb;
    exception_keeper_lineno_195 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_195__module);
    Py_DECREF(tmp_import_from_195__module);
    tmp_import_from_195__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_195;
    exception_value = exception_keeper_value_195;
    exception_tb = exception_keeper_tb_195;
    exception_lineno = exception_keeper_lineno_195;

    goto frame_exception_exit_1;
    // End of try:
    try_end_195:;
    CHECK_OBJECT(tmp_import_from_195__module);
    Py_DECREF(tmp_import_from_195__module);
    tmp_import_from_195__module = NULL;
    {
        PyObject *tmp_assign_source_1263;
        PyObject *tmp_import_name_from_1064;
        PyObject *tmp_name_value_687;
        PyObject *tmp_globals_arg_value_687;
        PyObject *tmp_locals_arg_value_687;
        PyObject *tmp_fromlist_value_687;
        PyObject *tmp_level_value_687;
        tmp_name_value_687 = mod_consts[2443];
        tmp_globals_arg_value_687 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_687 = Py_None;
        tmp_fromlist_value_687 = mod_consts[2444];
        tmp_level_value_687 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1417;
        tmp_import_name_from_1064 = IMPORT_MODULE5(tmp_name_value_687, tmp_globals_arg_value_687, tmp_locals_arg_value_687, tmp_fromlist_value_687, tmp_level_value_687);
        if (tmp_import_name_from_1064 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1417;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1064)) {
            tmp_assign_source_1263 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1064,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2445],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1263 = IMPORT_NAME(tmp_import_name_from_1064, mod_consts[2445]);
        }

        Py_DECREF(tmp_import_name_from_1064);
        if (tmp_assign_source_1263 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1417;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2445], tmp_assign_source_1263);
    }
    {
        PyObject *tmp_assign_source_1264;
        PyObject *tmp_import_name_from_1065;
        PyObject *tmp_name_value_688;
        PyObject *tmp_globals_arg_value_688;
        PyObject *tmp_locals_arg_value_688;
        PyObject *tmp_fromlist_value_688;
        PyObject *tmp_level_value_688;
        tmp_name_value_688 = mod_consts[2446];
        tmp_globals_arg_value_688 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_688 = Py_None;
        tmp_fromlist_value_688 = mod_consts[2447];
        tmp_level_value_688 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1418;
        tmp_import_name_from_1065 = IMPORT_MODULE5(tmp_name_value_688, tmp_globals_arg_value_688, tmp_locals_arg_value_688, tmp_fromlist_value_688, tmp_level_value_688);
        if (tmp_import_name_from_1065 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1418;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1065)) {
            tmp_assign_source_1264 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1065,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2448],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1264 = IMPORT_NAME(tmp_import_name_from_1065, mod_consts[2448]);
        }

        Py_DECREF(tmp_import_name_from_1065);
        if (tmp_assign_source_1264 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1418;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2448], tmp_assign_source_1264);
    }
    {
        PyObject *tmp_assign_source_1265;
        PyObject *tmp_import_name_from_1066;
        PyObject *tmp_name_value_689;
        PyObject *tmp_globals_arg_value_689;
        PyObject *tmp_locals_arg_value_689;
        PyObject *tmp_fromlist_value_689;
        PyObject *tmp_level_value_689;
        tmp_name_value_689 = mod_consts[2449];
        tmp_globals_arg_value_689 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_689 = Py_None;
        tmp_fromlist_value_689 = mod_consts[2450];
        tmp_level_value_689 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1419;
        tmp_import_name_from_1066 = IMPORT_MODULE5(tmp_name_value_689, tmp_globals_arg_value_689, tmp_locals_arg_value_689, tmp_fromlist_value_689, tmp_level_value_689);
        if (tmp_import_name_from_1066 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1419;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1066)) {
            tmp_assign_source_1265 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1066,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2451],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1265 = IMPORT_NAME(tmp_import_name_from_1066, mod_consts[2451]);
        }

        Py_DECREF(tmp_import_name_from_1066);
        if (tmp_assign_source_1265 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1419;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2451], tmp_assign_source_1265);
    }
    {
        PyObject *tmp_assign_source_1266;
        PyObject *tmp_import_name_from_1067;
        PyObject *tmp_name_value_690;
        PyObject *tmp_globals_arg_value_690;
        PyObject *tmp_locals_arg_value_690;
        PyObject *tmp_fromlist_value_690;
        PyObject *tmp_level_value_690;
        tmp_name_value_690 = mod_consts[2452];
        tmp_globals_arg_value_690 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_690 = Py_None;
        tmp_fromlist_value_690 = mod_consts[2453];
        tmp_level_value_690 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1420;
        tmp_import_name_from_1067 = IMPORT_MODULE5(tmp_name_value_690, tmp_globals_arg_value_690, tmp_locals_arg_value_690, tmp_fromlist_value_690, tmp_level_value_690);
        if (tmp_import_name_from_1067 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1420;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1067)) {
            tmp_assign_source_1266 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1067,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2454],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1266 = IMPORT_NAME(tmp_import_name_from_1067, mod_consts[2454]);
        }

        Py_DECREF(tmp_import_name_from_1067);
        if (tmp_assign_source_1266 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1420;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2454], tmp_assign_source_1266);
    }
    {
        PyObject *tmp_assign_source_1267;
        PyObject *tmp_import_name_from_1068;
        PyObject *tmp_name_value_691;
        PyObject *tmp_globals_arg_value_691;
        PyObject *tmp_locals_arg_value_691;
        PyObject *tmp_fromlist_value_691;
        PyObject *tmp_level_value_691;
        tmp_name_value_691 = mod_consts[2455];
        tmp_globals_arg_value_691 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_691 = Py_None;
        tmp_fromlist_value_691 = mod_consts[2456];
        tmp_level_value_691 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1421;
        tmp_import_name_from_1068 = IMPORT_MODULE5(tmp_name_value_691, tmp_globals_arg_value_691, tmp_locals_arg_value_691, tmp_fromlist_value_691, tmp_level_value_691);
        if (tmp_import_name_from_1068 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1421;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1068)) {
            tmp_assign_source_1267 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1068,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2457],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1267 = IMPORT_NAME(tmp_import_name_from_1068, mod_consts[2457]);
        }

        Py_DECREF(tmp_import_name_from_1068);
        if (tmp_assign_source_1267 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1421;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2457], tmp_assign_source_1267);
    }
    {
        PyObject *tmp_assign_source_1268;
        PyObject *tmp_name_value_692;
        PyObject *tmp_globals_arg_value_692;
        PyObject *tmp_locals_arg_value_692;
        PyObject *tmp_fromlist_value_692;
        PyObject *tmp_level_value_692;
        tmp_name_value_692 = mod_consts[2458];
        tmp_globals_arg_value_692 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_692 = Py_None;
        tmp_fromlist_value_692 = mod_consts[2459];
        tmp_level_value_692 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1422;
        tmp_assign_source_1268 = IMPORT_MODULE5(tmp_name_value_692, tmp_globals_arg_value_692, tmp_locals_arg_value_692, tmp_fromlist_value_692, tmp_level_value_692);
        if (tmp_assign_source_1268 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1422;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_196__module == NULL);
        tmp_import_from_196__module = tmp_assign_source_1268;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1269;
        PyObject *tmp_import_name_from_1069;
        CHECK_OBJECT(tmp_import_from_196__module);
        tmp_import_name_from_1069 = tmp_import_from_196__module;
        if (PyModule_Check(tmp_import_name_from_1069)) {
            tmp_assign_source_1269 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1069,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2460],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1269 = IMPORT_NAME(tmp_import_name_from_1069, mod_consts[2460]);
        }

        if (tmp_assign_source_1269 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1422;

            goto try_except_handler_196;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2460], tmp_assign_source_1269);
    }
    {
        PyObject *tmp_assign_source_1270;
        PyObject *tmp_import_name_from_1070;
        CHECK_OBJECT(tmp_import_from_196__module);
        tmp_import_name_from_1070 = tmp_import_from_196__module;
        if (PyModule_Check(tmp_import_name_from_1070)) {
            tmp_assign_source_1270 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1070,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2461],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1270 = IMPORT_NAME(tmp_import_name_from_1070, mod_consts[2461]);
        }

        if (tmp_assign_source_1270 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1422;

            goto try_except_handler_196;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2461], tmp_assign_source_1270);
    }
    {
        PyObject *tmp_assign_source_1271;
        PyObject *tmp_import_name_from_1071;
        CHECK_OBJECT(tmp_import_from_196__module);
        tmp_import_name_from_1071 = tmp_import_from_196__module;
        if (PyModule_Check(tmp_import_name_from_1071)) {
            tmp_assign_source_1271 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1071,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2462],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1271 = IMPORT_NAME(tmp_import_name_from_1071, mod_consts[2462]);
        }

        if (tmp_assign_source_1271 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1422;

            goto try_except_handler_196;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2462], tmp_assign_source_1271);
    }
    goto try_end_196;
    // Exception handler code:
    try_except_handler_196:;
    exception_keeper_type_196 = exception_type;
    exception_keeper_value_196 = exception_value;
    exception_keeper_tb_196 = exception_tb;
    exception_keeper_lineno_196 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_196__module);
    Py_DECREF(tmp_import_from_196__module);
    tmp_import_from_196__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_196;
    exception_value = exception_keeper_value_196;
    exception_tb = exception_keeper_tb_196;
    exception_lineno = exception_keeper_lineno_196;

    goto frame_exception_exit_1;
    // End of try:
    try_end_196:;
    CHECK_OBJECT(tmp_import_from_196__module);
    Py_DECREF(tmp_import_from_196__module);
    tmp_import_from_196__module = NULL;
    {
        PyObject *tmp_assign_source_1272;
        PyObject *tmp_import_name_from_1072;
        PyObject *tmp_name_value_693;
        PyObject *tmp_globals_arg_value_693;
        PyObject *tmp_locals_arg_value_693;
        PyObject *tmp_fromlist_value_693;
        PyObject *tmp_level_value_693;
        tmp_name_value_693 = mod_consts[2463];
        tmp_globals_arg_value_693 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_693 = Py_None;
        tmp_fromlist_value_693 = mod_consts[2464];
        tmp_level_value_693 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1427;
        tmp_import_name_from_1072 = IMPORT_MODULE5(tmp_name_value_693, tmp_globals_arg_value_693, tmp_locals_arg_value_693, tmp_fromlist_value_693, tmp_level_value_693);
        if (tmp_import_name_from_1072 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1427;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1072)) {
            tmp_assign_source_1272 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1072,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2465],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1272 = IMPORT_NAME(tmp_import_name_from_1072, mod_consts[2465]);
        }

        Py_DECREF(tmp_import_name_from_1072);
        if (tmp_assign_source_1272 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1427;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2465], tmp_assign_source_1272);
    }
    {
        PyObject *tmp_assign_source_1273;
        PyObject *tmp_import_name_from_1073;
        PyObject *tmp_name_value_694;
        PyObject *tmp_globals_arg_value_694;
        PyObject *tmp_locals_arg_value_694;
        PyObject *tmp_fromlist_value_694;
        PyObject *tmp_level_value_694;
        tmp_name_value_694 = mod_consts[2466];
        tmp_globals_arg_value_694 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_694 = Py_None;
        tmp_fromlist_value_694 = mod_consts[2467];
        tmp_level_value_694 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1428;
        tmp_import_name_from_1073 = IMPORT_MODULE5(tmp_name_value_694, tmp_globals_arg_value_694, tmp_locals_arg_value_694, tmp_fromlist_value_694, tmp_level_value_694);
        if (tmp_import_name_from_1073 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1428;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1073)) {
            tmp_assign_source_1273 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1073,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2468],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1273 = IMPORT_NAME(tmp_import_name_from_1073, mod_consts[2468]);
        }

        Py_DECREF(tmp_import_name_from_1073);
        if (tmp_assign_source_1273 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1428;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2468], tmp_assign_source_1273);
    }
    {
        PyObject *tmp_assign_source_1274;
        PyObject *tmp_import_name_from_1074;
        PyObject *tmp_name_value_695;
        PyObject *tmp_globals_arg_value_695;
        PyObject *tmp_locals_arg_value_695;
        PyObject *tmp_fromlist_value_695;
        PyObject *tmp_level_value_695;
        tmp_name_value_695 = mod_consts[2469];
        tmp_globals_arg_value_695 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_695 = Py_None;
        tmp_fromlist_value_695 = mod_consts[2470];
        tmp_level_value_695 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1429;
        tmp_import_name_from_1074 = IMPORT_MODULE5(tmp_name_value_695, tmp_globals_arg_value_695, tmp_locals_arg_value_695, tmp_fromlist_value_695, tmp_level_value_695);
        if (tmp_import_name_from_1074 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1429;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1074)) {
            tmp_assign_source_1274 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1074,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2471],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1274 = IMPORT_NAME(tmp_import_name_from_1074, mod_consts[2471]);
        }

        Py_DECREF(tmp_import_name_from_1074);
        if (tmp_assign_source_1274 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1429;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2471], tmp_assign_source_1274);
    }
    {
        PyObject *tmp_assign_source_1275;
        PyObject *tmp_name_value_696;
        PyObject *tmp_globals_arg_value_696;
        PyObject *tmp_locals_arg_value_696;
        PyObject *tmp_fromlist_value_696;
        PyObject *tmp_level_value_696;
        tmp_name_value_696 = mod_consts[2472];
        tmp_globals_arg_value_696 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_696 = Py_None;
        tmp_fromlist_value_696 = mod_consts[2473];
        tmp_level_value_696 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1430;
        tmp_assign_source_1275 = IMPORT_MODULE5(tmp_name_value_696, tmp_globals_arg_value_696, tmp_locals_arg_value_696, tmp_fromlist_value_696, tmp_level_value_696);
        if (tmp_assign_source_1275 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1430;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_197__module == NULL);
        tmp_import_from_197__module = tmp_assign_source_1275;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1276;
        PyObject *tmp_import_name_from_1075;
        CHECK_OBJECT(tmp_import_from_197__module);
        tmp_import_name_from_1075 = tmp_import_from_197__module;
        if (PyModule_Check(tmp_import_name_from_1075)) {
            tmp_assign_source_1276 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1075,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2474],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1276 = IMPORT_NAME(tmp_import_name_from_1075, mod_consts[2474]);
        }

        if (tmp_assign_source_1276 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1430;

            goto try_except_handler_197;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2474], tmp_assign_source_1276);
    }
    {
        PyObject *tmp_assign_source_1277;
        PyObject *tmp_import_name_from_1076;
        CHECK_OBJECT(tmp_import_from_197__module);
        tmp_import_name_from_1076 = tmp_import_from_197__module;
        if (PyModule_Check(tmp_import_name_from_1076)) {
            tmp_assign_source_1277 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1076,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2475],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1277 = IMPORT_NAME(tmp_import_name_from_1076, mod_consts[2475]);
        }

        if (tmp_assign_source_1277 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1430;

            goto try_except_handler_197;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2475], tmp_assign_source_1277);
    }
    {
        PyObject *tmp_assign_source_1278;
        PyObject *tmp_import_name_from_1077;
        CHECK_OBJECT(tmp_import_from_197__module);
        tmp_import_name_from_1077 = tmp_import_from_197__module;
        if (PyModule_Check(tmp_import_name_from_1077)) {
            tmp_assign_source_1278 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1077,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2476],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1278 = IMPORT_NAME(tmp_import_name_from_1077, mod_consts[2476]);
        }

        if (tmp_assign_source_1278 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1430;

            goto try_except_handler_197;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2476], tmp_assign_source_1278);
    }
    goto try_end_197;
    // Exception handler code:
    try_except_handler_197:;
    exception_keeper_type_197 = exception_type;
    exception_keeper_value_197 = exception_value;
    exception_keeper_tb_197 = exception_tb;
    exception_keeper_lineno_197 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_197__module);
    Py_DECREF(tmp_import_from_197__module);
    tmp_import_from_197__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_197;
    exception_value = exception_keeper_value_197;
    exception_tb = exception_keeper_tb_197;
    exception_lineno = exception_keeper_lineno_197;

    goto frame_exception_exit_1;
    // End of try:
    try_end_197:;
    CHECK_OBJECT(tmp_import_from_197__module);
    Py_DECREF(tmp_import_from_197__module);
    tmp_import_from_197__module = NULL;
    {
        PyObject *tmp_assign_source_1279;
        PyObject *tmp_name_value_697;
        PyObject *tmp_globals_arg_value_697;
        PyObject *tmp_locals_arg_value_697;
        PyObject *tmp_fromlist_value_697;
        PyObject *tmp_level_value_697;
        tmp_name_value_697 = mod_consts[2477];
        tmp_globals_arg_value_697 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_697 = Py_None;
        tmp_fromlist_value_697 = mod_consts[2478];
        tmp_level_value_697 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1435;
        tmp_assign_source_1279 = IMPORT_MODULE5(tmp_name_value_697, tmp_globals_arg_value_697, tmp_locals_arg_value_697, tmp_fromlist_value_697, tmp_level_value_697);
        if (tmp_assign_source_1279 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1435;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_198__module == NULL);
        tmp_import_from_198__module = tmp_assign_source_1279;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1280;
        PyObject *tmp_import_name_from_1078;
        CHECK_OBJECT(tmp_import_from_198__module);
        tmp_import_name_from_1078 = tmp_import_from_198__module;
        if (PyModule_Check(tmp_import_name_from_1078)) {
            tmp_assign_source_1280 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1078,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2479],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1280 = IMPORT_NAME(tmp_import_name_from_1078, mod_consts[2479]);
        }

        if (tmp_assign_source_1280 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1435;

            goto try_except_handler_198;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2479], tmp_assign_source_1280);
    }
    {
        PyObject *tmp_assign_source_1281;
        PyObject *tmp_import_name_from_1079;
        CHECK_OBJECT(tmp_import_from_198__module);
        tmp_import_name_from_1079 = tmp_import_from_198__module;
        if (PyModule_Check(tmp_import_name_from_1079)) {
            tmp_assign_source_1281 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1079,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2480],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1281 = IMPORT_NAME(tmp_import_name_from_1079, mod_consts[2480]);
        }

        if (tmp_assign_source_1281 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1435;

            goto try_except_handler_198;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2480], tmp_assign_source_1281);
    }
    goto try_end_198;
    // Exception handler code:
    try_except_handler_198:;
    exception_keeper_type_198 = exception_type;
    exception_keeper_value_198 = exception_value;
    exception_keeper_tb_198 = exception_tb;
    exception_keeper_lineno_198 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_198__module);
    Py_DECREF(tmp_import_from_198__module);
    tmp_import_from_198__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_198;
    exception_value = exception_keeper_value_198;
    exception_tb = exception_keeper_tb_198;
    exception_lineno = exception_keeper_lineno_198;

    goto frame_exception_exit_1;
    // End of try:
    try_end_198:;
    CHECK_OBJECT(tmp_import_from_198__module);
    Py_DECREF(tmp_import_from_198__module);
    tmp_import_from_198__module = NULL;
    {
        PyObject *tmp_assign_source_1282;
        PyObject *tmp_name_value_698;
        PyObject *tmp_globals_arg_value_698;
        PyObject *tmp_locals_arg_value_698;
        PyObject *tmp_fromlist_value_698;
        PyObject *tmp_level_value_698;
        tmp_name_value_698 = mod_consts[2481];
        tmp_globals_arg_value_698 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_698 = Py_None;
        tmp_fromlist_value_698 = mod_consts[2482];
        tmp_level_value_698 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1436;
        tmp_assign_source_1282 = IMPORT_MODULE5(tmp_name_value_698, tmp_globals_arg_value_698, tmp_locals_arg_value_698, tmp_fromlist_value_698, tmp_level_value_698);
        if (tmp_assign_source_1282 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1436;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_199__module == NULL);
        tmp_import_from_199__module = tmp_assign_source_1282;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1283;
        PyObject *tmp_import_name_from_1080;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1080 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1080)) {
            tmp_assign_source_1283 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1080,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2483],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1283 = IMPORT_NAME(tmp_import_name_from_1080, mod_consts[2483]);
        }

        if (tmp_assign_source_1283 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1436;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2483], tmp_assign_source_1283);
    }
    {
        PyObject *tmp_assign_source_1284;
        PyObject *tmp_import_name_from_1081;
        CHECK_OBJECT(tmp_import_from_199__module);
        tmp_import_name_from_1081 = tmp_import_from_199__module;
        if (PyModule_Check(tmp_import_name_from_1081)) {
            tmp_assign_source_1284 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1081,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2484],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1284 = IMPORT_NAME(tmp_import_name_from_1081, mod_consts[2484]);
        }

        if (tmp_assign_source_1284 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1436;

            goto try_except_handler_199;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2484], tmp_assign_source_1284);
    }
    goto try_end_199;
    // Exception handler code:
    try_except_handler_199:;
    exception_keeper_type_199 = exception_type;
    exception_keeper_value_199 = exception_value;
    exception_keeper_tb_199 = exception_tb;
    exception_keeper_lineno_199 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_199__module);
    Py_DECREF(tmp_import_from_199__module);
    tmp_import_from_199__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_199;
    exception_value = exception_keeper_value_199;
    exception_tb = exception_keeper_tb_199;
    exception_lineno = exception_keeper_lineno_199;

    goto frame_exception_exit_1;
    // End of try:
    try_end_199:;
    CHECK_OBJECT(tmp_import_from_199__module);
    Py_DECREF(tmp_import_from_199__module);
    tmp_import_from_199__module = NULL;
    {
        PyObject *tmp_assign_source_1285;
        PyObject *tmp_import_name_from_1082;
        PyObject *tmp_name_value_699;
        PyObject *tmp_globals_arg_value_699;
        PyObject *tmp_locals_arg_value_699;
        PyObject *tmp_fromlist_value_699;
        PyObject *tmp_level_value_699;
        tmp_name_value_699 = mod_consts[2485];
        tmp_globals_arg_value_699 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_699 = Py_None;
        tmp_fromlist_value_699 = mod_consts[2486];
        tmp_level_value_699 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1440;
        tmp_import_name_from_1082 = IMPORT_MODULE5(tmp_name_value_699, tmp_globals_arg_value_699, tmp_locals_arg_value_699, tmp_fromlist_value_699, tmp_level_value_699);
        if (tmp_import_name_from_1082 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1440;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1082)) {
            tmp_assign_source_1285 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1082,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2487],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1285 = IMPORT_NAME(tmp_import_name_from_1082, mod_consts[2487]);
        }

        Py_DECREF(tmp_import_name_from_1082);
        if (tmp_assign_source_1285 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1440;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2487], tmp_assign_source_1285);
    }
    {
        PyObject *tmp_assign_source_1286;
        PyObject *tmp_name_value_700;
        PyObject *tmp_globals_arg_value_700;
        PyObject *tmp_locals_arg_value_700;
        PyObject *tmp_fromlist_value_700;
        PyObject *tmp_level_value_700;
        tmp_name_value_700 = mod_consts[2488];
        tmp_globals_arg_value_700 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_700 = Py_None;
        tmp_fromlist_value_700 = mod_consts[2489];
        tmp_level_value_700 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1441;
        tmp_assign_source_1286 = IMPORT_MODULE5(tmp_name_value_700, tmp_globals_arg_value_700, tmp_locals_arg_value_700, tmp_fromlist_value_700, tmp_level_value_700);
        if (tmp_assign_source_1286 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_200__module == NULL);
        tmp_import_from_200__module = tmp_assign_source_1286;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1287;
        PyObject *tmp_import_name_from_1083;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1083 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1083)) {
            tmp_assign_source_1287 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1083,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2490],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1287 = IMPORT_NAME(tmp_import_name_from_1083, mod_consts[2490]);
        }

        if (tmp_assign_source_1287 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2490], tmp_assign_source_1287);
    }
    {
        PyObject *tmp_assign_source_1288;
        PyObject *tmp_import_name_from_1084;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1084 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1084)) {
            tmp_assign_source_1288 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1084,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2491],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1288 = IMPORT_NAME(tmp_import_name_from_1084, mod_consts[2491]);
        }

        if (tmp_assign_source_1288 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2491], tmp_assign_source_1288);
    }
    {
        PyObject *tmp_assign_source_1289;
        PyObject *tmp_import_name_from_1085;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1085 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1085)) {
            tmp_assign_source_1289 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1085,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2492],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1289 = IMPORT_NAME(tmp_import_name_from_1085, mod_consts[2492]);
        }

        if (tmp_assign_source_1289 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2492], tmp_assign_source_1289);
    }
    {
        PyObject *tmp_assign_source_1290;
        PyObject *tmp_import_name_from_1086;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1086 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1086)) {
            tmp_assign_source_1290 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1086,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2493],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1290 = IMPORT_NAME(tmp_import_name_from_1086, mod_consts[2493]);
        }

        if (tmp_assign_source_1290 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2493], tmp_assign_source_1290);
    }
    {
        PyObject *tmp_assign_source_1291;
        PyObject *tmp_import_name_from_1087;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1087 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1087)) {
            tmp_assign_source_1291 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1087,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2494],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1291 = IMPORT_NAME(tmp_import_name_from_1087, mod_consts[2494]);
        }

        if (tmp_assign_source_1291 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2494], tmp_assign_source_1291);
    }
    {
        PyObject *tmp_assign_source_1292;
        PyObject *tmp_import_name_from_1088;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1088 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1088)) {
            tmp_assign_source_1292 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1088,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2495],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1292 = IMPORT_NAME(tmp_import_name_from_1088, mod_consts[2495]);
        }

        if (tmp_assign_source_1292 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2495], tmp_assign_source_1292);
    }
    {
        PyObject *tmp_assign_source_1293;
        PyObject *tmp_import_name_from_1089;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1089 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1089)) {
            tmp_assign_source_1293 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1089,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2496],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1293 = IMPORT_NAME(tmp_import_name_from_1089, mod_consts[2496]);
        }

        if (tmp_assign_source_1293 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2496], tmp_assign_source_1293);
    }
    {
        PyObject *tmp_assign_source_1294;
        PyObject *tmp_import_name_from_1090;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1090 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1090)) {
            tmp_assign_source_1294 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1090,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2497],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1294 = IMPORT_NAME(tmp_import_name_from_1090, mod_consts[2497]);
        }

        if (tmp_assign_source_1294 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2497], tmp_assign_source_1294);
    }
    {
        PyObject *tmp_assign_source_1295;
        PyObject *tmp_import_name_from_1091;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1091 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1091)) {
            tmp_assign_source_1295 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1091,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2498],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1295 = IMPORT_NAME(tmp_import_name_from_1091, mod_consts[2498]);
        }

        if (tmp_assign_source_1295 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2498], tmp_assign_source_1295);
    }
    {
        PyObject *tmp_assign_source_1296;
        PyObject *tmp_import_name_from_1092;
        CHECK_OBJECT(tmp_import_from_200__module);
        tmp_import_name_from_1092 = tmp_import_from_200__module;
        if (PyModule_Check(tmp_import_name_from_1092)) {
            tmp_assign_source_1296 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1092,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2499],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1296 = IMPORT_NAME(tmp_import_name_from_1092, mod_consts[2499]);
        }

        if (tmp_assign_source_1296 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1441;

            goto try_except_handler_200;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2499], tmp_assign_source_1296);
    }
    goto try_end_200;
    // Exception handler code:
    try_except_handler_200:;
    exception_keeper_type_200 = exception_type;
    exception_keeper_value_200 = exception_value;
    exception_keeper_tb_200 = exception_tb;
    exception_keeper_lineno_200 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_200__module);
    Py_DECREF(tmp_import_from_200__module);
    tmp_import_from_200__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_200;
    exception_value = exception_keeper_value_200;
    exception_tb = exception_keeper_tb_200;
    exception_lineno = exception_keeper_lineno_200;

    goto frame_exception_exit_1;
    // End of try:
    try_end_200:;
    CHECK_OBJECT(tmp_import_from_200__module);
    Py_DECREF(tmp_import_from_200__module);
    tmp_import_from_200__module = NULL;
    {
        PyObject *tmp_assign_source_1297;
        PyObject *tmp_import_name_from_1093;
        PyObject *tmp_name_value_701;
        PyObject *tmp_globals_arg_value_701;
        PyObject *tmp_locals_arg_value_701;
        PyObject *tmp_fromlist_value_701;
        PyObject *tmp_level_value_701;
        tmp_name_value_701 = mod_consts[2500];
        tmp_globals_arg_value_701 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_701 = Py_None;
        tmp_fromlist_value_701 = mod_consts[2501];
        tmp_level_value_701 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1453;
        tmp_import_name_from_1093 = IMPORT_MODULE5(tmp_name_value_701, tmp_globals_arg_value_701, tmp_locals_arg_value_701, tmp_fromlist_value_701, tmp_level_value_701);
        if (tmp_import_name_from_1093 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1453;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1093)) {
            tmp_assign_source_1297 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1093,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2502],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1297 = IMPORT_NAME(tmp_import_name_from_1093, mod_consts[2502]);
        }

        Py_DECREF(tmp_import_name_from_1093);
        if (tmp_assign_source_1297 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1453;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2502], tmp_assign_source_1297);
    }
    {
        PyObject *tmp_assign_source_1298;
        PyObject *tmp_name_value_702;
        PyObject *tmp_globals_arg_value_702;
        PyObject *tmp_locals_arg_value_702;
        PyObject *tmp_fromlist_value_702;
        PyObject *tmp_level_value_702;
        tmp_name_value_702 = mod_consts[2503];
        tmp_globals_arg_value_702 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_702 = Py_None;
        tmp_fromlist_value_702 = mod_consts[2504];
        tmp_level_value_702 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1454;
        tmp_assign_source_1298 = IMPORT_MODULE5(tmp_name_value_702, tmp_globals_arg_value_702, tmp_locals_arg_value_702, tmp_fromlist_value_702, tmp_level_value_702);
        if (tmp_assign_source_1298 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1454;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_201__module == NULL);
        tmp_import_from_201__module = tmp_assign_source_1298;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1299;
        PyObject *tmp_import_name_from_1094;
        CHECK_OBJECT(tmp_import_from_201__module);
        tmp_import_name_from_1094 = tmp_import_from_201__module;
        if (PyModule_Check(tmp_import_name_from_1094)) {
            tmp_assign_source_1299 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1094,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2505],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1299 = IMPORT_NAME(tmp_import_name_from_1094, mod_consts[2505]);
        }

        if (tmp_assign_source_1299 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1454;

            goto try_except_handler_201;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2505], tmp_assign_source_1299);
    }
    {
        PyObject *tmp_assign_source_1300;
        PyObject *tmp_import_name_from_1095;
        CHECK_OBJECT(tmp_import_from_201__module);
        tmp_import_name_from_1095 = tmp_import_from_201__module;
        if (PyModule_Check(tmp_import_name_from_1095)) {
            tmp_assign_source_1300 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1095,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2506],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1300 = IMPORT_NAME(tmp_import_name_from_1095, mod_consts[2506]);
        }

        if (tmp_assign_source_1300 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1454;

            goto try_except_handler_201;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2506], tmp_assign_source_1300);
    }
    goto try_end_201;
    // Exception handler code:
    try_except_handler_201:;
    exception_keeper_type_201 = exception_type;
    exception_keeper_value_201 = exception_value;
    exception_keeper_tb_201 = exception_tb;
    exception_keeper_lineno_201 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_201__module);
    Py_DECREF(tmp_import_from_201__module);
    tmp_import_from_201__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_201;
    exception_value = exception_keeper_value_201;
    exception_tb = exception_keeper_tb_201;
    exception_lineno = exception_keeper_lineno_201;

    goto frame_exception_exit_1;
    // End of try:
    try_end_201:;
    CHECK_OBJECT(tmp_import_from_201__module);
    Py_DECREF(tmp_import_from_201__module);
    tmp_import_from_201__module = NULL;
    {
        PyObject *tmp_assign_source_1301;
        PyObject *tmp_name_value_703;
        PyObject *tmp_globals_arg_value_703;
        PyObject *tmp_locals_arg_value_703;
        PyObject *tmp_fromlist_value_703;
        PyObject *tmp_level_value_703;
        tmp_name_value_703 = mod_consts[2507];
        tmp_globals_arg_value_703 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_703 = Py_None;
        tmp_fromlist_value_703 = mod_consts[2508];
        tmp_level_value_703 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1458;
        tmp_assign_source_1301 = IMPORT_MODULE5(tmp_name_value_703, tmp_globals_arg_value_703, tmp_locals_arg_value_703, tmp_fromlist_value_703, tmp_level_value_703);
        if (tmp_assign_source_1301 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1458;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_202__module == NULL);
        tmp_import_from_202__module = tmp_assign_source_1301;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1302;
        PyObject *tmp_import_name_from_1096;
        CHECK_OBJECT(tmp_import_from_202__module);
        tmp_import_name_from_1096 = tmp_import_from_202__module;
        if (PyModule_Check(tmp_import_name_from_1096)) {
            tmp_assign_source_1302 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1096,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2509],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1302 = IMPORT_NAME(tmp_import_name_from_1096, mod_consts[2509]);
        }

        if (tmp_assign_source_1302 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1458;

            goto try_except_handler_202;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2509], tmp_assign_source_1302);
    }
    {
        PyObject *tmp_assign_source_1303;
        PyObject *tmp_import_name_from_1097;
        CHECK_OBJECT(tmp_import_from_202__module);
        tmp_import_name_from_1097 = tmp_import_from_202__module;
        if (PyModule_Check(tmp_import_name_from_1097)) {
            tmp_assign_source_1303 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1097,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2510],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1303 = IMPORT_NAME(tmp_import_name_from_1097, mod_consts[2510]);
        }

        if (tmp_assign_source_1303 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1458;

            goto try_except_handler_202;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2510], tmp_assign_source_1303);
    }
    goto try_end_202;
    // Exception handler code:
    try_except_handler_202:;
    exception_keeper_type_202 = exception_type;
    exception_keeper_value_202 = exception_value;
    exception_keeper_tb_202 = exception_tb;
    exception_keeper_lineno_202 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_202__module);
    Py_DECREF(tmp_import_from_202__module);
    tmp_import_from_202__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_202;
    exception_value = exception_keeper_value_202;
    exception_tb = exception_keeper_tb_202;
    exception_lineno = exception_keeper_lineno_202;

    goto frame_exception_exit_1;
    // End of try:
    try_end_202:;
    CHECK_OBJECT(tmp_import_from_202__module);
    Py_DECREF(tmp_import_from_202__module);
    tmp_import_from_202__module = NULL;
    {
        PyObject *tmp_assign_source_1304;
        PyObject *tmp_import_name_from_1098;
        PyObject *tmp_name_value_704;
        PyObject *tmp_globals_arg_value_704;
        PyObject *tmp_locals_arg_value_704;
        PyObject *tmp_fromlist_value_704;
        PyObject *tmp_level_value_704;
        tmp_name_value_704 = mod_consts[2511];
        tmp_globals_arg_value_704 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_704 = Py_None;
        tmp_fromlist_value_704 = mod_consts[2512];
        tmp_level_value_704 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1462;
        tmp_import_name_from_1098 = IMPORT_MODULE5(tmp_name_value_704, tmp_globals_arg_value_704, tmp_locals_arg_value_704, tmp_fromlist_value_704, tmp_level_value_704);
        if (tmp_import_name_from_1098 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1462;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1098)) {
            tmp_assign_source_1304 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1098,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2513],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1304 = IMPORT_NAME(tmp_import_name_from_1098, mod_consts[2513]);
        }

        Py_DECREF(tmp_import_name_from_1098);
        if (tmp_assign_source_1304 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1462;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2513], tmp_assign_source_1304);
    }
    {
        PyObject *tmp_assign_source_1305;
        PyObject *tmp_name_value_705;
        PyObject *tmp_globals_arg_value_705;
        PyObject *tmp_locals_arg_value_705;
        PyObject *tmp_fromlist_value_705;
        PyObject *tmp_level_value_705;
        tmp_name_value_705 = mod_consts[2514];
        tmp_globals_arg_value_705 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_705 = Py_None;
        tmp_fromlist_value_705 = mod_consts[2515];
        tmp_level_value_705 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1463;
        tmp_assign_source_1305 = IMPORT_MODULE5(tmp_name_value_705, tmp_globals_arg_value_705, tmp_locals_arg_value_705, tmp_fromlist_value_705, tmp_level_value_705);
        if (tmp_assign_source_1305 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1463;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_203__module == NULL);
        tmp_import_from_203__module = tmp_assign_source_1305;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1306;
        PyObject *tmp_import_name_from_1099;
        CHECK_OBJECT(tmp_import_from_203__module);
        tmp_import_name_from_1099 = tmp_import_from_203__module;
        if (PyModule_Check(tmp_import_name_from_1099)) {
            tmp_assign_source_1306 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1099,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2516],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1306 = IMPORT_NAME(tmp_import_name_from_1099, mod_consts[2516]);
        }

        if (tmp_assign_source_1306 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1463;

            goto try_except_handler_203;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2516], tmp_assign_source_1306);
    }
    {
        PyObject *tmp_assign_source_1307;
        PyObject *tmp_import_name_from_1100;
        CHECK_OBJECT(tmp_import_from_203__module);
        tmp_import_name_from_1100 = tmp_import_from_203__module;
        if (PyModule_Check(tmp_import_name_from_1100)) {
            tmp_assign_source_1307 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1100,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2517],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1307 = IMPORT_NAME(tmp_import_name_from_1100, mod_consts[2517]);
        }

        if (tmp_assign_source_1307 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1463;

            goto try_except_handler_203;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2517], tmp_assign_source_1307);
    }
    {
        PyObject *tmp_assign_source_1308;
        PyObject *tmp_import_name_from_1101;
        CHECK_OBJECT(tmp_import_from_203__module);
        tmp_import_name_from_1101 = tmp_import_from_203__module;
        if (PyModule_Check(tmp_import_name_from_1101)) {
            tmp_assign_source_1308 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1101,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2518],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1308 = IMPORT_NAME(tmp_import_name_from_1101, mod_consts[2518]);
        }

        if (tmp_assign_source_1308 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1463;

            goto try_except_handler_203;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2518], tmp_assign_source_1308);
    }
    goto try_end_203;
    // Exception handler code:
    try_except_handler_203:;
    exception_keeper_type_203 = exception_type;
    exception_keeper_value_203 = exception_value;
    exception_keeper_tb_203 = exception_tb;
    exception_keeper_lineno_203 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_203__module);
    Py_DECREF(tmp_import_from_203__module);
    tmp_import_from_203__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_203;
    exception_value = exception_keeper_value_203;
    exception_tb = exception_keeper_tb_203;
    exception_lineno = exception_keeper_lineno_203;

    goto frame_exception_exit_1;
    // End of try:
    try_end_203:;
    CHECK_OBJECT(tmp_import_from_203__module);
    Py_DECREF(tmp_import_from_203__module);
    tmp_import_from_203__module = NULL;
    {
        PyObject *tmp_assign_source_1309;
        PyObject *tmp_name_value_706;
        PyObject *tmp_globals_arg_value_706;
        PyObject *tmp_locals_arg_value_706;
        PyObject *tmp_fromlist_value_706;
        PyObject *tmp_level_value_706;
        tmp_name_value_706 = mod_consts[2519];
        tmp_globals_arg_value_706 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_706 = Py_None;
        tmp_fromlist_value_706 = mod_consts[2520];
        tmp_level_value_706 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1468;
        tmp_assign_source_1309 = IMPORT_MODULE5(tmp_name_value_706, tmp_globals_arg_value_706, tmp_locals_arg_value_706, tmp_fromlist_value_706, tmp_level_value_706);
        if (tmp_assign_source_1309 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1468;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_204__module == NULL);
        tmp_import_from_204__module = tmp_assign_source_1309;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1310;
        PyObject *tmp_import_name_from_1102;
        CHECK_OBJECT(tmp_import_from_204__module);
        tmp_import_name_from_1102 = tmp_import_from_204__module;
        if (PyModule_Check(tmp_import_name_from_1102)) {
            tmp_assign_source_1310 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1102,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2521],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1310 = IMPORT_NAME(tmp_import_name_from_1102, mod_consts[2521]);
        }

        if (tmp_assign_source_1310 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1468;

            goto try_except_handler_204;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2521], tmp_assign_source_1310);
    }
    {
        PyObject *tmp_assign_source_1311;
        PyObject *tmp_import_name_from_1103;
        CHECK_OBJECT(tmp_import_from_204__module);
        tmp_import_name_from_1103 = tmp_import_from_204__module;
        if (PyModule_Check(tmp_import_name_from_1103)) {
            tmp_assign_source_1311 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1103,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2522],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1311 = IMPORT_NAME(tmp_import_name_from_1103, mod_consts[2522]);
        }

        if (tmp_assign_source_1311 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1468;

            goto try_except_handler_204;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2522], tmp_assign_source_1311);
    }
    {
        PyObject *tmp_assign_source_1312;
        PyObject *tmp_import_name_from_1104;
        CHECK_OBJECT(tmp_import_from_204__module);
        tmp_import_name_from_1104 = tmp_import_from_204__module;
        if (PyModule_Check(tmp_import_name_from_1104)) {
            tmp_assign_source_1312 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1104,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2523],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1312 = IMPORT_NAME(tmp_import_name_from_1104, mod_consts[2523]);
        }

        if (tmp_assign_source_1312 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1468;

            goto try_except_handler_204;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2523], tmp_assign_source_1312);
    }
    goto try_end_204;
    // Exception handler code:
    try_except_handler_204:;
    exception_keeper_type_204 = exception_type;
    exception_keeper_value_204 = exception_value;
    exception_keeper_tb_204 = exception_tb;
    exception_keeper_lineno_204 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_204__module);
    Py_DECREF(tmp_import_from_204__module);
    tmp_import_from_204__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_204;
    exception_value = exception_keeper_value_204;
    exception_tb = exception_keeper_tb_204;
    exception_lineno = exception_keeper_lineno_204;

    goto frame_exception_exit_1;
    // End of try:
    try_end_204:;
    CHECK_OBJECT(tmp_import_from_204__module);
    Py_DECREF(tmp_import_from_204__module);
    tmp_import_from_204__module = NULL;
    {
        PyObject *tmp_assign_source_1313;
        PyObject *tmp_name_value_707;
        PyObject *tmp_globals_arg_value_707;
        PyObject *tmp_locals_arg_value_707;
        PyObject *tmp_fromlist_value_707;
        PyObject *tmp_level_value_707;
        tmp_name_value_707 = mod_consts[2524];
        tmp_globals_arg_value_707 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_707 = Py_None;
        tmp_fromlist_value_707 = mod_consts[2525];
        tmp_level_value_707 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1473;
        tmp_assign_source_1313 = IMPORT_MODULE5(tmp_name_value_707, tmp_globals_arg_value_707, tmp_locals_arg_value_707, tmp_fromlist_value_707, tmp_level_value_707);
        if (tmp_assign_source_1313 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1473;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_205__module == NULL);
        tmp_import_from_205__module = tmp_assign_source_1313;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1314;
        PyObject *tmp_import_name_from_1105;
        CHECK_OBJECT(tmp_import_from_205__module);
        tmp_import_name_from_1105 = tmp_import_from_205__module;
        if (PyModule_Check(tmp_import_name_from_1105)) {
            tmp_assign_source_1314 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1105,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2526],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1314 = IMPORT_NAME(tmp_import_name_from_1105, mod_consts[2526]);
        }

        if (tmp_assign_source_1314 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1473;

            goto try_except_handler_205;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2526], tmp_assign_source_1314);
    }
    {
        PyObject *tmp_assign_source_1315;
        PyObject *tmp_import_name_from_1106;
        CHECK_OBJECT(tmp_import_from_205__module);
        tmp_import_name_from_1106 = tmp_import_from_205__module;
        if (PyModule_Check(tmp_import_name_from_1106)) {
            tmp_assign_source_1315 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1106,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2527],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1315 = IMPORT_NAME(tmp_import_name_from_1106, mod_consts[2527]);
        }

        if (tmp_assign_source_1315 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1473;

            goto try_except_handler_205;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2527], tmp_assign_source_1315);
    }
    {
        PyObject *tmp_assign_source_1316;
        PyObject *tmp_import_name_from_1107;
        CHECK_OBJECT(tmp_import_from_205__module);
        tmp_import_name_from_1107 = tmp_import_from_205__module;
        if (PyModule_Check(tmp_import_name_from_1107)) {
            tmp_assign_source_1316 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1107,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2528],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1316 = IMPORT_NAME(tmp_import_name_from_1107, mod_consts[2528]);
        }

        if (tmp_assign_source_1316 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1473;

            goto try_except_handler_205;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2528], tmp_assign_source_1316);
    }
    goto try_end_205;
    // Exception handler code:
    try_except_handler_205:;
    exception_keeper_type_205 = exception_type;
    exception_keeper_value_205 = exception_value;
    exception_keeper_tb_205 = exception_tb;
    exception_keeper_lineno_205 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_205__module);
    Py_DECREF(tmp_import_from_205__module);
    tmp_import_from_205__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_205;
    exception_value = exception_keeper_value_205;
    exception_tb = exception_keeper_tb_205;
    exception_lineno = exception_keeper_lineno_205;

    goto frame_exception_exit_1;
    // End of try:
    try_end_205:;
    CHECK_OBJECT(tmp_import_from_205__module);
    Py_DECREF(tmp_import_from_205__module);
    tmp_import_from_205__module = NULL;
    {
        PyObject *tmp_assign_source_1317;
        PyObject *tmp_import_name_from_1108;
        PyObject *tmp_name_value_708;
        PyObject *tmp_globals_arg_value_708;
        PyObject *tmp_locals_arg_value_708;
        PyObject *tmp_fromlist_value_708;
        PyObject *tmp_level_value_708;
        tmp_name_value_708 = mod_consts[2529];
        tmp_globals_arg_value_708 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_708 = Py_None;
        tmp_fromlist_value_708 = mod_consts[2530];
        tmp_level_value_708 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1478;
        tmp_import_name_from_1108 = IMPORT_MODULE5(tmp_name_value_708, tmp_globals_arg_value_708, tmp_locals_arg_value_708, tmp_fromlist_value_708, tmp_level_value_708);
        if (tmp_import_name_from_1108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1478;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1108)) {
            tmp_assign_source_1317 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1108,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2531],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1317 = IMPORT_NAME(tmp_import_name_from_1108, mod_consts[2531]);
        }

        Py_DECREF(tmp_import_name_from_1108);
        if (tmp_assign_source_1317 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1478;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2531], tmp_assign_source_1317);
    }
    {
        PyObject *tmp_assign_source_1318;
        PyObject *tmp_import_name_from_1109;
        PyObject *tmp_name_value_709;
        PyObject *tmp_globals_arg_value_709;
        PyObject *tmp_locals_arg_value_709;
        PyObject *tmp_fromlist_value_709;
        PyObject *tmp_level_value_709;
        tmp_name_value_709 = mod_consts[2532];
        tmp_globals_arg_value_709 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_709 = Py_None;
        tmp_fromlist_value_709 = mod_consts[2533];
        tmp_level_value_709 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1479;
        tmp_import_name_from_1109 = IMPORT_MODULE5(tmp_name_value_709, tmp_globals_arg_value_709, tmp_locals_arg_value_709, tmp_fromlist_value_709, tmp_level_value_709);
        if (tmp_import_name_from_1109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1479;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1109)) {
            tmp_assign_source_1318 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1109,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2534],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1318 = IMPORT_NAME(tmp_import_name_from_1109, mod_consts[2534]);
        }

        Py_DECREF(tmp_import_name_from_1109);
        if (tmp_assign_source_1318 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1479;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2534], tmp_assign_source_1318);
    }
    {
        PyObject *tmp_assign_source_1319;
        PyObject *tmp_import_name_from_1110;
        PyObject *tmp_name_value_710;
        PyObject *tmp_globals_arg_value_710;
        PyObject *tmp_locals_arg_value_710;
        PyObject *tmp_fromlist_value_710;
        PyObject *tmp_level_value_710;
        tmp_name_value_710 = mod_consts[2535];
        tmp_globals_arg_value_710 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_710 = Py_None;
        tmp_fromlist_value_710 = mod_consts[2536];
        tmp_level_value_710 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1480;
        tmp_import_name_from_1110 = IMPORT_MODULE5(tmp_name_value_710, tmp_globals_arg_value_710, tmp_locals_arg_value_710, tmp_fromlist_value_710, tmp_level_value_710);
        if (tmp_import_name_from_1110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1480;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1110)) {
            tmp_assign_source_1319 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1110,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2537],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1319 = IMPORT_NAME(tmp_import_name_from_1110, mod_consts[2537]);
        }

        Py_DECREF(tmp_import_name_from_1110);
        if (tmp_assign_source_1319 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1480;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2537], tmp_assign_source_1319);
    }
    {
        PyObject *tmp_assign_source_1320;
        PyObject *tmp_import_name_from_1111;
        PyObject *tmp_name_value_711;
        PyObject *tmp_globals_arg_value_711;
        PyObject *tmp_locals_arg_value_711;
        PyObject *tmp_fromlist_value_711;
        PyObject *tmp_level_value_711;
        tmp_name_value_711 = mod_consts[2538];
        tmp_globals_arg_value_711 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_711 = Py_None;
        tmp_fromlist_value_711 = mod_consts[2539];
        tmp_level_value_711 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1481;
        tmp_import_name_from_1111 = IMPORT_MODULE5(tmp_name_value_711, tmp_globals_arg_value_711, tmp_locals_arg_value_711, tmp_fromlist_value_711, tmp_level_value_711);
        if (tmp_import_name_from_1111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1481;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1111)) {
            tmp_assign_source_1320 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1111,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2540],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1320 = IMPORT_NAME(tmp_import_name_from_1111, mod_consts[2540]);
        }

        Py_DECREF(tmp_import_name_from_1111);
        if (tmp_assign_source_1320 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1481;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2540], tmp_assign_source_1320);
    }
    {
        PyObject *tmp_assign_source_1321;
        PyObject *tmp_import_name_from_1112;
        PyObject *tmp_name_value_712;
        PyObject *tmp_globals_arg_value_712;
        PyObject *tmp_locals_arg_value_712;
        PyObject *tmp_fromlist_value_712;
        PyObject *tmp_level_value_712;
        tmp_name_value_712 = mod_consts[2541];
        tmp_globals_arg_value_712 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_712 = Py_None;
        tmp_fromlist_value_712 = mod_consts[2542];
        tmp_level_value_712 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1482;
        tmp_import_name_from_1112 = IMPORT_MODULE5(tmp_name_value_712, tmp_globals_arg_value_712, tmp_locals_arg_value_712, tmp_fromlist_value_712, tmp_level_value_712);
        if (tmp_import_name_from_1112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1482;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1112)) {
            tmp_assign_source_1321 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1112,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2543],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1321 = IMPORT_NAME(tmp_import_name_from_1112, mod_consts[2543]);
        }

        Py_DECREF(tmp_import_name_from_1112);
        if (tmp_assign_source_1321 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1482;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2543], tmp_assign_source_1321);
    }
    {
        PyObject *tmp_assign_source_1322;
        PyObject *tmp_name_value_713;
        PyObject *tmp_globals_arg_value_713;
        PyObject *tmp_locals_arg_value_713;
        PyObject *tmp_fromlist_value_713;
        PyObject *tmp_level_value_713;
        tmp_name_value_713 = mod_consts[2544];
        tmp_globals_arg_value_713 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_713 = Py_None;
        tmp_fromlist_value_713 = mod_consts[2545];
        tmp_level_value_713 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1483;
        tmp_assign_source_1322 = IMPORT_MODULE5(tmp_name_value_713, tmp_globals_arg_value_713, tmp_locals_arg_value_713, tmp_fromlist_value_713, tmp_level_value_713);
        if (tmp_assign_source_1322 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1483;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_206__module == NULL);
        tmp_import_from_206__module = tmp_assign_source_1322;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1323;
        PyObject *tmp_import_name_from_1113;
        CHECK_OBJECT(tmp_import_from_206__module);
        tmp_import_name_from_1113 = tmp_import_from_206__module;
        if (PyModule_Check(tmp_import_name_from_1113)) {
            tmp_assign_source_1323 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1113,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2546],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1323 = IMPORT_NAME(tmp_import_name_from_1113, mod_consts[2546]);
        }

        if (tmp_assign_source_1323 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1483;

            goto try_except_handler_206;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2546], tmp_assign_source_1323);
    }
    {
        PyObject *tmp_assign_source_1324;
        PyObject *tmp_import_name_from_1114;
        CHECK_OBJECT(tmp_import_from_206__module);
        tmp_import_name_from_1114 = tmp_import_from_206__module;
        if (PyModule_Check(tmp_import_name_from_1114)) {
            tmp_assign_source_1324 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1114,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2547],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1324 = IMPORT_NAME(tmp_import_name_from_1114, mod_consts[2547]);
        }

        if (tmp_assign_source_1324 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1483;

            goto try_except_handler_206;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2547], tmp_assign_source_1324);
    }
    goto try_end_206;
    // Exception handler code:
    try_except_handler_206:;
    exception_keeper_type_206 = exception_type;
    exception_keeper_value_206 = exception_value;
    exception_keeper_tb_206 = exception_tb;
    exception_keeper_lineno_206 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_206__module);
    Py_DECREF(tmp_import_from_206__module);
    tmp_import_from_206__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_206;
    exception_value = exception_keeper_value_206;
    exception_tb = exception_keeper_tb_206;
    exception_lineno = exception_keeper_lineno_206;

    goto frame_exception_exit_1;
    // End of try:
    try_end_206:;
    CHECK_OBJECT(tmp_import_from_206__module);
    Py_DECREF(tmp_import_from_206__module);
    tmp_import_from_206__module = NULL;
    {
        PyObject *tmp_assign_source_1325;
        PyObject *tmp_import_name_from_1115;
        PyObject *tmp_name_value_714;
        PyObject *tmp_globals_arg_value_714;
        PyObject *tmp_locals_arg_value_714;
        PyObject *tmp_fromlist_value_714;
        PyObject *tmp_level_value_714;
        tmp_name_value_714 = mod_consts[2548];
        tmp_globals_arg_value_714 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_714 = Py_None;
        tmp_fromlist_value_714 = mod_consts[2549];
        tmp_level_value_714 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1487;
        tmp_import_name_from_1115 = IMPORT_MODULE5(tmp_name_value_714, tmp_globals_arg_value_714, tmp_locals_arg_value_714, tmp_fromlist_value_714, tmp_level_value_714);
        if (tmp_import_name_from_1115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1487;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1115)) {
            tmp_assign_source_1325 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1115,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2550],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1325 = IMPORT_NAME(tmp_import_name_from_1115, mod_consts[2550]);
        }

        Py_DECREF(tmp_import_name_from_1115);
        if (tmp_assign_source_1325 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1487;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2550], tmp_assign_source_1325);
    }
    {
        PyObject *tmp_assign_source_1326;
        PyObject *tmp_import_name_from_1116;
        PyObject *tmp_name_value_715;
        PyObject *tmp_globals_arg_value_715;
        PyObject *tmp_locals_arg_value_715;
        PyObject *tmp_fromlist_value_715;
        PyObject *tmp_level_value_715;
        tmp_name_value_715 = mod_consts[2551];
        tmp_globals_arg_value_715 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_715 = Py_None;
        tmp_fromlist_value_715 = mod_consts[2552];
        tmp_level_value_715 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1488;
        tmp_import_name_from_1116 = IMPORT_MODULE5(tmp_name_value_715, tmp_globals_arg_value_715, tmp_locals_arg_value_715, tmp_fromlist_value_715, tmp_level_value_715);
        if (tmp_import_name_from_1116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1488;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1116)) {
            tmp_assign_source_1326 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1116,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2553],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1326 = IMPORT_NAME(tmp_import_name_from_1116, mod_consts[2553]);
        }

        Py_DECREF(tmp_import_name_from_1116);
        if (tmp_assign_source_1326 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1488;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2553], tmp_assign_source_1326);
    }
    {
        PyObject *tmp_assign_source_1327;
        PyObject *tmp_name_value_716;
        PyObject *tmp_globals_arg_value_716;
        PyObject *tmp_locals_arg_value_716;
        PyObject *tmp_fromlist_value_716;
        PyObject *tmp_level_value_716;
        tmp_name_value_716 = mod_consts[2554];
        tmp_globals_arg_value_716 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_716 = Py_None;
        tmp_fromlist_value_716 = mod_consts[2555];
        tmp_level_value_716 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1489;
        tmp_assign_source_1327 = IMPORT_MODULE5(tmp_name_value_716, tmp_globals_arg_value_716, tmp_locals_arg_value_716, tmp_fromlist_value_716, tmp_level_value_716);
        if (tmp_assign_source_1327 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1489;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_207__module == NULL);
        tmp_import_from_207__module = tmp_assign_source_1327;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1328;
        PyObject *tmp_import_name_from_1117;
        CHECK_OBJECT(tmp_import_from_207__module);
        tmp_import_name_from_1117 = tmp_import_from_207__module;
        if (PyModule_Check(tmp_import_name_from_1117)) {
            tmp_assign_source_1328 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1117,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2556],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1328 = IMPORT_NAME(tmp_import_name_from_1117, mod_consts[2556]);
        }

        if (tmp_assign_source_1328 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1489;

            goto try_except_handler_207;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2556], tmp_assign_source_1328);
    }
    {
        PyObject *tmp_assign_source_1329;
        PyObject *tmp_import_name_from_1118;
        CHECK_OBJECT(tmp_import_from_207__module);
        tmp_import_name_from_1118 = tmp_import_from_207__module;
        if (PyModule_Check(tmp_import_name_from_1118)) {
            tmp_assign_source_1329 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1118,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2557],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1329 = IMPORT_NAME(tmp_import_name_from_1118, mod_consts[2557]);
        }

        if (tmp_assign_source_1329 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1489;

            goto try_except_handler_207;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2557], tmp_assign_source_1329);
    }
    goto try_end_207;
    // Exception handler code:
    try_except_handler_207:;
    exception_keeper_type_207 = exception_type;
    exception_keeper_value_207 = exception_value;
    exception_keeper_tb_207 = exception_tb;
    exception_keeper_lineno_207 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_207__module);
    Py_DECREF(tmp_import_from_207__module);
    tmp_import_from_207__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_207;
    exception_value = exception_keeper_value_207;
    exception_tb = exception_keeper_tb_207;
    exception_lineno = exception_keeper_lineno_207;

    goto frame_exception_exit_1;
    // End of try:
    try_end_207:;
    CHECK_OBJECT(tmp_import_from_207__module);
    Py_DECREF(tmp_import_from_207__module);
    tmp_import_from_207__module = NULL;
    {
        PyObject *tmp_assign_source_1330;
        PyObject *tmp_import_name_from_1119;
        PyObject *tmp_name_value_717;
        PyObject *tmp_globals_arg_value_717;
        PyObject *tmp_locals_arg_value_717;
        PyObject *tmp_fromlist_value_717;
        PyObject *tmp_level_value_717;
        tmp_name_value_717 = mod_consts[2558];
        tmp_globals_arg_value_717 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_717 = Py_None;
        tmp_fromlist_value_717 = mod_consts[2559];
        tmp_level_value_717 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1493;
        tmp_import_name_from_1119 = IMPORT_MODULE5(tmp_name_value_717, tmp_globals_arg_value_717, tmp_locals_arg_value_717, tmp_fromlist_value_717, tmp_level_value_717);
        if (tmp_import_name_from_1119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1493;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1119)) {
            tmp_assign_source_1330 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1119,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2560],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1330 = IMPORT_NAME(tmp_import_name_from_1119, mod_consts[2560]);
        }

        Py_DECREF(tmp_import_name_from_1119);
        if (tmp_assign_source_1330 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1493;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2560], tmp_assign_source_1330);
    }
    {
        PyObject *tmp_assign_source_1331;
        PyObject *tmp_import_name_from_1120;
        PyObject *tmp_name_value_718;
        PyObject *tmp_globals_arg_value_718;
        PyObject *tmp_locals_arg_value_718;
        PyObject *tmp_fromlist_value_718;
        PyObject *tmp_level_value_718;
        tmp_name_value_718 = mod_consts[2561];
        tmp_globals_arg_value_718 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_718 = Py_None;
        tmp_fromlist_value_718 = mod_consts[2562];
        tmp_level_value_718 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1494;
        tmp_import_name_from_1120 = IMPORT_MODULE5(tmp_name_value_718, tmp_globals_arg_value_718, tmp_locals_arg_value_718, tmp_fromlist_value_718, tmp_level_value_718);
        if (tmp_import_name_from_1120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1494;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1120)) {
            tmp_assign_source_1331 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1120,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2563],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1331 = IMPORT_NAME(tmp_import_name_from_1120, mod_consts[2563]);
        }

        Py_DECREF(tmp_import_name_from_1120);
        if (tmp_assign_source_1331 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1494;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2563], tmp_assign_source_1331);
    }
    {
        PyObject *tmp_assign_source_1332;
        PyObject *tmp_import_name_from_1121;
        PyObject *tmp_name_value_719;
        PyObject *tmp_globals_arg_value_719;
        PyObject *tmp_locals_arg_value_719;
        PyObject *tmp_fromlist_value_719;
        PyObject *tmp_level_value_719;
        tmp_name_value_719 = mod_consts[2564];
        tmp_globals_arg_value_719 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_719 = Py_None;
        tmp_fromlist_value_719 = mod_consts[2565];
        tmp_level_value_719 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1495;
        tmp_import_name_from_1121 = IMPORT_MODULE5(tmp_name_value_719, tmp_globals_arg_value_719, tmp_locals_arg_value_719, tmp_fromlist_value_719, tmp_level_value_719);
        if (tmp_import_name_from_1121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1495;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1121)) {
            tmp_assign_source_1332 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1121,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2566],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1332 = IMPORT_NAME(tmp_import_name_from_1121, mod_consts[2566]);
        }

        Py_DECREF(tmp_import_name_from_1121);
        if (tmp_assign_source_1332 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1495;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2566], tmp_assign_source_1332);
    }
    {
        PyObject *tmp_assign_source_1333;
        PyObject *tmp_import_name_from_1122;
        PyObject *tmp_name_value_720;
        PyObject *tmp_globals_arg_value_720;
        PyObject *tmp_locals_arg_value_720;
        PyObject *tmp_fromlist_value_720;
        PyObject *tmp_level_value_720;
        tmp_name_value_720 = mod_consts[2567];
        tmp_globals_arg_value_720 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_720 = Py_None;
        tmp_fromlist_value_720 = mod_consts[2568];
        tmp_level_value_720 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1496;
        tmp_import_name_from_1122 = IMPORT_MODULE5(tmp_name_value_720, tmp_globals_arg_value_720, tmp_locals_arg_value_720, tmp_fromlist_value_720, tmp_level_value_720);
        if (tmp_import_name_from_1122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1496;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1122)) {
            tmp_assign_source_1333 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1122,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2569],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1333 = IMPORT_NAME(tmp_import_name_from_1122, mod_consts[2569]);
        }

        Py_DECREF(tmp_import_name_from_1122);
        if (tmp_assign_source_1333 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1496;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2569], tmp_assign_source_1333);
    }
    {
        PyObject *tmp_assign_source_1334;
        PyObject *tmp_import_name_from_1123;
        PyObject *tmp_name_value_721;
        PyObject *tmp_globals_arg_value_721;
        PyObject *tmp_locals_arg_value_721;
        PyObject *tmp_fromlist_value_721;
        PyObject *tmp_level_value_721;
        tmp_name_value_721 = mod_consts[2570];
        tmp_globals_arg_value_721 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_721 = Py_None;
        tmp_fromlist_value_721 = mod_consts[2571];
        tmp_level_value_721 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1497;
        tmp_import_name_from_1123 = IMPORT_MODULE5(tmp_name_value_721, tmp_globals_arg_value_721, tmp_locals_arg_value_721, tmp_fromlist_value_721, tmp_level_value_721);
        if (tmp_import_name_from_1123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1123)) {
            tmp_assign_source_1334 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1123,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2572],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1334 = IMPORT_NAME(tmp_import_name_from_1123, mod_consts[2572]);
        }

        Py_DECREF(tmp_import_name_from_1123);
        if (tmp_assign_source_1334 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1497;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2572], tmp_assign_source_1334);
    }
    {
        PyObject *tmp_assign_source_1335;
        PyObject *tmp_name_value_722;
        PyObject *tmp_globals_arg_value_722;
        PyObject *tmp_locals_arg_value_722;
        PyObject *tmp_fromlist_value_722;
        PyObject *tmp_level_value_722;
        tmp_name_value_722 = mod_consts[2573];
        tmp_globals_arg_value_722 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_722 = Py_None;
        tmp_fromlist_value_722 = mod_consts[2574];
        tmp_level_value_722 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1498;
        tmp_assign_source_1335 = IMPORT_MODULE5(tmp_name_value_722, tmp_globals_arg_value_722, tmp_locals_arg_value_722, tmp_fromlist_value_722, tmp_level_value_722);
        if (tmp_assign_source_1335 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1498;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_208__module == NULL);
        tmp_import_from_208__module = tmp_assign_source_1335;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1336;
        PyObject *tmp_import_name_from_1124;
        CHECK_OBJECT(tmp_import_from_208__module);
        tmp_import_name_from_1124 = tmp_import_from_208__module;
        if (PyModule_Check(tmp_import_name_from_1124)) {
            tmp_assign_source_1336 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1124,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2575],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1336 = IMPORT_NAME(tmp_import_name_from_1124, mod_consts[2575]);
        }

        if (tmp_assign_source_1336 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1498;

            goto try_except_handler_208;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2575], tmp_assign_source_1336);
    }
    {
        PyObject *tmp_assign_source_1337;
        PyObject *tmp_import_name_from_1125;
        CHECK_OBJECT(tmp_import_from_208__module);
        tmp_import_name_from_1125 = tmp_import_from_208__module;
        if (PyModule_Check(tmp_import_name_from_1125)) {
            tmp_assign_source_1337 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1125,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2576],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1337 = IMPORT_NAME(tmp_import_name_from_1125, mod_consts[2576]);
        }

        if (tmp_assign_source_1337 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1498;

            goto try_except_handler_208;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2576], tmp_assign_source_1337);
    }
    goto try_end_208;
    // Exception handler code:
    try_except_handler_208:;
    exception_keeper_type_208 = exception_type;
    exception_keeper_value_208 = exception_value;
    exception_keeper_tb_208 = exception_tb;
    exception_keeper_lineno_208 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_208__module);
    Py_DECREF(tmp_import_from_208__module);
    tmp_import_from_208__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_208;
    exception_value = exception_keeper_value_208;
    exception_tb = exception_keeper_tb_208;
    exception_lineno = exception_keeper_lineno_208;

    goto frame_exception_exit_1;
    // End of try:
    try_end_208:;
    CHECK_OBJECT(tmp_import_from_208__module);
    Py_DECREF(tmp_import_from_208__module);
    tmp_import_from_208__module = NULL;
    {
        PyObject *tmp_assign_source_1338;
        PyObject *tmp_import_name_from_1126;
        PyObject *tmp_name_value_723;
        PyObject *tmp_globals_arg_value_723;
        PyObject *tmp_locals_arg_value_723;
        PyObject *tmp_fromlist_value_723;
        PyObject *tmp_level_value_723;
        tmp_name_value_723 = mod_consts[2577];
        tmp_globals_arg_value_723 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_723 = Py_None;
        tmp_fromlist_value_723 = mod_consts[2578];
        tmp_level_value_723 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1502;
        tmp_import_name_from_1126 = IMPORT_MODULE5(tmp_name_value_723, tmp_globals_arg_value_723, tmp_locals_arg_value_723, tmp_fromlist_value_723, tmp_level_value_723);
        if (tmp_import_name_from_1126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1502;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1126)) {
            tmp_assign_source_1338 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1126,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2579],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1338 = IMPORT_NAME(tmp_import_name_from_1126, mod_consts[2579]);
        }

        Py_DECREF(tmp_import_name_from_1126);
        if (tmp_assign_source_1338 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1502;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2579], tmp_assign_source_1338);
    }
    {
        PyObject *tmp_assign_source_1339;
        PyObject *tmp_import_name_from_1127;
        PyObject *tmp_name_value_724;
        PyObject *tmp_globals_arg_value_724;
        PyObject *tmp_locals_arg_value_724;
        PyObject *tmp_fromlist_value_724;
        PyObject *tmp_level_value_724;
        tmp_name_value_724 = mod_consts[2580];
        tmp_globals_arg_value_724 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_724 = Py_None;
        tmp_fromlist_value_724 = mod_consts[2581];
        tmp_level_value_724 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1503;
        tmp_import_name_from_1127 = IMPORT_MODULE5(tmp_name_value_724, tmp_globals_arg_value_724, tmp_locals_arg_value_724, tmp_fromlist_value_724, tmp_level_value_724);
        if (tmp_import_name_from_1127 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1503;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1127)) {
            tmp_assign_source_1339 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1127,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2582],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1339 = IMPORT_NAME(tmp_import_name_from_1127, mod_consts[2582]);
        }

        Py_DECREF(tmp_import_name_from_1127);
        if (tmp_assign_source_1339 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1503;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2582], tmp_assign_source_1339);
    }
    {
        PyObject *tmp_assign_source_1340;
        PyObject *tmp_import_name_from_1128;
        PyObject *tmp_name_value_725;
        PyObject *tmp_globals_arg_value_725;
        PyObject *tmp_locals_arg_value_725;
        PyObject *tmp_fromlist_value_725;
        PyObject *tmp_level_value_725;
        tmp_name_value_725 = mod_consts[2583];
        tmp_globals_arg_value_725 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_725 = Py_None;
        tmp_fromlist_value_725 = mod_consts[2584];
        tmp_level_value_725 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1504;
        tmp_import_name_from_1128 = IMPORT_MODULE5(tmp_name_value_725, tmp_globals_arg_value_725, tmp_locals_arg_value_725, tmp_fromlist_value_725, tmp_level_value_725);
        if (tmp_import_name_from_1128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1504;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1128)) {
            tmp_assign_source_1340 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1128,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2585],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1340 = IMPORT_NAME(tmp_import_name_from_1128, mod_consts[2585]);
        }

        Py_DECREF(tmp_import_name_from_1128);
        if (tmp_assign_source_1340 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1504;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2585], tmp_assign_source_1340);
    }
    {
        PyObject *tmp_assign_source_1341;
        PyObject *tmp_import_name_from_1129;
        PyObject *tmp_name_value_726;
        PyObject *tmp_globals_arg_value_726;
        PyObject *tmp_locals_arg_value_726;
        PyObject *tmp_fromlist_value_726;
        PyObject *tmp_level_value_726;
        tmp_name_value_726 = mod_consts[2586];
        tmp_globals_arg_value_726 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_726 = Py_None;
        tmp_fromlist_value_726 = mod_consts[2587];
        tmp_level_value_726 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1505;
        tmp_import_name_from_1129 = IMPORT_MODULE5(tmp_name_value_726, tmp_globals_arg_value_726, tmp_locals_arg_value_726, tmp_fromlist_value_726, tmp_level_value_726);
        if (tmp_import_name_from_1129 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1505;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1129)) {
            tmp_assign_source_1341 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1129,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2588],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1341 = IMPORT_NAME(tmp_import_name_from_1129, mod_consts[2588]);
        }

        Py_DECREF(tmp_import_name_from_1129);
        if (tmp_assign_source_1341 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1505;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2588], tmp_assign_source_1341);
    }
    {
        PyObject *tmp_assign_source_1342;
        PyObject *tmp_name_value_727;
        PyObject *tmp_globals_arg_value_727;
        PyObject *tmp_locals_arg_value_727;
        PyObject *tmp_fromlist_value_727;
        PyObject *tmp_level_value_727;
        tmp_name_value_727 = mod_consts[2589];
        tmp_globals_arg_value_727 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_727 = Py_None;
        tmp_fromlist_value_727 = mod_consts[2590];
        tmp_level_value_727 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1506;
        tmp_assign_source_1342 = IMPORT_MODULE5(tmp_name_value_727, tmp_globals_arg_value_727, tmp_locals_arg_value_727, tmp_fromlist_value_727, tmp_level_value_727);
        if (tmp_assign_source_1342 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1506;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_209__module == NULL);
        tmp_import_from_209__module = tmp_assign_source_1342;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1343;
        PyObject *tmp_import_name_from_1130;
        CHECK_OBJECT(tmp_import_from_209__module);
        tmp_import_name_from_1130 = tmp_import_from_209__module;
        if (PyModule_Check(tmp_import_name_from_1130)) {
            tmp_assign_source_1343 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1130,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2591],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1343 = IMPORT_NAME(tmp_import_name_from_1130, mod_consts[2591]);
        }

        if (tmp_assign_source_1343 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1506;

            goto try_except_handler_209;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2591], tmp_assign_source_1343);
    }
    {
        PyObject *tmp_assign_source_1344;
        PyObject *tmp_import_name_from_1131;
        CHECK_OBJECT(tmp_import_from_209__module);
        tmp_import_name_from_1131 = tmp_import_from_209__module;
        if (PyModule_Check(tmp_import_name_from_1131)) {
            tmp_assign_source_1344 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1131,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2592],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1344 = IMPORT_NAME(tmp_import_name_from_1131, mod_consts[2592]);
        }

        if (tmp_assign_source_1344 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1506;

            goto try_except_handler_209;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2592], tmp_assign_source_1344);
    }
    goto try_end_209;
    // Exception handler code:
    try_except_handler_209:;
    exception_keeper_type_209 = exception_type;
    exception_keeper_value_209 = exception_value;
    exception_keeper_tb_209 = exception_tb;
    exception_keeper_lineno_209 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_209__module);
    Py_DECREF(tmp_import_from_209__module);
    tmp_import_from_209__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_209;
    exception_value = exception_keeper_value_209;
    exception_tb = exception_keeper_tb_209;
    exception_lineno = exception_keeper_lineno_209;

    goto frame_exception_exit_1;
    // End of try:
    try_end_209:;
    CHECK_OBJECT(tmp_import_from_209__module);
    Py_DECREF(tmp_import_from_209__module);
    tmp_import_from_209__module = NULL;
    {
        PyObject *tmp_assign_source_1345;
        PyObject *tmp_import_name_from_1132;
        PyObject *tmp_name_value_728;
        PyObject *tmp_globals_arg_value_728;
        PyObject *tmp_locals_arg_value_728;
        PyObject *tmp_fromlist_value_728;
        PyObject *tmp_level_value_728;
        tmp_name_value_728 = mod_consts[2593];
        tmp_globals_arg_value_728 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_728 = Py_None;
        tmp_fromlist_value_728 = mod_consts[2594];
        tmp_level_value_728 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1510;
        tmp_import_name_from_1132 = IMPORT_MODULE5(tmp_name_value_728, tmp_globals_arg_value_728, tmp_locals_arg_value_728, tmp_fromlist_value_728, tmp_level_value_728);
        if (tmp_import_name_from_1132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1510;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1132)) {
            tmp_assign_source_1345 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1132,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2595],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1345 = IMPORT_NAME(tmp_import_name_from_1132, mod_consts[2595]);
        }

        Py_DECREF(tmp_import_name_from_1132);
        if (tmp_assign_source_1345 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1510;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2595], tmp_assign_source_1345);
    }
    {
        PyObject *tmp_assign_source_1346;
        PyObject *tmp_import_name_from_1133;
        PyObject *tmp_name_value_729;
        PyObject *tmp_globals_arg_value_729;
        PyObject *tmp_locals_arg_value_729;
        PyObject *tmp_fromlist_value_729;
        PyObject *tmp_level_value_729;
        tmp_name_value_729 = mod_consts[2596];
        tmp_globals_arg_value_729 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_729 = Py_None;
        tmp_fromlist_value_729 = mod_consts[2597];
        tmp_level_value_729 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1511;
        tmp_import_name_from_1133 = IMPORT_MODULE5(tmp_name_value_729, tmp_globals_arg_value_729, tmp_locals_arg_value_729, tmp_fromlist_value_729, tmp_level_value_729);
        if (tmp_import_name_from_1133 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1511;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1133)) {
            tmp_assign_source_1346 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1133,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2598],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1346 = IMPORT_NAME(tmp_import_name_from_1133, mod_consts[2598]);
        }

        Py_DECREF(tmp_import_name_from_1133);
        if (tmp_assign_source_1346 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1511;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2598], tmp_assign_source_1346);
    }
    {
        PyObject *tmp_assign_source_1347;
        PyObject *tmp_import_name_from_1134;
        PyObject *tmp_name_value_730;
        PyObject *tmp_globals_arg_value_730;
        PyObject *tmp_locals_arg_value_730;
        PyObject *tmp_fromlist_value_730;
        PyObject *tmp_level_value_730;
        tmp_name_value_730 = mod_consts[2599];
        tmp_globals_arg_value_730 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_730 = Py_None;
        tmp_fromlist_value_730 = mod_consts[2600];
        tmp_level_value_730 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1512;
        tmp_import_name_from_1134 = IMPORT_MODULE5(tmp_name_value_730, tmp_globals_arg_value_730, tmp_locals_arg_value_730, tmp_fromlist_value_730, tmp_level_value_730);
        if (tmp_import_name_from_1134 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1512;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1134)) {
            tmp_assign_source_1347 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1134,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2601],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1347 = IMPORT_NAME(tmp_import_name_from_1134, mod_consts[2601]);
        }

        Py_DECREF(tmp_import_name_from_1134);
        if (tmp_assign_source_1347 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1512;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2601], tmp_assign_source_1347);
    }
    {
        PyObject *tmp_assign_source_1348;
        PyObject *tmp_name_value_731;
        PyObject *tmp_globals_arg_value_731;
        PyObject *tmp_locals_arg_value_731;
        PyObject *tmp_fromlist_value_731;
        PyObject *tmp_level_value_731;
        tmp_name_value_731 = mod_consts[2602];
        tmp_globals_arg_value_731 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_731 = Py_None;
        tmp_fromlist_value_731 = mod_consts[2603];
        tmp_level_value_731 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1513;
        tmp_assign_source_1348 = IMPORT_MODULE5(tmp_name_value_731, tmp_globals_arg_value_731, tmp_locals_arg_value_731, tmp_fromlist_value_731, tmp_level_value_731);
        if (tmp_assign_source_1348 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1513;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_210__module == NULL);
        tmp_import_from_210__module = tmp_assign_source_1348;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1349;
        PyObject *tmp_import_name_from_1135;
        CHECK_OBJECT(tmp_import_from_210__module);
        tmp_import_name_from_1135 = tmp_import_from_210__module;
        if (PyModule_Check(tmp_import_name_from_1135)) {
            tmp_assign_source_1349 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1135,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2604],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1349 = IMPORT_NAME(tmp_import_name_from_1135, mod_consts[2604]);
        }

        if (tmp_assign_source_1349 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1513;

            goto try_except_handler_210;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2604], tmp_assign_source_1349);
    }
    {
        PyObject *tmp_assign_source_1350;
        PyObject *tmp_import_name_from_1136;
        CHECK_OBJECT(tmp_import_from_210__module);
        tmp_import_name_from_1136 = tmp_import_from_210__module;
        if (PyModule_Check(tmp_import_name_from_1136)) {
            tmp_assign_source_1350 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1136,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2605],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1350 = IMPORT_NAME(tmp_import_name_from_1136, mod_consts[2605]);
        }

        if (tmp_assign_source_1350 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1513;

            goto try_except_handler_210;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2605], tmp_assign_source_1350);
    }
    {
        PyObject *tmp_assign_source_1351;
        PyObject *tmp_import_name_from_1137;
        CHECK_OBJECT(tmp_import_from_210__module);
        tmp_import_name_from_1137 = tmp_import_from_210__module;
        if (PyModule_Check(tmp_import_name_from_1137)) {
            tmp_assign_source_1351 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1137,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2606],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1351 = IMPORT_NAME(tmp_import_name_from_1137, mod_consts[2606]);
        }

        if (tmp_assign_source_1351 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1513;

            goto try_except_handler_210;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2606], tmp_assign_source_1351);
    }
    {
        PyObject *tmp_assign_source_1352;
        PyObject *tmp_import_name_from_1138;
        CHECK_OBJECT(tmp_import_from_210__module);
        tmp_import_name_from_1138 = tmp_import_from_210__module;
        if (PyModule_Check(tmp_import_name_from_1138)) {
            tmp_assign_source_1352 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1138,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2607],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1352 = IMPORT_NAME(tmp_import_name_from_1138, mod_consts[2607]);
        }

        if (tmp_assign_source_1352 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1513;

            goto try_except_handler_210;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2607], tmp_assign_source_1352);
    }
    goto try_end_210;
    // Exception handler code:
    try_except_handler_210:;
    exception_keeper_type_210 = exception_type;
    exception_keeper_value_210 = exception_value;
    exception_keeper_tb_210 = exception_tb;
    exception_keeper_lineno_210 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_210__module);
    Py_DECREF(tmp_import_from_210__module);
    tmp_import_from_210__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_210;
    exception_value = exception_keeper_value_210;
    exception_tb = exception_keeper_tb_210;
    exception_lineno = exception_keeper_lineno_210;

    goto frame_exception_exit_1;
    // End of try:
    try_end_210:;
    CHECK_OBJECT(tmp_import_from_210__module);
    Py_DECREF(tmp_import_from_210__module);
    tmp_import_from_210__module = NULL;
    {
        PyObject *tmp_assign_source_1353;
        PyObject *tmp_name_value_732;
        PyObject *tmp_globals_arg_value_732;
        PyObject *tmp_locals_arg_value_732;
        PyObject *tmp_fromlist_value_732;
        PyObject *tmp_level_value_732;
        tmp_name_value_732 = mod_consts[2608];
        tmp_globals_arg_value_732 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_732 = Py_None;
        tmp_fromlist_value_732 = mod_consts[2609];
        tmp_level_value_732 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1519;
        tmp_assign_source_1353 = IMPORT_MODULE5(tmp_name_value_732, tmp_globals_arg_value_732, tmp_locals_arg_value_732, tmp_fromlist_value_732, tmp_level_value_732);
        if (tmp_assign_source_1353 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1519;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_211__module == NULL);
        tmp_import_from_211__module = tmp_assign_source_1353;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1354;
        PyObject *tmp_import_name_from_1139;
        CHECK_OBJECT(tmp_import_from_211__module);
        tmp_import_name_from_1139 = tmp_import_from_211__module;
        if (PyModule_Check(tmp_import_name_from_1139)) {
            tmp_assign_source_1354 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1139,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2610],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1354 = IMPORT_NAME(tmp_import_name_from_1139, mod_consts[2610]);
        }

        if (tmp_assign_source_1354 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1519;

            goto try_except_handler_211;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2610], tmp_assign_source_1354);
    }
    {
        PyObject *tmp_assign_source_1355;
        PyObject *tmp_import_name_from_1140;
        CHECK_OBJECT(tmp_import_from_211__module);
        tmp_import_name_from_1140 = tmp_import_from_211__module;
        if (PyModule_Check(tmp_import_name_from_1140)) {
            tmp_assign_source_1355 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1140,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2611],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1355 = IMPORT_NAME(tmp_import_name_from_1140, mod_consts[2611]);
        }

        if (tmp_assign_source_1355 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1519;

            goto try_except_handler_211;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2611], tmp_assign_source_1355);
    }
    goto try_end_211;
    // Exception handler code:
    try_except_handler_211:;
    exception_keeper_type_211 = exception_type;
    exception_keeper_value_211 = exception_value;
    exception_keeper_tb_211 = exception_tb;
    exception_keeper_lineno_211 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_211__module);
    Py_DECREF(tmp_import_from_211__module);
    tmp_import_from_211__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_211;
    exception_value = exception_keeper_value_211;
    exception_tb = exception_keeper_tb_211;
    exception_lineno = exception_keeper_lineno_211;

    goto frame_exception_exit_1;
    // End of try:
    try_end_211:;
    CHECK_OBJECT(tmp_import_from_211__module);
    Py_DECREF(tmp_import_from_211__module);
    tmp_import_from_211__module = NULL;
    {
        PyObject *tmp_assign_source_1356;
        PyObject *tmp_name_value_733;
        PyObject *tmp_globals_arg_value_733;
        PyObject *tmp_locals_arg_value_733;
        PyObject *tmp_fromlist_value_733;
        PyObject *tmp_level_value_733;
        tmp_name_value_733 = mod_consts[2612];
        tmp_globals_arg_value_733 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_733 = Py_None;
        tmp_fromlist_value_733 = mod_consts[2613];
        tmp_level_value_733 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1523;
        tmp_assign_source_1356 = IMPORT_MODULE5(tmp_name_value_733, tmp_globals_arg_value_733, tmp_locals_arg_value_733, tmp_fromlist_value_733, tmp_level_value_733);
        if (tmp_assign_source_1356 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1523;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_212__module == NULL);
        tmp_import_from_212__module = tmp_assign_source_1356;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1357;
        PyObject *tmp_import_name_from_1141;
        CHECK_OBJECT(tmp_import_from_212__module);
        tmp_import_name_from_1141 = tmp_import_from_212__module;
        if (PyModule_Check(tmp_import_name_from_1141)) {
            tmp_assign_source_1357 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1141,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2614],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1357 = IMPORT_NAME(tmp_import_name_from_1141, mod_consts[2614]);
        }

        if (tmp_assign_source_1357 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1523;

            goto try_except_handler_212;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2614], tmp_assign_source_1357);
    }
    {
        PyObject *tmp_assign_source_1358;
        PyObject *tmp_import_name_from_1142;
        CHECK_OBJECT(tmp_import_from_212__module);
        tmp_import_name_from_1142 = tmp_import_from_212__module;
        if (PyModule_Check(tmp_import_name_from_1142)) {
            tmp_assign_source_1358 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1142,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2615],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1358 = IMPORT_NAME(tmp_import_name_from_1142, mod_consts[2615]);
        }

        if (tmp_assign_source_1358 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1523;

            goto try_except_handler_212;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2615], tmp_assign_source_1358);
    }
    goto try_end_212;
    // Exception handler code:
    try_except_handler_212:;
    exception_keeper_type_212 = exception_type;
    exception_keeper_value_212 = exception_value;
    exception_keeper_tb_212 = exception_tb;
    exception_keeper_lineno_212 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_212__module);
    Py_DECREF(tmp_import_from_212__module);
    tmp_import_from_212__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_212;
    exception_value = exception_keeper_value_212;
    exception_tb = exception_keeper_tb_212;
    exception_lineno = exception_keeper_lineno_212;

    goto frame_exception_exit_1;
    // End of try:
    try_end_212:;
    CHECK_OBJECT(tmp_import_from_212__module);
    Py_DECREF(tmp_import_from_212__module);
    tmp_import_from_212__module = NULL;
    {
        PyObject *tmp_assign_source_1359;
        PyObject *tmp_name_value_734;
        PyObject *tmp_globals_arg_value_734;
        PyObject *tmp_locals_arg_value_734;
        PyObject *tmp_fromlist_value_734;
        PyObject *tmp_level_value_734;
        tmp_name_value_734 = mod_consts[2616];
        tmp_globals_arg_value_734 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_734 = Py_None;
        tmp_fromlist_value_734 = mod_consts[2617];
        tmp_level_value_734 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1527;
        tmp_assign_source_1359 = IMPORT_MODULE5(tmp_name_value_734, tmp_globals_arg_value_734, tmp_locals_arg_value_734, tmp_fromlist_value_734, tmp_level_value_734);
        if (tmp_assign_source_1359 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1527;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_213__module == NULL);
        tmp_import_from_213__module = tmp_assign_source_1359;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1360;
        PyObject *tmp_import_name_from_1143;
        CHECK_OBJECT(tmp_import_from_213__module);
        tmp_import_name_from_1143 = tmp_import_from_213__module;
        if (PyModule_Check(tmp_import_name_from_1143)) {
            tmp_assign_source_1360 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1143,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2618],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1360 = IMPORT_NAME(tmp_import_name_from_1143, mod_consts[2618]);
        }

        if (tmp_assign_source_1360 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1527;

            goto try_except_handler_213;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2618], tmp_assign_source_1360);
    }
    {
        PyObject *tmp_assign_source_1361;
        PyObject *tmp_import_name_from_1144;
        CHECK_OBJECT(tmp_import_from_213__module);
        tmp_import_name_from_1144 = tmp_import_from_213__module;
        if (PyModule_Check(tmp_import_name_from_1144)) {
            tmp_assign_source_1361 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1144,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2619],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1361 = IMPORT_NAME(tmp_import_name_from_1144, mod_consts[2619]);
        }

        if (tmp_assign_source_1361 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1527;

            goto try_except_handler_213;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2619], tmp_assign_source_1361);
    }
    goto try_end_213;
    // Exception handler code:
    try_except_handler_213:;
    exception_keeper_type_213 = exception_type;
    exception_keeper_value_213 = exception_value;
    exception_keeper_tb_213 = exception_tb;
    exception_keeper_lineno_213 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_213__module);
    Py_DECREF(tmp_import_from_213__module);
    tmp_import_from_213__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_213;
    exception_value = exception_keeper_value_213;
    exception_tb = exception_keeper_tb_213;
    exception_lineno = exception_keeper_lineno_213;

    goto frame_exception_exit_1;
    // End of try:
    try_end_213:;
    CHECK_OBJECT(tmp_import_from_213__module);
    Py_DECREF(tmp_import_from_213__module);
    tmp_import_from_213__module = NULL;
    {
        PyObject *tmp_assign_source_1362;
        PyObject *tmp_import_name_from_1145;
        PyObject *tmp_name_value_735;
        PyObject *tmp_globals_arg_value_735;
        PyObject *tmp_locals_arg_value_735;
        PyObject *tmp_fromlist_value_735;
        PyObject *tmp_level_value_735;
        tmp_name_value_735 = mod_consts[2620];
        tmp_globals_arg_value_735 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_735 = Py_None;
        tmp_fromlist_value_735 = mod_consts[2621];
        tmp_level_value_735 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1531;
        tmp_import_name_from_1145 = IMPORT_MODULE5(tmp_name_value_735, tmp_globals_arg_value_735, tmp_locals_arg_value_735, tmp_fromlist_value_735, tmp_level_value_735);
        if (tmp_import_name_from_1145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1531;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1145)) {
            tmp_assign_source_1362 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1145,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2622],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1362 = IMPORT_NAME(tmp_import_name_from_1145, mod_consts[2622]);
        }

        Py_DECREF(tmp_import_name_from_1145);
        if (tmp_assign_source_1362 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1531;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2622], tmp_assign_source_1362);
    }
    {
        PyObject *tmp_assign_source_1363;
        PyObject *tmp_name_value_736;
        PyObject *tmp_globals_arg_value_736;
        PyObject *tmp_locals_arg_value_736;
        PyObject *tmp_fromlist_value_736;
        PyObject *tmp_level_value_736;
        tmp_name_value_736 = mod_consts[2623];
        tmp_globals_arg_value_736 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_736 = Py_None;
        tmp_fromlist_value_736 = mod_consts[2624];
        tmp_level_value_736 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1532;
        tmp_assign_source_1363 = IMPORT_MODULE5(tmp_name_value_736, tmp_globals_arg_value_736, tmp_locals_arg_value_736, tmp_fromlist_value_736, tmp_level_value_736);
        if (tmp_assign_source_1363 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1532;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_214__module == NULL);
        tmp_import_from_214__module = tmp_assign_source_1363;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1364;
        PyObject *tmp_import_name_from_1146;
        CHECK_OBJECT(tmp_import_from_214__module);
        tmp_import_name_from_1146 = tmp_import_from_214__module;
        if (PyModule_Check(tmp_import_name_from_1146)) {
            tmp_assign_source_1364 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1146,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2625],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1364 = IMPORT_NAME(tmp_import_name_from_1146, mod_consts[2625]);
        }

        if (tmp_assign_source_1364 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1532;

            goto try_except_handler_214;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2625], tmp_assign_source_1364);
    }
    {
        PyObject *tmp_assign_source_1365;
        PyObject *tmp_import_name_from_1147;
        CHECK_OBJECT(tmp_import_from_214__module);
        tmp_import_name_from_1147 = tmp_import_from_214__module;
        if (PyModule_Check(tmp_import_name_from_1147)) {
            tmp_assign_source_1365 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1147,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2626],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1365 = IMPORT_NAME(tmp_import_name_from_1147, mod_consts[2626]);
        }

        if (tmp_assign_source_1365 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1532;

            goto try_except_handler_214;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2626], tmp_assign_source_1365);
    }
    goto try_end_214;
    // Exception handler code:
    try_except_handler_214:;
    exception_keeper_type_214 = exception_type;
    exception_keeper_value_214 = exception_value;
    exception_keeper_tb_214 = exception_tb;
    exception_keeper_lineno_214 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_214__module);
    Py_DECREF(tmp_import_from_214__module);
    tmp_import_from_214__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_214;
    exception_value = exception_keeper_value_214;
    exception_tb = exception_keeper_tb_214;
    exception_lineno = exception_keeper_lineno_214;

    goto frame_exception_exit_1;
    // End of try:
    try_end_214:;
    CHECK_OBJECT(tmp_import_from_214__module);
    Py_DECREF(tmp_import_from_214__module);
    tmp_import_from_214__module = NULL;
    {
        PyObject *tmp_assign_source_1366;
        PyObject *tmp_import_name_from_1148;
        PyObject *tmp_name_value_737;
        PyObject *tmp_globals_arg_value_737;
        PyObject *tmp_locals_arg_value_737;
        PyObject *tmp_fromlist_value_737;
        PyObject *tmp_level_value_737;
        tmp_name_value_737 = mod_consts[2627];
        tmp_globals_arg_value_737 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_737 = Py_None;
        tmp_fromlist_value_737 = mod_consts[2628];
        tmp_level_value_737 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1536;
        tmp_import_name_from_1148 = IMPORT_MODULE5(tmp_name_value_737, tmp_globals_arg_value_737, tmp_locals_arg_value_737, tmp_fromlist_value_737, tmp_level_value_737);
        if (tmp_import_name_from_1148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1536;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1148)) {
            tmp_assign_source_1366 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1148,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2629],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1366 = IMPORT_NAME(tmp_import_name_from_1148, mod_consts[2629]);
        }

        Py_DECREF(tmp_import_name_from_1148);
        if (tmp_assign_source_1366 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1536;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2629], tmp_assign_source_1366);
    }
    {
        PyObject *tmp_assign_source_1367;
        PyObject *tmp_name_value_738;
        PyObject *tmp_globals_arg_value_738;
        PyObject *tmp_locals_arg_value_738;
        PyObject *tmp_fromlist_value_738;
        PyObject *tmp_level_value_738;
        tmp_name_value_738 = mod_consts[2630];
        tmp_globals_arg_value_738 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_738 = Py_None;
        tmp_fromlist_value_738 = mod_consts[2631];
        tmp_level_value_738 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1537;
        tmp_assign_source_1367 = IMPORT_MODULE5(tmp_name_value_738, tmp_globals_arg_value_738, tmp_locals_arg_value_738, tmp_fromlist_value_738, tmp_level_value_738);
        if (tmp_assign_source_1367 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1537;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_215__module == NULL);
        tmp_import_from_215__module = tmp_assign_source_1367;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1368;
        PyObject *tmp_import_name_from_1149;
        CHECK_OBJECT(tmp_import_from_215__module);
        tmp_import_name_from_1149 = tmp_import_from_215__module;
        if (PyModule_Check(tmp_import_name_from_1149)) {
            tmp_assign_source_1368 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1149,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2632],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1368 = IMPORT_NAME(tmp_import_name_from_1149, mod_consts[2632]);
        }

        if (tmp_assign_source_1368 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1537;

            goto try_except_handler_215;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2632], tmp_assign_source_1368);
    }
    {
        PyObject *tmp_assign_source_1369;
        PyObject *tmp_import_name_from_1150;
        CHECK_OBJECT(tmp_import_from_215__module);
        tmp_import_name_from_1150 = tmp_import_from_215__module;
        if (PyModule_Check(tmp_import_name_from_1150)) {
            tmp_assign_source_1369 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1150,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2633],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1369 = IMPORT_NAME(tmp_import_name_from_1150, mod_consts[2633]);
        }

        if (tmp_assign_source_1369 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1537;

            goto try_except_handler_215;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2633], tmp_assign_source_1369);
    }
    goto try_end_215;
    // Exception handler code:
    try_except_handler_215:;
    exception_keeper_type_215 = exception_type;
    exception_keeper_value_215 = exception_value;
    exception_keeper_tb_215 = exception_tb;
    exception_keeper_lineno_215 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_215__module);
    Py_DECREF(tmp_import_from_215__module);
    tmp_import_from_215__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_215;
    exception_value = exception_keeper_value_215;
    exception_tb = exception_keeper_tb_215;
    exception_lineno = exception_keeper_lineno_215;

    goto frame_exception_exit_1;
    // End of try:
    try_end_215:;
    CHECK_OBJECT(tmp_import_from_215__module);
    Py_DECREF(tmp_import_from_215__module);
    tmp_import_from_215__module = NULL;
    {
        PyObject *tmp_assign_source_1370;
        PyObject *tmp_import_name_from_1151;
        PyObject *tmp_name_value_739;
        PyObject *tmp_globals_arg_value_739;
        PyObject *tmp_locals_arg_value_739;
        PyObject *tmp_fromlist_value_739;
        PyObject *tmp_level_value_739;
        tmp_name_value_739 = mod_consts[2634];
        tmp_globals_arg_value_739 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_739 = Py_None;
        tmp_fromlist_value_739 = mod_consts[2635];
        tmp_level_value_739 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1541;
        tmp_import_name_from_1151 = IMPORT_MODULE5(tmp_name_value_739, tmp_globals_arg_value_739, tmp_locals_arg_value_739, tmp_fromlist_value_739, tmp_level_value_739);
        if (tmp_import_name_from_1151 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1541;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1151)) {
            tmp_assign_source_1370 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1151,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2636],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1370 = IMPORT_NAME(tmp_import_name_from_1151, mod_consts[2636]);
        }

        Py_DECREF(tmp_import_name_from_1151);
        if (tmp_assign_source_1370 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1541;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2636], tmp_assign_source_1370);
    }
    {
        PyObject *tmp_assign_source_1371;
        PyObject *tmp_import_name_from_1152;
        PyObject *tmp_name_value_740;
        PyObject *tmp_globals_arg_value_740;
        PyObject *tmp_locals_arg_value_740;
        PyObject *tmp_fromlist_value_740;
        PyObject *tmp_level_value_740;
        tmp_name_value_740 = mod_consts[2637];
        tmp_globals_arg_value_740 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_740 = Py_None;
        tmp_fromlist_value_740 = mod_consts[2638];
        tmp_level_value_740 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1542;
        tmp_import_name_from_1152 = IMPORT_MODULE5(tmp_name_value_740, tmp_globals_arg_value_740, tmp_locals_arg_value_740, tmp_fromlist_value_740, tmp_level_value_740);
        if (tmp_import_name_from_1152 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1542;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1152)) {
            tmp_assign_source_1371 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1152,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2639],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1371 = IMPORT_NAME(tmp_import_name_from_1152, mod_consts[2639]);
        }

        Py_DECREF(tmp_import_name_from_1152);
        if (tmp_assign_source_1371 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1542;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2639], tmp_assign_source_1371);
    }
    {
        PyObject *tmp_assign_source_1372;
        PyObject *tmp_import_name_from_1153;
        PyObject *tmp_name_value_741;
        PyObject *tmp_globals_arg_value_741;
        PyObject *tmp_locals_arg_value_741;
        PyObject *tmp_fromlist_value_741;
        PyObject *tmp_level_value_741;
        tmp_name_value_741 = mod_consts[2640];
        tmp_globals_arg_value_741 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_741 = Py_None;
        tmp_fromlist_value_741 = mod_consts[2641];
        tmp_level_value_741 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1543;
        tmp_import_name_from_1153 = IMPORT_MODULE5(tmp_name_value_741, tmp_globals_arg_value_741, tmp_locals_arg_value_741, tmp_fromlist_value_741, tmp_level_value_741);
        if (tmp_import_name_from_1153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1543;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1153)) {
            tmp_assign_source_1372 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1153,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2642],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1372 = IMPORT_NAME(tmp_import_name_from_1153, mod_consts[2642]);
        }

        Py_DECREF(tmp_import_name_from_1153);
        if (tmp_assign_source_1372 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1543;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2642], tmp_assign_source_1372);
    }
    {
        PyObject *tmp_assign_source_1373;
        PyObject *tmp_import_name_from_1154;
        PyObject *tmp_name_value_742;
        PyObject *tmp_globals_arg_value_742;
        PyObject *tmp_locals_arg_value_742;
        PyObject *tmp_fromlist_value_742;
        PyObject *tmp_level_value_742;
        tmp_name_value_742 = mod_consts[2643];
        tmp_globals_arg_value_742 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_742 = Py_None;
        tmp_fromlist_value_742 = mod_consts[2644];
        tmp_level_value_742 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1544;
        tmp_import_name_from_1154 = IMPORT_MODULE5(tmp_name_value_742, tmp_globals_arg_value_742, tmp_locals_arg_value_742, tmp_fromlist_value_742, tmp_level_value_742);
        if (tmp_import_name_from_1154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1544;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1154)) {
            tmp_assign_source_1373 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1154,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2645],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1373 = IMPORT_NAME(tmp_import_name_from_1154, mod_consts[2645]);
        }

        Py_DECREF(tmp_import_name_from_1154);
        if (tmp_assign_source_1373 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1544;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2645], tmp_assign_source_1373);
    }
    {
        PyObject *tmp_assign_source_1374;
        PyObject *tmp_name_value_743;
        PyObject *tmp_globals_arg_value_743;
        PyObject *tmp_locals_arg_value_743;
        PyObject *tmp_fromlist_value_743;
        PyObject *tmp_level_value_743;
        tmp_name_value_743 = mod_consts[2646];
        tmp_globals_arg_value_743 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_743 = Py_None;
        tmp_fromlist_value_743 = mod_consts[2647];
        tmp_level_value_743 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1545;
        tmp_assign_source_1374 = IMPORT_MODULE5(tmp_name_value_743, tmp_globals_arg_value_743, tmp_locals_arg_value_743, tmp_fromlist_value_743, tmp_level_value_743);
        if (tmp_assign_source_1374 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1545;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_216__module == NULL);
        tmp_import_from_216__module = tmp_assign_source_1374;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1375;
        PyObject *tmp_import_name_from_1155;
        CHECK_OBJECT(tmp_import_from_216__module);
        tmp_import_name_from_1155 = tmp_import_from_216__module;
        if (PyModule_Check(tmp_import_name_from_1155)) {
            tmp_assign_source_1375 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1155,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2648],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1375 = IMPORT_NAME(tmp_import_name_from_1155, mod_consts[2648]);
        }

        if (tmp_assign_source_1375 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1545;

            goto try_except_handler_216;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2648], tmp_assign_source_1375);
    }
    {
        PyObject *tmp_assign_source_1376;
        PyObject *tmp_import_name_from_1156;
        CHECK_OBJECT(tmp_import_from_216__module);
        tmp_import_name_from_1156 = tmp_import_from_216__module;
        if (PyModule_Check(tmp_import_name_from_1156)) {
            tmp_assign_source_1376 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1156,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2649],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1376 = IMPORT_NAME(tmp_import_name_from_1156, mod_consts[2649]);
        }

        if (tmp_assign_source_1376 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1545;

            goto try_except_handler_216;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2649], tmp_assign_source_1376);
    }
    {
        PyObject *tmp_assign_source_1377;
        PyObject *tmp_import_name_from_1157;
        CHECK_OBJECT(tmp_import_from_216__module);
        tmp_import_name_from_1157 = tmp_import_from_216__module;
        if (PyModule_Check(tmp_import_name_from_1157)) {
            tmp_assign_source_1377 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1157,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2650],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1377 = IMPORT_NAME(tmp_import_name_from_1157, mod_consts[2650]);
        }

        if (tmp_assign_source_1377 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1545;

            goto try_except_handler_216;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2650], tmp_assign_source_1377);
    }
    goto try_end_216;
    // Exception handler code:
    try_except_handler_216:;
    exception_keeper_type_216 = exception_type;
    exception_keeper_value_216 = exception_value;
    exception_keeper_tb_216 = exception_tb;
    exception_keeper_lineno_216 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_216__module);
    Py_DECREF(tmp_import_from_216__module);
    tmp_import_from_216__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_216;
    exception_value = exception_keeper_value_216;
    exception_tb = exception_keeper_tb_216;
    exception_lineno = exception_keeper_lineno_216;

    goto frame_exception_exit_1;
    // End of try:
    try_end_216:;
    CHECK_OBJECT(tmp_import_from_216__module);
    Py_DECREF(tmp_import_from_216__module);
    tmp_import_from_216__module = NULL;
    {
        PyObject *tmp_assign_source_1378;
        PyObject *tmp_name_value_744;
        PyObject *tmp_globals_arg_value_744;
        PyObject *tmp_locals_arg_value_744;
        PyObject *tmp_fromlist_value_744;
        PyObject *tmp_level_value_744;
        tmp_name_value_744 = mod_consts[2651];
        tmp_globals_arg_value_744 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_744 = Py_None;
        tmp_fromlist_value_744 = mod_consts[2652];
        tmp_level_value_744 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1550;
        tmp_assign_source_1378 = IMPORT_MODULE5(tmp_name_value_744, tmp_globals_arg_value_744, tmp_locals_arg_value_744, tmp_fromlist_value_744, tmp_level_value_744);
        if (tmp_assign_source_1378 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1550;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_217__module == NULL);
        tmp_import_from_217__module = tmp_assign_source_1378;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1379;
        PyObject *tmp_import_name_from_1158;
        CHECK_OBJECT(tmp_import_from_217__module);
        tmp_import_name_from_1158 = tmp_import_from_217__module;
        if (PyModule_Check(tmp_import_name_from_1158)) {
            tmp_assign_source_1379 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1158,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2653],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1379 = IMPORT_NAME(tmp_import_name_from_1158, mod_consts[2653]);
        }

        if (tmp_assign_source_1379 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1550;

            goto try_except_handler_217;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2653], tmp_assign_source_1379);
    }
    {
        PyObject *tmp_assign_source_1380;
        PyObject *tmp_import_name_from_1159;
        CHECK_OBJECT(tmp_import_from_217__module);
        tmp_import_name_from_1159 = tmp_import_from_217__module;
        if (PyModule_Check(tmp_import_name_from_1159)) {
            tmp_assign_source_1380 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1159,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2654],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1380 = IMPORT_NAME(tmp_import_name_from_1159, mod_consts[2654]);
        }

        if (tmp_assign_source_1380 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1550;

            goto try_except_handler_217;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2654], tmp_assign_source_1380);
    }
    {
        PyObject *tmp_assign_source_1381;
        PyObject *tmp_import_name_from_1160;
        CHECK_OBJECT(tmp_import_from_217__module);
        tmp_import_name_from_1160 = tmp_import_from_217__module;
        if (PyModule_Check(tmp_import_name_from_1160)) {
            tmp_assign_source_1381 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1160,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2655],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1381 = IMPORT_NAME(tmp_import_name_from_1160, mod_consts[2655]);
        }

        if (tmp_assign_source_1381 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1550;

            goto try_except_handler_217;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2655], tmp_assign_source_1381);
    }
    {
        PyObject *tmp_assign_source_1382;
        PyObject *tmp_import_name_from_1161;
        CHECK_OBJECT(tmp_import_from_217__module);
        tmp_import_name_from_1161 = tmp_import_from_217__module;
        if (PyModule_Check(tmp_import_name_from_1161)) {
            tmp_assign_source_1382 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1161,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2656],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1382 = IMPORT_NAME(tmp_import_name_from_1161, mod_consts[2656]);
        }

        if (tmp_assign_source_1382 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1550;

            goto try_except_handler_217;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2656], tmp_assign_source_1382);
    }
    goto try_end_217;
    // Exception handler code:
    try_except_handler_217:;
    exception_keeper_type_217 = exception_type;
    exception_keeper_value_217 = exception_value;
    exception_keeper_tb_217 = exception_tb;
    exception_keeper_lineno_217 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_217__module);
    Py_DECREF(tmp_import_from_217__module);
    tmp_import_from_217__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_217;
    exception_value = exception_keeper_value_217;
    exception_tb = exception_keeper_tb_217;
    exception_lineno = exception_keeper_lineno_217;

    goto frame_exception_exit_1;
    // End of try:
    try_end_217:;
    CHECK_OBJECT(tmp_import_from_217__module);
    Py_DECREF(tmp_import_from_217__module);
    tmp_import_from_217__module = NULL;
    {
        PyObject *tmp_assign_source_1383;
        PyObject *tmp_name_value_745;
        PyObject *tmp_globals_arg_value_745;
        PyObject *tmp_locals_arg_value_745;
        PyObject *tmp_fromlist_value_745;
        PyObject *tmp_level_value_745;
        tmp_name_value_745 = mod_consts[2657];
        tmp_globals_arg_value_745 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_745 = Py_None;
        tmp_fromlist_value_745 = mod_consts[2658];
        tmp_level_value_745 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1556;
        tmp_assign_source_1383 = IMPORT_MODULE5(tmp_name_value_745, tmp_globals_arg_value_745, tmp_locals_arg_value_745, tmp_fromlist_value_745, tmp_level_value_745);
        if (tmp_assign_source_1383 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1556;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_218__module == NULL);
        tmp_import_from_218__module = tmp_assign_source_1383;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1384;
        PyObject *tmp_import_name_from_1162;
        CHECK_OBJECT(tmp_import_from_218__module);
        tmp_import_name_from_1162 = tmp_import_from_218__module;
        if (PyModule_Check(tmp_import_name_from_1162)) {
            tmp_assign_source_1384 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1162,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2659],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1384 = IMPORT_NAME(tmp_import_name_from_1162, mod_consts[2659]);
        }

        if (tmp_assign_source_1384 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1556;

            goto try_except_handler_218;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2659], tmp_assign_source_1384);
    }
    {
        PyObject *tmp_assign_source_1385;
        PyObject *tmp_import_name_from_1163;
        CHECK_OBJECT(tmp_import_from_218__module);
        tmp_import_name_from_1163 = tmp_import_from_218__module;
        if (PyModule_Check(tmp_import_name_from_1163)) {
            tmp_assign_source_1385 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1163,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2660],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1385 = IMPORT_NAME(tmp_import_name_from_1163, mod_consts[2660]);
        }

        if (tmp_assign_source_1385 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1556;

            goto try_except_handler_218;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2660], tmp_assign_source_1385);
    }
    goto try_end_218;
    // Exception handler code:
    try_except_handler_218:;
    exception_keeper_type_218 = exception_type;
    exception_keeper_value_218 = exception_value;
    exception_keeper_tb_218 = exception_tb;
    exception_keeper_lineno_218 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_218__module);
    Py_DECREF(tmp_import_from_218__module);
    tmp_import_from_218__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_218;
    exception_value = exception_keeper_value_218;
    exception_tb = exception_keeper_tb_218;
    exception_lineno = exception_keeper_lineno_218;

    goto frame_exception_exit_1;
    // End of try:
    try_end_218:;
    CHECK_OBJECT(tmp_import_from_218__module);
    Py_DECREF(tmp_import_from_218__module);
    tmp_import_from_218__module = NULL;
    {
        PyObject *tmp_assign_source_1386;
        PyObject *tmp_import_name_from_1164;
        PyObject *tmp_name_value_746;
        PyObject *tmp_globals_arg_value_746;
        PyObject *tmp_locals_arg_value_746;
        PyObject *tmp_fromlist_value_746;
        PyObject *tmp_level_value_746;
        tmp_name_value_746 = mod_consts[2661];
        tmp_globals_arg_value_746 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_746 = Py_None;
        tmp_fromlist_value_746 = mod_consts[2662];
        tmp_level_value_746 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1560;
        tmp_import_name_from_1164 = IMPORT_MODULE5(tmp_name_value_746, tmp_globals_arg_value_746, tmp_locals_arg_value_746, tmp_fromlist_value_746, tmp_level_value_746);
        if (tmp_import_name_from_1164 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1560;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1164)) {
            tmp_assign_source_1386 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1164,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2663],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1386 = IMPORT_NAME(tmp_import_name_from_1164, mod_consts[2663]);
        }

        Py_DECREF(tmp_import_name_from_1164);
        if (tmp_assign_source_1386 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1560;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2663], tmp_assign_source_1386);
    }
    {
        PyObject *tmp_assign_source_1387;
        PyObject *tmp_import_name_from_1165;
        PyObject *tmp_name_value_747;
        PyObject *tmp_globals_arg_value_747;
        PyObject *tmp_locals_arg_value_747;
        PyObject *tmp_fromlist_value_747;
        PyObject *tmp_level_value_747;
        tmp_name_value_747 = mod_consts[2664];
        tmp_globals_arg_value_747 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_747 = Py_None;
        tmp_fromlist_value_747 = mod_consts[2665];
        tmp_level_value_747 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1561;
        tmp_import_name_from_1165 = IMPORT_MODULE5(tmp_name_value_747, tmp_globals_arg_value_747, tmp_locals_arg_value_747, tmp_fromlist_value_747, tmp_level_value_747);
        if (tmp_import_name_from_1165 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1561;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1165)) {
            tmp_assign_source_1387 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1165,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2666],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1387 = IMPORT_NAME(tmp_import_name_from_1165, mod_consts[2666]);
        }

        Py_DECREF(tmp_import_name_from_1165);
        if (tmp_assign_source_1387 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1561;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2666], tmp_assign_source_1387);
    }
    {
        PyObject *tmp_assign_source_1388;
        PyObject *tmp_import_name_from_1166;
        PyObject *tmp_name_value_748;
        PyObject *tmp_globals_arg_value_748;
        PyObject *tmp_locals_arg_value_748;
        PyObject *tmp_fromlist_value_748;
        PyObject *tmp_level_value_748;
        tmp_name_value_748 = mod_consts[2667];
        tmp_globals_arg_value_748 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_748 = Py_None;
        tmp_fromlist_value_748 = mod_consts[2668];
        tmp_level_value_748 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1562;
        tmp_import_name_from_1166 = IMPORT_MODULE5(tmp_name_value_748, tmp_globals_arg_value_748, tmp_locals_arg_value_748, tmp_fromlist_value_748, tmp_level_value_748);
        if (tmp_import_name_from_1166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1562;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1166)) {
            tmp_assign_source_1388 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1166,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2669],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1388 = IMPORT_NAME(tmp_import_name_from_1166, mod_consts[2669]);
        }

        Py_DECREF(tmp_import_name_from_1166);
        if (tmp_assign_source_1388 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1562;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2669], tmp_assign_source_1388);
    }
    {
        PyObject *tmp_assign_source_1389;
        PyObject *tmp_name_value_749;
        PyObject *tmp_globals_arg_value_749;
        PyObject *tmp_locals_arg_value_749;
        PyObject *tmp_fromlist_value_749;
        PyObject *tmp_level_value_749;
        tmp_name_value_749 = mod_consts[2670];
        tmp_globals_arg_value_749 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_749 = Py_None;
        tmp_fromlist_value_749 = mod_consts[2671];
        tmp_level_value_749 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1563;
        tmp_assign_source_1389 = IMPORT_MODULE5(tmp_name_value_749, tmp_globals_arg_value_749, tmp_locals_arg_value_749, tmp_fromlist_value_749, tmp_level_value_749);
        if (tmp_assign_source_1389 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1563;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_219__module == NULL);
        tmp_import_from_219__module = tmp_assign_source_1389;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1390;
        PyObject *tmp_import_name_from_1167;
        CHECK_OBJECT(tmp_import_from_219__module);
        tmp_import_name_from_1167 = tmp_import_from_219__module;
        if (PyModule_Check(tmp_import_name_from_1167)) {
            tmp_assign_source_1390 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1167,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2672],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1390 = IMPORT_NAME(tmp_import_name_from_1167, mod_consts[2672]);
        }

        if (tmp_assign_source_1390 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1563;

            goto try_except_handler_219;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2672], tmp_assign_source_1390);
    }
    {
        PyObject *tmp_assign_source_1391;
        PyObject *tmp_import_name_from_1168;
        CHECK_OBJECT(tmp_import_from_219__module);
        tmp_import_name_from_1168 = tmp_import_from_219__module;
        if (PyModule_Check(tmp_import_name_from_1168)) {
            tmp_assign_source_1391 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1168,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2673],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1391 = IMPORT_NAME(tmp_import_name_from_1168, mod_consts[2673]);
        }

        if (tmp_assign_source_1391 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1563;

            goto try_except_handler_219;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2673], tmp_assign_source_1391);
    }
    goto try_end_219;
    // Exception handler code:
    try_except_handler_219:;
    exception_keeper_type_219 = exception_type;
    exception_keeper_value_219 = exception_value;
    exception_keeper_tb_219 = exception_tb;
    exception_keeper_lineno_219 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_219__module);
    Py_DECREF(tmp_import_from_219__module);
    tmp_import_from_219__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_219;
    exception_value = exception_keeper_value_219;
    exception_tb = exception_keeper_tb_219;
    exception_lineno = exception_keeper_lineno_219;

    goto frame_exception_exit_1;
    // End of try:
    try_end_219:;
    CHECK_OBJECT(tmp_import_from_219__module);
    Py_DECREF(tmp_import_from_219__module);
    tmp_import_from_219__module = NULL;
    {
        PyObject *tmp_assign_source_1392;
        PyObject *tmp_import_name_from_1169;
        PyObject *tmp_name_value_750;
        PyObject *tmp_globals_arg_value_750;
        PyObject *tmp_locals_arg_value_750;
        PyObject *tmp_fromlist_value_750;
        PyObject *tmp_level_value_750;
        tmp_name_value_750 = mod_consts[2674];
        tmp_globals_arg_value_750 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_750 = Py_None;
        tmp_fromlist_value_750 = mod_consts[2675];
        tmp_level_value_750 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1564;
        tmp_import_name_from_1169 = IMPORT_MODULE5(tmp_name_value_750, tmp_globals_arg_value_750, tmp_locals_arg_value_750, tmp_fromlist_value_750, tmp_level_value_750);
        if (tmp_import_name_from_1169 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1564;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1169)) {
            tmp_assign_source_1392 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1169,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2676],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1392 = IMPORT_NAME(tmp_import_name_from_1169, mod_consts[2676]);
        }

        Py_DECREF(tmp_import_name_from_1169);
        if (tmp_assign_source_1392 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1564;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2676], tmp_assign_source_1392);
    }
    {
        PyObject *tmp_assign_source_1393;
        PyObject *tmp_import_name_from_1170;
        PyObject *tmp_name_value_751;
        PyObject *tmp_globals_arg_value_751;
        PyObject *tmp_locals_arg_value_751;
        PyObject *tmp_fromlist_value_751;
        PyObject *tmp_level_value_751;
        tmp_name_value_751 = mod_consts[2677];
        tmp_globals_arg_value_751 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_751 = Py_None;
        tmp_fromlist_value_751 = mod_consts[2678];
        tmp_level_value_751 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1565;
        tmp_import_name_from_1170 = IMPORT_MODULE5(tmp_name_value_751, tmp_globals_arg_value_751, tmp_locals_arg_value_751, tmp_fromlist_value_751, tmp_level_value_751);
        if (tmp_import_name_from_1170 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1565;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1170)) {
            tmp_assign_source_1393 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1170,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2679],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1393 = IMPORT_NAME(tmp_import_name_from_1170, mod_consts[2679]);
        }

        Py_DECREF(tmp_import_name_from_1170);
        if (tmp_assign_source_1393 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1565;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2679], tmp_assign_source_1393);
    }
    {
        PyObject *tmp_assign_source_1394;
        PyObject *tmp_import_name_from_1171;
        PyObject *tmp_name_value_752;
        PyObject *tmp_globals_arg_value_752;
        PyObject *tmp_locals_arg_value_752;
        PyObject *tmp_fromlist_value_752;
        PyObject *tmp_level_value_752;
        tmp_name_value_752 = mod_consts[2680];
        tmp_globals_arg_value_752 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_752 = Py_None;
        tmp_fromlist_value_752 = mod_consts[2681];
        tmp_level_value_752 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1566;
        tmp_import_name_from_1171 = IMPORT_MODULE5(tmp_name_value_752, tmp_globals_arg_value_752, tmp_locals_arg_value_752, tmp_fromlist_value_752, tmp_level_value_752);
        if (tmp_import_name_from_1171 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1566;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1171)) {
            tmp_assign_source_1394 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1171,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2682],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1394 = IMPORT_NAME(tmp_import_name_from_1171, mod_consts[2682]);
        }

        Py_DECREF(tmp_import_name_from_1171);
        if (tmp_assign_source_1394 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1566;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2682], tmp_assign_source_1394);
    }
    {
        PyObject *tmp_assign_source_1395;
        PyObject *tmp_name_value_753;
        PyObject *tmp_globals_arg_value_753;
        PyObject *tmp_locals_arg_value_753;
        PyObject *tmp_fromlist_value_753;
        PyObject *tmp_level_value_753;
        tmp_name_value_753 = mod_consts[2683];
        tmp_globals_arg_value_753 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_753 = Py_None;
        tmp_fromlist_value_753 = mod_consts[2684];
        tmp_level_value_753 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1567;
        tmp_assign_source_1395 = IMPORT_MODULE5(tmp_name_value_753, tmp_globals_arg_value_753, tmp_locals_arg_value_753, tmp_fromlist_value_753, tmp_level_value_753);
        if (tmp_assign_source_1395 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1567;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_220__module == NULL);
        tmp_import_from_220__module = tmp_assign_source_1395;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1396;
        PyObject *tmp_import_name_from_1172;
        CHECK_OBJECT(tmp_import_from_220__module);
        tmp_import_name_from_1172 = tmp_import_from_220__module;
        if (PyModule_Check(tmp_import_name_from_1172)) {
            tmp_assign_source_1396 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1172,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2685],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1396 = IMPORT_NAME(tmp_import_name_from_1172, mod_consts[2685]);
        }

        if (tmp_assign_source_1396 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1567;

            goto try_except_handler_220;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2685], tmp_assign_source_1396);
    }
    {
        PyObject *tmp_assign_source_1397;
        PyObject *tmp_import_name_from_1173;
        CHECK_OBJECT(tmp_import_from_220__module);
        tmp_import_name_from_1173 = tmp_import_from_220__module;
        if (PyModule_Check(tmp_import_name_from_1173)) {
            tmp_assign_source_1397 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1173,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2686],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1397 = IMPORT_NAME(tmp_import_name_from_1173, mod_consts[2686]);
        }

        if (tmp_assign_source_1397 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1567;

            goto try_except_handler_220;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2686], tmp_assign_source_1397);
    }
    {
        PyObject *tmp_assign_source_1398;
        PyObject *tmp_import_name_from_1174;
        CHECK_OBJECT(tmp_import_from_220__module);
        tmp_import_name_from_1174 = tmp_import_from_220__module;
        if (PyModule_Check(tmp_import_name_from_1174)) {
            tmp_assign_source_1398 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1174,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2687],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1398 = IMPORT_NAME(tmp_import_name_from_1174, mod_consts[2687]);
        }

        if (tmp_assign_source_1398 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1567;

            goto try_except_handler_220;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2687], tmp_assign_source_1398);
    }
    {
        PyObject *tmp_assign_source_1399;
        PyObject *tmp_import_name_from_1175;
        CHECK_OBJECT(tmp_import_from_220__module);
        tmp_import_name_from_1175 = tmp_import_from_220__module;
        if (PyModule_Check(tmp_import_name_from_1175)) {
            tmp_assign_source_1399 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1175,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2688],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1399 = IMPORT_NAME(tmp_import_name_from_1175, mod_consts[2688]);
        }

        if (tmp_assign_source_1399 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1567;

            goto try_except_handler_220;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2688], tmp_assign_source_1399);
    }
    {
        PyObject *tmp_assign_source_1400;
        PyObject *tmp_import_name_from_1176;
        CHECK_OBJECT(tmp_import_from_220__module);
        tmp_import_name_from_1176 = tmp_import_from_220__module;
        if (PyModule_Check(tmp_import_name_from_1176)) {
            tmp_assign_source_1400 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1176,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2689],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1400 = IMPORT_NAME(tmp_import_name_from_1176, mod_consts[2689]);
        }

        if (tmp_assign_source_1400 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1567;

            goto try_except_handler_220;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2689], tmp_assign_source_1400);
    }
    goto try_end_220;
    // Exception handler code:
    try_except_handler_220:;
    exception_keeper_type_220 = exception_type;
    exception_keeper_value_220 = exception_value;
    exception_keeper_tb_220 = exception_tb;
    exception_keeper_lineno_220 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_220__module);
    Py_DECREF(tmp_import_from_220__module);
    tmp_import_from_220__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_220;
    exception_value = exception_keeper_value_220;
    exception_tb = exception_keeper_tb_220;
    exception_lineno = exception_keeper_lineno_220;

    goto frame_exception_exit_1;
    // End of try:
    try_end_220:;
    CHECK_OBJECT(tmp_import_from_220__module);
    Py_DECREF(tmp_import_from_220__module);
    tmp_import_from_220__module = NULL;
    {
        PyObject *tmp_assign_source_1401;
        PyObject *tmp_import_name_from_1177;
        PyObject *tmp_name_value_754;
        PyObject *tmp_globals_arg_value_754;
        PyObject *tmp_locals_arg_value_754;
        PyObject *tmp_fromlist_value_754;
        PyObject *tmp_level_value_754;
        tmp_name_value_754 = mod_consts[2690];
        tmp_globals_arg_value_754 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_754 = Py_None;
        tmp_fromlist_value_754 = mod_consts[2691];
        tmp_level_value_754 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1574;
        tmp_import_name_from_1177 = IMPORT_MODULE5(tmp_name_value_754, tmp_globals_arg_value_754, tmp_locals_arg_value_754, tmp_fromlist_value_754, tmp_level_value_754);
        if (tmp_import_name_from_1177 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1574;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1177)) {
            tmp_assign_source_1401 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1177,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2692],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1401 = IMPORT_NAME(tmp_import_name_from_1177, mod_consts[2692]);
        }

        Py_DECREF(tmp_import_name_from_1177);
        if (tmp_assign_source_1401 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1574;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2692], tmp_assign_source_1401);
    }
    {
        PyObject *tmp_assign_source_1402;
        PyObject *tmp_name_value_755;
        PyObject *tmp_globals_arg_value_755;
        PyObject *tmp_locals_arg_value_755;
        PyObject *tmp_fromlist_value_755;
        PyObject *tmp_level_value_755;
        tmp_name_value_755 = mod_consts[2693];
        tmp_globals_arg_value_755 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_755 = Py_None;
        tmp_fromlist_value_755 = mod_consts[2694];
        tmp_level_value_755 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1575;
        tmp_assign_source_1402 = IMPORT_MODULE5(tmp_name_value_755, tmp_globals_arg_value_755, tmp_locals_arg_value_755, tmp_fromlist_value_755, tmp_level_value_755);
        if (tmp_assign_source_1402 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1575;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_221__module == NULL);
        tmp_import_from_221__module = tmp_assign_source_1402;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1403;
        PyObject *tmp_import_name_from_1178;
        CHECK_OBJECT(tmp_import_from_221__module);
        tmp_import_name_from_1178 = tmp_import_from_221__module;
        if (PyModule_Check(tmp_import_name_from_1178)) {
            tmp_assign_source_1403 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1178,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2695],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1403 = IMPORT_NAME(tmp_import_name_from_1178, mod_consts[2695]);
        }

        if (tmp_assign_source_1403 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1575;

            goto try_except_handler_221;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2695], tmp_assign_source_1403);
    }
    {
        PyObject *tmp_assign_source_1404;
        PyObject *tmp_import_name_from_1179;
        CHECK_OBJECT(tmp_import_from_221__module);
        tmp_import_name_from_1179 = tmp_import_from_221__module;
        if (PyModule_Check(tmp_import_name_from_1179)) {
            tmp_assign_source_1404 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1179,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2696],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1404 = IMPORT_NAME(tmp_import_name_from_1179, mod_consts[2696]);
        }

        if (tmp_assign_source_1404 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1575;

            goto try_except_handler_221;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2696], tmp_assign_source_1404);
    }
    {
        PyObject *tmp_assign_source_1405;
        PyObject *tmp_import_name_from_1180;
        CHECK_OBJECT(tmp_import_from_221__module);
        tmp_import_name_from_1180 = tmp_import_from_221__module;
        if (PyModule_Check(tmp_import_name_from_1180)) {
            tmp_assign_source_1405 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1180,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2697],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1405 = IMPORT_NAME(tmp_import_name_from_1180, mod_consts[2697]);
        }

        if (tmp_assign_source_1405 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1575;

            goto try_except_handler_221;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2697], tmp_assign_source_1405);
    }
    {
        PyObject *tmp_assign_source_1406;
        PyObject *tmp_import_name_from_1181;
        CHECK_OBJECT(tmp_import_from_221__module);
        tmp_import_name_from_1181 = tmp_import_from_221__module;
        if (PyModule_Check(tmp_import_name_from_1181)) {
            tmp_assign_source_1406 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1181,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2698],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1406 = IMPORT_NAME(tmp_import_name_from_1181, mod_consts[2698]);
        }

        if (tmp_assign_source_1406 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1575;

            goto try_except_handler_221;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2698], tmp_assign_source_1406);
    }
    {
        PyObject *tmp_assign_source_1407;
        PyObject *tmp_import_name_from_1182;
        CHECK_OBJECT(tmp_import_from_221__module);
        tmp_import_name_from_1182 = tmp_import_from_221__module;
        if (PyModule_Check(tmp_import_name_from_1182)) {
            tmp_assign_source_1407 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1182,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2699],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1407 = IMPORT_NAME(tmp_import_name_from_1182, mod_consts[2699]);
        }

        if (tmp_assign_source_1407 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1575;

            goto try_except_handler_221;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2699], tmp_assign_source_1407);
    }
    goto try_end_221;
    // Exception handler code:
    try_except_handler_221:;
    exception_keeper_type_221 = exception_type;
    exception_keeper_value_221 = exception_value;
    exception_keeper_tb_221 = exception_tb;
    exception_keeper_lineno_221 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_221__module);
    Py_DECREF(tmp_import_from_221__module);
    tmp_import_from_221__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_221;
    exception_value = exception_keeper_value_221;
    exception_tb = exception_keeper_tb_221;
    exception_lineno = exception_keeper_lineno_221;

    goto frame_exception_exit_1;
    // End of try:
    try_end_221:;
    CHECK_OBJECT(tmp_import_from_221__module);
    Py_DECREF(tmp_import_from_221__module);
    tmp_import_from_221__module = NULL;
    {
        PyObject *tmp_assign_source_1408;
        PyObject *tmp_import_name_from_1183;
        PyObject *tmp_name_value_756;
        PyObject *tmp_globals_arg_value_756;
        PyObject *tmp_locals_arg_value_756;
        PyObject *tmp_fromlist_value_756;
        PyObject *tmp_level_value_756;
        tmp_name_value_756 = mod_consts[2700];
        tmp_globals_arg_value_756 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_756 = Py_None;
        tmp_fromlist_value_756 = mod_consts[2701];
        tmp_level_value_756 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1582;
        tmp_import_name_from_1183 = IMPORT_MODULE5(tmp_name_value_756, tmp_globals_arg_value_756, tmp_locals_arg_value_756, tmp_fromlist_value_756, tmp_level_value_756);
        if (tmp_import_name_from_1183 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1582;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1183)) {
            tmp_assign_source_1408 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1183,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2702],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1408 = IMPORT_NAME(tmp_import_name_from_1183, mod_consts[2702]);
        }

        Py_DECREF(tmp_import_name_from_1183);
        if (tmp_assign_source_1408 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1582;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2702], tmp_assign_source_1408);
    }
    {
        PyObject *tmp_assign_source_1409;
        PyObject *tmp_import_name_from_1184;
        PyObject *tmp_name_value_757;
        PyObject *tmp_globals_arg_value_757;
        PyObject *tmp_locals_arg_value_757;
        PyObject *tmp_fromlist_value_757;
        PyObject *tmp_level_value_757;
        tmp_name_value_757 = mod_consts[2703];
        tmp_globals_arg_value_757 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_757 = Py_None;
        tmp_fromlist_value_757 = mod_consts[2704];
        tmp_level_value_757 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1583;
        tmp_import_name_from_1184 = IMPORT_MODULE5(tmp_name_value_757, tmp_globals_arg_value_757, tmp_locals_arg_value_757, tmp_fromlist_value_757, tmp_level_value_757);
        if (tmp_import_name_from_1184 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1583;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1184)) {
            tmp_assign_source_1409 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1184,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2705],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1409 = IMPORT_NAME(tmp_import_name_from_1184, mod_consts[2705]);
        }

        Py_DECREF(tmp_import_name_from_1184);
        if (tmp_assign_source_1409 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1583;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2705], tmp_assign_source_1409);
    }
    {
        PyObject *tmp_assign_source_1410;
        PyObject *tmp_import_name_from_1185;
        PyObject *tmp_name_value_758;
        PyObject *tmp_globals_arg_value_758;
        PyObject *tmp_locals_arg_value_758;
        PyObject *tmp_fromlist_value_758;
        PyObject *tmp_level_value_758;
        tmp_name_value_758 = mod_consts[2706];
        tmp_globals_arg_value_758 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_758 = Py_None;
        tmp_fromlist_value_758 = mod_consts[2707];
        tmp_level_value_758 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1584;
        tmp_import_name_from_1185 = IMPORT_MODULE5(tmp_name_value_758, tmp_globals_arg_value_758, tmp_locals_arg_value_758, tmp_fromlist_value_758, tmp_level_value_758);
        if (tmp_import_name_from_1185 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1584;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1185)) {
            tmp_assign_source_1410 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1185,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2708],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1410 = IMPORT_NAME(tmp_import_name_from_1185, mod_consts[2708]);
        }

        Py_DECREF(tmp_import_name_from_1185);
        if (tmp_assign_source_1410 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1584;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2708], tmp_assign_source_1410);
    }
    {
        PyObject *tmp_assign_source_1411;
        PyObject *tmp_import_name_from_1186;
        PyObject *tmp_name_value_759;
        PyObject *tmp_globals_arg_value_759;
        PyObject *tmp_locals_arg_value_759;
        PyObject *tmp_fromlist_value_759;
        PyObject *tmp_level_value_759;
        tmp_name_value_759 = mod_consts[2709];
        tmp_globals_arg_value_759 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_759 = Py_None;
        tmp_fromlist_value_759 = mod_consts[2710];
        tmp_level_value_759 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1585;
        tmp_import_name_from_1186 = IMPORT_MODULE5(tmp_name_value_759, tmp_globals_arg_value_759, tmp_locals_arg_value_759, tmp_fromlist_value_759, tmp_level_value_759);
        if (tmp_import_name_from_1186 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1585;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1186)) {
            tmp_assign_source_1411 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1186,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2711],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1411 = IMPORT_NAME(tmp_import_name_from_1186, mod_consts[2711]);
        }

        Py_DECREF(tmp_import_name_from_1186);
        if (tmp_assign_source_1411 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1585;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2711], tmp_assign_source_1411);
    }
    {
        PyObject *tmp_assign_source_1412;
        PyObject *tmp_import_name_from_1187;
        PyObject *tmp_name_value_760;
        PyObject *tmp_globals_arg_value_760;
        PyObject *tmp_locals_arg_value_760;
        PyObject *tmp_fromlist_value_760;
        PyObject *tmp_level_value_760;
        tmp_name_value_760 = mod_consts[2712];
        tmp_globals_arg_value_760 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_760 = Py_None;
        tmp_fromlist_value_760 = mod_consts[2713];
        tmp_level_value_760 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1586;
        tmp_import_name_from_1187 = IMPORT_MODULE5(tmp_name_value_760, tmp_globals_arg_value_760, tmp_locals_arg_value_760, tmp_fromlist_value_760, tmp_level_value_760);
        if (tmp_import_name_from_1187 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1586;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1187)) {
            tmp_assign_source_1412 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1187,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2714],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1412 = IMPORT_NAME(tmp_import_name_from_1187, mod_consts[2714]);
        }

        Py_DECREF(tmp_import_name_from_1187);
        if (tmp_assign_source_1412 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1586;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2714], tmp_assign_source_1412);
    }
    {
        PyObject *tmp_assign_source_1413;
        PyObject *tmp_import_name_from_1188;
        PyObject *tmp_name_value_761;
        PyObject *tmp_globals_arg_value_761;
        PyObject *tmp_locals_arg_value_761;
        PyObject *tmp_fromlist_value_761;
        PyObject *tmp_level_value_761;
        tmp_name_value_761 = mod_consts[2715];
        tmp_globals_arg_value_761 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_761 = Py_None;
        tmp_fromlist_value_761 = mod_consts[2716];
        tmp_level_value_761 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1587;
        tmp_import_name_from_1188 = IMPORT_MODULE5(tmp_name_value_761, tmp_globals_arg_value_761, tmp_locals_arg_value_761, tmp_fromlist_value_761, tmp_level_value_761);
        if (tmp_import_name_from_1188 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1587;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1188)) {
            tmp_assign_source_1413 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1188,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2717],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1413 = IMPORT_NAME(tmp_import_name_from_1188, mod_consts[2717]);
        }

        Py_DECREF(tmp_import_name_from_1188);
        if (tmp_assign_source_1413 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1587;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2717], tmp_assign_source_1413);
    }
    {
        PyObject *tmp_assign_source_1414;
        PyObject *tmp_name_value_762;
        PyObject *tmp_globals_arg_value_762;
        PyObject *tmp_locals_arg_value_762;
        PyObject *tmp_fromlist_value_762;
        PyObject *tmp_level_value_762;
        tmp_name_value_762 = mod_consts[2718];
        tmp_globals_arg_value_762 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_762 = Py_None;
        tmp_fromlist_value_762 = mod_consts[2719];
        tmp_level_value_762 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1588;
        tmp_assign_source_1414 = IMPORT_MODULE5(tmp_name_value_762, tmp_globals_arg_value_762, tmp_locals_arg_value_762, tmp_fromlist_value_762, tmp_level_value_762);
        if (tmp_assign_source_1414 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1588;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_222__module == NULL);
        tmp_import_from_222__module = tmp_assign_source_1414;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1415;
        PyObject *tmp_import_name_from_1189;
        CHECK_OBJECT(tmp_import_from_222__module);
        tmp_import_name_from_1189 = tmp_import_from_222__module;
        if (PyModule_Check(tmp_import_name_from_1189)) {
            tmp_assign_source_1415 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1189,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2720],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1415 = IMPORT_NAME(tmp_import_name_from_1189, mod_consts[2720]);
        }

        if (tmp_assign_source_1415 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1588;

            goto try_except_handler_222;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2720], tmp_assign_source_1415);
    }
    {
        PyObject *tmp_assign_source_1416;
        PyObject *tmp_import_name_from_1190;
        CHECK_OBJECT(tmp_import_from_222__module);
        tmp_import_name_from_1190 = tmp_import_from_222__module;
        if (PyModule_Check(tmp_import_name_from_1190)) {
            tmp_assign_source_1416 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1190,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2721],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1416 = IMPORT_NAME(tmp_import_name_from_1190, mod_consts[2721]);
        }

        if (tmp_assign_source_1416 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1588;

            goto try_except_handler_222;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2721], tmp_assign_source_1416);
    }
    goto try_end_222;
    // Exception handler code:
    try_except_handler_222:;
    exception_keeper_type_222 = exception_type;
    exception_keeper_value_222 = exception_value;
    exception_keeper_tb_222 = exception_tb;
    exception_keeper_lineno_222 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_222__module);
    Py_DECREF(tmp_import_from_222__module);
    tmp_import_from_222__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_222;
    exception_value = exception_keeper_value_222;
    exception_tb = exception_keeper_tb_222;
    exception_lineno = exception_keeper_lineno_222;

    goto frame_exception_exit_1;
    // End of try:
    try_end_222:;
    CHECK_OBJECT(tmp_import_from_222__module);
    Py_DECREF(tmp_import_from_222__module);
    tmp_import_from_222__module = NULL;
    {
        PyObject *tmp_assign_source_1417;
        PyObject *tmp_name_value_763;
        PyObject *tmp_globals_arg_value_763;
        PyObject *tmp_locals_arg_value_763;
        PyObject *tmp_fromlist_value_763;
        PyObject *tmp_level_value_763;
        tmp_name_value_763 = mod_consts[2722];
        tmp_globals_arg_value_763 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_763 = Py_None;
        tmp_fromlist_value_763 = mod_consts[2723];
        tmp_level_value_763 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1592;
        tmp_assign_source_1417 = IMPORT_MODULE5(tmp_name_value_763, tmp_globals_arg_value_763, tmp_locals_arg_value_763, tmp_fromlist_value_763, tmp_level_value_763);
        if (tmp_assign_source_1417 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1592;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_223__module == NULL);
        tmp_import_from_223__module = tmp_assign_source_1417;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1418;
        PyObject *tmp_import_name_from_1191;
        CHECK_OBJECT(tmp_import_from_223__module);
        tmp_import_name_from_1191 = tmp_import_from_223__module;
        if (PyModule_Check(tmp_import_name_from_1191)) {
            tmp_assign_source_1418 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1191,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2724],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1418 = IMPORT_NAME(tmp_import_name_from_1191, mod_consts[2724]);
        }

        if (tmp_assign_source_1418 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1592;

            goto try_except_handler_223;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2724], tmp_assign_source_1418);
    }
    {
        PyObject *tmp_assign_source_1419;
        PyObject *tmp_import_name_from_1192;
        CHECK_OBJECT(tmp_import_from_223__module);
        tmp_import_name_from_1192 = tmp_import_from_223__module;
        if (PyModule_Check(tmp_import_name_from_1192)) {
            tmp_assign_source_1419 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1192,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2725],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1419 = IMPORT_NAME(tmp_import_name_from_1192, mod_consts[2725]);
        }

        if (tmp_assign_source_1419 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1592;

            goto try_except_handler_223;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2725], tmp_assign_source_1419);
    }
    {
        PyObject *tmp_assign_source_1420;
        PyObject *tmp_import_name_from_1193;
        CHECK_OBJECT(tmp_import_from_223__module);
        tmp_import_name_from_1193 = tmp_import_from_223__module;
        if (PyModule_Check(tmp_import_name_from_1193)) {
            tmp_assign_source_1420 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1193,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2726],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1420 = IMPORT_NAME(tmp_import_name_from_1193, mod_consts[2726]);
        }

        if (tmp_assign_source_1420 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1592;

            goto try_except_handler_223;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2726], tmp_assign_source_1420);
    }
    goto try_end_223;
    // Exception handler code:
    try_except_handler_223:;
    exception_keeper_type_223 = exception_type;
    exception_keeper_value_223 = exception_value;
    exception_keeper_tb_223 = exception_tb;
    exception_keeper_lineno_223 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_223__module);
    Py_DECREF(tmp_import_from_223__module);
    tmp_import_from_223__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_223;
    exception_value = exception_keeper_value_223;
    exception_tb = exception_keeper_tb_223;
    exception_lineno = exception_keeper_lineno_223;

    goto frame_exception_exit_1;
    // End of try:
    try_end_223:;
    CHECK_OBJECT(tmp_import_from_223__module);
    Py_DECREF(tmp_import_from_223__module);
    tmp_import_from_223__module = NULL;
    {
        PyObject *tmp_assign_source_1421;
        PyObject *tmp_import_name_from_1194;
        PyObject *tmp_name_value_764;
        PyObject *tmp_globals_arg_value_764;
        PyObject *tmp_locals_arg_value_764;
        PyObject *tmp_fromlist_value_764;
        PyObject *tmp_level_value_764;
        tmp_name_value_764 = mod_consts[2727];
        tmp_globals_arg_value_764 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_764 = Py_None;
        tmp_fromlist_value_764 = mod_consts[2728];
        tmp_level_value_764 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1597;
        tmp_import_name_from_1194 = IMPORT_MODULE5(tmp_name_value_764, tmp_globals_arg_value_764, tmp_locals_arg_value_764, tmp_fromlist_value_764, tmp_level_value_764);
        if (tmp_import_name_from_1194 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1597;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1194)) {
            tmp_assign_source_1421 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1194,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2729],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1421 = IMPORT_NAME(tmp_import_name_from_1194, mod_consts[2729]);
        }

        Py_DECREF(tmp_import_name_from_1194);
        if (tmp_assign_source_1421 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1597;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2729], tmp_assign_source_1421);
    }
    {
        PyObject *tmp_assign_source_1422;
        PyObject *tmp_import_name_from_1195;
        PyObject *tmp_name_value_765;
        PyObject *tmp_globals_arg_value_765;
        PyObject *tmp_locals_arg_value_765;
        PyObject *tmp_fromlist_value_765;
        PyObject *tmp_level_value_765;
        tmp_name_value_765 = mod_consts[2730];
        tmp_globals_arg_value_765 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_765 = Py_None;
        tmp_fromlist_value_765 = mod_consts[2731];
        tmp_level_value_765 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1598;
        tmp_import_name_from_1195 = IMPORT_MODULE5(tmp_name_value_765, tmp_globals_arg_value_765, tmp_locals_arg_value_765, tmp_fromlist_value_765, tmp_level_value_765);
        if (tmp_import_name_from_1195 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1598;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1195)) {
            tmp_assign_source_1422 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1195,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2732],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1422 = IMPORT_NAME(tmp_import_name_from_1195, mod_consts[2732]);
        }

        Py_DECREF(tmp_import_name_from_1195);
        if (tmp_assign_source_1422 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1598;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2732], tmp_assign_source_1422);
    }
    {
        PyObject *tmp_assign_source_1423;
        PyObject *tmp_import_name_from_1196;
        PyObject *tmp_name_value_766;
        PyObject *tmp_globals_arg_value_766;
        PyObject *tmp_locals_arg_value_766;
        PyObject *tmp_fromlist_value_766;
        PyObject *tmp_level_value_766;
        tmp_name_value_766 = mod_consts[2733];
        tmp_globals_arg_value_766 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_766 = Py_None;
        tmp_fromlist_value_766 = mod_consts[2734];
        tmp_level_value_766 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1599;
        tmp_import_name_from_1196 = IMPORT_MODULE5(tmp_name_value_766, tmp_globals_arg_value_766, tmp_locals_arg_value_766, tmp_fromlist_value_766, tmp_level_value_766);
        if (tmp_import_name_from_1196 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1599;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1196)) {
            tmp_assign_source_1423 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1196,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2735],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1423 = IMPORT_NAME(tmp_import_name_from_1196, mod_consts[2735]);
        }

        Py_DECREF(tmp_import_name_from_1196);
        if (tmp_assign_source_1423 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1599;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2735], tmp_assign_source_1423);
    }
    {
        PyObject *tmp_assign_source_1424;
        PyObject *tmp_name_value_767;
        PyObject *tmp_globals_arg_value_767;
        PyObject *tmp_locals_arg_value_767;
        PyObject *tmp_fromlist_value_767;
        PyObject *tmp_level_value_767;
        tmp_name_value_767 = mod_consts[2736];
        tmp_globals_arg_value_767 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_767 = Py_None;
        tmp_fromlist_value_767 = mod_consts[2737];
        tmp_level_value_767 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1600;
        tmp_assign_source_1424 = IMPORT_MODULE5(tmp_name_value_767, tmp_globals_arg_value_767, tmp_locals_arg_value_767, tmp_fromlist_value_767, tmp_level_value_767);
        if (tmp_assign_source_1424 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_224__module == NULL);
        tmp_import_from_224__module = tmp_assign_source_1424;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1425;
        PyObject *tmp_import_name_from_1197;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1197 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1197)) {
            tmp_assign_source_1425 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1197,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2738],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1425 = IMPORT_NAME(tmp_import_name_from_1197, mod_consts[2738]);
        }

        if (tmp_assign_source_1425 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2738], tmp_assign_source_1425);
    }
    {
        PyObject *tmp_assign_source_1426;
        PyObject *tmp_import_name_from_1198;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1198 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1198)) {
            tmp_assign_source_1426 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1198,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2739],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1426 = IMPORT_NAME(tmp_import_name_from_1198, mod_consts[2739]);
        }

        if (tmp_assign_source_1426 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2739], tmp_assign_source_1426);
    }
    {
        PyObject *tmp_assign_source_1427;
        PyObject *tmp_import_name_from_1199;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1199 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1199)) {
            tmp_assign_source_1427 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1199,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2740],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1427 = IMPORT_NAME(tmp_import_name_from_1199, mod_consts[2740]);
        }

        if (tmp_assign_source_1427 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2740], tmp_assign_source_1427);
    }
    {
        PyObject *tmp_assign_source_1428;
        PyObject *tmp_import_name_from_1200;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1200 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1200)) {
            tmp_assign_source_1428 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1200,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2741],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1428 = IMPORT_NAME(tmp_import_name_from_1200, mod_consts[2741]);
        }

        if (tmp_assign_source_1428 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2741], tmp_assign_source_1428);
    }
    {
        PyObject *tmp_assign_source_1429;
        PyObject *tmp_import_name_from_1201;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1201 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1201)) {
            tmp_assign_source_1429 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1201,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2742],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1429 = IMPORT_NAME(tmp_import_name_from_1201, mod_consts[2742]);
        }

        if (tmp_assign_source_1429 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2742], tmp_assign_source_1429);
    }
    {
        PyObject *tmp_assign_source_1430;
        PyObject *tmp_import_name_from_1202;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1202 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1202)) {
            tmp_assign_source_1430 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1202,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2743],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1430 = IMPORT_NAME(tmp_import_name_from_1202, mod_consts[2743]);
        }

        if (tmp_assign_source_1430 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2743], tmp_assign_source_1430);
    }
    {
        PyObject *tmp_assign_source_1431;
        PyObject *tmp_import_name_from_1203;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1203 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1203)) {
            tmp_assign_source_1431 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1203,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2744],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1431 = IMPORT_NAME(tmp_import_name_from_1203, mod_consts[2744]);
        }

        if (tmp_assign_source_1431 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2744], tmp_assign_source_1431);
    }
    {
        PyObject *tmp_assign_source_1432;
        PyObject *tmp_import_name_from_1204;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1204 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1204)) {
            tmp_assign_source_1432 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1204,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2745],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1432 = IMPORT_NAME(tmp_import_name_from_1204, mod_consts[2745]);
        }

        if (tmp_assign_source_1432 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2745], tmp_assign_source_1432);
    }
    {
        PyObject *tmp_assign_source_1433;
        PyObject *tmp_import_name_from_1205;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1205 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1205)) {
            tmp_assign_source_1433 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1205,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2746],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1433 = IMPORT_NAME(tmp_import_name_from_1205, mod_consts[2746]);
        }

        if (tmp_assign_source_1433 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2746], tmp_assign_source_1433);
    }
    {
        PyObject *tmp_assign_source_1434;
        PyObject *tmp_import_name_from_1206;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1206 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1206)) {
            tmp_assign_source_1434 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1206,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2747],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1434 = IMPORT_NAME(tmp_import_name_from_1206, mod_consts[2747]);
        }

        if (tmp_assign_source_1434 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2747], tmp_assign_source_1434);
    }
    {
        PyObject *tmp_assign_source_1435;
        PyObject *tmp_import_name_from_1207;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1207 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1207)) {
            tmp_assign_source_1435 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1207,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2748],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1435 = IMPORT_NAME(tmp_import_name_from_1207, mod_consts[2748]);
        }

        if (tmp_assign_source_1435 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2748], tmp_assign_source_1435);
    }
    {
        PyObject *tmp_assign_source_1436;
        PyObject *tmp_import_name_from_1208;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1208 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1208)) {
            tmp_assign_source_1436 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1208,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2749],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1436 = IMPORT_NAME(tmp_import_name_from_1208, mod_consts[2749]);
        }

        if (tmp_assign_source_1436 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2749], tmp_assign_source_1436);
    }
    {
        PyObject *tmp_assign_source_1437;
        PyObject *tmp_import_name_from_1209;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1209 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1209)) {
            tmp_assign_source_1437 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1209,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2750],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1437 = IMPORT_NAME(tmp_import_name_from_1209, mod_consts[2750]);
        }

        if (tmp_assign_source_1437 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2750], tmp_assign_source_1437);
    }
    {
        PyObject *tmp_assign_source_1438;
        PyObject *tmp_import_name_from_1210;
        CHECK_OBJECT(tmp_import_from_224__module);
        tmp_import_name_from_1210 = tmp_import_from_224__module;
        if (PyModule_Check(tmp_import_name_from_1210)) {
            tmp_assign_source_1438 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1210,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2751],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1438 = IMPORT_NAME(tmp_import_name_from_1210, mod_consts[2751]);
        }

        if (tmp_assign_source_1438 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1600;

            goto try_except_handler_224;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2751], tmp_assign_source_1438);
    }
    goto try_end_224;
    // Exception handler code:
    try_except_handler_224:;
    exception_keeper_type_224 = exception_type;
    exception_keeper_value_224 = exception_value;
    exception_keeper_tb_224 = exception_tb;
    exception_keeper_lineno_224 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_224__module);
    Py_DECREF(tmp_import_from_224__module);
    tmp_import_from_224__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_224;
    exception_value = exception_keeper_value_224;
    exception_tb = exception_keeper_tb_224;
    exception_lineno = exception_keeper_lineno_224;

    goto frame_exception_exit_1;
    // End of try:
    try_end_224:;
    CHECK_OBJECT(tmp_import_from_224__module);
    Py_DECREF(tmp_import_from_224__module);
    tmp_import_from_224__module = NULL;
    {
        PyObject *tmp_assign_source_1439;
        PyObject *tmp_import_name_from_1211;
        PyObject *tmp_name_value_768;
        PyObject *tmp_globals_arg_value_768;
        PyObject *tmp_locals_arg_value_768;
        PyObject *tmp_fromlist_value_768;
        PyObject *tmp_level_value_768;
        tmp_name_value_768 = mod_consts[2752];
        tmp_globals_arg_value_768 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_768 = Py_None;
        tmp_fromlist_value_768 = mod_consts[2753];
        tmp_level_value_768 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1617;
        tmp_import_name_from_1211 = IMPORT_MODULE5(tmp_name_value_768, tmp_globals_arg_value_768, tmp_locals_arg_value_768, tmp_fromlist_value_768, tmp_level_value_768);
        if (tmp_import_name_from_1211 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1617;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1211)) {
            tmp_assign_source_1439 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1211,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2754],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1439 = IMPORT_NAME(tmp_import_name_from_1211, mod_consts[2754]);
        }

        Py_DECREF(tmp_import_name_from_1211);
        if (tmp_assign_source_1439 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1617;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2754], tmp_assign_source_1439);
    }
    {
        PyObject *tmp_assign_source_1440;
        PyObject *tmp_name_value_769;
        PyObject *tmp_globals_arg_value_769;
        PyObject *tmp_locals_arg_value_769;
        PyObject *tmp_fromlist_value_769;
        PyObject *tmp_level_value_769;
        tmp_name_value_769 = mod_consts[2755];
        tmp_globals_arg_value_769 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_769 = Py_None;
        tmp_fromlist_value_769 = mod_consts[2756];
        tmp_level_value_769 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1618;
        tmp_assign_source_1440 = IMPORT_MODULE5(tmp_name_value_769, tmp_globals_arg_value_769, tmp_locals_arg_value_769, tmp_fromlist_value_769, tmp_level_value_769);
        if (tmp_assign_source_1440 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_225__module == NULL);
        tmp_import_from_225__module = tmp_assign_source_1440;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1441;
        PyObject *tmp_import_name_from_1212;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1212 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1212)) {
            tmp_assign_source_1441 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1212,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2757],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1441 = IMPORT_NAME(tmp_import_name_from_1212, mod_consts[2757]);
        }

        if (tmp_assign_source_1441 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2757], tmp_assign_source_1441);
    }
    {
        PyObject *tmp_assign_source_1442;
        PyObject *tmp_import_name_from_1213;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1213 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1213)) {
            tmp_assign_source_1442 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1213,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2758],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1442 = IMPORT_NAME(tmp_import_name_from_1213, mod_consts[2758]);
        }

        if (tmp_assign_source_1442 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2758], tmp_assign_source_1442);
    }
    {
        PyObject *tmp_assign_source_1443;
        PyObject *tmp_import_name_from_1214;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1214 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1214)) {
            tmp_assign_source_1443 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1214,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2759],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1443 = IMPORT_NAME(tmp_import_name_from_1214, mod_consts[2759]);
        }

        if (tmp_assign_source_1443 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2759], tmp_assign_source_1443);
    }
    {
        PyObject *tmp_assign_source_1444;
        PyObject *tmp_import_name_from_1215;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1215 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1215)) {
            tmp_assign_source_1444 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1215,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2760],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1444 = IMPORT_NAME(tmp_import_name_from_1215, mod_consts[2760]);
        }

        if (tmp_assign_source_1444 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2760], tmp_assign_source_1444);
    }
    {
        PyObject *tmp_assign_source_1445;
        PyObject *tmp_import_name_from_1216;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1216 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1216)) {
            tmp_assign_source_1445 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1216,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2761],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1445 = IMPORT_NAME(tmp_import_name_from_1216, mod_consts[2761]);
        }

        if (tmp_assign_source_1445 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2761], tmp_assign_source_1445);
    }
    {
        PyObject *tmp_assign_source_1446;
        PyObject *tmp_import_name_from_1217;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1217 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1217)) {
            tmp_assign_source_1446 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1217,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2762],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1446 = IMPORT_NAME(tmp_import_name_from_1217, mod_consts[2762]);
        }

        if (tmp_assign_source_1446 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2762], tmp_assign_source_1446);
    }
    {
        PyObject *tmp_assign_source_1447;
        PyObject *tmp_import_name_from_1218;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1218 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1218)) {
            tmp_assign_source_1447 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1218,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2763],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1447 = IMPORT_NAME(tmp_import_name_from_1218, mod_consts[2763]);
        }

        if (tmp_assign_source_1447 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2763], tmp_assign_source_1447);
    }
    {
        PyObject *tmp_assign_source_1448;
        PyObject *tmp_import_name_from_1219;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1219 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1219)) {
            tmp_assign_source_1448 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1219,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2764],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1448 = IMPORT_NAME(tmp_import_name_from_1219, mod_consts[2764]);
        }

        if (tmp_assign_source_1448 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2764], tmp_assign_source_1448);
    }
    {
        PyObject *tmp_assign_source_1449;
        PyObject *tmp_import_name_from_1220;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1220 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1220)) {
            tmp_assign_source_1449 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1220,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2765],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1449 = IMPORT_NAME(tmp_import_name_from_1220, mod_consts[2765]);
        }

        if (tmp_assign_source_1449 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2765], tmp_assign_source_1449);
    }
    {
        PyObject *tmp_assign_source_1450;
        PyObject *tmp_import_name_from_1221;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1221 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1221)) {
            tmp_assign_source_1450 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1221,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2766],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1450 = IMPORT_NAME(tmp_import_name_from_1221, mod_consts[2766]);
        }

        if (tmp_assign_source_1450 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2766], tmp_assign_source_1450);
    }
    {
        PyObject *tmp_assign_source_1451;
        PyObject *tmp_import_name_from_1222;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1222 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1222)) {
            tmp_assign_source_1451 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1222,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2767],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1451 = IMPORT_NAME(tmp_import_name_from_1222, mod_consts[2767]);
        }

        if (tmp_assign_source_1451 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2767], tmp_assign_source_1451);
    }
    {
        PyObject *tmp_assign_source_1452;
        PyObject *tmp_import_name_from_1223;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1223 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1223)) {
            tmp_assign_source_1452 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1223,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2768],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1452 = IMPORT_NAME(tmp_import_name_from_1223, mod_consts[2768]);
        }

        if (tmp_assign_source_1452 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2768], tmp_assign_source_1452);
    }
    {
        PyObject *tmp_assign_source_1453;
        PyObject *tmp_import_name_from_1224;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1224 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1224)) {
            tmp_assign_source_1453 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1224,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2769],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1453 = IMPORT_NAME(tmp_import_name_from_1224, mod_consts[2769]);
        }

        if (tmp_assign_source_1453 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2769], tmp_assign_source_1453);
    }
    {
        PyObject *tmp_assign_source_1454;
        PyObject *tmp_import_name_from_1225;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1225 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1225)) {
            tmp_assign_source_1454 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1225,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2770],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1454 = IMPORT_NAME(tmp_import_name_from_1225, mod_consts[2770]);
        }

        if (tmp_assign_source_1454 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2770], tmp_assign_source_1454);
    }
    {
        PyObject *tmp_assign_source_1455;
        PyObject *tmp_import_name_from_1226;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1226 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1226)) {
            tmp_assign_source_1455 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1226,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2771],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1455 = IMPORT_NAME(tmp_import_name_from_1226, mod_consts[2771]);
        }

        if (tmp_assign_source_1455 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2771], tmp_assign_source_1455);
    }
    {
        PyObject *tmp_assign_source_1456;
        PyObject *tmp_import_name_from_1227;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1227 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1227)) {
            tmp_assign_source_1456 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1227,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2772],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1456 = IMPORT_NAME(tmp_import_name_from_1227, mod_consts[2772]);
        }

        if (tmp_assign_source_1456 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2772], tmp_assign_source_1456);
    }
    {
        PyObject *tmp_assign_source_1457;
        PyObject *tmp_import_name_from_1228;
        CHECK_OBJECT(tmp_import_from_225__module);
        tmp_import_name_from_1228 = tmp_import_from_225__module;
        if (PyModule_Check(tmp_import_name_from_1228)) {
            tmp_assign_source_1457 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1228,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2773],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1457 = IMPORT_NAME(tmp_import_name_from_1228, mod_consts[2773]);
        }

        if (tmp_assign_source_1457 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1618;

            goto try_except_handler_225;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2773], tmp_assign_source_1457);
    }
    goto try_end_225;
    // Exception handler code:
    try_except_handler_225:;
    exception_keeper_type_225 = exception_type;
    exception_keeper_value_225 = exception_value;
    exception_keeper_tb_225 = exception_tb;
    exception_keeper_lineno_225 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_225__module);
    Py_DECREF(tmp_import_from_225__module);
    tmp_import_from_225__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_225;
    exception_value = exception_keeper_value_225;
    exception_tb = exception_keeper_tb_225;
    exception_lineno = exception_keeper_lineno_225;

    goto frame_exception_exit_1;
    // End of try:
    try_end_225:;
    CHECK_OBJECT(tmp_import_from_225__module);
    Py_DECREF(tmp_import_from_225__module);
    tmp_import_from_225__module = NULL;
    {
        PyObject *tmp_assign_source_1458;
        PyObject *tmp_name_value_770;
        PyObject *tmp_globals_arg_value_770;
        PyObject *tmp_locals_arg_value_770;
        PyObject *tmp_fromlist_value_770;
        PyObject *tmp_level_value_770;
        tmp_name_value_770 = mod_consts[2774];
        tmp_globals_arg_value_770 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_770 = Py_None;
        tmp_fromlist_value_770 = mod_consts[2775];
        tmp_level_value_770 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1637;
        tmp_assign_source_1458 = IMPORT_MODULE5(tmp_name_value_770, tmp_globals_arg_value_770, tmp_locals_arg_value_770, tmp_fromlist_value_770, tmp_level_value_770);
        if (tmp_assign_source_1458 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1637;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_226__module == NULL);
        tmp_import_from_226__module = tmp_assign_source_1458;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1459;
        PyObject *tmp_import_name_from_1229;
        CHECK_OBJECT(tmp_import_from_226__module);
        tmp_import_name_from_1229 = tmp_import_from_226__module;
        if (PyModule_Check(tmp_import_name_from_1229)) {
            tmp_assign_source_1459 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1229,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2776],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1459 = IMPORT_NAME(tmp_import_name_from_1229, mod_consts[2776]);
        }

        if (tmp_assign_source_1459 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1637;

            goto try_except_handler_226;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2776], tmp_assign_source_1459);
    }
    {
        PyObject *tmp_assign_source_1460;
        PyObject *tmp_import_name_from_1230;
        CHECK_OBJECT(tmp_import_from_226__module);
        tmp_import_name_from_1230 = tmp_import_from_226__module;
        if (PyModule_Check(tmp_import_name_from_1230)) {
            tmp_assign_source_1460 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1230,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2777],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1460 = IMPORT_NAME(tmp_import_name_from_1230, mod_consts[2777]);
        }

        if (tmp_assign_source_1460 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1637;

            goto try_except_handler_226;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2777], tmp_assign_source_1460);
    }
    goto try_end_226;
    // Exception handler code:
    try_except_handler_226:;
    exception_keeper_type_226 = exception_type;
    exception_keeper_value_226 = exception_value;
    exception_keeper_tb_226 = exception_tb;
    exception_keeper_lineno_226 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_226__module);
    Py_DECREF(tmp_import_from_226__module);
    tmp_import_from_226__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_226;
    exception_value = exception_keeper_value_226;
    exception_tb = exception_keeper_tb_226;
    exception_lineno = exception_keeper_lineno_226;

    goto frame_exception_exit_1;
    // End of try:
    try_end_226:;
    CHECK_OBJECT(tmp_import_from_226__module);
    Py_DECREF(tmp_import_from_226__module);
    tmp_import_from_226__module = NULL;
    {
        PyObject *tmp_assign_source_1461;
        PyObject *tmp_import_name_from_1231;
        PyObject *tmp_name_value_771;
        PyObject *tmp_globals_arg_value_771;
        PyObject *tmp_locals_arg_value_771;
        PyObject *tmp_fromlist_value_771;
        PyObject *tmp_level_value_771;
        tmp_name_value_771 = mod_consts[2778];
        tmp_globals_arg_value_771 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_771 = Py_None;
        tmp_fromlist_value_771 = mod_consts[2779];
        tmp_level_value_771 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1638;
        tmp_import_name_from_1231 = IMPORT_MODULE5(tmp_name_value_771, tmp_globals_arg_value_771, tmp_locals_arg_value_771, tmp_fromlist_value_771, tmp_level_value_771);
        if (tmp_import_name_from_1231 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1638;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1231)) {
            tmp_assign_source_1461 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1231,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2780],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1461 = IMPORT_NAME(tmp_import_name_from_1231, mod_consts[2780]);
        }

        Py_DECREF(tmp_import_name_from_1231);
        if (tmp_assign_source_1461 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1638;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2780], tmp_assign_source_1461);
    }
    {
        PyObject *tmp_assign_source_1462;
        PyObject *tmp_name_value_772;
        PyObject *tmp_globals_arg_value_772;
        PyObject *tmp_locals_arg_value_772;
        PyObject *tmp_fromlist_value_772;
        PyObject *tmp_level_value_772;
        tmp_name_value_772 = mod_consts[2781];
        tmp_globals_arg_value_772 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_772 = Py_None;
        tmp_fromlist_value_772 = mod_consts[2782];
        tmp_level_value_772 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1639;
        tmp_assign_source_1462 = IMPORT_MODULE5(tmp_name_value_772, tmp_globals_arg_value_772, tmp_locals_arg_value_772, tmp_fromlist_value_772, tmp_level_value_772);
        if (tmp_assign_source_1462 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1639;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_227__module == NULL);
        tmp_import_from_227__module = tmp_assign_source_1462;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_1463;
        PyObject *tmp_import_name_from_1232;
        CHECK_OBJECT(tmp_import_from_227__module);
        tmp_import_name_from_1232 = tmp_import_from_227__module;
        if (PyModule_Check(tmp_import_name_from_1232)) {
            tmp_assign_source_1463 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1232,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2783],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1463 = IMPORT_NAME(tmp_import_name_from_1232, mod_consts[2783]);
        }

        if (tmp_assign_source_1463 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1639;

            goto try_except_handler_227;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2783], tmp_assign_source_1463);
    }
    {
        PyObject *tmp_assign_source_1464;
        PyObject *tmp_import_name_from_1233;
        CHECK_OBJECT(tmp_import_from_227__module);
        tmp_import_name_from_1233 = tmp_import_from_227__module;
        if (PyModule_Check(tmp_import_name_from_1233)) {
            tmp_assign_source_1464 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1233,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2784],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1464 = IMPORT_NAME(tmp_import_name_from_1233, mod_consts[2784]);
        }

        if (tmp_assign_source_1464 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1639;

            goto try_except_handler_227;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2784], tmp_assign_source_1464);
    }
    goto try_end_227;
    // Exception handler code:
    try_except_handler_227:;
    exception_keeper_type_227 = exception_type;
    exception_keeper_value_227 = exception_value;
    exception_keeper_tb_227 = exception_tb;
    exception_keeper_lineno_227 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_227__module);
    Py_DECREF(tmp_import_from_227__module);
    tmp_import_from_227__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_227;
    exception_value = exception_keeper_value_227;
    exception_tb = exception_keeper_tb_227;
    exception_lineno = exception_keeper_lineno_227;

    goto frame_exception_exit_1;
    // End of try:
    try_end_227:;
    CHECK_OBJECT(tmp_import_from_227__module);
    Py_DECREF(tmp_import_from_227__module);
    tmp_import_from_227__module = NULL;
    {
        PyObject *tmp_assign_source_1465;
        PyObject *tmp_import_name_from_1234;
        PyObject *tmp_name_value_773;
        PyObject *tmp_globals_arg_value_773;
        PyObject *tmp_locals_arg_value_773;
        PyObject *tmp_fromlist_value_773;
        PyObject *tmp_level_value_773;
        tmp_name_value_773 = mod_consts[2785];
        tmp_globals_arg_value_773 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_773 = Py_None;
        tmp_fromlist_value_773 = mod_consts[2786];
        tmp_level_value_773 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1643;
        tmp_import_name_from_1234 = IMPORT_MODULE5(tmp_name_value_773, tmp_globals_arg_value_773, tmp_locals_arg_value_773, tmp_fromlist_value_773, tmp_level_value_773);
        if (tmp_import_name_from_1234 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1643;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1234)) {
            tmp_assign_source_1465 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1234,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2787],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1465 = IMPORT_NAME(tmp_import_name_from_1234, mod_consts[2787]);
        }

        Py_DECREF(tmp_import_name_from_1234);
        if (tmp_assign_source_1465 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1643;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2787], tmp_assign_source_1465);
    }
    {
        PyObject *tmp_assign_source_1466;
        PyObject *tmp_import_name_from_1235;
        PyObject *tmp_name_value_774;
        PyObject *tmp_globals_arg_value_774;
        PyObject *tmp_locals_arg_value_774;
        PyObject *tmp_fromlist_value_774;
        PyObject *tmp_level_value_774;
        tmp_name_value_774 = mod_consts[2788];
        tmp_globals_arg_value_774 = (PyObject *)moduledict_youtube_dl$extractor$extractors;
        tmp_locals_arg_value_774 = Py_None;
        tmp_fromlist_value_774 = mod_consts[2789];
        tmp_level_value_774 = mod_consts[9];
        frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame.f_lineno = 1644;
        tmp_import_name_from_1235 = IMPORT_MODULE5(tmp_name_value_774, tmp_globals_arg_value_774, tmp_locals_arg_value_774, tmp_fromlist_value_774, tmp_level_value_774);
        if (tmp_import_name_from_1235 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1644;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1235)) {
            tmp_assign_source_1466 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1235,
                (PyObject *)moduledict_youtube_dl$extractor$extractors,
                mod_consts[2790],
                mod_consts[11]
            );
        } else {
            tmp_assign_source_1466 = IMPORT_NAME(tmp_import_name_from_1235, mod_consts[2790]);
        }

        Py_DECREF(tmp_import_name_from_1235);
        if (tmp_assign_source_1466 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1644;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)mod_consts[2790], tmp_assign_source_1466);
    }

    // Restore frame exception if necessary.
#if 0
    RESTORE_FRAME_EXCEPTION(frame_ac3b2570fea032a53c8babbaaa6c2ef6);
#endif
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_ac3b2570fea032a53c8babbaaa6c2ef6);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_ac3b2570fea032a53c8babbaaa6c2ef6, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_ac3b2570fea032a53c8babbaaa6c2ef6->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_ac3b2570fea032a53c8babbaaa6c2ef6, exception_lineno);
    }

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto module_exception_exit;

    frame_no_exception_1:;

    // Report to PGO about leaving the module without error.
    PGO_onModuleExit("youtube_dl.extractor.extractors", false);

    Py_INCREF(module_youtube_dl$extractor$extractors);
    return module_youtube_dl$extractor$extractors;
    module_exception_exit:

#if defined(_NUITKA_MODULE) && 0
    {
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$extractors, (Nuitka_StringObject *)const_str_plain___name__);

        if (module_name != NULL) {
            Nuitka_DelModule(module_name);
        }
    }
#endif
    PGO_onModuleExit("youtube_dl$extractor$extractors", false);

    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);
    return NULL;
}
