/* Generated code for Python module 'youtube_dl.extractor.generic'
 * created by Nuitka version 1.3.8
 *
 * This code is in part copyright 2022 Kay Hayen.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "nuitka/prelude.h"

#include "nuitka/unfreezing.h"

#include "__helpers.h"

/* The "module_youtube_dl$extractor$generic" is a Python object pointer of module type.
 *
 * Note: For full compatibility with CPython, every module variable access
 * needs to go through it except for cases where the module cannot possibly
 * have changed in the mean time.
 */

PyObject *module_youtube_dl$extractor$generic;
PyDictObject *moduledict_youtube_dl$extractor$generic;

/* The declarations of module constants used, if any. */
static PyObject *mod_consts[914];
#ifndef __NUITKA_NO_ASSERT__
static Py_hash_t mod_consts_hash[914];
#endif

static PyObject *module_filename_obj = NULL;

/* Indicator if this modules private constants were created yet. */
static bool constants_created = false;

/* Function to create module private constants. */
static void createModuleConstants(void) {
    if (constants_created == false) {
        loadConstantsBlob(&mod_consts[0], UNTRANSLATE("youtube_dl.extractor.generic"));
        constants_created = true;

#ifndef __NUITKA_NO_ASSERT__
        for (int i = 0; i < 914; i++) {
            mod_consts_hash[i] = DEEP_HASH(mod_consts[i]);
        }
#endif
    }
}

// We want to be able to initialize the "__main__" constants in any case.
#if 0
void createMainModuleConstants(void) {
    createModuleConstants();
}
#endif

/* Function to verify module private constants for non-corruption. */
#ifndef __NUITKA_NO_ASSERT__
void checkModuleConstants_youtube_dl$extractor$generic(void) {
    // The module may not have been used at all, then ignore this.
    if (constants_created == false) return;

    for (int i = 0; i < 914; i++) {
        assert(mod_consts_hash[i] == DEEP_HASH(mod_consts[i]));
        CHECK_OBJECT_DEEP(mod_consts[i]);
    }
}
#endif

// The module code objects.
static PyCodeObject *codeobj_020bccf0262b56adacf061c75c36b57a;
static PyCodeObject *codeobj_6258c47cf499e6cb22bf40a0ad10c16a;
static PyCodeObject *codeobj_d3b61c05f5d9b35040306acbc338e99b;
static PyCodeObject *codeobj_48160966465c657f28fe71960e8ef540;
static PyCodeObject *codeobj_54fc4c2d3fe78c1b066f946ce4ee9f8c;
static PyCodeObject *codeobj_24a35816b83a2ee002f9da1478fc126d;
static PyCodeObject *codeobj_d5410f41becd5e1a240995c7a89c98a1;
static PyCodeObject *codeobj_6df4876305f5a7f7c039ed9e97e0ad34;
static PyCodeObject *codeobj_da6cf79541b6741dd6f53859a67ff7a5;
static PyCodeObject *codeobj_1fd16d11d213e76d6499b6413020ae45;
static PyCodeObject *codeobj_ba5b9723ae0cbe5b8efd735840f2dbfe;
static PyCodeObject *codeobj_d155beebf1b46446bdadcacf7ca7cc30;
static PyCodeObject *codeobj_8085ace5ee20ccf11fcc49b46ce4dbf2;
static PyCodeObject *codeobj_713f709215410de619f38bbb0405e5b8;
static PyCodeObject *codeobj_b3b83acc449cc64d070a11260b7b6b1f;
static PyCodeObject *codeobj_30e007b0701b686f990740988c79133e;
static PyCodeObject *codeobj_3dad20957ac2f88f635f8d212acc1c28;
static PyCodeObject *codeobj_65c889d1684fcae3612dceab5ea3c602;

static void createModuleCodeObjects(void) {
    module_filename_obj = MAKE_RELATIVE_PATH(mod_consts[893]); CHECK_OBJECT(module_filename_obj);
    codeobj_020bccf0262b56adacf061c75c36b57a = MAKE_CODE_OBJECT(module_filename_obj, 2544, CO_GENERATOR | CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[484], mod_consts[484], mod_consts[894], NULL, 1, 0, 0);
    codeobj_6258c47cf499e6cb22bf40a0ad10c16a = MAKE_CODE_OBJECT(module_filename_obj, 2648, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[193], mod_consts[193], mod_consts[895], NULL, 1, 0, 0);
    codeobj_d3b61c05f5d9b35040306acbc338e99b = MAKE_CODE_OBJECT(module_filename_obj, 2733, CO_OPTIMIZED | CO_NEWLOCALS | CO_FUTURE_UNICODE_LITERALS, mod_consts[193], mod_consts[193], mod_consts[896], mod_consts[14], 1, 0, 0);
    codeobj_48160966465c657f28fe71960e8ef540 = MAKE_CODE_OBJECT(module_filename_obj, 2524, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[193], mod_consts[193], mod_consts[897], NULL, 1, 0, 0);
    codeobj_54fc4c2d3fe78c1b066f946ce4ee9f8c = MAKE_CODE_OBJECT(module_filename_obj, 2582, CO_OPTIMIZED | CO_NEWLOCALS | CO_FUTURE_UNICODE_LITERALS, mod_consts[193], mod_consts[193], mod_consts[898], mod_consts[14], 1, 0, 0);
    codeobj_24a35816b83a2ee002f9da1478fc126d = MAKE_CODE_OBJECT(module_filename_obj, 2969, CO_OPTIMIZED | CO_NEWLOCALS | CO_FUTURE_UNICODE_LITERALS, mod_consts[193], mod_consts[193], mod_consts[898], mod_consts[14], 1, 0, 0);
    codeobj_d5410f41becd5e1a240995c7a89c98a1 = MAKE_CODE_OBJECT(module_filename_obj, 2564, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[899], mod_consts[899], mod_consts[900], NULL, 1, 0, 0);
    codeobj_6df4876305f5a7f7c039ed9e97e0ad34 = MAKE_CODE_OBJECT(module_filename_obj, 3245, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[899], mod_consts[899], mod_consts[901], NULL, 1, 0, 0);
    codeobj_da6cf79541b6741dd6f53859a67ff7a5 = MAKE_CODE_OBJECT(module_filename_obj, 3298, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[899], mod_consts[899], mod_consts[902], NULL, 1, 0, 0);
    codeobj_1fd16d11d213e76d6499b6413020ae45 = MAKE_CODE_OBJECT(module_filename_obj, 1, CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[903], mod_consts[903], NULL, NULL, 0, 0, 0);
    codeobj_ba5b9723ae0cbe5b8efd735840f2dbfe = MAKE_CODE_OBJECT(module_filename_obj, 135, CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[480], mod_consts[480], mod_consts[904], NULL, 0, 0, 0);
    codeobj_d155beebf1b46446bdadcacf7ca7cc30 = MAKE_CODE_OBJECT(module_filename_obj, 2298, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[190], mod_consts[190], mod_consts[905], NULL, 4, 0, 0);
    codeobj_8085ace5ee20ccf11fcc49b46ce4dbf2 = MAKE_CODE_OBJECT(module_filename_obj, 2237, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[175], mod_consts[175], mod_consts[906], NULL, 4, 0, 0);
    codeobj_713f709215410de619f38bbb0405e5b8 = MAKE_CODE_OBJECT(module_filename_obj, 2335, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[890], mod_consts[890], mod_consts[907], NULL, 2, 0, 0);
    codeobj_b3b83acc449cc64d070a11260b7b6b1f = MAKE_CODE_OBJECT(module_filename_obj, 3398, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[448], mod_consts[448], mod_consts[908], NULL, 1, 0, 0);
    codeobj_30e007b0701b686f990740988c79133e = MAKE_CODE_OBJECT(module_filename_obj, 3407, CO_OPTIMIZED | CO_NEWLOCALS | CO_FUTURE_UNICODE_LITERALS, mod_consts[450], mod_consts[450], mod_consts[909], mod_consts[910], 1, 0, 0);
    codeobj_3dad20957ac2f88f635f8d212acc1c28 = MAKE_CODE_OBJECT(module_filename_obj, 2261, CO_OPTIMIZED | CO_NEWLOCALS | CO_FUTURE_UNICODE_LITERALS, mod_consts[19], mod_consts[19], mod_consts[911], mod_consts[912], 1, 0, 0);
    codeobj_65c889d1684fcae3612dceab5ea3c602 = MAKE_CODE_OBJECT(module_filename_obj, 2233, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE | CO_FUTURE_UNICODE_LITERALS, mod_consts[124], mod_consts[124], mod_consts[913], NULL, 2, 0, 0);
}

// The module function declarations.
static PyObject *MAKE_GENERATOR_youtube_dl$extractor$generic$$$function__4__real_extract$$$genexpr__1_genexpr(struct Nuitka_CellObject **closure);


NUITKA_CROSS_MODULE PyObject *impl___main__$$$function__3__mro_entries_conversion(PyObject **python_pars);


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__1_report_following_redirect();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__2__extract_rss();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__2__extract_rss$$$function__1_itunes(struct Nuitka_CellObject **closure);


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__3__extract_camtasia();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__1_lambda();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__2_lambda(struct Nuitka_CellObject **closure);


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__3_lambda();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__4_lambda(struct Nuitka_CellObject **closure);


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__5_lambda(struct Nuitka_CellObject **closure);


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__6_check_video();


static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__7_filter_video(struct Nuitka_CellObject **closure);


// The module function definitions.
static PyObject *impl_youtube_dl$extractor$generic$$$function__1_report_following_redirect(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_new_url = python_pars[1];
    struct Nuitka_FrameObject *frame_65c889d1684fcae3612dceab5ea3c602;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_65c889d1684fcae3612dceab5ea3c602 = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_65c889d1684fcae3612dceab5ea3c602)) {
        Py_XDECREF(cache_frame_65c889d1684fcae3612dceab5ea3c602);

#if _DEBUG_REFCOUNTS
        if (cache_frame_65c889d1684fcae3612dceab5ea3c602 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_65c889d1684fcae3612dceab5ea3c602 = MAKE_FUNCTION_FRAME(codeobj_65c889d1684fcae3612dceab5ea3c602, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_65c889d1684fcae3612dceab5ea3c602->m_type_description == NULL);
    frame_65c889d1684fcae3612dceab5ea3c602 = cache_frame_65c889d1684fcae3612dceab5ea3c602;


    // Push the new frame as the currently active one.
    pushFrameStack(frame_65c889d1684fcae3612dceab5ea3c602);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_65c889d1684fcae3612dceab5ea3c602) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_value_1;
        PyObject *tmp_expression_value_1;
        PyObject *tmp_expression_value_2;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_mod_expr_left_1;
        PyObject *tmp_mod_expr_right_1;
        CHECK_OBJECT(par_self);
        tmp_expression_value_2 = par_self;
        tmp_expression_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_2, mod_consts[0]);
        if (tmp_expression_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2235;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1, mod_consts[1]);
        Py_DECREF(tmp_expression_value_1);
        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2235;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_mod_expr_left_1 = mod_consts[2];
        CHECK_OBJECT(par_new_url);
        tmp_mod_expr_right_1 = par_new_url;
        tmp_args_element_value_1 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_mod_expr_left_1, tmp_mod_expr_right_1);
        if (tmp_args_element_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_1);

            exception_lineno = 2235;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        frame_65c889d1684fcae3612dceab5ea3c602->m_frame.f_lineno = 2235;
        tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_1, tmp_args_element_value_1);
        Py_DECREF(tmp_called_value_1);
        Py_DECREF(tmp_args_element_value_1);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2235;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_1);
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_65c889d1684fcae3612dceab5ea3c602);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_65c889d1684fcae3612dceab5ea3c602);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_65c889d1684fcae3612dceab5ea3c602, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_65c889d1684fcae3612dceab5ea3c602->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_65c889d1684fcae3612dceab5ea3c602, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_65c889d1684fcae3612dceab5ea3c602,
        type_description_1,
        par_self,
        par_new_url
    );


    // Release cached frame if used for exception.
    if (frame_65c889d1684fcae3612dceab5ea3c602 == cache_frame_65c889d1684fcae3612dceab5ea3c602) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_65c889d1684fcae3612dceab5ea3c602);
        cache_frame_65c889d1684fcae3612dceab5ea3c602 = NULL;
    }

    assertFrameObject(frame_65c889d1684fcae3612dceab5ea3c602);

    // Put the previous frame back on top.
    popFrameStack();


    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto function_return_exit;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_new_url);
    Py_DECREF(par_new_url);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_new_url);
    Py_DECREF(par_new_url);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function__2__extract_rss(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_url = python_pars[1];
    PyObject *par_video_id = python_pars[2];
    PyObject *par_doc = python_pars[3];
    PyObject *var_playlist_title = NULL;
    PyObject *var_playlist_desc_el = NULL;
    PyObject *var_playlist_desc = NULL;
    struct Nuitka_CellObject *var_NS_MAP = Nuitka_Cell_Empty();
    PyObject *var_entries = NULL;
    struct Nuitka_CellObject *var_it = Nuitka_Cell_Empty();
    PyObject *var_next_url = NULL;
    PyObject *var_enclosure_nodes = NULL;
    PyObject *var_e = NULL;
    PyObject *var_itunes = NULL;
    PyObject *var_duration = NULL;
    PyObject *var_explicit = NULL;
    PyObject *var_age_limit = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    struct Nuitka_FrameObject *frame_8085ace5ee20ccf11fcc49b46ce4dbf2;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    int tmp_res;
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *tmp_return_value = NULL;
    static struct Nuitka_FrameObject *cache_frame_8085ace5ee20ccf11fcc49b46ce4dbf2 = NULL;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_8085ace5ee20ccf11fcc49b46ce4dbf2)) {
        Py_XDECREF(cache_frame_8085ace5ee20ccf11fcc49b46ce4dbf2);

#if _DEBUG_REFCOUNTS
        if (cache_frame_8085ace5ee20ccf11fcc49b46ce4dbf2 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_8085ace5ee20ccf11fcc49b46ce4dbf2 = MAKE_FUNCTION_FRAME(codeobj_8085ace5ee20ccf11fcc49b46ce4dbf2, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_type_description == NULL);
    frame_8085ace5ee20ccf11fcc49b46ce4dbf2 = cache_frame_8085ace5ee20ccf11fcc49b46ce4dbf2;


    // Push the new frame as the currently active one.
    pushFrameStack(frame_8085ace5ee20ccf11fcc49b46ce4dbf2);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_8085ace5ee20ccf11fcc49b46ce4dbf2) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_expression_value_1;
        PyObject *tmp_called_value_1;
        PyObject *tmp_expression_value_2;
        CHECK_OBJECT(par_doc);
        tmp_expression_value_2 = par_doc;
        tmp_called_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_2, mod_consts[4]);
        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2238;
            type_description_1 = "ooooooococooooooo";
            goto frame_exception_exit_1;
        }
        frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2238;
        tmp_expression_value_1 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_1, mod_consts[5]);

        Py_DECREF(tmp_called_value_1);
        if (tmp_expression_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2238;
            type_description_1 = "ooooooococooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1, mod_consts[6]);
        Py_DECREF(tmp_expression_value_1);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2238;
            type_description_1 = "ooooooococooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_playlist_title == NULL);
        var_playlist_title = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_value_2;
        PyObject *tmp_expression_value_3;
        CHECK_OBJECT(par_doc);
        tmp_expression_value_3 = par_doc;
        tmp_called_value_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_3, mod_consts[4]);
        if (tmp_called_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2239;
            type_description_1 = "ooooooococooooooo";
            goto frame_exception_exit_1;
        }
        frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2239;
        tmp_assign_source_2 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_2, mod_consts[7]);

        Py_DECREF(tmp_called_value_2);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2239;
            type_description_1 = "ooooooococooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_playlist_desc_el == NULL);
        var_playlist_desc_el = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        bool tmp_condition_result_1;
        PyObject *tmp_cmp_expr_left_1;
        PyObject *tmp_cmp_expr_right_1;
        PyObject *tmp_expression_value_4;
        CHECK_OBJECT(var_playlist_desc_el);
        tmp_cmp_expr_left_1 = var_playlist_desc_el;
        tmp_cmp_expr_right_1 = Py_None;
        tmp_condition_result_1 = (tmp_cmp_expr_left_1 == tmp_cmp_expr_right_1) ? true : false;
        if (tmp_condition_result_1 != false) {
            goto condexpr_true_1;
        } else {
            goto condexpr_false_1;
        }
        condexpr_true_1:;
        tmp_assign_source_3 = Py_None;
        Py_INCREF(tmp_assign_source_3);
        goto condexpr_end_1;
        condexpr_false_1:;
        CHECK_OBJECT(var_playlist_desc_el);
        tmp_expression_value_4 = var_playlist_desc_el;
        tmp_assign_source_3 = LOOKUP_ATTRIBUTE(tmp_expression_value_4, mod_consts[6]);
        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2240;
            type_description_1 = "ooooooococooooooo";
            goto frame_exception_exit_1;
        }
        condexpr_end_1:;
        assert(var_playlist_desc == NULL);
        var_playlist_desc = tmp_assign_source_3;
    }
    {
        PyObject *tmp_assign_source_4;
        tmp_assign_source_4 = DICT_COPY(mod_consts[8]);
        assert(Nuitka_Cell_GET(var_NS_MAP) == NULL);
        PyCell_SET(var_NS_MAP, tmp_assign_source_4);

    }
    {
        PyObject *tmp_assign_source_5;
        tmp_assign_source_5 = MAKE_LIST_EMPTY(0);
        assert(var_entries == NULL);
        var_entries = tmp_assign_source_5;
    }
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_iter_arg_1;
        PyObject *tmp_called_instance_1;
        CHECK_OBJECT(par_doc);
        tmp_called_instance_1 = par_doc;
        frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2247;
        tmp_iter_arg_1 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_1,
            mod_consts[9],
            PyTuple_GET_ITEM(mod_consts[10], 0)
        );

        if (tmp_iter_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2247;
            type_description_1 = "ooooooococooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_6 = MAKE_ITERATOR(tmp_iter_arg_1);
        Py_DECREF(tmp_iter_arg_1);
        if (tmp_assign_source_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2247;
            type_description_1 = "ooooooococooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_1__for_iterator == NULL);
        tmp_for_loop_1__for_iterator = tmp_assign_source_6;
    }
    // Tried code:
    loop_start_1:;
    {
        PyObject *tmp_next_source_1;
        PyObject *tmp_assign_source_7;
        CHECK_OBJECT(tmp_for_loop_1__for_iterator);
        tmp_next_source_1 = tmp_for_loop_1__for_iterator;
        tmp_assign_source_7 = ITERATOR_NEXT(tmp_next_source_1);
        if (tmp_assign_source_7 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_1;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ooooooococooooooo";
                exception_lineno = 2247;
                goto try_except_handler_2;
            }
        }

        {
            PyObject *old = tmp_for_loop_1__iter_value;
            tmp_for_loop_1__iter_value = tmp_assign_source_7;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_8;
        CHECK_OBJECT(tmp_for_loop_1__iter_value);
        tmp_assign_source_8 = tmp_for_loop_1__iter_value;
        {
            PyObject *old = Nuitka_Cell_GET(var_it);
            PyCell_SET(var_it, tmp_assign_source_8);
            Py_INCREF(tmp_assign_source_8);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_9;
        tmp_assign_source_9 = Py_None;
        {
            PyObject *old = var_next_url;
            var_next_url = tmp_assign_source_9;
            Py_INCREF(var_next_url);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_called_instance_2;
        CHECK_OBJECT(Nuitka_Cell_GET(var_it));
        tmp_called_instance_2 = Nuitka_Cell_GET(var_it);
        frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2249;
        tmp_assign_source_10 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_2,
            mod_consts[9],
            PyTuple_GET_ITEM(mod_consts[11], 0)
        );

        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2249;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = var_enclosure_nodes;
            var_enclosure_nodes = tmp_assign_source_10;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_iter_arg_2;
        CHECK_OBJECT(var_enclosure_nodes);
        tmp_iter_arg_2 = var_enclosure_nodes;
        tmp_assign_source_11 = MAKE_ITERATOR(tmp_iter_arg_2);
        if (tmp_assign_source_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2250;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = tmp_for_loop_2__for_iterator;
            tmp_for_loop_2__for_iterator = tmp_assign_source_11;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    loop_start_2:;
    {
        PyObject *tmp_next_source_2;
        PyObject *tmp_assign_source_12;
        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
        tmp_next_source_2 = tmp_for_loop_2__for_iterator;
        tmp_assign_source_12 = ITERATOR_NEXT(tmp_next_source_2);
        if (tmp_assign_source_12 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_2;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ooooooococooooooo";
                exception_lineno = 2250;
                goto try_except_handler_3;
            }
        }

        {
            PyObject *old = tmp_for_loop_2__iter_value;
            tmp_for_loop_2__iter_value = tmp_assign_source_12;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_13;
        CHECK_OBJECT(tmp_for_loop_2__iter_value);
        tmp_assign_source_13 = tmp_for_loop_2__iter_value;
        {
            PyObject *old = var_e;
            var_e = tmp_assign_source_13;
            Py_INCREF(var_e);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_14;
        PyObject *tmp_called_value_3;
        PyObject *tmp_expression_value_5;
        PyObject *tmp_expression_value_6;
        CHECK_OBJECT(var_e);
        tmp_expression_value_6 = var_e;
        tmp_expression_value_5 = LOOKUP_ATTRIBUTE(tmp_expression_value_6, mod_consts[12]);
        if (tmp_expression_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2251;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_3;
        }
        tmp_called_value_3 = LOOKUP_ATTRIBUTE(tmp_expression_value_5, mod_consts[13]);
        Py_DECREF(tmp_expression_value_5);
        if (tmp_called_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2251;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_3;
        }
        frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2251;
        tmp_assign_source_14 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_3, mod_consts[14]);

        Py_DECREF(tmp_called_value_3);
        if (tmp_assign_source_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2251;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_3;
        }
        {
            PyObject *old = var_next_url;
            var_next_url = tmp_assign_source_14;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_2;
        int tmp_truth_name_1;
        CHECK_OBJECT(var_next_url);
        tmp_truth_name_1 = CHECK_IF_TRUE(var_next_url);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2252;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_3;
        }
        tmp_condition_result_2 = tmp_truth_name_1 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    goto loop_end_2;
    branch_no_1:;
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 2250;
        type_description_1 = "ooooooococooooooo";
        goto try_except_handler_3;
    }
    goto loop_start_2;
    loop_end_2:;
    goto try_end_1;
    // Exception handler code:
    try_except_handler_3:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto try_except_handler_2;
    // End of try:
    try_end_1:;
    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;
    {
        bool tmp_condition_result_3;
        PyObject *tmp_operand_value_1;
        if (var_next_url == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[15]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2255;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }

        tmp_operand_value_1 = var_next_url;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2255;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        tmp_condition_result_3 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_3 != false) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    {
        PyObject *tmp_assign_source_15;
        PyObject *tmp_called_value_4;
        PyObject *tmp_args_value_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_kwargs_value_1;
        tmp_called_value_4 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[16]);

        if (unlikely(tmp_called_value_4 == NULL)) {
            tmp_called_value_4 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[16]);
        }

        if (tmp_called_value_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2256;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_it));
        tmp_tuple_element_1 = Nuitka_Cell_GET(var_it);
        tmp_args_value_1 = MAKE_TUPLE_EMPTY(2);
        PyTuple_SET_ITEM0(tmp_args_value_1, 0, tmp_tuple_element_1);
        tmp_tuple_element_1 = mod_consts[17];
        PyTuple_SET_ITEM0(tmp_args_value_1, 1, tmp_tuple_element_1);
        tmp_kwargs_value_1 = DICT_COPY(mod_consts[18]);
        frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2256;
        tmp_assign_source_15 = CALL_FUNCTION(tmp_called_value_4, tmp_args_value_1, tmp_kwargs_value_1);
        Py_DECREF(tmp_args_value_1);
        Py_DECREF(tmp_kwargs_value_1);
        if (tmp_assign_source_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2256;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = var_next_url;
            var_next_url = tmp_assign_source_15;
            Py_XDECREF(old);
        }

    }
    branch_no_2:;
    {
        bool tmp_condition_result_4;
        PyObject *tmp_operand_value_2;
        if (var_next_url == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[15]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2258;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }

        tmp_operand_value_2 = var_next_url;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2258;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        tmp_condition_result_4 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_4 != false) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
    }
    branch_yes_3:;
    goto loop_start_1;
    branch_no_3:;
    {
        PyObject *tmp_assign_source_16;
        struct Nuitka_CellObject *tmp_closure_1[2];

        tmp_closure_1[0] = var_NS_MAP;
        Py_INCREF(tmp_closure_1[0]);
        tmp_closure_1[1] = var_it;
        Py_INCREF(tmp_closure_1[1]);

        tmp_assign_source_16 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__2__extract_rss$$$function__1_itunes(tmp_closure_1);

        {
            PyObject *old = var_itunes;
            var_itunes = tmp_assign_source_16;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_called_value_5;
        CHECK_OBJECT(var_itunes);
        tmp_called_value_5 = var_itunes;
        frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2266;
        tmp_assign_source_17 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_5, mod_consts[21]);

        if (tmp_assign_source_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2266;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = var_duration;
            var_duration = tmp_assign_source_17;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_18;
        PyObject *tmp_called_value_6;
        PyObject *tmp_expression_value_7;
        int tmp_or_left_truth_1;
        PyObject *tmp_or_left_value_1;
        PyObject *tmp_or_right_value_1;
        PyObject *tmp_called_value_7;
        CHECK_OBJECT(var_itunes);
        tmp_called_value_7 = var_itunes;
        frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2267;
        tmp_or_left_value_1 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_7, mod_consts[22]);

        if (tmp_or_left_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2267;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        tmp_or_left_truth_1 = CHECK_IF_TRUE(tmp_or_left_value_1);
        if (tmp_or_left_truth_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_1);

            exception_lineno = 2267;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        Py_DECREF(tmp_or_left_value_1);
        tmp_or_right_value_1 = mod_consts[23];
        Py_INCREF(tmp_or_right_value_1);
        tmp_expression_value_7 = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        tmp_expression_value_7 = tmp_or_left_value_1;
        or_end_1:;
        tmp_called_value_6 = LOOKUP_ATTRIBUTE(tmp_expression_value_7, mod_consts[24]);
        Py_DECREF(tmp_expression_value_7);
        if (tmp_called_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2267;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2267;
        tmp_assign_source_18 = CALL_FUNCTION_NO_ARGS(tmp_called_value_6);
        Py_DECREF(tmp_called_value_6);
        if (tmp_assign_source_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2267;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = var_explicit;
            var_explicit = tmp_assign_source_18;
            Py_XDECREF(old);
        }

    }
    {
        bool tmp_condition_result_5;
        PyObject *tmp_cmp_expr_left_2;
        PyObject *tmp_cmp_expr_right_2;
        CHECK_OBJECT(var_explicit);
        tmp_cmp_expr_left_2 = var_explicit;
        tmp_cmp_expr_right_2 = mod_consts[25];
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_2, tmp_cmp_expr_left_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2268;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        tmp_condition_result_5 = (tmp_res == 1) ? true : false;
        if (tmp_condition_result_5 != false) {
            goto branch_yes_4;
        } else {
            goto branch_no_4;
        }
    }
    branch_yes_4:;
    {
        PyObject *tmp_assign_source_19;
        tmp_assign_source_19 = mod_consts[26];
        {
            PyObject *old = var_age_limit;
            var_age_limit = tmp_assign_source_19;
            Py_INCREF(var_age_limit);
            Py_XDECREF(old);
        }

    }
    goto branch_end_4;
    branch_no_4:;
    {
        bool tmp_condition_result_6;
        PyObject *tmp_cmp_expr_left_3;
        PyObject *tmp_cmp_expr_right_3;
        CHECK_OBJECT(var_explicit);
        tmp_cmp_expr_left_3 = var_explicit;
        tmp_cmp_expr_right_3 = mod_consts[27];
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_3, tmp_cmp_expr_left_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2270;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        tmp_condition_result_6 = (tmp_res == 1) ? true : false;
        if (tmp_condition_result_6 != false) {
            goto branch_yes_5;
        } else {
            goto branch_no_5;
        }
    }
    branch_yes_5:;
    {
        PyObject *tmp_assign_source_20;
        tmp_assign_source_20 = mod_consts[28];
        {
            PyObject *old = var_age_limit;
            var_age_limit = tmp_assign_source_20;
            Py_INCREF(var_age_limit);
            Py_XDECREF(old);
        }

    }
    goto branch_end_5;
    branch_no_5:;
    {
        PyObject *tmp_assign_source_21;
        tmp_assign_source_21 = Py_None;
        {
            PyObject *old = var_age_limit;
            var_age_limit = tmp_assign_source_21;
            Py_INCREF(var_age_limit);
            Py_XDECREF(old);
        }

    }
    branch_end_5:;
    branch_end_4:;
    {
        PyObject *tmp_called_value_8;
        PyObject *tmp_expression_value_8;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        if (var_entries == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[29]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2275;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }

        tmp_expression_value_8 = var_entries;
        tmp_called_value_8 = LOOKUP_ATTRIBUTE(tmp_expression_value_8, mod_consts[30]);
        if (tmp_called_value_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2275;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        tmp_dict_key_1 = mod_consts[31];
        tmp_dict_value_1 = mod_consts[32];
        tmp_args_element_value_1 = _PyDict_NewPresized( 11 );
        {
            PyObject *tmp_expression_value_9;
            PyObject *tmp_called_value_9;
            PyObject *tmp_expression_value_10;
            PyObject *tmp_called_value_10;
            PyObject *tmp_args_value_2;
            PyObject *tmp_tuple_element_2;
            PyObject *tmp_kwargs_value_2;
            PyObject *tmp_called_value_11;
            PyObject *tmp_args_element_value_2;
            PyObject *tmp_called_value_12;
            PyObject *tmp_args_value_3;
            PyObject *tmp_tuple_element_3;
            PyObject *tmp_kwargs_value_3;
            int tmp_or_left_truth_2;
            PyObject *tmp_or_left_value_2;
            PyObject *tmp_or_right_value_2;
            PyObject *tmp_called_value_13;
            PyObject *tmp_args_element_value_3;
            PyObject *tmp_called_value_14;
            PyObject *tmp_args_element_value_4;
            PyObject *tmp_called_value_15;
            PyObject *tmp_args_element_value_5;
            PyObject *tmp_called_value_16;
            PyObject *tmp_args_element_value_6;
            PyObject *tmp_args_element_value_7;
            PyObject *tmp_called_value_17;
            PyObject *tmp_args_element_value_8;
            PyObject *tmp_args_element_value_9;
            PyObject *tmp_args_element_value_10;
            PyObject *tmp_called_value_18;
            PyObject *tmp_called_value_19;
            PyObject *tmp_args_element_value_11;
            PyObject *tmp_called_value_20;
            PyObject *tmp_called_value_21;
            PyObject *tmp_args_element_value_12;
            PyObject *tmp_called_value_22;
            tmp_res = PyDict_SetItem(tmp_args_element_value_1, tmp_dict_key_1, tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[33];
            if (var_next_url == NULL) {

                FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[15]);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 2277;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }

            tmp_dict_value_1 = var_next_url;
            tmp_res = PyDict_SetItem(tmp_args_element_value_1, tmp_dict_key_1, tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[34];
            CHECK_OBJECT(Nuitka_Cell_GET(var_it));
            tmp_expression_value_10 = Nuitka_Cell_GET(var_it);
            tmp_called_value_9 = LOOKUP_ATTRIBUTE(tmp_expression_value_10, mod_consts[4]);
            if (tmp_called_value_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2278;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2278;
            tmp_expression_value_9 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_9, mod_consts[35]);

            Py_DECREF(tmp_called_value_9);
            if (tmp_expression_value_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2278;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_9, mod_consts[6]);
            Py_DECREF(tmp_expression_value_9);
            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2278;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_args_element_value_1, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[36];
            tmp_called_value_10 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[16]);

            if (unlikely(tmp_called_value_10 == NULL)) {
                tmp_called_value_10 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[16]);
            }

            if (tmp_called_value_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2279;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(Nuitka_Cell_GET(var_it));
            tmp_tuple_element_2 = Nuitka_Cell_GET(var_it);
            tmp_args_value_2 = MAKE_TUPLE_EMPTY(2);
            PyTuple_SET_ITEM0(tmp_args_value_2, 0, tmp_tuple_element_2);
            tmp_tuple_element_2 = mod_consts[36];
            PyTuple_SET_ITEM0(tmp_args_value_2, 1, tmp_tuple_element_2);
            tmp_kwargs_value_2 = DICT_COPY(mod_consts[37]);
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2279;
            tmp_dict_value_1 = CALL_FUNCTION(tmp_called_value_10, tmp_args_value_2, tmp_kwargs_value_2);
            Py_DECREF(tmp_args_value_2);
            Py_DECREF(tmp_kwargs_value_2);
            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2279;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_args_element_value_1, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[38];
            tmp_called_value_11 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[39]);

            if (unlikely(tmp_called_value_11 == NULL)) {
                tmp_called_value_11 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[39]);
            }

            if (tmp_called_value_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2280;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_called_value_12 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[16]);

            if (unlikely(tmp_called_value_12 == NULL)) {
                tmp_called_value_12 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[16]);
            }

            if (tmp_called_value_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2281;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(Nuitka_Cell_GET(var_it));
            tmp_tuple_element_3 = Nuitka_Cell_GET(var_it);
            tmp_args_value_3 = MAKE_TUPLE_EMPTY(2);
            PyTuple_SET_ITEM0(tmp_args_value_3, 0, tmp_tuple_element_3);
            tmp_tuple_element_3 = mod_consts[40];
            PyTuple_SET_ITEM0(tmp_args_value_3, 1, tmp_tuple_element_3);
            tmp_kwargs_value_3 = DICT_COPY(mod_consts[37]);
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2281;
            tmp_args_element_value_2 = CALL_FUNCTION(tmp_called_value_12, tmp_args_value_3, tmp_kwargs_value_3);
            Py_DECREF(tmp_args_value_3);
            Py_DECREF(tmp_kwargs_value_3);
            if (tmp_args_element_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2281;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2280;
            tmp_dict_value_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_11, tmp_args_element_value_2);
            Py_DECREF(tmp_args_element_value_2);
            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2280;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_args_element_value_1, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[41];
            tmp_called_value_13 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[42]);

            if (unlikely(tmp_called_value_13 == NULL)) {
                tmp_called_value_13 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[42]);
            }

            if (tmp_called_value_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2282;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_duration);
            tmp_args_element_value_3 = var_duration;
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2282;
            tmp_or_left_value_2 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_13, tmp_args_element_value_3);
            if (tmp_or_left_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2282;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_or_left_truth_2 = CHECK_IF_TRUE(tmp_or_left_value_2);
            if (tmp_or_left_truth_2 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_or_left_value_2);

                exception_lineno = 2282;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            if (tmp_or_left_truth_2 == 1) {
                goto or_left_2;
            } else {
                goto or_right_2;
            }
            or_right_2:;
            Py_DECREF(tmp_or_left_value_2);
            tmp_called_value_14 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[43]);

            if (unlikely(tmp_called_value_14 == NULL)) {
                tmp_called_value_14 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[43]);
            }

            if (tmp_called_value_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2282;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_duration);
            tmp_args_element_value_4 = var_duration;
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2282;
            tmp_or_right_value_2 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_14, tmp_args_element_value_4);
            if (tmp_or_right_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2282;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_value_1 = tmp_or_right_value_2;
            goto or_end_2;
            or_left_2:;
            tmp_dict_value_1 = tmp_or_left_value_2;
            or_end_2:;
            tmp_res = PyDict_SetItem(tmp_args_element_value_1, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[44];
            tmp_called_value_15 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[45]);

            if (unlikely(tmp_called_value_15 == NULL)) {
                tmp_called_value_15 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[45]);
            }

            if (tmp_called_value_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2283;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_called_value_16 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[46]);

            if (unlikely(tmp_called_value_16 == NULL)) {
                tmp_called_value_16 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[46]);
            }

            if (tmp_called_value_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2283;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(Nuitka_Cell_GET(var_it));
            tmp_args_element_value_6 = Nuitka_Cell_GET(var_it);
            tmp_called_value_17 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[47]);

            if (unlikely(tmp_called_value_17 == NULL)) {
                tmp_called_value_17 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[47]);
            }

            if (tmp_called_value_17 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2283;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_args_element_value_8 = mod_consts[48];
            if (Nuitka_Cell_GET(var_NS_MAP) == NULL) {

                FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[49]);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 2283;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }

            tmp_args_element_value_9 = Nuitka_Cell_GET(var_NS_MAP);
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2283;
            {
                PyObject *call_args[] = {tmp_args_element_value_8, tmp_args_element_value_9};
                tmp_args_element_value_7 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_17, call_args);
            }

            if (tmp_args_element_value_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2283;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_args_element_value_10 = mod_consts[50];
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2283;
            {
                PyObject *call_args[] = {tmp_args_element_value_6, tmp_args_element_value_7, tmp_args_element_value_10};
                tmp_args_element_value_5 = CALL_FUNCTION_WITH_ARGS3(tmp_called_value_16, call_args);
            }

            Py_DECREF(tmp_args_element_value_7);
            if (tmp_args_element_value_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2283;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2283;
            tmp_dict_value_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_15, tmp_args_element_value_5);
            Py_DECREF(tmp_args_element_value_5);
            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2283;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_args_element_value_1, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[51];
            CHECK_OBJECT(var_itunes);
            tmp_called_value_18 = var_itunes;
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2284;
            tmp_dict_value_1 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_18, mod_consts[35]);

            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2284;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_args_element_value_1, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[52];
            tmp_called_value_19 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[42]);

            if (unlikely(tmp_called_value_19 == NULL)) {
                tmp_called_value_19 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[42]);
            }

            if (tmp_called_value_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2285;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_itunes);
            tmp_called_value_20 = var_itunes;
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2285;
            tmp_args_element_value_11 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_20, mod_consts[53]);

            if (tmp_args_element_value_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2285;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2285;
            tmp_dict_value_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_19, tmp_args_element_value_11);
            Py_DECREF(tmp_args_element_value_11);
            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2285;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_args_element_value_1, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[54];
            tmp_called_value_21 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[42]);

            if (unlikely(tmp_called_value_21 == NULL)) {
                tmp_called_value_21 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[42]);
            }

            if (tmp_called_value_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2286;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_itunes);
            tmp_called_value_22 = var_itunes;
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2286;
            tmp_args_element_value_12 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_22, mod_consts[55]);

            if (tmp_args_element_value_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2286;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2286;
            tmp_dict_value_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_21, tmp_args_element_value_12);
            Py_DECREF(tmp_args_element_value_12);
            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2286;
                type_description_1 = "ooooooococooooooo";
                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_args_element_value_1, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[56];
            CHECK_OBJECT(var_age_limit);
            tmp_dict_value_1 = var_age_limit;
            tmp_res = PyDict_SetItem(tmp_args_element_value_1, tmp_dict_key_1, tmp_dict_value_1);
            assert(!(tmp_res != 0));
        }
        goto dict_build_noexception_1;
        // Exception handling pass through code for dict_build:
        dict_build_exception_1:;
        Py_DECREF(tmp_called_value_8);
        Py_DECREF(tmp_args_element_value_1);
        goto try_except_handler_2;
        // Finished with no exception for dict_build:
        dict_build_noexception_1:;
        frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame.f_lineno = 2275;
        tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_8, tmp_args_element_value_1);
        Py_DECREF(tmp_called_value_8);
        Py_DECREF(tmp_args_element_value_1);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2275;
            type_description_1 = "ooooooococooooooo";
            goto try_except_handler_2;
        }
        Py_DECREF(tmp_call_result_1);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 2247;
        type_description_1 = "ooooooococooooooo";
        goto try_except_handler_2;
    }
    goto loop_start_1;
    loop_end_1:;
    goto try_end_2;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto frame_exception_exit_1;
    // End of try:
    try_end_2:;
    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    {
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        tmp_dict_key_2 = mod_consts[31];
        tmp_dict_value_2 = mod_consts[57];
        tmp_return_value = _PyDict_NewPresized( 5 );
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_2, tmp_dict_value_2);
        assert(!(tmp_res != 0));
        tmp_dict_key_2 = mod_consts[58];
        CHECK_OBJECT(par_url);
        tmp_dict_value_2 = par_url;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_2, tmp_dict_value_2);
        assert(!(tmp_res != 0));
        tmp_dict_key_2 = mod_consts[34];
        CHECK_OBJECT(var_playlist_title);
        tmp_dict_value_2 = var_playlist_title;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_2, tmp_dict_value_2);
        assert(!(tmp_res != 0));
        tmp_dict_key_2 = mod_consts[36];
        CHECK_OBJECT(var_playlist_desc);
        tmp_dict_value_2 = var_playlist_desc;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_2, tmp_dict_value_2);
        assert(!(tmp_res != 0));
        tmp_dict_key_2 = mod_consts[29];
        if (var_entries == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[29]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2295;
            type_description_1 = "ooooooococooooooo";
            goto dict_build_exception_2;
        }

        tmp_dict_value_2 = var_entries;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_2, tmp_dict_value_2);
        assert(!(tmp_res != 0));
        goto dict_build_noexception_2;
        // Exception handling pass through code for dict_build:
        dict_build_exception_2:;
        Py_DECREF(tmp_return_value);
        goto frame_exception_exit_1;
        // Finished with no exception for dict_build:
        dict_build_noexception_2:;
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_8085ace5ee20ccf11fcc49b46ce4dbf2);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_8085ace5ee20ccf11fcc49b46ce4dbf2);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_8085ace5ee20ccf11fcc49b46ce4dbf2);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_8085ace5ee20ccf11fcc49b46ce4dbf2, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_8085ace5ee20ccf11fcc49b46ce4dbf2->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_8085ace5ee20ccf11fcc49b46ce4dbf2, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_8085ace5ee20ccf11fcc49b46ce4dbf2,
        type_description_1,
        par_self,
        par_url,
        par_video_id,
        par_doc,
        var_playlist_title,
        var_playlist_desc_el,
        var_playlist_desc,
        var_NS_MAP,
        var_entries,
        var_it,
        var_next_url,
        var_enclosure_nodes,
        var_e,
        var_itunes,
        var_duration,
        var_explicit,
        var_age_limit
    );


    // Release cached frame if used for exception.
    if (frame_8085ace5ee20ccf11fcc49b46ce4dbf2 == cache_frame_8085ace5ee20ccf11fcc49b46ce4dbf2) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_8085ace5ee20ccf11fcc49b46ce4dbf2);
        cache_frame_8085ace5ee20ccf11fcc49b46ce4dbf2 = NULL;
    }

    assertFrameObject(frame_8085ace5ee20ccf11fcc49b46ce4dbf2);

    // Put the previous frame back on top.
    popFrameStack();


    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(var_playlist_title);
    Py_DECREF(var_playlist_title);
    var_playlist_title = NULL;
    Py_XDECREF(var_playlist_desc_el);
    var_playlist_desc_el = NULL;
    CHECK_OBJECT(var_playlist_desc);
    Py_DECREF(var_playlist_desc);
    var_playlist_desc = NULL;
    CHECK_OBJECT(var_NS_MAP);
    Py_DECREF(var_NS_MAP);
    var_NS_MAP = NULL;
    Py_XDECREF(var_entries);
    var_entries = NULL;
    CHECK_OBJECT(var_it);
    Py_DECREF(var_it);
    var_it = NULL;
    Py_XDECREF(var_next_url);
    var_next_url = NULL;
    Py_XDECREF(var_enclosure_nodes);
    var_enclosure_nodes = NULL;
    Py_XDECREF(var_e);
    var_e = NULL;
    Py_XDECREF(var_itunes);
    var_itunes = NULL;
    Py_XDECREF(var_duration);
    var_duration = NULL;
    Py_XDECREF(var_explicit);
    var_explicit = NULL;
    Py_XDECREF(var_age_limit);
    var_age_limit = NULL;
    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_playlist_title);
    var_playlist_title = NULL;
    Py_XDECREF(var_playlist_desc_el);
    var_playlist_desc_el = NULL;
    Py_XDECREF(var_playlist_desc);
    var_playlist_desc = NULL;
    CHECK_OBJECT(var_NS_MAP);
    Py_DECREF(var_NS_MAP);
    var_NS_MAP = NULL;
    Py_XDECREF(var_entries);
    var_entries = NULL;
    CHECK_OBJECT(var_it);
    Py_DECREF(var_it);
    var_it = NULL;
    Py_XDECREF(var_next_url);
    var_next_url = NULL;
    Py_XDECREF(var_enclosure_nodes);
    var_enclosure_nodes = NULL;
    Py_XDECREF(var_e);
    var_e = NULL;
    Py_XDECREF(var_itunes);
    var_itunes = NULL;
    Py_XDECREF(var_duration);
    var_duration = NULL;
    Py_XDECREF(var_explicit);
    var_explicit = NULL;
    Py_XDECREF(var_age_limit);
    var_age_limit = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_url);
    Py_DECREF(par_url);
    CHECK_OBJECT(par_video_id);
    Py_DECREF(par_video_id);
    CHECK_OBJECT(par_doc);
    Py_DECREF(par_doc);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_url);
    Py_DECREF(par_url);
    CHECK_OBJECT(par_video_id);
    Py_DECREF(par_video_id);
    CHECK_OBJECT(par_doc);
    Py_DECREF(par_doc);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function__2__extract_rss$$$function__1_itunes(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_key = python_pars[0];
    struct Nuitka_FrameObject *frame_3dad20957ac2f88f635f8d212acc1c28;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_3dad20957ac2f88f635f8d212acc1c28 = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_3dad20957ac2f88f635f8d212acc1c28)) {
        Py_XDECREF(cache_frame_3dad20957ac2f88f635f8d212acc1c28);

#if _DEBUG_REFCOUNTS
        if (cache_frame_3dad20957ac2f88f635f8d212acc1c28 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_3dad20957ac2f88f635f8d212acc1c28 = MAKE_FUNCTION_FRAME(codeobj_3dad20957ac2f88f635f8d212acc1c28, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_3dad20957ac2f88f635f8d212acc1c28->m_type_description == NULL);
    frame_3dad20957ac2f88f635f8d212acc1c28 = cache_frame_3dad20957ac2f88f635f8d212acc1c28;


    // Push the new frame as the currently active one.
    pushFrameStack(frame_3dad20957ac2f88f635f8d212acc1c28);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_3dad20957ac2f88f635f8d212acc1c28) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_value_1;
        PyObject *tmp_args_value_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_kwargs_value_1;
        tmp_called_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[16]);

        if (unlikely(tmp_called_value_1 == NULL)) {
            tmp_called_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[16]);
        }

        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2262;
            type_description_1 = "occ";
            goto frame_exception_exit_1;
        }
        if (Nuitka_Cell_GET(self->m_closure[1]) == NULL) {

            FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[59]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2263;
            type_description_1 = "occ";
            goto frame_exception_exit_1;
        }

        tmp_tuple_element_1 = Nuitka_Cell_GET(self->m_closure[1]);
        tmp_args_value_1 = MAKE_TUPLE_EMPTY(2);
        {
            PyObject *tmp_called_value_2;
            PyObject *tmp_args_element_value_1;
            PyObject *tmp_mod_expr_left_1;
            PyObject *tmp_mod_expr_right_1;
            PyObject *tmp_args_element_value_2;
            PyTuple_SET_ITEM0(tmp_args_value_1, 0, tmp_tuple_element_1);
            tmp_called_value_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[47]);

            if (unlikely(tmp_called_value_2 == NULL)) {
                tmp_called_value_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[47]);
            }

            if (tmp_called_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2263;
                type_description_1 = "occ";
                goto tuple_build_exception_1;
            }
            tmp_mod_expr_left_1 = mod_consts[60];
            CHECK_OBJECT(par_key);
            tmp_mod_expr_right_1 = par_key;
            tmp_args_element_value_1 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_mod_expr_left_1, tmp_mod_expr_right_1);
            if (tmp_args_element_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2263;
                type_description_1 = "occ";
                goto tuple_build_exception_1;
            }
            if (Nuitka_Cell_GET(self->m_closure[0]) == NULL) {
                Py_DECREF(tmp_args_element_value_1);
                FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[49]);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 2263;
                type_description_1 = "occ";
                goto tuple_build_exception_1;
            }

            tmp_args_element_value_2 = Nuitka_Cell_GET(self->m_closure[0]);
            frame_3dad20957ac2f88f635f8d212acc1c28->m_frame.f_lineno = 2263;
            {
                PyObject *call_args[] = {tmp_args_element_value_1, tmp_args_element_value_2};
                tmp_tuple_element_1 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_2, call_args);
            }

            Py_DECREF(tmp_args_element_value_1);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2263;
                type_description_1 = "occ";
                goto tuple_build_exception_1;
            }
            PyTuple_SET_ITEM(tmp_args_value_1, 1, tmp_tuple_element_1);
        }
        goto tuple_build_noexception_1;
        // Exception handling pass through code for tuple_build:
        tuple_build_exception_1:;
        Py_DECREF(tmp_args_value_1);
        goto frame_exception_exit_1;
        // Finished with no exception for tuple_build:
        tuple_build_noexception_1:;
        tmp_kwargs_value_1 = DICT_COPY(mod_consts[37]);
        frame_3dad20957ac2f88f635f8d212acc1c28->m_frame.f_lineno = 2262;
        tmp_return_value = CALL_FUNCTION(tmp_called_value_1, tmp_args_value_1, tmp_kwargs_value_1);
        Py_DECREF(tmp_args_value_1);
        Py_DECREF(tmp_kwargs_value_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2262;
            type_description_1 = "occ";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_3dad20957ac2f88f635f8d212acc1c28);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_3dad20957ac2f88f635f8d212acc1c28);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_3dad20957ac2f88f635f8d212acc1c28);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_3dad20957ac2f88f635f8d212acc1c28, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_3dad20957ac2f88f635f8d212acc1c28->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_3dad20957ac2f88f635f8d212acc1c28, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_3dad20957ac2f88f635f8d212acc1c28,
        type_description_1,
        par_key,
        self->m_closure[1],
        self->m_closure[0]
    );


    // Release cached frame if used for exception.
    if (frame_3dad20957ac2f88f635f8d212acc1c28 == cache_frame_3dad20957ac2f88f635f8d212acc1c28) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_3dad20957ac2f88f635f8d212acc1c28);
        cache_frame_3dad20957ac2f88f635f8d212acc1c28 = NULL;
    }

    assertFrameObject(frame_3dad20957ac2f88f635f8d212acc1c28);

    // Put the previous frame back on top.
    popFrameStack();


    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_key);
    Py_DECREF(par_key);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_key);
    Py_DECREF(par_key);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function__3__extract_camtasia(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    PyObject *par_url = python_pars[1];
    PyObject *par_video_id = python_pars[2];
    PyObject *par_webpage = python_pars[3];
    PyObject *var_camtasia_cfg = NULL;
    PyObject *var_title = NULL;
    PyObject *var_camtasia_url = NULL;
    PyObject *var_fileset_node = NULL;
    PyObject *var_entries = NULL;
    PyObject *var_n = NULL;
    PyObject *var_url_n = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    struct Nuitka_FrameObject *frame_d155beebf1b46446bdadcacf7ca7cc30;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_return_value = NULL;
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    int tmp_res;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    static struct Nuitka_FrameObject *cache_frame_d155beebf1b46446bdadcacf7ca7cc30 = NULL;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_d155beebf1b46446bdadcacf7ca7cc30)) {
        Py_XDECREF(cache_frame_d155beebf1b46446bdadcacf7ca7cc30);

#if _DEBUG_REFCOUNTS
        if (cache_frame_d155beebf1b46446bdadcacf7ca7cc30 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_d155beebf1b46446bdadcacf7ca7cc30 = MAKE_FUNCTION_FRAME(codeobj_d155beebf1b46446bdadcacf7ca7cc30, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_d155beebf1b46446bdadcacf7ca7cc30->m_type_description == NULL);
    frame_d155beebf1b46446bdadcacf7ca7cc30 = cache_frame_d155beebf1b46446bdadcacf7ca7cc30;


    // Push the new frame as the currently active one.
    pushFrameStack(frame_d155beebf1b46446bdadcacf7ca7cc30);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_d155beebf1b46446bdadcacf7ca7cc30) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_value_1;
        PyObject *tmp_expression_value_1;
        PyObject *tmp_args_value_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_kwargs_value_1;
        CHECK_OBJECT(par_self);
        tmp_expression_value_1 = par_self;
        tmp_called_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1, mod_consts[61]);
        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2301;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_tuple_element_1 = mod_consts[62];
        tmp_args_value_1 = MAKE_TUPLE_EMPTY(3);
        PyTuple_SET_ITEM0(tmp_args_value_1, 0, tmp_tuple_element_1);
        CHECK_OBJECT(par_webpage);
        tmp_tuple_element_1 = par_webpage;
        PyTuple_SET_ITEM0(tmp_args_value_1, 1, tmp_tuple_element_1);
        tmp_tuple_element_1 = mod_consts[63];
        PyTuple_SET_ITEM0(tmp_args_value_1, 2, tmp_tuple_element_1);
        tmp_kwargs_value_1 = DICT_COPY(mod_consts[37]);
        frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2301;
        tmp_assign_source_1 = CALL_FUNCTION(tmp_called_value_1, tmp_args_value_1, tmp_kwargs_value_1);
        Py_DECREF(tmp_called_value_1);
        Py_DECREF(tmp_args_value_1);
        Py_DECREF(tmp_kwargs_value_1);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2301;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_camtasia_cfg == NULL);
        var_camtasia_cfg = tmp_assign_source_1;
    }
    {
        bool tmp_condition_result_1;
        PyObject *tmp_cmp_expr_left_1;
        PyObject *tmp_cmp_expr_right_1;
        CHECK_OBJECT(var_camtasia_cfg);
        tmp_cmp_expr_left_1 = var_camtasia_cfg;
        tmp_cmp_expr_right_1 = Py_None;
        tmp_condition_result_1 = (tmp_cmp_expr_left_1 == tmp_cmp_expr_right_1) ? true : false;
        if (tmp_condition_result_1 != false) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    tmp_return_value = Py_None;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_1:;
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_value_2;
        PyObject *tmp_expression_value_2;
        PyObject *tmp_args_value_2;
        PyObject *tmp_tuple_element_2;
        PyObject *tmp_kwargs_value_2;
        CHECK_OBJECT(par_self);
        tmp_expression_value_2 = par_self;
        tmp_called_value_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_2, mod_consts[64]);
        if (tmp_called_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2307;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_tuple_element_2 = mod_consts[65];
        tmp_args_value_2 = MAKE_TUPLE_EMPTY(2);
        PyTuple_SET_ITEM0(tmp_args_value_2, 0, tmp_tuple_element_2);
        CHECK_OBJECT(par_webpage);
        tmp_tuple_element_2 = par_webpage;
        PyTuple_SET_ITEM0(tmp_args_value_2, 1, tmp_tuple_element_2);
        tmp_kwargs_value_2 = DICT_COPY(mod_consts[66]);
        frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2307;
        tmp_assign_source_2 = CALL_FUNCTION(tmp_called_value_2, tmp_args_value_2, tmp_kwargs_value_2);
        Py_DECREF(tmp_called_value_2);
        Py_DECREF(tmp_args_value_2);
        Py_DECREF(tmp_kwargs_value_2);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2307;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_title == NULL);
        var_title = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_args_element_value_2;
        tmp_called_instance_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[67]);

        if (unlikely(tmp_called_instance_1 == NULL)) {
            tmp_called_instance_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[67]);
        }

        if (tmp_called_instance_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2309;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_url);
        tmp_args_element_value_1 = par_url;
        CHECK_OBJECT(var_camtasia_cfg);
        tmp_args_element_value_2 = var_camtasia_cfg;
        frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2309;
        {
            PyObject *call_args[] = {tmp_args_element_value_1, tmp_args_element_value_2};
            tmp_assign_source_3 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_1,
                mod_consts[68],
                call_args
            );
        }

        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2309;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_camtasia_url == NULL);
        var_camtasia_url = tmp_assign_source_3;
    }
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_called_value_3;
        PyObject *tmp_expression_value_3;
        PyObject *tmp_args_value_3;
        PyObject *tmp_tuple_element_3;
        PyObject *tmp_kwargs_value_3;
        CHECK_OBJECT(par_self);
        tmp_expression_value_3 = par_self;
        tmp_called_value_3 = LOOKUP_ATTRIBUTE(tmp_expression_value_3, mod_consts[69]);
        if (tmp_called_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2310;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_camtasia_url);
        tmp_tuple_element_3 = var_camtasia_url;
        tmp_args_value_3 = MAKE_TUPLE_EMPTY(2);
        PyTuple_SET_ITEM0(tmp_args_value_3, 0, tmp_tuple_element_3);
        CHECK_OBJECT(par_video_id);
        tmp_tuple_element_3 = par_video_id;
        PyTuple_SET_ITEM0(tmp_args_value_3, 1, tmp_tuple_element_3);
        tmp_kwargs_value_3 = DICT_COPY(mod_consts[70]);
        frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2310;
        tmp_assign_source_4 = CALL_FUNCTION(tmp_called_value_3, tmp_args_value_3, tmp_kwargs_value_3);
        Py_DECREF(tmp_called_value_3);
        Py_DECREF(tmp_args_value_3);
        Py_DECREF(tmp_kwargs_value_3);
        if (tmp_assign_source_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2310;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_camtasia_cfg;
            assert(old != NULL);
            var_camtasia_cfg = tmp_assign_source_4;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_called_value_4;
        PyObject *tmp_expression_value_4;
        CHECK_OBJECT(var_camtasia_cfg);
        tmp_expression_value_4 = var_camtasia_cfg;
        tmp_called_value_4 = LOOKUP_ATTRIBUTE(tmp_expression_value_4, mod_consts[4]);
        if (tmp_called_value_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2314;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2314;
        tmp_assign_source_5 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_4, mod_consts[71]);

        Py_DECREF(tmp_called_value_4);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2314;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_fileset_node == NULL);
        var_fileset_node = tmp_assign_source_5;
    }
    {
        PyObject *tmp_assign_source_6;
        tmp_assign_source_6 = MAKE_LIST_EMPTY(0);
        assert(var_entries == NULL);
        var_entries = tmp_assign_source_6;
    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_iter_arg_1;
        PyObject *tmp_called_instance_2;
        CHECK_OBJECT(var_fileset_node);
        tmp_called_instance_2 = var_fileset_node;
        frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2317;
        tmp_iter_arg_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, mod_consts[72]);
        if (tmp_iter_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2317;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_7 = MAKE_ITERATOR(tmp_iter_arg_1);
        Py_DECREF(tmp_iter_arg_1);
        if (tmp_assign_source_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2317;
            type_description_1 = "ooooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_1__for_iterator == NULL);
        tmp_for_loop_1__for_iterator = tmp_assign_source_7;
    }
    // Tried code:
    loop_start_1:;
    {
        PyObject *tmp_next_source_1;
        PyObject *tmp_assign_source_8;
        CHECK_OBJECT(tmp_for_loop_1__for_iterator);
        tmp_next_source_1 = tmp_for_loop_1__for_iterator;
        tmp_assign_source_8 = ITERATOR_NEXT(tmp_next_source_1);
        if (tmp_assign_source_8 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_1;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ooooooooooo";
                exception_lineno = 2317;
                goto try_except_handler_2;
            }
        }

        {
            PyObject *old = tmp_for_loop_1__iter_value;
            tmp_for_loop_1__iter_value = tmp_assign_source_8;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_9;
        CHECK_OBJECT(tmp_for_loop_1__iter_value);
        tmp_assign_source_9 = tmp_for_loop_1__iter_value;
        {
            PyObject *old = var_n;
            var_n = tmp_assign_source_9;
            Py_INCREF(var_n);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_called_value_5;
        PyObject *tmp_expression_value_5;
        CHECK_OBJECT(var_n);
        tmp_expression_value_5 = var_n;
        tmp_called_value_5 = LOOKUP_ATTRIBUTE(tmp_expression_value_5, mod_consts[4]);
        if (tmp_called_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2318;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2318;
        tmp_assign_source_10 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_5, mod_consts[73]);

        Py_DECREF(tmp_called_value_5);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2318;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = var_url_n;
            var_url_n = tmp_assign_source_10;
            Py_XDECREF(old);
        }

    }
    {
        bool tmp_condition_result_2;
        PyObject *tmp_cmp_expr_left_2;
        PyObject *tmp_cmp_expr_right_2;
        CHECK_OBJECT(var_url_n);
        tmp_cmp_expr_left_2 = var_url_n;
        tmp_cmp_expr_right_2 = Py_None;
        tmp_condition_result_2 = (tmp_cmp_expr_left_2 == tmp_cmp_expr_right_2) ? true : false;
        if (tmp_condition_result_2 != false) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    goto loop_start_1;
    branch_no_2:;
    {
        PyObject *tmp_called_value_6;
        PyObject *tmp_expression_value_6;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_value_3;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        PyObject *tmp_expression_value_7;
        PyObject *tmp_called_value_7;
        PyObject *tmp_expression_value_8;
        PyObject *tmp_expression_value_9;
        PyObject *tmp_args_element_value_4;
        PyObject *tmp_expression_value_10;
        PyObject *tmp_called_value_8;
        PyObject *tmp_expression_value_11;
        PyObject *tmp_expression_value_12;
        PyObject *tmp_subscript_value_1;
        PyObject *tmp_subscript_value_2;
        if (var_entries == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[29]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2322;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }

        tmp_expression_value_6 = var_entries;
        tmp_called_value_6 = LOOKUP_ATTRIBUTE(tmp_expression_value_6, mod_consts[30]);
        if (tmp_called_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2322;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_dict_key_1 = mod_consts[58];
        tmp_expression_value_9 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[74]);

        if (unlikely(tmp_expression_value_9 == NULL)) {
            tmp_expression_value_9 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[74]);
        }

        if (tmp_expression_value_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);

            exception_lineno = 2323;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_expression_value_8 = LOOKUP_ATTRIBUTE(tmp_expression_value_9, mod_consts[75]);
        if (tmp_expression_value_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);

            exception_lineno = 2323;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_called_value_7 = LOOKUP_ATTRIBUTE(tmp_expression_value_8, mod_consts[76]);
        Py_DECREF(tmp_expression_value_8);
        if (tmp_called_value_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);

            exception_lineno = 2323;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        CHECK_OBJECT(var_url_n);
        tmp_expression_value_12 = var_url_n;
        tmp_expression_value_11 = LOOKUP_ATTRIBUTE(tmp_expression_value_12, mod_consts[6]);
        if (tmp_expression_value_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);
            Py_DECREF(tmp_called_value_7);

            exception_lineno = 2323;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_called_value_8 = LOOKUP_ATTRIBUTE(tmp_expression_value_11, mod_consts[77]);
        Py_DECREF(tmp_expression_value_11);
        if (tmp_called_value_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);
            Py_DECREF(tmp_called_value_7);

            exception_lineno = 2323;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2323;
        tmp_expression_value_10 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_8, mod_consts[78]);

        Py_DECREF(tmp_called_value_8);
        if (tmp_expression_value_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);
            Py_DECREF(tmp_called_value_7);

            exception_lineno = 2323;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_subscript_value_1 = mod_consts[79];
        tmp_args_element_value_4 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_value_10, tmp_subscript_value_1, 2);
        Py_DECREF(tmp_expression_value_10);
        if (tmp_args_element_value_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);
            Py_DECREF(tmp_called_value_7);

            exception_lineno = 2323;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2323;
        tmp_expression_value_7 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_7, tmp_args_element_value_4);
        Py_DECREF(tmp_called_value_7);
        Py_DECREF(tmp_args_element_value_4);
        if (tmp_expression_value_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);

            exception_lineno = 2323;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_subscript_value_2 = mod_consts[28];
        tmp_dict_value_1 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_value_7, tmp_subscript_value_2, 0);
        Py_DECREF(tmp_expression_value_7);
        if (tmp_dict_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);

            exception_lineno = 2323;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        tmp_args_element_value_3 = _PyDict_NewPresized( 4 );
        {
            PyObject *tmp_mod_expr_left_1;
            PyObject *tmp_mod_expr_right_1;
            PyObject *tmp_tuple_element_4;
            PyObject *tmp_called_value_9;
            PyObject *tmp_expression_value_14;
            PyObject *tmp_args_element_value_5;
            PyObject *tmp_args_element_value_6;
            PyObject *tmp_expression_value_15;
            PyObject *tmp_called_value_10;
            PyObject *tmp_args_element_value_7;
            PyObject *tmp_expression_value_16;
            PyObject *tmp_called_value_11;
            PyObject *tmp_expression_value_17;
            tmp_res = PyDict_SetItem(tmp_args_element_value_3, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[34];
            tmp_mod_expr_left_1 = mod_consts[80];
            CHECK_OBJECT(var_title);
            tmp_tuple_element_4 = var_title;
            tmp_mod_expr_right_1 = MAKE_TUPLE_EMPTY(2);
            {
                PyObject *tmp_expression_value_13;
                PyTuple_SET_ITEM0(tmp_mod_expr_right_1, 0, tmp_tuple_element_4);
                CHECK_OBJECT(var_n);
                tmp_expression_value_13 = var_n;
                tmp_tuple_element_4 = LOOKUP_ATTRIBUTE(tmp_expression_value_13, mod_consts[81]);
                if (tmp_tuple_element_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 2324;
                    type_description_1 = "ooooooooooo";
                    goto tuple_build_exception_1;
                }
                PyTuple_SET_ITEM(tmp_mod_expr_right_1, 1, tmp_tuple_element_4);
            }
            goto tuple_build_noexception_1;
            // Exception handling pass through code for tuple_build:
            tuple_build_exception_1:;
            Py_DECREF(tmp_mod_expr_right_1);
            goto dict_build_exception_1;
            // Finished with no exception for tuple_build:
            tuple_build_noexception_1:;
            tmp_dict_value_1 = BINARY_OPERATION_MOD_OBJECT_UNICODE_TUPLE(tmp_mod_expr_left_1, tmp_mod_expr_right_1);
            Py_DECREF(tmp_mod_expr_right_1);
            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2324;
                type_description_1 = "ooooooooooo";
                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_args_element_value_3, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[33];
            tmp_expression_value_14 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[67]);

            if (unlikely(tmp_expression_value_14 == NULL)) {
                tmp_expression_value_14 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[67]);
            }

            if (tmp_expression_value_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2325;
                type_description_1 = "ooooooooooo";
                goto dict_build_exception_1;
            }
            tmp_called_value_9 = LOOKUP_ATTRIBUTE(tmp_expression_value_14, mod_consts[68]);
            if (tmp_called_value_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2325;
                type_description_1 = "ooooooooooo";
                goto dict_build_exception_1;
            }
            if (par_url == NULL) {
                Py_DECREF(tmp_called_value_9);
                FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[33]);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 2325;
                type_description_1 = "ooooooooooo";
                goto dict_build_exception_1;
            }

            tmp_args_element_value_5 = par_url;
            CHECK_OBJECT(var_url_n);
            tmp_expression_value_15 = var_url_n;
            tmp_args_element_value_6 = LOOKUP_ATTRIBUTE(tmp_expression_value_15, mod_consts[6]);
            if (tmp_args_element_value_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_value_9);

                exception_lineno = 2325;
                type_description_1 = "ooooooooooo";
                goto dict_build_exception_1;
            }
            frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2325;
            {
                PyObject *call_args[] = {tmp_args_element_value_5, tmp_args_element_value_6};
                tmp_dict_value_1 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_9, call_args);
            }

            Py_DECREF(tmp_called_value_9);
            Py_DECREF(tmp_args_element_value_6);
            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2325;
                type_description_1 = "ooooooooooo";
                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_args_element_value_3, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
            tmp_dict_key_1 = mod_consts[41];
            tmp_called_value_10 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[82]);

            if (unlikely(tmp_called_value_10 == NULL)) {
                tmp_called_value_10 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[82]);
            }

            if (tmp_called_value_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2326;
                type_description_1 = "ooooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_n);
            tmp_expression_value_17 = var_n;
            tmp_called_value_11 = LOOKUP_ATTRIBUTE(tmp_expression_value_17, mod_consts[4]);
            if (tmp_called_value_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2326;
                type_description_1 = "ooooooooooo";
                goto dict_build_exception_1;
            }
            frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2326;
            tmp_expression_value_16 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_11, mod_consts[83]);

            Py_DECREF(tmp_called_value_11);
            if (tmp_expression_value_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2326;
                type_description_1 = "ooooooooooo";
                goto dict_build_exception_1;
            }
            tmp_args_element_value_7 = LOOKUP_ATTRIBUTE(tmp_expression_value_16, mod_consts[6]);
            Py_DECREF(tmp_expression_value_16);
            if (tmp_args_element_value_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2326;
                type_description_1 = "ooooooooooo";
                goto dict_build_exception_1;
            }
            frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2326;
            tmp_dict_value_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_10, tmp_args_element_value_7);
            Py_DECREF(tmp_args_element_value_7);
            if (tmp_dict_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2326;
                type_description_1 = "ooooooooooo";
                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_args_element_value_3, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            assert(!(tmp_res != 0));
        }
        goto dict_build_noexception_1;
        // Exception handling pass through code for dict_build:
        dict_build_exception_1:;
        Py_DECREF(tmp_called_value_6);
        Py_DECREF(tmp_args_element_value_3);
        goto try_except_handler_2;
        // Finished with no exception for dict_build:
        dict_build_noexception_1:;
        frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame.f_lineno = 2322;
        tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_6, tmp_args_element_value_3);
        Py_DECREF(tmp_called_value_6);
        Py_DECREF(tmp_args_element_value_3);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2322;
            type_description_1 = "ooooooooooo";
            goto try_except_handler_2;
        }
        Py_DECREF(tmp_call_result_1);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 2317;
        type_description_1 = "ooooooooooo";
        goto try_except_handler_2;
    }
    goto loop_start_1;
    loop_end_1:;
    goto try_end_1;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;
    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    {
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        tmp_dict_key_2 = mod_consts[31];
        tmp_dict_value_2 = mod_consts[57];
        tmp_return_value = _PyDict_NewPresized( 3 );
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_2, tmp_dict_value_2);
        assert(!(tmp_res != 0));
        tmp_dict_key_2 = mod_consts[29];
        if (var_entries == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[29]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2331;
            type_description_1 = "ooooooooooo";
            goto dict_build_exception_2;
        }

        tmp_dict_value_2 = var_entries;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_2, tmp_dict_value_2);
        assert(!(tmp_res != 0));
        tmp_dict_key_2 = mod_consts[34];
        CHECK_OBJECT(var_title);
        tmp_dict_value_2 = var_title;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_2, tmp_dict_value_2);
        assert(!(tmp_res != 0));
        goto dict_build_noexception_2;
        // Exception handling pass through code for dict_build:
        dict_build_exception_2:;
        Py_DECREF(tmp_return_value);
        goto frame_exception_exit_1;
        // Finished with no exception for dict_build:
        dict_build_noexception_2:;
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_d155beebf1b46446bdadcacf7ca7cc30);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_d155beebf1b46446bdadcacf7ca7cc30);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_d155beebf1b46446bdadcacf7ca7cc30);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_d155beebf1b46446bdadcacf7ca7cc30, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_d155beebf1b46446bdadcacf7ca7cc30->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_d155beebf1b46446bdadcacf7ca7cc30, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_d155beebf1b46446bdadcacf7ca7cc30,
        type_description_1,
        par_self,
        par_url,
        par_video_id,
        par_webpage,
        var_camtasia_cfg,
        var_title,
        var_camtasia_url,
        var_fileset_node,
        var_entries,
        var_n,
        var_url_n
    );


    // Release cached frame if used for exception.
    if (frame_d155beebf1b46446bdadcacf7ca7cc30 == cache_frame_d155beebf1b46446bdadcacf7ca7cc30) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_d155beebf1b46446bdadcacf7ca7cc30);
        cache_frame_d155beebf1b46446bdadcacf7ca7cc30 = NULL;
    }

    assertFrameObject(frame_d155beebf1b46446bdadcacf7ca7cc30);

    // Put the previous frame back on top.
    popFrameStack();


    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_camtasia_cfg);
    var_camtasia_cfg = NULL;
    Py_XDECREF(var_title);
    var_title = NULL;
    Py_XDECREF(var_camtasia_url);
    var_camtasia_url = NULL;
    Py_XDECREF(var_fileset_node);
    var_fileset_node = NULL;
    Py_XDECREF(var_entries);
    var_entries = NULL;
    Py_XDECREF(var_n);
    var_n = NULL;
    Py_XDECREF(var_url_n);
    var_url_n = NULL;
    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_camtasia_cfg);
    var_camtasia_cfg = NULL;
    Py_XDECREF(var_title);
    var_title = NULL;
    Py_XDECREF(var_camtasia_url);
    var_camtasia_url = NULL;
    Py_XDECREF(var_fileset_node);
    var_fileset_node = NULL;
    Py_XDECREF(var_entries);
    var_entries = NULL;
    Py_XDECREF(var_n);
    var_n = NULL;
    Py_XDECREF(var_url_n);
    var_url_n = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_url);
    Py_DECREF(par_url);
    CHECK_OBJECT(par_video_id);
    Py_DECREF(par_video_id);
    CHECK_OBJECT(par_webpage);
    Py_DECREF(par_webpage);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    CHECK_OBJECT(par_url);
    Py_DECREF(par_url);
    CHECK_OBJECT(par_video_id);
    Py_DECREF(par_video_id);
    CHECK_OBJECT(par_webpage);
    Py_DECREF(par_webpage);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function__4__real_extract(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_self = python_pars[0];
    struct Nuitka_CellObject *par_url = Nuitka_Cell_New1(python_pars[1]);
    PyObject *var_parsed_url = NULL;
    PyObject *var_default_search = NULL;
    PyObject *var_smuggled_data = NULL;
    PyObject *var_force_videoid = NULL;
    PyObject *var_is_intentional = NULL;
    PyObject *var_video_id = NULL;
    PyObject *var_head_req = NULL;
    PyObject *var_head_response = NULL;
    PyObject *var_new_url = NULL;
    PyObject *var_full_response = NULL;
    PyObject *var_request = NULL;
    PyObject *var_info_dict = NULL;
    PyObject *var_content_type = NULL;
    PyObject *var_m = NULL;
    PyObject *var_format_id = NULL;
    PyObject *var_formats = NULL;
    PyObject *var_force = NULL;
    PyObject *var_first_bytes = NULL;
    struct Nuitka_CellObject *var_webpage = Nuitka_Cell_Empty();
    PyObject *var_doc = NULL;
    PyObject *var_smil = NULL;
    PyObject *var_camtasia_res = NULL;
    PyObject *var_video_title = NULL;
    PyObject *var_age_limit = NULL;
    PyObject *var_AGE_LIMIT_MARKERS = NULL;
    PyObject *var_video_uploader = NULL;
    PyObject *var_video_description = NULL;
    PyObject *var_video_thumbnail = NULL;
    PyObject *var_bc_urls = NULL;
    PyObject *var_entries = NULL;
    PyObject *var_nexx_urls = NULL;
    PyObject *var_nexx_embed_urls = NULL;
    PyObject *var_tp_urls = NULL;
    PyObject *var_arc_urls = NULL;
    PyObject *var_mychannels_urls = NULL;
    PyObject *var_matches = NULL;
    PyObject *var_vimeo_urls = NULL;
    PyObject *var_vhx_url = NULL;
    PyObject *var_vid_me_embed_url = NULL;
    PyObject *var_youtube_urls = NULL;
    PyObject *var_playlists = NULL;
    PyObject *var_dailymail_urls = NULL;
    PyObject *var_teachable_url = NULL;
    PyObject *var_wistia_urls = NULL;
    PyObject *var_playlist = NULL;
    PyObject *var_entry = NULL;
    PyObject *var_svt_url = NULL;
    PyObject *var_mobj = NULL;
    PyObject *var_burl = NULL;
    PyObject *var_embed_token = NULL;
    PyObject *var_embeds = NULL;
    PyObject *var_facebook_urls = NULL;
    PyObject *var_odnoklassniki_url = NULL;
    PyObject *var_sibnet_urls = NULL;
    PyObject *var_simplecast_urls = NULL;
    PyObject *var_rutv_url = NULL;
    PyObject *var_tvc_url = NULL;
    PyObject *var_sportbox_urls = NULL;
    PyObject *var_xhamster_urls = NULL;
    PyObject *var_tnaflix_urls = NULL;
    PyObject *var_pornhub_urls = NULL;
    PyObject *var_drtuber_urls = NULL;
    PyObject *var_redtube_urls = NULL;
    PyObject *var_tube8_urls = NULL;
    PyObject *var_mofosex_urls = NULL;
    PyObject *var_spankwire_urls = NULL;
    PyObject *var_youporn_urls = NULL;
    PyObject *var_ustream_url = NULL;
    PyObject *var_arte_urls = NULL;
    PyObject *var_myvi_url = NULL;
    PyObject *var_soundcloud_urls = NULL;
    PyObject *var_tunein_urls = NULL;
    PyObject *var_mtvservices_url = NULL;
    PyObject *var_kaltura_urls = NULL;
    PyObject *var_eagleplatform_url = NULL;
    PyObject *var_pladform_url = NULL;
    PyObject *var_videomore_url = NULL;
    PyObject *var_webcaster_url = NULL;
    PyObject *var_nbc_sports_url = NULL;
    PyObject *var_nbc_news_embed_url = NULL;
    PyObject *var_google_drive_url = NULL;
    PyObject *var_senate_isvp_url = NULL;
    PyObject *var_kinja_embed_urls = NULL;
    PyObject *var_onionstudios_url = NULL;
    PyObject *var_viewlift_url = NULL;
    PyObject *var_jwplatform_urls = NULL;
    PyObject *var_digiteka_url = NULL;
    PyObject *var_arkena_url = NULL;
    PyObject *var_piksel_url = NULL;
    PyObject *var_limelight_urls = NULL;
    PyObject *var_anvato_urls = NULL;
    PyObject *var_info = NULL;
    PyObject *var_instagram_embed_url = NULL;
    PyObject *var_threeqsdn_url = NULL;
    PyObject *var_vbox7_url = NULL;
    PyObject *var_dbtv_urls = NULL;
    PyObject *var_videa_urls = NULL;
    PyObject *var_twentymin_urls = NULL;
    PyObject *var_videopress_urls = NULL;
    PyObject *var_rutube_urls = NULL;
    PyObject *var_wapo_urls = NULL;
    PyObject *var_mediaset_urls = NULL;
    PyObject *var_joj_urls = NULL;
    PyObject *var_mpfn_urls = NULL;
    PyObject *var_vzaar_urls = NULL;
    PyObject *var_channel9_urls = NULL;
    PyObject *var_vshare_urls = NULL;
    PyObject *var_mediasite_urls = NULL;
    PyObject *var_springboardplatform_urls = NULL;
    PyObject *var_yapfiles_urls = NULL;
    PyObject *var_vice_urls = NULL;
    PyObject *var_xfileshare_urls = NULL;
    PyObject *var_cloudflarestream_urls = NULL;
    PyObject *var_peertube_urls = NULL;
    PyObject *var_indavideo_urls = NULL;
    PyObject *var_apa_urls = NULL;
    PyObject *var_foxnews_urls = NULL;
    PyObject *var_sharevideos_urls = NULL;
    PyObject *var_viqeo_urls = NULL;
    PyObject *var_expressen_urls = NULL;
    PyObject *var_zype_urls = NULL;
    PyObject *var_num = NULL;
    PyObject *var_jwplayer_data = NULL;
    PyObject *var_sources = NULL;
    PyObject *var_source = NULL;
    PyObject *var_src = NULL;
    PyObject *var_src_type = NULL;
    PyObject *var_ext = NULL;
    PyObject *var_json_ld = NULL;
    struct Nuitka_CellObject *var_check_video = Nuitka_Cell_Empty();
    PyObject *var_filter_video = NULL;
    PyObject *var_found = NULL;
    PyObject *var_m_video_type = NULL;
    PyObject *var_refresh_header = NULL;
    PyObject *var_embed_url = NULL;
    PyObject *var_video_url = NULL;
    PyObject *var_entry_info_dict = NULL;
    PyObject *var_e = NULL;
    PyObject *outline_0_var_bc_url = NULL;
    PyObject *outline_1_var_mediasite_url = NULL;
    PyObject *outline_2_var_sharevideos_mobj = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_for_loop_3__for_iterator = NULL;
    PyObject *tmp_for_loop_3__iter_value = NULL;
    PyObject *tmp_for_loop_4__for_iterator = NULL;
    PyObject *tmp_for_loop_4__iter_value = NULL;
    PyObject *tmp_for_loop_5__for_iterator = NULL;
    PyObject *tmp_for_loop_5__iter_value = NULL;
    PyObject *tmp_for_loop_6__for_iterator = NULL;
    PyObject *tmp_for_loop_6__iter_value = NULL;
    PyObject *tmp_genexpr_1__$0 = NULL;
    PyObject *tmp_listcomp_1__$0 = NULL;
    PyObject *tmp_listcomp_1__contraction = NULL;
    PyObject *tmp_listcomp_1__iter_value_0 = NULL;
    PyObject *tmp_listcomp_2__$0 = NULL;
    PyObject *tmp_listcomp_2__contraction = NULL;
    PyObject *tmp_listcomp_2__iter_value_0 = NULL;
    PyObject *tmp_listcomp_3__$0 = NULL;
    PyObject *tmp_listcomp_3__contraction = NULL;
    PyObject *tmp_listcomp_3__iter_value_0 = NULL;
    PyObject *tmp_tuple_unpack_1__element_1 = NULL;
    PyObject *tmp_tuple_unpack_1__element_2 = NULL;
    PyObject *tmp_tuple_unpack_1__source_iter = NULL;
    PyObject *tmp_tuple_unpack_2__element_1 = NULL;
    PyObject *tmp_tuple_unpack_2__element_2 = NULL;
    PyObject *tmp_tuple_unpack_2__source_iter = NULL;
    PyObject *tmp_tuple_unpack_3__element_1 = NULL;
    PyObject *tmp_tuple_unpack_3__element_2 = NULL;
    PyObject *tmp_tuple_unpack_3__source_iter = NULL;
    struct Nuitka_FrameObject *frame_713f709215410de619f38bbb0405e5b8;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_return_value = NULL;
    int tmp_res;
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    bool tmp_result;
    PyObject *tmp_iterator_attempt;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *tmp_dictset_value;
    PyObject *tmp_dictset_dict;
    PyObject *tmp_dictset_key;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    struct Nuitka_ExceptionStackItem exception_preserved_1;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    struct Nuitka_FrameObject *frame_d5410f41becd5e1a240995c7a89c98a1_2;
    NUITKA_MAY_BE_UNUSED char const *type_description_2 = NULL;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    static struct Nuitka_FrameObject *cache_frame_d5410f41becd5e1a240995c7a89c98a1_2 = NULL;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    struct Nuitka_FrameObject *frame_6df4876305f5a7f7c039ed9e97e0ad34_3;
    NUITKA_MAY_BE_UNUSED char const *type_description_3 = NULL;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;
    static struct Nuitka_FrameObject *cache_frame_6df4876305f5a7f7c039ed9e97e0ad34_3 = NULL;
    PyObject *exception_keeper_type_9;
    PyObject *exception_keeper_value_9;
    PyTracebackObject *exception_keeper_tb_9;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_9;
    struct Nuitka_FrameObject *frame_da6cf79541b6741dd6f53859a67ff7a5_4;
    NUITKA_MAY_BE_UNUSED char const *type_description_4 = NULL;
    PyObject *exception_keeper_type_10;
    PyObject *exception_keeper_value_10;
    PyTracebackObject *exception_keeper_tb_10;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_10;
    static struct Nuitka_FrameObject *cache_frame_da6cf79541b6741dd6f53859a67ff7a5_4 = NULL;
    PyObject *exception_keeper_type_11;
    PyObject *exception_keeper_value_11;
    PyTracebackObject *exception_keeper_tb_11;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_11;
    PyObject *exception_keeper_type_12;
    PyObject *exception_keeper_value_12;
    PyTracebackObject *exception_keeper_tb_12;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_12;
    PyObject *exception_keeper_type_13;
    PyObject *exception_keeper_value_13;
    PyTracebackObject *exception_keeper_tb_13;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_13;
    PyObject *exception_keeper_type_14;
    PyObject *exception_keeper_value_14;
    PyTracebackObject *exception_keeper_tb_14;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_14;
    PyObject *exception_keeper_type_15;
    PyObject *exception_keeper_value_15;
    PyTracebackObject *exception_keeper_tb_15;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_15;
    PyObject *exception_keeper_type_16;
    PyObject *exception_keeper_value_16;
    PyTracebackObject *exception_keeper_tb_16;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_16;
    struct Nuitka_ExceptionStackItem exception_preserved_2;
    PyObject *exception_keeper_type_17;
    PyObject *exception_keeper_value_17;
    PyTracebackObject *exception_keeper_tb_17;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_17;
    PyObject *exception_keeper_type_18;
    PyObject *exception_keeper_value_18;
    PyTracebackObject *exception_keeper_tb_18;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_18;
    PyObject *exception_keeper_type_19;
    PyObject *exception_keeper_value_19;
    PyTracebackObject *exception_keeper_tb_19;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_19;
    PyObject *exception_keeper_type_20;
    PyObject *exception_keeper_value_20;
    PyTracebackObject *exception_keeper_tb_20;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_20;
    PyObject *exception_keeper_type_21;
    PyObject *exception_keeper_value_21;
    PyTracebackObject *exception_keeper_tb_21;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_21;
    PyObject *exception_keeper_type_22;
    PyObject *exception_keeper_value_22;
    PyTracebackObject *exception_keeper_tb_22;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_22;
    static struct Nuitka_FrameObject *cache_frame_713f709215410de619f38bbb0405e5b8 = NULL;
    PyObject *exception_keeper_type_23;
    PyObject *exception_keeper_value_23;
    PyTracebackObject *exception_keeper_tb_23;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_23;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_713f709215410de619f38bbb0405e5b8)) {
        Py_XDECREF(cache_frame_713f709215410de619f38bbb0405e5b8);

#if _DEBUG_REFCOUNTS
        if (cache_frame_713f709215410de619f38bbb0405e5b8 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_713f709215410de619f38bbb0405e5b8 = MAKE_FUNCTION_FRAME(codeobj_713f709215410de619f38bbb0405e5b8, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_713f709215410de619f38bbb0405e5b8->m_type_description == NULL);
    frame_713f709215410de619f38bbb0405e5b8 = cache_frame_713f709215410de619f38bbb0405e5b8;


    // Push the new frame as the currently active one.
    pushFrameStack(frame_713f709215410de619f38bbb0405e5b8);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_713f709215410de619f38bbb0405e5b8) == 2); // Frame stack

    // Framed code:
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_called_value_1;
        PyObject *tmp_expression_value_1;
        PyObject *tmp_call_result_1;
        int tmp_truth_name_1;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_expression_value_1 = Nuitka_Cell_GET(par_url);
        tmp_called_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1, mod_consts[85]);
        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2336;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2336;
        tmp_call_result_1 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_1, mod_consts[86]);

        Py_DECREF(tmp_called_value_1);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2336;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_1);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_1);

            exception_lineno = 2336;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = tmp_truth_name_1 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_1);
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    {
        PyObject *tmp_called_value_2;
        PyObject *tmp_expression_value_2;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_add_expr_left_1;
        PyObject *tmp_add_expr_right_1;
        PyObject *tmp_called_instance_1;
        CHECK_OBJECT(par_self);
        tmp_expression_value_2 = par_self;
        tmp_called_value_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_2, mod_consts[87]);
        if (tmp_called_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2337;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_self);
        tmp_called_instance_1 = par_self;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2337;
        tmp_add_expr_left_1 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, mod_consts[88]);
        if (tmp_add_expr_left_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_2);

            exception_lineno = 2337;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_add_expr_right_1 = Nuitka_Cell_GET(par_url);
        tmp_args_element_value_1 = BINARY_OPERATION_ADD_OBJECT_OBJECT_OBJECT(tmp_add_expr_left_1, tmp_add_expr_right_1);
        Py_DECREF(tmp_add_expr_left_1);
        if (tmp_args_element_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_2);

            exception_lineno = 2337;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2337;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_2, tmp_args_element_value_1);
        Py_DECREF(tmp_called_value_2);
        Py_DECREF(tmp_args_element_value_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2337;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_1:;
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_args_element_value_2;
        tmp_called_instance_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[67]);

        if (unlikely(tmp_called_instance_2 == NULL)) {
            tmp_called_instance_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[67]);
        }

        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2339;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_2 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2339;
        tmp_assign_source_1 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_2, mod_consts[89], tmp_args_element_value_2);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2339;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_parsed_url == NULL);
        var_parsed_url = tmp_assign_source_1;
    }
    {
        bool tmp_condition_result_2;
        PyObject *tmp_operand_value_1;
        PyObject *tmp_expression_value_3;
        CHECK_OBJECT(var_parsed_url);
        tmp_expression_value_3 = var_parsed_url;
        tmp_operand_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_3, mod_consts[90]);
        if (tmp_operand_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2340;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_1);
        Py_DECREF(tmp_operand_value_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2340;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_2 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_2 != false) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_value_3;
        PyObject *tmp_expression_value_4;
        PyObject *tmp_expression_value_5;
        PyObject *tmp_expression_value_6;
        CHECK_OBJECT(par_self);
        tmp_expression_value_6 = par_self;
        tmp_expression_value_5 = LOOKUP_ATTRIBUTE(tmp_expression_value_6, mod_consts[0]);
        if (tmp_expression_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2341;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_4 = LOOKUP_ATTRIBUTE(tmp_expression_value_5, mod_consts[91]);
        Py_DECREF(tmp_expression_value_5);
        if (tmp_expression_value_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2341;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_3 = LOOKUP_ATTRIBUTE(tmp_expression_value_4, mod_consts[13]);
        Py_DECREF(tmp_expression_value_4);
        if (tmp_called_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2341;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2341;
        tmp_assign_source_2 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_3, mod_consts[92]);

        Py_DECREF(tmp_called_value_3);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2341;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_default_search == NULL);
        var_default_search = tmp_assign_source_2;
    }
    {
        bool tmp_condition_result_3;
        PyObject *tmp_cmp_expr_left_1;
        PyObject *tmp_cmp_expr_right_1;
        CHECK_OBJECT(var_default_search);
        tmp_cmp_expr_left_1 = var_default_search;
        tmp_cmp_expr_right_1 = Py_None;
        tmp_condition_result_3 = (tmp_cmp_expr_left_1 == tmp_cmp_expr_right_1) ? true : false;
        if (tmp_condition_result_3 != false) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
    }
    branch_yes_3:;
    {
        PyObject *tmp_assign_source_3;
        tmp_assign_source_3 = mod_consts[93];
        {
            PyObject *old = var_default_search;
            assert(old != NULL);
            var_default_search = tmp_assign_source_3;
            Py_INCREF(var_default_search);
            Py_DECREF(old);
        }

    }
    branch_no_3:;
    {
        bool tmp_condition_result_4;
        PyObject *tmp_cmp_expr_left_2;
        PyObject *tmp_cmp_expr_right_2;
        CHECK_OBJECT(var_default_search);
        tmp_cmp_expr_left_2 = var_default_search;
        tmp_cmp_expr_right_2 = mod_consts[94];
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_2, tmp_cmp_expr_left_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2345;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_4 = (tmp_res == 1) ? true : false;
        if (tmp_condition_result_4 != false) {
            goto branch_yes_4;
        } else {
            goto branch_no_4;
        }
    }
    branch_yes_4:;
    {
        nuitka_bool tmp_condition_result_5;
        PyObject *tmp_called_instance_3;
        PyObject *tmp_call_result_2;
        PyObject *tmp_args_element_value_3;
        PyObject *tmp_args_element_value_4;
        int tmp_truth_name_2;
        tmp_called_instance_3 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_3 == NULL)) {
            tmp_called_instance_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2346;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_3 = mod_consts[97];
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_4 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2346;
        {
            PyObject *call_args[] = {tmp_args_element_value_3, tmp_args_element_value_4};
            tmp_call_result_2 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_3,
                mod_consts[96],
                call_args
            );
        }

        if (tmp_call_result_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2346;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_2);
        if (tmp_truth_name_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_2);

            exception_lineno = 2346;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_5 = tmp_truth_name_2 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_2);
        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
            goto branch_yes_5;
        } else {
            goto branch_no_5;
        }
    }
    branch_yes_5:;
    {
        PyObject *tmp_called_instance_4;
        PyObject *tmp_expression_value_7;
        PyObject *tmp_call_result_3;
        CHECK_OBJECT(par_self);
        tmp_expression_value_7 = par_self;
        tmp_called_instance_4 = LOOKUP_ATTRIBUTE(tmp_expression_value_7, mod_consts[0]);
        if (tmp_called_instance_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2347;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2347;
        tmp_call_result_3 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_4,
            mod_consts[98],
            PyTuple_GET_ITEM(mod_consts[99], 0)
        );

        Py_DECREF(tmp_called_instance_4);
        if (tmp_call_result_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2347;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_3);
    }
    {
        PyObject *tmp_called_value_4;
        PyObject *tmp_expression_value_8;
        PyObject *tmp_args_element_value_5;
        PyObject *tmp_add_expr_left_2;
        PyObject *tmp_add_expr_right_2;
        CHECK_OBJECT(par_self);
        tmp_expression_value_8 = par_self;
        tmp_called_value_4 = LOOKUP_ATTRIBUTE(tmp_expression_value_8, mod_consts[87]);
        if (tmp_called_value_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2348;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_add_expr_left_2 = mod_consts[100];
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_add_expr_right_2 = Nuitka_Cell_GET(par_url);
        tmp_args_element_value_5 = BINARY_OPERATION_ADD_OBJECT_UNICODE_OBJECT(tmp_add_expr_left_2, tmp_add_expr_right_2);
        if (tmp_args_element_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_4);

            exception_lineno = 2348;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2348;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_4, tmp_args_element_value_5);
        Py_DECREF(tmp_called_value_4);
        Py_DECREF(tmp_args_element_value_5);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2348;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    goto branch_end_5;
    branch_no_5:;
    {
        nuitka_bool tmp_condition_result_6;
        PyObject *tmp_cmp_expr_left_3;
        PyObject *tmp_cmp_expr_right_3;
        CHECK_OBJECT(var_default_search);
        tmp_cmp_expr_left_3 = var_default_search;
        tmp_cmp_expr_right_3 = mod_consts[93];
        tmp_condition_result_6 = RICH_COMPARE_NE_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_3, tmp_cmp_expr_right_3);
        if (tmp_condition_result_6 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2349;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
            goto branch_yes_6;
        } else {
            goto branch_no_6;
        }
    }
    branch_yes_6:;
    {
        nuitka_bool tmp_condition_result_7;
        PyObject *tmp_cmp_expr_left_4;
        PyObject *tmp_cmp_expr_right_4;
        CHECK_OBJECT(var_default_search);
        tmp_cmp_expr_left_4 = var_default_search;
        tmp_cmp_expr_right_4 = mod_consts[101];
        tmp_condition_result_7 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_4, tmp_cmp_expr_right_4);
        if (tmp_condition_result_7 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2350;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
            goto branch_yes_7;
        } else {
            goto branch_no_7;
        }
    }
    branch_yes_7:;
    {
        nuitka_bool tmp_condition_result_8;
        PyObject *tmp_called_instance_5;
        PyObject *tmp_call_result_4;
        PyObject *tmp_args_element_value_6;
        PyObject *tmp_args_element_value_7;
        int tmp_truth_name_3;
        tmp_called_instance_5 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_5 == NULL)) {
            tmp_called_instance_5 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2351;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_6 = mod_consts[102];
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_7 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2351;
        {
            PyObject *call_args[] = {tmp_args_element_value_6, tmp_args_element_value_7};
            tmp_call_result_4 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_5,
                mod_consts[96],
                call_args
            );
        }

        if (tmp_call_result_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2351;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_3 = CHECK_IF_TRUE(tmp_call_result_4);
        if (tmp_truth_name_3 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_4);

            exception_lineno = 2351;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_8 = tmp_truth_name_3 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_4);
        if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
            goto branch_yes_8;
        } else {
            goto branch_no_8;
        }
    }
    branch_yes_8:;
    {
        PyObject *tmp_raise_type_1;
        PyObject *tmp_called_value_5;
        PyObject *tmp_args_value_1;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_mod_expr_left_1;
        PyObject *tmp_mod_expr_right_1;
        PyObject *tmp_kwargs_value_1;
        tmp_called_value_5 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[103]);

        if (unlikely(tmp_called_value_5 == NULL)) {
            tmp_called_value_5 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[103]);
        }

        if (tmp_called_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2352;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mod_expr_left_1 = mod_consts[104];
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_mod_expr_right_1 = Nuitka_Cell_GET(par_url);
        tmp_tuple_element_1 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_mod_expr_left_1, tmp_mod_expr_right_1);
        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2353;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_value_1 = MAKE_TUPLE_EMPTY(1);
        PyTuple_SET_ITEM(tmp_args_value_1, 0, tmp_tuple_element_1);
        tmp_kwargs_value_1 = DICT_COPY(mod_consts[105]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2352;
        tmp_raise_type_1 = CALL_FUNCTION(tmp_called_value_5, tmp_args_value_1, tmp_kwargs_value_1);
        Py_DECREF(tmp_args_value_1);
        Py_DECREF(tmp_kwargs_value_1);
        if (tmp_raise_type_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2352;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        exception_type = tmp_raise_type_1;
        exception_lineno = 2352;
        RAISE_EXCEPTION_WITH_TYPE(&exception_type, &exception_value, &exception_tb);
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto frame_exception_exit_1;
    }
    goto branch_end_8;
    branch_no_8:;
    {
        PyObject *tmp_called_value_6;
        PyObject *tmp_expression_value_9;
        PyObject *tmp_expression_value_10;
        PyObject *tmp_call_result_5;
        PyObject *tmp_args_element_value_8;
        PyObject *tmp_mod_expr_left_2;
        PyObject *tmp_mod_expr_right_2;
        CHECK_OBJECT(par_self);
        tmp_expression_value_10 = par_self;
        tmp_expression_value_9 = LOOKUP_ATTRIBUTE(tmp_expression_value_10, mod_consts[0]);
        if (tmp_expression_value_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2356;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_6 = LOOKUP_ATTRIBUTE(tmp_expression_value_9, mod_consts[98]);
        Py_DECREF(tmp_expression_value_9);
        if (tmp_called_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2356;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mod_expr_left_2 = mod_consts[106];
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_mod_expr_right_2 = Nuitka_Cell_GET(par_url);
        tmp_args_element_value_8 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_mod_expr_left_2, tmp_mod_expr_right_2);
        if (tmp_args_element_value_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);

            exception_lineno = 2357;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2356;
        tmp_call_result_5 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_6, tmp_args_element_value_8);
        Py_DECREF(tmp_called_value_6);
        Py_DECREF(tmp_args_element_value_8);
        if (tmp_call_result_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2356;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_5);
    }
    branch_end_8:;
    branch_no_7:;
    {
        PyObject *tmp_called_value_7;
        PyObject *tmp_expression_value_11;
        PyObject *tmp_args_element_value_9;
        PyObject *tmp_add_expr_left_3;
        PyObject *tmp_add_expr_right_3;
        CHECK_OBJECT(par_self);
        tmp_expression_value_11 = par_self;
        tmp_called_value_7 = LOOKUP_ATTRIBUTE(tmp_expression_value_11, mod_consts[87]);
        if (tmp_called_value_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2358;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_add_expr_left_3 = mod_consts[107];
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_add_expr_right_3 = Nuitka_Cell_GET(par_url);
        tmp_args_element_value_9 = BINARY_OPERATION_ADD_OBJECT_UNICODE_OBJECT(tmp_add_expr_left_3, tmp_add_expr_right_3);
        if (tmp_args_element_value_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_7);

            exception_lineno = 2358;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2358;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_7, tmp_args_element_value_9);
        Py_DECREF(tmp_called_value_7);
        Py_DECREF(tmp_args_element_value_9);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2358;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_6:;
    branch_end_5:;
    branch_no_4:;
    {
        bool tmp_condition_result_9;
        PyObject *tmp_cmp_expr_left_5;
        PyObject *tmp_cmp_expr_right_5;
        CHECK_OBJECT(var_default_search);
        tmp_cmp_expr_left_5 = var_default_search;
        tmp_cmp_expr_right_5 = mod_consts[108];
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_5, tmp_cmp_expr_left_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2360;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_9 = (tmp_res == 1) ? true : false;
        if (tmp_condition_result_9 != false) {
            goto branch_yes_9;
        } else {
            goto branch_no_9;
        }
    }
    branch_yes_9:;
    {
        PyObject *tmp_raise_type_2;
        PyObject *tmp_called_value_8;
        PyObject *tmp_args_value_2;
        PyObject *tmp_tuple_element_2;
        PyObject *tmp_mod_expr_left_3;
        PyObject *tmp_mod_expr_right_3;
        PyObject *tmp_tuple_element_3;
        PyObject *tmp_kwargs_value_2;
        tmp_called_value_8 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[103]);

        if (unlikely(tmp_called_value_8 == NULL)) {
            tmp_called_value_8 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[103]);
        }

        if (tmp_called_value_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2361;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mod_expr_left_3 = mod_consts[109];
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_tuple_element_3 = Nuitka_Cell_GET(par_url);
        tmp_mod_expr_right_3 = MAKE_TUPLE_EMPTY(2);
        PyTuple_SET_ITEM0(tmp_mod_expr_right_3, 0, tmp_tuple_element_3);
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_tuple_element_3 = Nuitka_Cell_GET(par_url);
        PyTuple_SET_ITEM0(tmp_mod_expr_right_3, 1, tmp_tuple_element_3);
        tmp_tuple_element_2 = BINARY_OPERATION_MOD_OBJECT_UNICODE_TUPLE(tmp_mod_expr_left_3, tmp_mod_expr_right_3);
        Py_DECREF(tmp_mod_expr_right_3);
        if (tmp_tuple_element_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2364;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_value_2 = MAKE_TUPLE_EMPTY(1);
        PyTuple_SET_ITEM(tmp_args_value_2, 0, tmp_tuple_element_2);
        tmp_kwargs_value_2 = DICT_COPY(mod_consts[105]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2361;
        tmp_raise_type_2 = CALL_FUNCTION(tmp_called_value_8, tmp_args_value_2, tmp_kwargs_value_2);
        Py_DECREF(tmp_args_value_2);
        Py_DECREF(tmp_kwargs_value_2);
        if (tmp_raise_type_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2361;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        exception_type = tmp_raise_type_2;
        exception_lineno = 2361;
        RAISE_EXCEPTION_WITH_TYPE(&exception_type, &exception_value, &exception_tb);
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto frame_exception_exit_1;
    }
    goto branch_end_9;
    branch_no_9:;
    {
        bool tmp_condition_result_10;
        PyObject *tmp_cmp_expr_left_6;
        PyObject *tmp_cmp_expr_right_6;
        tmp_cmp_expr_left_6 = mod_consts[110];
        CHECK_OBJECT(var_default_search);
        tmp_cmp_expr_right_6 = var_default_search;
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_6, tmp_cmp_expr_left_6);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2366;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_10 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_10 != false) {
            goto branch_yes_10;
        } else {
            goto branch_no_10;
        }
    }
    branch_yes_10:;
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_iadd_expr_left_1;
        PyObject *tmp_iadd_expr_right_1;
        CHECK_OBJECT(var_default_search);
        tmp_iadd_expr_left_1 = var_default_search;
        tmp_iadd_expr_right_1 = mod_consts[110];
        tmp_result = INPLACE_OPERATION_ADD_OBJECT_UNICODE(&tmp_iadd_expr_left_1, tmp_iadd_expr_right_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2367;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_4 = tmp_iadd_expr_left_1;
        var_default_search = tmp_assign_source_4;

    }
    branch_no_10:;
    {
        PyObject *tmp_called_value_9;
        PyObject *tmp_expression_value_12;
        PyObject *tmp_args_element_value_10;
        PyObject *tmp_add_expr_left_4;
        PyObject *tmp_add_expr_right_4;
        CHECK_OBJECT(par_self);
        tmp_expression_value_12 = par_self;
        tmp_called_value_9 = LOOKUP_ATTRIBUTE(tmp_expression_value_12, mod_consts[87]);
        if (tmp_called_value_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2368;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_default_search);
        tmp_add_expr_left_4 = var_default_search;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_add_expr_right_4 = Nuitka_Cell_GET(par_url);
        tmp_args_element_value_10 = BINARY_OPERATION_ADD_OBJECT_OBJECT_OBJECT(tmp_add_expr_left_4, tmp_add_expr_right_4);
        if (tmp_args_element_value_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_9);

            exception_lineno = 2368;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2368;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_9, tmp_args_element_value_10);
        Py_DECREF(tmp_called_value_9);
        Py_DECREF(tmp_args_element_value_10);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2368;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_end_9:;
    branch_no_2:;
    // Tried code:
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_iter_arg_1;
        PyObject *tmp_called_value_10;
        PyObject *tmp_args_element_value_11;
        tmp_called_value_10 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[111]);

        if (unlikely(tmp_called_value_10 == NULL)) {
            tmp_called_value_10 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[111]);
        }

        if (tmp_called_value_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2370;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_2;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_11 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2370;
        tmp_iter_arg_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_10, tmp_args_element_value_11);
        if (tmp_iter_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2370;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_2;
        }
        tmp_assign_source_5 = MAKE_UNPACK_ITERATOR(tmp_iter_arg_1);
        Py_DECREF(tmp_iter_arg_1);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2370;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_2;
        }
        assert(tmp_tuple_unpack_1__source_iter == NULL);
        tmp_tuple_unpack_1__source_iter = tmp_assign_source_5;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_unpack_1;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_unpack_1 = tmp_tuple_unpack_1__source_iter;
        tmp_assign_source_6 = UNPACK_NEXT(tmp_unpack_1, 0, 2);
        if (tmp_assign_source_6 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 2370;
            goto try_except_handler_3;
        }
        assert(tmp_tuple_unpack_1__element_1 == NULL);
        tmp_tuple_unpack_1__element_1 = tmp_assign_source_6;
    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_unpack_2;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_unpack_2 = tmp_tuple_unpack_1__source_iter;
        tmp_assign_source_7 = UNPACK_NEXT(tmp_unpack_2, 1, 2);
        if (tmp_assign_source_7 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 2370;
            goto try_except_handler_3;
        }
        assert(tmp_tuple_unpack_1__element_2 == NULL);
        tmp_tuple_unpack_1__element_2 = tmp_assign_source_7;
    }
    {
        PyObject *tmp_iterator_name_1;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_iterator_name_1 = tmp_tuple_unpack_1__source_iter;
        // Check if iterator has left-over elements.
        CHECK_OBJECT(tmp_iterator_name_1); assert(HAS_ITERNEXT(tmp_iterator_name_1));

        tmp_iterator_attempt = (*Py_TYPE(tmp_iterator_name_1)->tp_iternext)(tmp_iterator_name_1);

        if (likely(tmp_iterator_attempt == NULL)) {
            PyObject *error = GET_ERROR_OCCURRED();

            if (error != NULL) {
                if (EXCEPTION_MATCH_BOOL_SINGLE(error, PyExc_StopIteration)) {
                    CLEAR_ERROR_OCCURRED();
                } else {
                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);

                    type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                    exception_lineno = 2370;
                    goto try_except_handler_3;
                }
            }
        } else {
            Py_DECREF(tmp_iterator_attempt);

            exception_type = PyExc_ValueError;
            Py_INCREF(PyExc_ValueError);
            exception_value = mod_consts[112];
            Py_INCREF(exception_value);
            exception_tb = NULL;

            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 2370;
            goto try_except_handler_3;
        }
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_3:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
    Py_DECREF(tmp_tuple_unpack_1__source_iter);
    tmp_tuple_unpack_1__source_iter = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto try_except_handler_2;
    // End of try:
    try_end_1:;
    goto try_end_2;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_tuple_unpack_1__element_1);
    tmp_tuple_unpack_1__element_1 = NULL;
    Py_XDECREF(tmp_tuple_unpack_1__element_2);
    tmp_tuple_unpack_1__element_2 = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto frame_exception_exit_1;
    // End of try:
    try_end_2:;
    CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
    Py_DECREF(tmp_tuple_unpack_1__source_iter);
    tmp_tuple_unpack_1__source_iter = NULL;
    {
        PyObject *tmp_assign_source_8;
        CHECK_OBJECT(tmp_tuple_unpack_1__element_1);
        tmp_assign_source_8 = tmp_tuple_unpack_1__element_1;
        {
            PyObject *old = Nuitka_Cell_GET(par_url);
            PyCell_SET(par_url, tmp_assign_source_8);
            Py_INCREF(tmp_assign_source_8);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_1__element_1);
    tmp_tuple_unpack_1__element_1 = NULL;

    {
        PyObject *tmp_assign_source_9;
        CHECK_OBJECT(tmp_tuple_unpack_1__element_2);
        tmp_assign_source_9 = tmp_tuple_unpack_1__element_2;
        assert(var_smuggled_data == NULL);
        Py_INCREF(tmp_assign_source_9);
        var_smuggled_data = tmp_assign_source_9;
    }
    Py_XDECREF(tmp_tuple_unpack_1__element_2);
    tmp_tuple_unpack_1__element_2 = NULL;

    {
        PyObject *tmp_assign_source_10;
        tmp_assign_source_10 = Py_None;
        assert(var_force_videoid == NULL);
        Py_INCREF(tmp_assign_source_10);
        var_force_videoid = tmp_assign_source_10;
    }
    {
        PyObject *tmp_assign_source_11;
        int tmp_and_left_truth_1;
        PyObject *tmp_and_left_value_1;
        PyObject *tmp_and_right_value_1;
        PyObject *tmp_called_value_11;
        PyObject *tmp_expression_value_13;
        CHECK_OBJECT(var_smuggled_data);
        tmp_and_left_value_1 = var_smuggled_data;
        tmp_and_left_truth_1 = CHECK_IF_TRUE(tmp_and_left_value_1);
        if (tmp_and_left_truth_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2372;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(var_smuggled_data);
        tmp_expression_value_13 = var_smuggled_data;
        tmp_called_value_11 = LOOKUP_ATTRIBUTE(tmp_expression_value_13, mod_consts[13]);
        if (tmp_called_value_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2372;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2372;
        tmp_and_right_value_1 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_11, mod_consts[113]);

        Py_DECREF(tmp_called_value_11);
        if (tmp_and_right_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2372;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_11 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        Py_INCREF(tmp_and_left_value_1);
        tmp_assign_source_11 = tmp_and_left_value_1;
        and_end_1:;
        assert(var_is_intentional == NULL);
        var_is_intentional = tmp_assign_source_11;
    }
    {
        nuitka_bool tmp_condition_result_11;
        int tmp_and_left_truth_2;
        nuitka_bool tmp_and_left_value_2;
        nuitka_bool tmp_and_right_value_2;
        int tmp_truth_name_4;
        PyObject *tmp_cmp_expr_left_7;
        PyObject *tmp_cmp_expr_right_7;
        if (var_smuggled_data == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[114]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2373;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_truth_name_4 = CHECK_IF_TRUE(var_smuggled_data);
        if (tmp_truth_name_4 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2373;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_2 = tmp_truth_name_4 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2373;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_and_left_truth_2 == 1) {
            goto and_right_2;
        } else {
            goto and_left_2;
        }
        and_right_2:;
        tmp_cmp_expr_left_7 = mod_consts[115];
        if (var_smuggled_data == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[114]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2373;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_cmp_expr_right_7 = var_smuggled_data;
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_7, tmp_cmp_expr_left_7);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2373;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_2 = (tmp_res == 1) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_11 = tmp_and_right_value_2;
        goto and_end_2;
        and_left_2:;
        tmp_condition_result_11 = tmp_and_left_value_2;
        and_end_2:;
        if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
            goto branch_yes_11;
        } else {
            goto branch_no_11;
        }
    }
    branch_yes_11:;
    {
        PyObject *tmp_assign_source_12;
        PyObject *tmp_expression_value_14;
        PyObject *tmp_subscript_value_1;
        if (var_smuggled_data == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[114]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2374;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_14 = var_smuggled_data;
        tmp_subscript_value_1 = mod_consts[115];
        tmp_assign_source_12 = LOOKUP_SUBSCRIPT(tmp_expression_value_14, tmp_subscript_value_1);
        if (tmp_assign_source_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2374;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_force_videoid;
            assert(old != NULL);
            var_force_videoid = tmp_assign_source_12;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_13;
        CHECK_OBJECT(var_force_videoid);
        tmp_assign_source_13 = var_force_videoid;
        assert(var_video_id == NULL);
        Py_INCREF(tmp_assign_source_13);
        var_video_id = tmp_assign_source_13;
    }
    goto branch_end_11;
    branch_no_11:;
    {
        PyObject *tmp_assign_source_14;
        PyObject *tmp_called_instance_6;
        PyObject *tmp_args_element_value_12;
        CHECK_OBJECT(par_self);
        tmp_called_instance_6 = par_self;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_12 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2377;
        tmp_assign_source_14 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_6, mod_consts[116], tmp_args_element_value_12);
        if (tmp_assign_source_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2377;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_video_id == NULL);
        var_video_id = tmp_assign_source_14;
    }
    branch_end_11:;
    {
        PyObject *tmp_called_value_12;
        PyObject *tmp_expression_value_15;
        PyObject *tmp_call_result_6;
        PyObject *tmp_args_element_value_13;
        PyObject *tmp_mod_expr_left_4;
        PyObject *tmp_mod_expr_right_4;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2379;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_15 = par_self;
        tmp_called_value_12 = LOOKUP_ATTRIBUTE(tmp_expression_value_15, mod_consts[1]);
        if (tmp_called_value_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2379;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mod_expr_left_4 = mod_consts[118];
        CHECK_OBJECT(var_video_id);
        tmp_mod_expr_right_4 = var_video_id;
        tmp_args_element_value_13 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_mod_expr_left_4, tmp_mod_expr_right_4);
        if (tmp_args_element_value_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_12);

            exception_lineno = 2379;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2379;
        tmp_call_result_6 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_12, tmp_args_element_value_13);
        Py_DECREF(tmp_called_value_12);
        Py_DECREF(tmp_args_element_value_13);
        if (tmp_call_result_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2379;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_6);
    }
    {
        PyObject *tmp_assign_source_15;
        PyObject *tmp_called_value_13;
        PyObject *tmp_args_element_value_14;
        tmp_called_value_13 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[119]);

        if (unlikely(tmp_called_value_13 == NULL)) {
            tmp_called_value_13 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[119]);
        }

        if (tmp_called_value_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2381;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_14 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2381;
        tmp_assign_source_15 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_13, tmp_args_element_value_14);
        if (tmp_assign_source_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2381;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_head_req == NULL);
        var_head_req = tmp_assign_source_15;
    }
    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_called_value_14;
        PyObject *tmp_expression_value_16;
        PyObject *tmp_kw_call_arg_value_0_1;
        PyObject *tmp_kw_call_arg_value_1_1;
        PyObject *tmp_kw_call_dict_value_0_1;
        PyObject *tmp_kw_call_dict_value_1_1;
        PyObject *tmp_mod_expr_left_5;
        PyObject *tmp_mod_expr_right_5;
        PyObject *tmp_kw_call_dict_value_2_1;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2382;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_16 = par_self;
        tmp_called_value_14 = LOOKUP_ATTRIBUTE(tmp_expression_value_16, mod_consts[120]);
        if (tmp_called_value_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2382;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_head_req);
        tmp_kw_call_arg_value_0_1 = var_head_req;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_1 = var_video_id;
        tmp_kw_call_dict_value_0_1 = Py_False;
        tmp_mod_expr_left_5 = mod_consts[121];
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_mod_expr_right_5 = Nuitka_Cell_GET(par_url);
        tmp_kw_call_dict_value_1_1 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_mod_expr_left_5, tmp_mod_expr_right_5);
        if (tmp_kw_call_dict_value_1_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_14);

            exception_lineno = 2384;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_call_dict_value_2_1 = Py_False;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2382;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_1, tmp_kw_call_arg_value_1_1};
            PyObject *kw_values[3] = {tmp_kw_call_dict_value_0_1, tmp_kw_call_dict_value_1_1, tmp_kw_call_dict_value_2_1};
            tmp_assign_source_16 = CALL_FUNCTION_WITH_ARGS2_KWSPLIT(tmp_called_value_14, args, kw_values, mod_consts[122]);
        }

        Py_DECREF(tmp_called_value_14);
        Py_DECREF(tmp_kw_call_dict_value_1_1);
        if (tmp_assign_source_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2382;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_head_response == NULL);
        var_head_response = tmp_assign_source_16;
    }
    {
        bool tmp_condition_result_12;
        PyObject *tmp_cmp_expr_left_8;
        PyObject *tmp_cmp_expr_right_8;
        CHECK_OBJECT(var_head_response);
        tmp_cmp_expr_left_8 = var_head_response;
        tmp_cmp_expr_right_8 = Py_False;
        tmp_condition_result_12 = (tmp_cmp_expr_left_8 != tmp_cmp_expr_right_8) ? true : false;
        if (tmp_condition_result_12 != false) {
            goto branch_yes_12;
        } else {
            goto branch_no_12;
        }
    }
    branch_yes_12:;
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_called_instance_7;
        CHECK_OBJECT(var_head_response);
        tmp_called_instance_7 = var_head_response;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2389;
        tmp_assign_source_17 = CALL_METHOD_NO_ARGS(tmp_called_instance_7, mod_consts[123]);
        if (tmp_assign_source_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2389;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_new_url == NULL);
        var_new_url = tmp_assign_source_17;
    }
    {
        nuitka_bool tmp_condition_result_13;
        PyObject *tmp_cmp_expr_left_9;
        PyObject *tmp_cmp_expr_right_9;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_cmp_expr_left_9 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_new_url);
        tmp_cmp_expr_right_9 = var_new_url;
        tmp_condition_result_13 = RICH_COMPARE_NE_NBOOL_OBJECT_OBJECT(tmp_cmp_expr_left_9, tmp_cmp_expr_right_9);
        if (tmp_condition_result_13 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2390;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_condition_result_13 == NUITKA_BOOL_TRUE) {
            goto branch_yes_13;
        } else {
            goto branch_no_13;
        }
    }
    branch_yes_13:;
    {
        PyObject *tmp_called_instance_8;
        PyObject *tmp_call_result_7;
        PyObject *tmp_args_element_value_15;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2391;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_8 = par_self;
        CHECK_OBJECT(var_new_url);
        tmp_args_element_value_15 = var_new_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2391;
        tmp_call_result_7 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_8, mod_consts[124], tmp_args_element_value_15);
        if (tmp_call_result_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2391;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_7);
    }
    {
        nuitka_bool tmp_condition_result_14;
        int tmp_truth_name_5;
        if (var_force_videoid == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[115]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2392;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_truth_name_5 = CHECK_IF_TRUE(var_force_videoid);
        if (tmp_truth_name_5 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2392;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_14 = tmp_truth_name_5 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_14 == NUITKA_BOOL_TRUE) {
            goto branch_yes_14;
        } else {
            goto branch_no_14;
        }
    }
    branch_yes_14:;
    {
        PyObject *tmp_assign_source_18;
        PyObject *tmp_called_value_15;
        PyObject *tmp_args_element_value_16;
        PyObject *tmp_args_element_value_17;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        tmp_called_value_15 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[125]);

        if (unlikely(tmp_called_value_15 == NULL)) {
            tmp_called_value_15 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[125]);
        }

        if (tmp_called_value_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2393;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_new_url);
        tmp_args_element_value_16 = var_new_url;
        tmp_dict_key_1 = mod_consts[115];
        if (var_force_videoid == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[115]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2394;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_dict_value_1 = var_force_videoid;
        tmp_args_element_value_17 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_args_element_value_17, tmp_dict_key_1, tmp_dict_value_1);
        assert(!(tmp_res != 0));
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2393;
        {
            PyObject *call_args[] = {tmp_args_element_value_16, tmp_args_element_value_17};
            tmp_assign_source_18 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_15, call_args);
        }

        Py_DECREF(tmp_args_element_value_17);
        if (tmp_assign_source_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2393;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_new_url;
            assert(old != NULL);
            var_new_url = tmp_assign_source_18;
            Py_DECREF(old);
        }

    }
    branch_no_14:;
    {
        PyObject *tmp_called_value_16;
        PyObject *tmp_expression_value_17;
        PyObject *tmp_args_element_value_18;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2395;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_17 = par_self;
        tmp_called_value_16 = LOOKUP_ATTRIBUTE(tmp_expression_value_17, mod_consts[87]);
        if (tmp_called_value_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2395;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (var_new_url == NULL) {
            Py_DECREF(tmp_called_value_16);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[126]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2395;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_value_18 = var_new_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2395;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_16, tmp_args_element_value_18);
        Py_DECREF(tmp_called_value_16);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2395;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_13:;
    branch_no_12:;
    {
        PyObject *tmp_assign_source_19;
        tmp_assign_source_19 = Py_None;
        assert(var_full_response == NULL);
        Py_INCREF(tmp_assign_source_19);
        var_full_response = tmp_assign_source_19;
    }
    {
        bool tmp_condition_result_15;
        PyObject *tmp_cmp_expr_left_10;
        PyObject *tmp_cmp_expr_right_10;
        if (var_head_response == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[127]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2398;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_cmp_expr_left_10 = var_head_response;
        tmp_cmp_expr_right_10 = Py_False;
        tmp_condition_result_15 = (tmp_cmp_expr_left_10 == tmp_cmp_expr_right_10) ? true : false;
        if (tmp_condition_result_15 != false) {
            goto branch_yes_15;
        } else {
            goto branch_no_15;
        }
    }
    branch_yes_15:;
    {
        PyObject *tmp_assign_source_20;
        PyObject *tmp_called_value_17;
        PyObject *tmp_args_element_value_19;
        tmp_called_value_17 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[128]);

        if (unlikely(tmp_called_value_17 == NULL)) {
            tmp_called_value_17 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[128]);
        }

        if (tmp_called_value_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2399;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_19 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2399;
        tmp_assign_source_20 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_17, tmp_args_element_value_19);
        if (tmp_assign_source_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2399;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_request == NULL);
        var_request = tmp_assign_source_20;
    }
    {
        PyObject *tmp_called_instance_9;
        PyObject *tmp_call_result_8;
        CHECK_OBJECT(var_request);
        tmp_called_instance_9 = var_request;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2400;
        tmp_call_result_8 = CALL_METHOD_WITH_ARGS2(
            tmp_called_instance_9,
            mod_consts[129],
            &PyTuple_GET_ITEM(mod_consts[130], 0)
        );

        if (tmp_call_result_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2400;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_8);
    }
    {
        PyObject *tmp_assign_source_21;
        PyObject *tmp_called_instance_10;
        PyObject *tmp_args_element_value_20;
        PyObject *tmp_args_element_value_21;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2401;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_10 = par_self;
        CHECK_OBJECT(var_request);
        tmp_args_element_value_20 = var_request;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_21 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2401;
        {
            PyObject *call_args[] = {tmp_args_element_value_20, tmp_args_element_value_21};
            tmp_assign_source_21 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_10,
                mod_consts[120],
                call_args
            );
        }

        if (tmp_assign_source_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2401;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_full_response;
            assert(old != NULL);
            var_full_response = tmp_assign_source_21;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_22;
        CHECK_OBJECT(var_full_response);
        tmp_assign_source_22 = var_full_response;
        {
            PyObject *old = var_head_response;
            var_head_response = tmp_assign_source_22;
            Py_INCREF(var_head_response);
            Py_XDECREF(old);
        }

    }
    branch_no_15:;
    {
        PyObject *tmp_assign_source_23;
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        tmp_dict_key_2 = mod_consts[58];
        CHECK_OBJECT(var_video_id);
        tmp_dict_value_2 = var_video_id;
        tmp_assign_source_23 = _PyDict_NewPresized( 3 );
        {
            PyObject *tmp_called_instance_11;
            PyObject *tmp_args_element_value_22;
            PyObject *tmp_called_value_18;
            PyObject *tmp_args_element_value_23;
            PyObject *tmp_called_value_19;
            PyObject *tmp_expression_value_18;
            PyObject *tmp_expression_value_19;
            tmp_res = PyDict_SetItem(tmp_assign_source_23, tmp_dict_key_2, tmp_dict_value_2);
            assert(!(tmp_res != 0));
            tmp_dict_key_2 = mod_consts[34];
            if (par_self == NULL) {

                FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 2406;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_1;
            }

            tmp_called_instance_11 = par_self;
            CHECK_OBJECT(Nuitka_Cell_GET(par_url));
            tmp_args_element_value_22 = Nuitka_Cell_GET(par_url);
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2406;
            tmp_dict_value_2 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_11, mod_consts[131], tmp_args_element_value_22);
            if (tmp_dict_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2406;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_assign_source_23, tmp_dict_key_2, tmp_dict_value_2);
            Py_DECREF(tmp_dict_value_2);
            assert(!(tmp_res != 0));
            tmp_dict_key_2 = mod_consts[38];
            tmp_called_value_18 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[39]);

            if (unlikely(tmp_called_value_18 == NULL)) {
                tmp_called_value_18 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[39]);
            }

            if (tmp_called_value_18 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2407;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_1;
            }
            if (var_head_response == NULL) {

                FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[127]);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 2407;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_1;
            }

            tmp_expression_value_19 = var_head_response;
            tmp_expression_value_18 = LOOKUP_ATTRIBUTE(tmp_expression_value_19, mod_consts[132]);
            if (tmp_expression_value_18 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2407;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_1;
            }
            tmp_called_value_19 = LOOKUP_ATTRIBUTE(tmp_expression_value_18, mod_consts[13]);
            Py_DECREF(tmp_expression_value_18);
            if (tmp_called_value_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2407;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_1;
            }
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2407;
            tmp_args_element_value_23 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_19, mod_consts[133]);

            Py_DECREF(tmp_called_value_19);
            if (tmp_args_element_value_23 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2407;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_1;
            }
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2407;
            tmp_dict_value_2 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_18, tmp_args_element_value_23);
            Py_DECREF(tmp_args_element_value_23);
            if (tmp_dict_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2407;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_assign_source_23, tmp_dict_key_2, tmp_dict_value_2);
            Py_DECREF(tmp_dict_value_2);
            assert(!(tmp_res != 0));
        }
        goto dict_build_noexception_1;
        // Exception handling pass through code for dict_build:
        dict_build_exception_1:;
        Py_DECREF(tmp_assign_source_23);
        goto frame_exception_exit_1;
        // Finished with no exception for dict_build:
        dict_build_noexception_1:;
        assert(var_info_dict == NULL);
        var_info_dict = tmp_assign_source_23;
    }
    {
        PyObject *tmp_assign_source_24;
        PyObject *tmp_called_value_20;
        PyObject *tmp_expression_value_20;
        PyObject *tmp_called_value_21;
        PyObject *tmp_expression_value_21;
        PyObject *tmp_expression_value_22;
        if (var_head_response == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[127]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_22 = var_head_response;
        tmp_expression_value_21 = LOOKUP_ATTRIBUTE(tmp_expression_value_22, mod_consts[132]);
        if (tmp_expression_value_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_21 = LOOKUP_ATTRIBUTE(tmp_expression_value_21, mod_consts[13]);
        Py_DECREF(tmp_expression_value_21);
        if (tmp_called_value_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2411;
        tmp_expression_value_20 = CALL_FUNCTION_WITH_POSARGS2(tmp_called_value_21, mod_consts[134]);

        Py_DECREF(tmp_called_value_21);
        if (tmp_expression_value_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_20 = LOOKUP_ATTRIBUTE(tmp_expression_value_20, mod_consts[24]);
        Py_DECREF(tmp_expression_value_20);
        if (tmp_called_value_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2411;
        tmp_assign_source_24 = CALL_FUNCTION_NO_ARGS(tmp_called_value_20);
        Py_DECREF(tmp_called_value_20);
        if (tmp_assign_source_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_content_type == NULL);
        var_content_type = tmp_assign_source_24;
    }
    {
        PyObject *tmp_assign_source_25;
        PyObject *tmp_called_instance_12;
        PyObject *tmp_args_element_value_24;
        PyObject *tmp_args_element_value_25;
        tmp_called_instance_12 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_12 == NULL)) {
            tmp_called_instance_12 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2412;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_24 = mod_consts[135];
        CHECK_OBJECT(var_content_type);
        tmp_args_element_value_25 = var_content_type;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2412;
        {
            PyObject *call_args[] = {tmp_args_element_value_24, tmp_args_element_value_25};
            tmp_assign_source_25 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_12,
                mod_consts[96],
                call_args
            );
        }

        if (tmp_assign_source_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2412;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_m == NULL);
        var_m = tmp_assign_source_25;
    }
    {
        nuitka_bool tmp_condition_result_16;
        int tmp_truth_name_6;
        CHECK_OBJECT(var_m);
        tmp_truth_name_6 = CHECK_IF_TRUE(var_m);
        if (tmp_truth_name_6 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2413;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_16 = tmp_truth_name_6 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_16 == NUITKA_BOOL_TRUE) {
            goto branch_yes_16;
        } else {
            goto branch_no_16;
        }
    }
    branch_yes_16:;
    {
        PyObject *tmp_assign_source_26;
        PyObject *tmp_called_value_22;
        PyObject *tmp_args_element_value_26;
        PyObject *tmp_called_instance_13;
        tmp_called_value_22 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[136]);

        if (unlikely(tmp_called_value_22 == NULL)) {
            tmp_called_value_22 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[136]);
        }

        if (tmp_called_value_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2414;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_m);
        tmp_called_instance_13 = var_m;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2414;
        tmp_args_element_value_26 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_13,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[138], 0)
        );

        if (tmp_args_element_value_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2414;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2414;
        tmp_assign_source_26 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_22, tmp_args_element_value_26);
        Py_DECREF(tmp_args_element_value_26);
        if (tmp_assign_source_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2414;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_format_id == NULL);
        var_format_id = tmp_assign_source_26;
    }
    {
        nuitka_bool tmp_condition_result_17;
        PyObject *tmp_called_value_23;
        PyObject *tmp_expression_value_23;
        PyObject *tmp_call_result_9;
        int tmp_truth_name_7;
        CHECK_OBJECT(var_format_id);
        tmp_expression_value_23 = var_format_id;
        tmp_called_value_23 = LOOKUP_ATTRIBUTE(tmp_expression_value_23, mod_consts[139]);
        if (tmp_called_value_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2415;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2415;
        tmp_call_result_9 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_23, mod_consts[140]);

        Py_DECREF(tmp_called_value_23);
        if (tmp_call_result_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2415;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_7 = CHECK_IF_TRUE(tmp_call_result_9);
        if (tmp_truth_name_7 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_9);

            exception_lineno = 2415;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_17 = tmp_truth_name_7 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_9);
        if (tmp_condition_result_17 == NUITKA_BOOL_TRUE) {
            goto branch_yes_17;
        } else {
            goto branch_no_17;
        }
    }
    branch_yes_17:;
    {
        PyObject *tmp_assign_source_27;
        PyObject *tmp_called_instance_14;
        PyObject *tmp_args_element_value_27;
        PyObject *tmp_args_element_value_28;
        PyObject *tmp_args_element_value_29;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2416;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_14 = par_self;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_27 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_28 = var_video_id;
        tmp_args_element_value_29 = mod_consts[142];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2416;
        {
            PyObject *call_args[] = {tmp_args_element_value_27, tmp_args_element_value_28, tmp_args_element_value_29};
            tmp_assign_source_27 = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_14,
                mod_consts[141],
                call_args
            );
        }

        if (tmp_assign_source_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2416;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_formats == NULL);
        var_formats = tmp_assign_source_27;
    }
    goto branch_end_17;
    branch_no_17:;
    {
        nuitka_bool tmp_condition_result_18;
        PyObject *tmp_cmp_expr_left_11;
        PyObject *tmp_cmp_expr_right_11;
        CHECK_OBJECT(var_format_id);
        tmp_cmp_expr_left_11 = var_format_id;
        tmp_cmp_expr_right_11 = mod_consts[143];
        tmp_condition_result_18 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_11, tmp_cmp_expr_right_11);
        if (tmp_condition_result_18 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2417;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_condition_result_18 == NUITKA_BOOL_TRUE) {
            goto branch_yes_18;
        } else {
            goto branch_no_18;
        }
    }
    branch_yes_18:;
    {
        PyObject *tmp_assign_source_28;
        PyObject *tmp_called_instance_15;
        PyObject *tmp_args_element_value_30;
        PyObject *tmp_args_element_value_31;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2418;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_15 = par_self;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_30 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_31 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2418;
        {
            PyObject *call_args[] = {tmp_args_element_value_30, tmp_args_element_value_31};
            tmp_assign_source_28 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_15,
                mod_consts[144],
                call_args
            );
        }

        if (tmp_assign_source_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2418;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_formats == NULL);
        var_formats = tmp_assign_source_28;
    }
    goto branch_end_18;
    branch_no_18:;
    {
        PyObject *tmp_assign_source_29;
        PyObject *tmp_list_element_1;
        PyObject *tmp_dict_key_3;
        PyObject *tmp_dict_value_3;
        tmp_dict_key_3 = mod_consts[145];
        CHECK_OBJECT(var_format_id);
        tmp_dict_value_3 = var_format_id;
        tmp_list_element_1 = _PyDict_NewPresized( 3 );
        {
            nuitka_bool tmp_condition_result_19;
            PyObject *tmp_cmp_expr_left_12;
            PyObject *tmp_cmp_expr_right_12;
            PyObject *tmp_called_instance_16;
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_3, tmp_dict_value_3);
            assert(!(tmp_res != 0));
            tmp_dict_key_3 = mod_consts[33];
            CHECK_OBJECT(Nuitka_Cell_GET(par_url));
            tmp_dict_value_3 = Nuitka_Cell_GET(par_url);
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_3, tmp_dict_value_3);
            assert(!(tmp_res != 0));
            tmp_dict_key_3 = mod_consts[146];
            CHECK_OBJECT(var_m);
            tmp_called_instance_16 = var_m;
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2423;
            tmp_cmp_expr_left_12 = CALL_METHOD_WITH_SINGLE_ARG(
                tmp_called_instance_16,
                mod_consts[137],
                PyTuple_GET_ITEM(mod_consts[147], 0)
            );

            if (tmp_cmp_expr_left_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2423;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_2;
            }
            tmp_cmp_expr_right_12 = mod_consts[148];
            tmp_condition_result_19 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_12, tmp_cmp_expr_right_12);
            Py_DECREF(tmp_cmp_expr_left_12);
            if (tmp_condition_result_19 == NUITKA_BOOL_EXCEPTION) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2423;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_2;
            }
            if (tmp_condition_result_19 == NUITKA_BOOL_TRUE) {
                goto condexpr_true_1;
            } else {
                goto condexpr_false_1;
            }
            condexpr_true_1:;
            tmp_dict_value_3 = mod_consts[149];
            goto condexpr_end_1;
            condexpr_false_1:;
            tmp_dict_value_3 = Py_None;
            condexpr_end_1:;
            tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_3, tmp_dict_value_3);
            assert(!(tmp_res != 0));
        }
        goto dict_build_noexception_2;
        // Exception handling pass through code for dict_build:
        dict_build_exception_2:;
        Py_DECREF(tmp_list_element_1);
        goto frame_exception_exit_1;
        // Finished with no exception for dict_build:
        dict_build_noexception_2:;
        tmp_assign_source_29 = MAKE_LIST_EMPTY(1);
        PyList_SET_ITEM(tmp_assign_source_29, 0, tmp_list_element_1);
        assert(var_formats == NULL);
        var_formats = tmp_assign_source_29;
    }
    tmp_dictset_value = Py_True;
    CHECK_OBJECT(var_info_dict);
    tmp_dictset_dict = var_info_dict;
    tmp_dictset_key = mod_consts[150];
    assert(PyDict_CheckExact(tmp_dictset_dict));
    tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);

    assert(!(tmp_res != 0));
    branch_end_18:;
    branch_end_17:;
    {
        PyObject *tmp_called_instance_17;
        PyObject *tmp_call_result_10;
        PyObject *tmp_args_element_value_32;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2426;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_17 = par_self;
        CHECK_OBJECT(var_formats);
        tmp_args_element_value_32 = var_formats;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2426;
        tmp_call_result_10 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_17, mod_consts[151], tmp_args_element_value_32);
        if (tmp_call_result_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2426;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_10);
    }
    {
        PyObject *tmp_ass_subvalue_1;
        PyObject *tmp_ass_subscribed_1;
        PyObject *tmp_ass_subscript_1;
        CHECK_OBJECT(var_formats);
        tmp_ass_subvalue_1 = var_formats;
        if (var_info_dict == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[152]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2427;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_ass_subscribed_1 = var_info_dict;
        tmp_ass_subscript_1 = mod_consts[153];
        tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_1, tmp_ass_subscript_1, tmp_ass_subvalue_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2427;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
    }
    if (var_info_dict == NULL) {

        FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[152]);
        exception_tb = NULL;
        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
        CHAIN_EXCEPTION(exception_value);

        exception_lineno = 2428;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto frame_exception_exit_1;
    }

    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_16:;
    {
        bool tmp_condition_result_20;
        int tmp_and_left_truth_3;
        bool tmp_and_left_value_3;
        bool tmp_and_right_value_3;
        PyObject *tmp_operand_value_2;
        PyObject *tmp_called_value_24;
        PyObject *tmp_expression_value_24;
        PyObject *tmp_expression_value_25;
        PyObject *tmp_expression_value_26;
        PyObject *tmp_operand_value_3;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2430;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_26 = par_self;
        tmp_expression_value_25 = LOOKUP_ATTRIBUTE(tmp_expression_value_26, mod_consts[0]);
        if (tmp_expression_value_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2430;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_24 = LOOKUP_ATTRIBUTE(tmp_expression_value_25, mod_consts[91]);
        Py_DECREF(tmp_expression_value_25);
        if (tmp_expression_value_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2430;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_24 = LOOKUP_ATTRIBUTE(tmp_expression_value_24, mod_consts[13]);
        Py_DECREF(tmp_expression_value_24);
        if (tmp_called_value_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2430;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2430;
        tmp_operand_value_2 = CALL_FUNCTION_WITH_POSARGS2(tmp_called_value_24, mod_consts[154]);

        Py_DECREF(tmp_called_value_24);
        if (tmp_operand_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2430;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_2);
        Py_DECREF(tmp_operand_value_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2430;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_3 = (tmp_res == 0) ? true : false;
        tmp_and_left_truth_3 = tmp_and_left_value_3 != false ? 1 : 0;
        if (tmp_and_left_truth_3 == 1) {
            goto and_right_3;
        } else {
            goto and_left_3;
        }
        and_right_3:;
        CHECK_OBJECT(var_is_intentional);
        tmp_operand_value_3 = var_is_intentional;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2430;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_3 = (tmp_res == 0) ? true : false;
        tmp_condition_result_20 = tmp_and_right_value_3;
        goto and_end_3;
        and_left_3:;
        tmp_condition_result_20 = tmp_and_left_value_3;
        and_end_3:;
        if (tmp_condition_result_20 != false) {
            goto branch_yes_19;
        } else {
            goto branch_no_19;
        }
    }
    branch_yes_19:;
    {
        PyObject *tmp_assign_source_30;
        PyObject *tmp_called_value_25;
        PyObject *tmp_expression_value_27;
        PyObject *tmp_expression_value_28;
        PyObject *tmp_expression_value_29;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2431;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_29 = par_self;
        tmp_expression_value_28 = LOOKUP_ATTRIBUTE(tmp_expression_value_29, mod_consts[0]);
        if (tmp_expression_value_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2431;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_27 = LOOKUP_ATTRIBUTE(tmp_expression_value_28, mod_consts[91]);
        Py_DECREF(tmp_expression_value_28);
        if (tmp_expression_value_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2431;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_25 = LOOKUP_ATTRIBUTE(tmp_expression_value_27, mod_consts[13]);
        Py_DECREF(tmp_expression_value_27);
        if (tmp_called_value_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2431;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2431;
        tmp_assign_source_30 = CALL_FUNCTION_WITH_POSARGS2(tmp_called_value_25, mod_consts[155]);

        Py_DECREF(tmp_called_value_25);
        if (tmp_assign_source_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2431;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_force == NULL);
        var_force = tmp_assign_source_30;
    }
    {
        PyObject *tmp_called_value_26;
        PyObject *tmp_expression_value_30;
        PyObject *tmp_expression_value_31;
        PyObject *tmp_call_result_11;
        PyObject *tmp_args_element_value_33;
        PyObject *tmp_mod_expr_left_6;
        PyObject *tmp_mod_expr_right_6;
        nuitka_bool tmp_condition_result_21;
        int tmp_truth_name_8;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2432;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_31 = par_self;
        tmp_expression_value_30 = LOOKUP_ATTRIBUTE(tmp_expression_value_31, mod_consts[0]);
        if (tmp_expression_value_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2432;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_26 = LOOKUP_ATTRIBUTE(tmp_expression_value_30, mod_consts[98]);
        Py_DECREF(tmp_expression_value_30);
        if (tmp_called_value_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2432;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mod_expr_left_6 = mod_consts[156];
        CHECK_OBJECT(var_force);
        tmp_truth_name_8 = CHECK_IF_TRUE(var_force);
        if (tmp_truth_name_8 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_26);

            exception_lineno = 2433;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_21 = tmp_truth_name_8 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_21 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_2;
        } else {
            goto condexpr_false_2;
        }
        condexpr_true_2:;
        tmp_mod_expr_right_6 = mod_consts[157];
        goto condexpr_end_2;
        condexpr_false_2:;
        tmp_mod_expr_right_6 = mod_consts[158];
        condexpr_end_2:;
        tmp_args_element_value_33 = BINARY_OPERATION_MOD_OBJECT_UNICODE_UNICODE(tmp_mod_expr_left_6, tmp_mod_expr_right_6);
        if (tmp_args_element_value_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_26);

            exception_lineno = 2433;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2432;
        tmp_call_result_11 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_26, tmp_args_element_value_33);
        Py_DECREF(tmp_called_value_26);
        Py_DECREF(tmp_args_element_value_33);
        if (tmp_call_result_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2432;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_11);
    }
    branch_no_19:;
    {
        bool tmp_condition_result_22;
        PyObject *tmp_operand_value_4;
        if (var_full_response == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[159]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2435;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_operand_value_4 = var_full_response;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_4);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2435;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_22 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_22 != false) {
            goto branch_yes_20;
        } else {
            goto branch_no_20;
        }
    }
    branch_yes_20:;
    {
        PyObject *tmp_assign_source_31;
        PyObject *tmp_called_value_27;
        PyObject *tmp_args_element_value_34;
        tmp_called_value_27 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[128]);

        if (unlikely(tmp_called_value_27 == NULL)) {
            tmp_called_value_27 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[128]);
        }

        if (tmp_called_value_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2436;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_34 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2436;
        tmp_assign_source_31 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_27, tmp_args_element_value_34);
        if (tmp_assign_source_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2436;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_request;
            var_request = tmp_assign_source_31;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_called_instance_18;
        PyObject *tmp_call_result_12;
        CHECK_OBJECT(var_request);
        tmp_called_instance_18 = var_request;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2445;
        tmp_call_result_12 = CALL_METHOD_WITH_ARGS2(
            tmp_called_instance_18,
            mod_consts[129],
            &PyTuple_GET_ITEM(mod_consts[130], 0)
        );

        if (tmp_call_result_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2445;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_12);
    }
    {
        PyObject *tmp_assign_source_32;
        PyObject *tmp_called_instance_19;
        PyObject *tmp_args_element_value_35;
        PyObject *tmp_args_element_value_36;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2446;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_19 = par_self;
        CHECK_OBJECT(var_request);
        tmp_args_element_value_35 = var_request;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_36 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2446;
        {
            PyObject *call_args[] = {tmp_args_element_value_35, tmp_args_element_value_36};
            tmp_assign_source_32 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_19,
                mod_consts[120],
                call_args
            );
        }

        if (tmp_assign_source_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2446;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_full_response;
            var_full_response = tmp_assign_source_32;
            Py_XDECREF(old);
        }

    }
    branch_no_20:;
    {
        PyObject *tmp_assign_source_33;
        PyObject *tmp_called_instance_20;
        if (var_full_response == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[159]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2448;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_20 = var_full_response;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2448;
        tmp_assign_source_33 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_20,
            mod_consts[160],
            PyTuple_GET_ITEM(mod_consts[161], 0)
        );

        if (tmp_assign_source_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2448;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_first_bytes == NULL);
        var_first_bytes = tmp_assign_source_33;
    }
    {
        nuitka_bool tmp_condition_result_23;
        PyObject *tmp_called_value_28;
        PyObject *tmp_expression_value_32;
        PyObject *tmp_call_result_13;
        int tmp_truth_name_9;
        CHECK_OBJECT(var_first_bytes);
        tmp_expression_value_32 = var_first_bytes;
        tmp_called_value_28 = LOOKUP_ATTRIBUTE(tmp_expression_value_32, mod_consts[85]);
        if (tmp_called_value_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2451;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2451;
        tmp_call_result_13 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_28, mod_consts[162]);

        Py_DECREF(tmp_called_value_28);
        if (tmp_call_result_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2451;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_9 = CHECK_IF_TRUE(tmp_call_result_13);
        if (tmp_truth_name_9 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_13);

            exception_lineno = 2451;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_23 = tmp_truth_name_9 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_13);
        if (tmp_condition_result_23 == NUITKA_BOOL_TRUE) {
            goto branch_yes_21;
        } else {
            goto branch_no_21;
        }
    }
    branch_yes_21:;
    {
        PyObject *tmp_called_instance_21;
        PyObject *tmp_args_element_value_37;
        PyObject *tmp_args_element_value_38;
        PyObject *tmp_args_element_value_39;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2452;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_21 = par_self;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_37 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_38 = var_video_id;
        tmp_args_element_value_39 = mod_consts[142];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2452;
        {
            PyObject *call_args[] = {tmp_args_element_value_37, tmp_args_element_value_38, tmp_args_element_value_39};
            tmp_dictset_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_21,
                mod_consts[141],
                call_args
            );
        }

        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2452;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_dictset_dict = var_info_dict;
        tmp_dictset_key = mod_consts[153];
        assert(PyDict_CheckExact(tmp_dictset_dict));
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);

        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    {
        PyObject *tmp_called_value_29;
        PyObject *tmp_expression_value_33;
        PyObject *tmp_call_result_14;
        PyObject *tmp_args_element_value_40;
        PyObject *tmp_expression_value_34;
        PyObject *tmp_subscript_value_2;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2453;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_33 = par_self;
        tmp_called_value_29 = LOOKUP_ATTRIBUTE(tmp_expression_value_33, mod_consts[151]);
        if (tmp_called_value_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2453;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_expression_value_34 = var_info_dict;
        tmp_subscript_value_2 = mod_consts[153];
        tmp_args_element_value_40 = LOOKUP_SUBSCRIPT(tmp_expression_value_34, tmp_subscript_value_2);
        if (tmp_args_element_value_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_29);

            exception_lineno = 2453;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2453;
        tmp_call_result_14 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_29, tmp_args_element_value_40);
        Py_DECREF(tmp_called_value_29);
        Py_DECREF(tmp_args_element_value_40);
        if (tmp_call_result_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2453;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_14);
    }
    CHECK_OBJECT(var_info_dict);
    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_21:;
    {
        bool tmp_condition_result_24;
        PyObject *tmp_operand_value_5;
        PyObject *tmp_called_value_30;
        PyObject *tmp_args_element_value_41;
        tmp_called_value_30 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[163]);

        if (unlikely(tmp_called_value_30 == NULL)) {
            tmp_called_value_30 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[163]);
        }

        if (tmp_called_value_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2458;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_first_bytes);
        tmp_args_element_value_41 = var_first_bytes;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2458;
        tmp_operand_value_5 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_30, tmp_args_element_value_41);
        if (tmp_operand_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2458;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_5);
        Py_DECREF(tmp_operand_value_5);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2458;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_24 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_24 != false) {
            goto branch_yes_22;
        } else {
            goto branch_no_22;
        }
    }
    branch_yes_22:;
    {
        PyObject *tmp_called_instance_22;
        PyObject *tmp_expression_value_35;
        PyObject *tmp_call_result_15;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2459;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_35 = par_self;
        tmp_called_instance_22 = LOOKUP_ATTRIBUTE(tmp_expression_value_35, mod_consts[0]);
        if (tmp_called_instance_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2459;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2459;
        tmp_call_result_15 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_22,
            mod_consts[98],
            PyTuple_GET_ITEM(mod_consts[164], 0)
        );

        Py_DECREF(tmp_called_instance_22);
        if (tmp_call_result_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2459;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_15);
    }
    {
        PyObject *tmp_dict_arg_value_1;
        PyObject *tmp_iterable_value_1;
        PyObject *tmp_dict_key_4;
        PyObject *tmp_dict_value_4;
        CHECK_OBJECT(var_info_dict);
        tmp_dict_arg_value_1 = var_info_dict;
        tmp_dict_key_4 = mod_consts[150];
        tmp_dict_value_4 = Py_True;
        tmp_iterable_value_1 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_iterable_value_1, tmp_dict_key_4, tmp_dict_value_4);
        assert(!(tmp_res != 0));
        tmp_dict_key_4 = mod_consts[33];
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_dict_value_4 = Nuitka_Cell_GET(par_url);
        tmp_res = PyDict_SetItem(tmp_iterable_value_1, tmp_dict_key_4, tmp_dict_value_4);
        assert(!(tmp_res != 0));
        assert(PyDict_Check(tmp_dict_arg_value_1));
            tmp_res = PyDict_Merge(tmp_dict_arg_value_1, tmp_iterable_value_1, 1);

        Py_DECREF(tmp_iterable_value_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2461;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
    }
    CHECK_OBJECT(var_info_dict);
    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_22:;
    {
        PyObject *tmp_assign_source_34;
        PyObject *tmp_called_value_31;
        PyObject *tmp_expression_value_36;
        PyObject *tmp_kw_call_arg_value_0_2;
        PyObject *tmp_kw_call_arg_value_1_2;
        PyObject *tmp_kw_call_arg_value_2_1;
        PyObject *tmp_kw_call_dict_value_0_2;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2467;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_36 = par_self;
        tmp_called_value_31 = LOOKUP_ATTRIBUTE(tmp_expression_value_36, mod_consts[165]);
        if (tmp_called_value_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2467;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (var_full_response == NULL) {
            Py_DECREF(tmp_called_value_31);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[159]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2468;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_kw_call_arg_value_0_2 = var_full_response;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_kw_call_arg_value_1_2 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_2_1 = var_video_id;
        CHECK_OBJECT(var_first_bytes);
        tmp_kw_call_dict_value_0_2 = var_first_bytes;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2467;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_2, tmp_kw_call_arg_value_1_2, tmp_kw_call_arg_value_2_1};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_2};
            tmp_assign_source_34 = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_31, args, kw_values, mod_consts[166]);
        }

        Py_DECREF(tmp_called_value_31);
        if (tmp_assign_source_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2467;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(Nuitka_Cell_GET(var_webpage) == NULL);
        PyCell_SET(var_webpage, tmp_assign_source_34);

    }
    {
        bool tmp_condition_result_25;
        PyObject *tmp_cmp_expr_left_13;
        PyObject *tmp_cmp_expr_right_13;
        tmp_cmp_expr_left_13 = mod_consts[167];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_cmp_expr_right_13 = Nuitka_Cell_GET(var_webpage);
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_13, tmp_cmp_expr_left_13);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2470;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_25 = (tmp_res == 1) ? true : false;
        if (tmp_condition_result_25 != false) {
            goto branch_yes_23;
        } else {
            goto branch_no_23;
        }
    }
    branch_yes_23:;
    {
        PyObject *tmp_assign_source_35;
        PyObject *tmp_called_instance_23;
        PyObject *tmp_args_element_value_42;
        PyObject *tmp_args_element_value_43;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2471;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_23 = par_self;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_42 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_43 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2471;
        {
            PyObject *call_args[] = {tmp_args_element_value_42, tmp_args_element_value_43};
            tmp_assign_source_35 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_23,
                mod_consts[168],
                call_args
            );
        }

        if (tmp_assign_source_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2471;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = Nuitka_Cell_GET(var_webpage);
            PyCell_SET(var_webpage, tmp_assign_source_35);
            Py_XDECREF(old);
        }

    }
    branch_no_23:;
    {
        PyObject *tmp_called_instance_24;
        PyObject *tmp_call_result_16;
        PyObject *tmp_args_element_value_44;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2473;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_24 = par_self;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_44 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2473;
        tmp_call_result_16 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_24, mod_consts[169], tmp_args_element_value_44);
        if (tmp_call_result_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2473;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_16);
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_36;
        PyObject *tmp_called_value_32;
        PyObject *tmp_args_element_value_45;
        PyObject *tmp_called_value_33;
        PyObject *tmp_expression_value_37;
        tmp_called_value_32 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[170]);

        if (unlikely(tmp_called_value_32 == NULL)) {
            tmp_called_value_32 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[170]);
        }

        if (tmp_called_value_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2477;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        if (Nuitka_Cell_GET(var_webpage) == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[171]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2477;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_expression_value_37 = Nuitka_Cell_GET(var_webpage);
        tmp_called_value_33 = LOOKUP_ATTRIBUTE(tmp_expression_value_37, mod_consts[172]);
        if (tmp_called_value_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2477;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2477;
        tmp_args_element_value_45 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_33, mod_consts[173]);

        Py_DECREF(tmp_called_value_33);
        if (tmp_args_element_value_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2477;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2477;
        tmp_assign_source_36 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_32, tmp_args_element_value_45);
        Py_DECREF(tmp_args_element_value_45);
        if (tmp_assign_source_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2477;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        assert(var_doc == NULL);
        var_doc = tmp_assign_source_36;
    }
    {
        nuitka_bool tmp_condition_result_26;
        PyObject *tmp_cmp_expr_left_14;
        PyObject *tmp_cmp_expr_right_14;
        PyObject *tmp_expression_value_38;
        CHECK_OBJECT(var_doc);
        tmp_expression_value_38 = var_doc;
        tmp_cmp_expr_left_14 = LOOKUP_ATTRIBUTE(tmp_expression_value_38, mod_consts[81]);
        if (tmp_cmp_expr_left_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2478;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_cmp_expr_right_14 = mod_consts[174];
        tmp_condition_result_26 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_14, tmp_cmp_expr_right_14);
        Py_DECREF(tmp_cmp_expr_left_14);
        if (tmp_condition_result_26 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2478;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        if (tmp_condition_result_26 == NUITKA_BOOL_TRUE) {
            goto branch_yes_24;
        } else {
            goto branch_no_24;
        }
    }
    branch_yes_24:;
    {
        PyObject *tmp_called_instance_25;
        PyObject *tmp_args_element_value_46;
        PyObject *tmp_args_element_value_47;
        PyObject *tmp_args_element_value_48;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2479;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_called_instance_25 = par_self;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_46 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_47 = var_video_id;
        CHECK_OBJECT(var_doc);
        tmp_args_element_value_48 = var_doc;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2479;
        {
            PyObject *call_args[] = {tmp_args_element_value_46, tmp_args_element_value_47, tmp_args_element_value_48};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_25,
                mod_consts[175],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2479;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        goto frame_return_exit_1;
    }
    goto branch_end_24;
    branch_no_24:;
    {
        nuitka_bool tmp_condition_result_27;
        PyObject *tmp_cmp_expr_left_15;
        PyObject *tmp_cmp_expr_right_15;
        PyObject *tmp_expression_value_39;
        CHECK_OBJECT(var_doc);
        tmp_expression_value_39 = var_doc;
        tmp_cmp_expr_left_15 = LOOKUP_ATTRIBUTE(tmp_expression_value_39, mod_consts[81]);
        if (tmp_cmp_expr_left_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2480;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_cmp_expr_right_15 = mod_consts[176];
        tmp_condition_result_27 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_15, tmp_cmp_expr_right_15);
        Py_DECREF(tmp_cmp_expr_left_15);
        if (tmp_condition_result_27 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2480;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        if (tmp_condition_result_27 == NUITKA_BOOL_TRUE) {
            goto branch_yes_25;
        } else {
            goto branch_no_25;
        }
    }
    branch_yes_25:;
    {
        PyObject *tmp_called_instance_26;
        PyObject *tmp_args_element_value_49;
        PyObject *tmp_args_element_value_50;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2481;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_called_instance_26 = par_self;
        CHECK_OBJECT(var_doc);
        tmp_args_element_value_49 = var_doc;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_50 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2481;
        {
            PyObject *call_args[] = {tmp_args_element_value_49, tmp_args_element_value_50};
            tmp_dictset_value = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_26,
                mod_consts[177],
                call_args
            );
        }

        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2481;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_dictset_dict = var_info_dict;
        tmp_dictset_key = mod_consts[153];
        assert(PyDict_CheckExact(tmp_dictset_dict));
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);

        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    {
        PyObject *tmp_called_value_34;
        PyObject *tmp_expression_value_40;
        PyObject *tmp_call_result_17;
        PyObject *tmp_args_element_value_51;
        PyObject *tmp_expression_value_41;
        PyObject *tmp_subscript_value_3;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2482;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_expression_value_40 = par_self;
        tmp_called_value_34 = LOOKUP_ATTRIBUTE(tmp_expression_value_40, mod_consts[151]);
        if (tmp_called_value_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2482;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_expression_value_41 = var_info_dict;
        tmp_subscript_value_3 = mod_consts[153];
        tmp_args_element_value_51 = LOOKUP_SUBSCRIPT(tmp_expression_value_41, tmp_subscript_value_3);
        if (tmp_args_element_value_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_34);

            exception_lineno = 2482;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2482;
        tmp_call_result_17 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_34, tmp_args_element_value_51);
        Py_DECREF(tmp_called_value_34);
        Py_DECREF(tmp_args_element_value_51);
        if (tmp_call_result_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2482;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        Py_DECREF(tmp_call_result_17);
    }
    CHECK_OBJECT(var_info_dict);
    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    goto branch_end_25;
    branch_no_25:;
    {
        nuitka_bool tmp_condition_result_28;
        PyObject *tmp_called_value_35;
        PyObject *tmp_expression_value_42;
        PyObject *tmp_call_result_18;
        PyObject *tmp_args_element_value_52;
        PyObject *tmp_args_element_value_53;
        PyObject *tmp_expression_value_43;
        int tmp_truth_name_10;
        tmp_expression_value_42 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_expression_value_42 == NULL)) {
            tmp_expression_value_42 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_expression_value_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2484;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_called_value_35 = LOOKUP_ATTRIBUTE(tmp_expression_value_42, mod_consts[96]);
        if (tmp_called_value_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2484;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_args_element_value_52 = mod_consts[178];
        CHECK_OBJECT(var_doc);
        tmp_expression_value_43 = var_doc;
        tmp_args_element_value_53 = LOOKUP_ATTRIBUTE(tmp_expression_value_43, mod_consts[81]);
        if (tmp_args_element_value_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_35);

            exception_lineno = 2484;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2484;
        {
            PyObject *call_args[] = {tmp_args_element_value_52, tmp_args_element_value_53};
            tmp_call_result_18 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_35, call_args);
        }

        Py_DECREF(tmp_called_value_35);
        Py_DECREF(tmp_args_element_value_53);
        if (tmp_call_result_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2484;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_truth_name_10 = CHECK_IF_TRUE(tmp_call_result_18);
        if (tmp_truth_name_10 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_18);

            exception_lineno = 2484;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_28 = tmp_truth_name_10 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_18);
        if (tmp_condition_result_28 == NUITKA_BOOL_TRUE) {
            goto branch_yes_26;
        } else {
            goto branch_no_26;
        }
    }
    branch_yes_26:;
    {
        PyObject *tmp_assign_source_37;
        PyObject *tmp_called_instance_27;
        PyObject *tmp_args_element_value_54;
        PyObject *tmp_args_element_value_55;
        PyObject *tmp_args_element_value_56;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2485;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_called_instance_27 = par_self;
        CHECK_OBJECT(var_doc);
        tmp_args_element_value_54 = var_doc;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_55 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_56 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2485;
        {
            PyObject *call_args[] = {tmp_args_element_value_54, tmp_args_element_value_55, tmp_args_element_value_56};
            tmp_assign_source_37 = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_27,
                mod_consts[179],
                call_args
            );
        }

        if (tmp_assign_source_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2485;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        assert(var_smil == NULL);
        var_smil = tmp_assign_source_37;
    }
    {
        PyObject *tmp_called_value_36;
        PyObject *tmp_expression_value_44;
        PyObject *tmp_call_result_19;
        PyObject *tmp_args_element_value_57;
        PyObject *tmp_expression_value_45;
        PyObject *tmp_subscript_value_4;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2486;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_expression_value_44 = par_self;
        tmp_called_value_36 = LOOKUP_ATTRIBUTE(tmp_expression_value_44, mod_consts[151]);
        if (tmp_called_value_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2486;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_smil);
        tmp_expression_value_45 = var_smil;
        tmp_subscript_value_4 = mod_consts[153];
        tmp_args_element_value_57 = LOOKUP_SUBSCRIPT(tmp_expression_value_45, tmp_subscript_value_4);
        if (tmp_args_element_value_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_36);

            exception_lineno = 2486;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2486;
        tmp_call_result_19 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_36, tmp_args_element_value_57);
        Py_DECREF(tmp_called_value_36);
        Py_DECREF(tmp_args_element_value_57);
        if (tmp_call_result_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2486;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        Py_DECREF(tmp_call_result_19);
    }
    CHECK_OBJECT(var_smil);
    tmp_return_value = var_smil;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    goto branch_end_26;
    branch_no_26:;
    {
        nuitka_bool tmp_condition_result_29;
        PyObject *tmp_cmp_expr_left_16;
        PyObject *tmp_cmp_expr_right_16;
        PyObject *tmp_expression_value_46;
        CHECK_OBJECT(var_doc);
        tmp_expression_value_46 = var_doc;
        tmp_cmp_expr_left_16 = LOOKUP_ATTRIBUTE(tmp_expression_value_46, mod_consts[81]);
        if (tmp_cmp_expr_left_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2488;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_cmp_expr_right_16 = mod_consts[180];
        tmp_condition_result_29 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_16, tmp_cmp_expr_right_16);
        Py_DECREF(tmp_cmp_expr_left_16);
        if (tmp_condition_result_29 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2488;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        if (tmp_condition_result_29 == NUITKA_BOOL_TRUE) {
            goto branch_yes_27;
        } else {
            goto branch_no_27;
        }
    }
    branch_yes_27:;
    {
        PyObject *tmp_called_value_37;
        PyObject *tmp_expression_value_47;
        PyObject *tmp_args_element_value_58;
        PyObject *tmp_called_value_38;
        PyObject *tmp_expression_value_48;
        PyObject *tmp_kw_call_arg_value_0_3;
        PyObject *tmp_kw_call_arg_value_1_3;
        PyObject *tmp_kw_call_dict_value_0_3;
        PyObject *tmp_kw_call_dict_value_1_2;
        PyObject *tmp_called_instance_28;
        PyObject *tmp_args_element_value_59;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2489;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_expression_value_47 = par_self;
        tmp_called_value_37 = LOOKUP_ATTRIBUTE(tmp_expression_value_47, mod_consts[181]);
        if (tmp_called_value_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2489;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_37);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2490;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_expression_value_48 = par_self;
        tmp_called_value_38 = LOOKUP_ATTRIBUTE(tmp_expression_value_48, mod_consts[182]);
        if (tmp_called_value_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_37);

            exception_lineno = 2490;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_doc);
        tmp_kw_call_arg_value_0_3 = var_doc;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_3 = var_video_id;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_kw_call_dict_value_0_3 = Nuitka_Cell_GET(par_url);
        if (var_full_response == NULL) {
            Py_DECREF(tmp_called_value_37);
            Py_DECREF(tmp_called_value_38);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[159]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2492;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_called_instance_28 = var_full_response;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2492;
        tmp_kw_call_dict_value_1_2 = CALL_METHOD_NO_ARGS(tmp_called_instance_28, mod_consts[123]);
        if (tmp_kw_call_dict_value_1_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_37);
            Py_DECREF(tmp_called_value_38);

            exception_lineno = 2492;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2490;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_3, tmp_kw_call_arg_value_1_3};
            PyObject *kw_values[2] = {tmp_kw_call_dict_value_0_3, tmp_kw_call_dict_value_1_2};
            tmp_args_element_value_58 = CALL_FUNCTION_WITH_ARGS2_KWSPLIT(tmp_called_value_38, args, kw_values, mod_consts[183]);
        }

        Py_DECREF(tmp_called_value_38);
        Py_DECREF(tmp_kw_call_dict_value_1_2);
        if (tmp_args_element_value_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_37);

            exception_lineno = 2490;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_59 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2489;
        {
            PyObject *call_args[] = {tmp_args_element_value_58, tmp_args_element_value_59};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_37, call_args);
        }

        Py_DECREF(tmp_called_value_37);
        Py_DECREF(tmp_args_element_value_58);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2489;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        goto frame_return_exit_1;
    }
    goto branch_end_27;
    branch_no_27:;
    {
        nuitka_bool tmp_condition_result_30;
        PyObject *tmp_called_value_39;
        PyObject *tmp_expression_value_49;
        PyObject *tmp_call_result_20;
        PyObject *tmp_args_element_value_60;
        PyObject *tmp_args_element_value_61;
        PyObject *tmp_expression_value_50;
        int tmp_truth_name_11;
        tmp_expression_value_49 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_expression_value_49 == NULL)) {
            tmp_expression_value_49 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_expression_value_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2494;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_called_value_39 = LOOKUP_ATTRIBUTE(tmp_expression_value_49, mod_consts[96]);
        if (tmp_called_value_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2494;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_args_element_value_60 = mod_consts[184];
        CHECK_OBJECT(var_doc);
        tmp_expression_value_50 = var_doc;
        tmp_args_element_value_61 = LOOKUP_ATTRIBUTE(tmp_expression_value_50, mod_consts[81]);
        if (tmp_args_element_value_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_39);

            exception_lineno = 2494;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2494;
        {
            PyObject *call_args[] = {tmp_args_element_value_60, tmp_args_element_value_61};
            tmp_call_result_20 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_39, call_args);
        }

        Py_DECREF(tmp_called_value_39);
        Py_DECREF(tmp_args_element_value_61);
        if (tmp_call_result_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2494;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_truth_name_11 = CHECK_IF_TRUE(tmp_call_result_20);
        if (tmp_truth_name_11 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_20);

            exception_lineno = 2494;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_30 = tmp_truth_name_11 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_20);
        if (tmp_condition_result_30 == NUITKA_BOOL_TRUE) {
            goto branch_yes_28;
        } else {
            goto branch_no_28;
        }
    }
    branch_yes_28:;
    {
        PyObject *tmp_called_value_40;
        PyObject *tmp_expression_value_51;
        PyObject *tmp_kw_call_arg_value_0_4;
        PyObject *tmp_kw_call_dict_value_0_4;
        PyObject *tmp_expression_value_52;
        PyObject *tmp_called_value_41;
        PyObject *tmp_expression_value_53;
        PyObject *tmp_called_instance_29;
        PyObject *tmp_subscript_value_5;
        PyObject *tmp_kw_call_dict_value_1_3;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2495;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_expression_value_51 = par_self;
        tmp_called_value_40 = LOOKUP_ATTRIBUTE(tmp_expression_value_51, mod_consts[185]);
        if (tmp_called_value_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2495;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_doc);
        tmp_kw_call_arg_value_0_4 = var_doc;
        if (var_full_response == NULL) {
            Py_DECREF(tmp_called_value_40);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[159]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2497;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_called_instance_29 = var_full_response;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2497;
        tmp_expression_value_53 = CALL_METHOD_NO_ARGS(tmp_called_instance_29, mod_consts[123]);
        if (tmp_expression_value_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_40);

            exception_lineno = 2497;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_called_value_41 = LOOKUP_ATTRIBUTE(tmp_expression_value_53, mod_consts[77]);
        Py_DECREF(tmp_expression_value_53);
        if (tmp_called_value_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_40);

            exception_lineno = 2497;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2497;
        tmp_expression_value_52 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_41, mod_consts[78]);

        Py_DECREF(tmp_called_value_41);
        if (tmp_expression_value_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_40);

            exception_lineno = 2497;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_subscript_value_5 = mod_consts[28];
        tmp_kw_call_dict_value_0_4 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_value_52, tmp_subscript_value_5, 0);
        Py_DECREF(tmp_expression_value_52);
        if (tmp_kw_call_dict_value_0_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_40);

            exception_lineno = 2497;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_kw_call_dict_value_1_3 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2495;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_4};
            PyObject *kw_values[2] = {tmp_kw_call_dict_value_0_4, tmp_kw_call_dict_value_1_3};
            tmp_dictset_value = CALL_FUNCTION_WITH_ARGS1_KWSPLIT(tmp_called_value_40, args, kw_values, mod_consts[186]);
        }

        Py_DECREF(tmp_called_value_40);
        Py_DECREF(tmp_kw_call_dict_value_0_4);
        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2495;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_dictset_dict = var_info_dict;
        tmp_dictset_key = mod_consts[153];
        assert(PyDict_CheckExact(tmp_dictset_dict));
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);

        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    {
        PyObject *tmp_called_value_42;
        PyObject *tmp_expression_value_54;
        PyObject *tmp_call_result_21;
        PyObject *tmp_args_element_value_62;
        PyObject *tmp_expression_value_55;
        PyObject *tmp_subscript_value_6;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2499;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_expression_value_54 = par_self;
        tmp_called_value_42 = LOOKUP_ATTRIBUTE(tmp_expression_value_54, mod_consts[151]);
        if (tmp_called_value_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2499;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_expression_value_55 = var_info_dict;
        tmp_subscript_value_6 = mod_consts[153];
        tmp_args_element_value_62 = LOOKUP_SUBSCRIPT(tmp_expression_value_55, tmp_subscript_value_6);
        if (tmp_args_element_value_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_42);

            exception_lineno = 2499;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2499;
        tmp_call_result_21 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_42, tmp_args_element_value_62);
        Py_DECREF(tmp_called_value_42);
        Py_DECREF(tmp_args_element_value_62);
        if (tmp_call_result_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2499;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        Py_DECREF(tmp_call_result_21);
    }
    CHECK_OBJECT(var_info_dict);
    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    goto branch_end_28;
    branch_no_28:;
    {
        nuitka_bool tmp_condition_result_31;
        PyObject *tmp_called_value_43;
        PyObject *tmp_expression_value_56;
        PyObject *tmp_call_result_22;
        PyObject *tmp_args_element_value_63;
        PyObject *tmp_args_element_value_64;
        PyObject *tmp_expression_value_57;
        int tmp_truth_name_12;
        tmp_expression_value_56 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_expression_value_56 == NULL)) {
            tmp_expression_value_56 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_expression_value_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2501;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_called_value_43 = LOOKUP_ATTRIBUTE(tmp_expression_value_56, mod_consts[96]);
        if (tmp_called_value_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2501;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_args_element_value_63 = mod_consts[187];
        CHECK_OBJECT(var_doc);
        tmp_expression_value_57 = var_doc;
        tmp_args_element_value_64 = LOOKUP_ATTRIBUTE(tmp_expression_value_57, mod_consts[81]);
        if (tmp_args_element_value_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_43);

            exception_lineno = 2501;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2501;
        {
            PyObject *call_args[] = {tmp_args_element_value_63, tmp_args_element_value_64};
            tmp_call_result_22 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_43, call_args);
        }

        Py_DECREF(tmp_called_value_43);
        Py_DECREF(tmp_args_element_value_64);
        if (tmp_call_result_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2501;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_truth_name_12 = CHECK_IF_TRUE(tmp_call_result_22);
        if (tmp_truth_name_12 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_22);

            exception_lineno = 2501;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        tmp_condition_result_31 = tmp_truth_name_12 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_22);
        if (tmp_condition_result_31 == NUITKA_BOOL_TRUE) {
            goto branch_yes_29;
        } else {
            goto branch_no_29;
        }
    }
    branch_yes_29:;
    {
        PyObject *tmp_called_instance_30;
        PyObject *tmp_args_element_value_65;
        PyObject *tmp_args_element_value_66;
        PyObject *tmp_args_element_value_67;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2502;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_called_instance_30 = par_self;
        CHECK_OBJECT(var_doc);
        tmp_args_element_value_65 = var_doc;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_66 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_67 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2502;
        {
            PyObject *call_args[] = {tmp_args_element_value_65, tmp_args_element_value_66, tmp_args_element_value_67};
            tmp_dictset_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_30,
                mod_consts[188],
                call_args
            );
        }

        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2502;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_dictset_dict = var_info_dict;
        tmp_dictset_key = mod_consts[153];
        assert(PyDict_CheckExact(tmp_dictset_dict));
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);

        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    {
        PyObject *tmp_called_value_44;
        PyObject *tmp_expression_value_58;
        PyObject *tmp_call_result_23;
        PyObject *tmp_args_element_value_68;
        PyObject *tmp_expression_value_59;
        PyObject *tmp_subscript_value_7;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2503;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }

        tmp_expression_value_58 = par_self;
        tmp_called_value_44 = LOOKUP_ATTRIBUTE(tmp_expression_value_58, mod_consts[151]);
        if (tmp_called_value_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2503;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        CHECK_OBJECT(var_info_dict);
        tmp_expression_value_59 = var_info_dict;
        tmp_subscript_value_7 = mod_consts[153];
        tmp_args_element_value_68 = LOOKUP_SUBSCRIPT(tmp_expression_value_59, tmp_subscript_value_7);
        if (tmp_args_element_value_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_44);

            exception_lineno = 2503;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2503;
        tmp_call_result_23 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_44, tmp_args_element_value_68);
        Py_DECREF(tmp_called_value_44);
        Py_DECREF(tmp_args_element_value_68);
        if (tmp_call_result_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2503;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_4;
        }
        Py_DECREF(tmp_call_result_23);
    }
    CHECK_OBJECT(var_info_dict);
    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_29:;
    branch_end_28:;
    branch_end_27:;
    branch_end_26:;
    branch_end_25:;
    branch_end_24:;
    goto try_end_3;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Preserve existing published exception id 1.
    exception_preserved_1 = GET_CURRENT_EXCEPTION();

    if (exception_keeper_tb_3 == NULL) {
        exception_keeper_tb_3 = MAKE_TRACEBACK(frame_713f709215410de619f38bbb0405e5b8, exception_keeper_lineno_3);
    } else if (exception_keeper_lineno_3 != 0) {
        exception_keeper_tb_3 = ADD_TRACEBACK(exception_keeper_tb_3, frame_713f709215410de619f38bbb0405e5b8, exception_keeper_lineno_3);
    }

    PUBLISH_CURRENT_EXCEPTION(&exception_keeper_type_3, &exception_keeper_value_3, &exception_keeper_tb_3);
    // Tried code:
    {
        bool tmp_condition_result_32;
        PyObject *tmp_cmp_expr_left_17;
        PyObject *tmp_cmp_expr_right_17;
        tmp_cmp_expr_left_17 = EXC_TYPE(PyThreadState_GET());
        tmp_cmp_expr_right_17 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[189]);

        if (unlikely(tmp_cmp_expr_right_17 == NULL)) {
            tmp_cmp_expr_right_17 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[189]);
        }

        if (tmp_cmp_expr_right_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2505;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_5;
        }
        tmp_res = EXCEPTION_MATCH_BOOL(tmp_cmp_expr_left_17, tmp_cmp_expr_right_17);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2505;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_32 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_32 != false) {
            goto branch_yes_30;
        } else {
            goto branch_no_30;
        }
    }
    branch_yes_30:;
    tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
    if (unlikely(tmp_result == false)) {
        exception_lineno = 2476;
    }

    if (exception_tb && exception_tb->tb_frame == &frame_713f709215410de619f38bbb0405e5b8->m_frame) frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = exception_tb->tb_lineno;
    type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
    goto try_except_handler_5;
    branch_no_30:;
    goto try_end_4;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Restore previous exception id 1.
    SET_CURRENT_EXCEPTION(&exception_preserved_1);

    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;
    // Restore previous exception id 1.
    SET_CURRENT_EXCEPTION(&exception_preserved_1);

    goto try_end_3;
    NUITKA_CANNOT_GET_HERE("exception handler codes exits in all cases");
    return NULL;
    // End of try:
    try_end_3:;
    {
        PyObject *tmp_assign_source_38;
        PyObject *tmp_called_value_45;
        PyObject *tmp_expression_value_60;
        PyObject *tmp_args_element_value_69;
        PyObject *tmp_args_element_value_70;
        PyObject *tmp_args_element_value_71;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2509;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_60 = par_self;
        tmp_called_value_45 = LOOKUP_ATTRIBUTE(tmp_expression_value_60, mod_consts[190]);
        if (tmp_called_value_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2509;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_69 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_70 = var_video_id;
        if (Nuitka_Cell_GET(var_webpage) == NULL) {
            Py_DECREF(tmp_called_value_45);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[171]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2509;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_value_71 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2509;
        {
            PyObject *call_args[] = {tmp_args_element_value_69, tmp_args_element_value_70, tmp_args_element_value_71};
            tmp_assign_source_38 = CALL_FUNCTION_WITH_ARGS3(tmp_called_value_45, call_args);
        }

        Py_DECREF(tmp_called_value_45);
        if (tmp_assign_source_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2509;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_camtasia_res == NULL);
        var_camtasia_res = tmp_assign_source_38;
    }
    {
        bool tmp_condition_result_33;
        PyObject *tmp_cmp_expr_left_18;
        PyObject *tmp_cmp_expr_right_18;
        CHECK_OBJECT(var_camtasia_res);
        tmp_cmp_expr_left_18 = var_camtasia_res;
        tmp_cmp_expr_right_18 = Py_None;
        tmp_condition_result_33 = (tmp_cmp_expr_left_18 != tmp_cmp_expr_right_18) ? true : false;
        if (tmp_condition_result_33 != false) {
            goto branch_yes_31;
        } else {
            goto branch_no_31;
        }
    }
    branch_yes_31:;
    CHECK_OBJECT(var_camtasia_res);
    tmp_return_value = var_camtasia_res;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_31:;
    {
        PyObject *tmp_assign_source_39;
        PyObject *tmp_called_value_46;
        PyObject *tmp_expression_value_61;
        PyObject *tmp_args_element_value_72;
        PyObject *tmp_args_element_value_73;
        PyObject *tmp_args_element_value_74;
        tmp_expression_value_61 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_expression_value_61 == NULL)) {
            tmp_expression_value_61 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_expression_value_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2522;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_46 = LOOKUP_ATTRIBUTE(tmp_expression_value_61, mod_consts[191]);
        if (tmp_called_value_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2522;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_72 = mod_consts[192];


        tmp_args_element_value_73 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__1_lambda();

        if (Nuitka_Cell_GET(var_webpage) == NULL) {
            Py_DECREF(tmp_called_value_46);
            Py_DECREF(tmp_args_element_value_73);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[171]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2524;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_value_74 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2522;
        {
            PyObject *call_args[] = {tmp_args_element_value_72, tmp_args_element_value_73, tmp_args_element_value_74};
            tmp_assign_source_39 = CALL_FUNCTION_WITH_ARGS3(tmp_called_value_46, call_args);
        }

        Py_DECREF(tmp_called_value_46);
        Py_DECREF(tmp_args_element_value_73);
        if (tmp_assign_source_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2522;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = Nuitka_Cell_GET(var_webpage);
            PyCell_SET(var_webpage, tmp_assign_source_39);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_40;
        int tmp_or_left_truth_1;
        PyObject *tmp_or_left_value_1;
        PyObject *tmp_or_right_value_1;
        PyObject *tmp_called_value_47;
        PyObject *tmp_expression_value_62;
        PyObject *tmp_args_value_3;
        PyObject *tmp_tuple_element_4;
        PyObject *tmp_kwargs_value_3;
        PyObject *tmp_called_value_48;
        PyObject *tmp_expression_value_63;
        PyObject *tmp_args_value_4;
        PyObject *tmp_tuple_element_5;
        PyObject *tmp_kwargs_value_4;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2532;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_62 = par_self;
        tmp_called_value_47 = LOOKUP_ATTRIBUTE(tmp_expression_value_62, mod_consts[195]);
        if (tmp_called_value_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2532;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_tuple_element_4 = Nuitka_Cell_GET(var_webpage);
        tmp_args_value_3 = MAKE_TUPLE_EMPTY(1);
        PyTuple_SET_ITEM0(tmp_args_value_3, 0, tmp_tuple_element_4);
        tmp_kwargs_value_3 = DICT_COPY(mod_consts[37]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2532;
        tmp_or_left_value_1 = CALL_FUNCTION(tmp_called_value_47, tmp_args_value_3, tmp_kwargs_value_3);
        Py_DECREF(tmp_called_value_47);
        Py_DECREF(tmp_args_value_3);
        Py_DECREF(tmp_kwargs_value_3);
        if (tmp_or_left_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2532;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_1 = CHECK_IF_TRUE(tmp_or_left_value_1);
        if (tmp_or_left_truth_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_1);

            exception_lineno = 2532;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        Py_DECREF(tmp_or_left_value_1);
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2533;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_63 = par_self;
        tmp_called_value_48 = LOOKUP_ATTRIBUTE(tmp_expression_value_63, mod_consts[196]);
        if (tmp_called_value_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2533;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_tuple_element_5 = mod_consts[197];
        tmp_args_value_4 = MAKE_TUPLE_EMPTY(3);
        PyTuple_SET_ITEM0(tmp_args_value_4, 0, tmp_tuple_element_5);
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_tuple_element_5 = Nuitka_Cell_GET(var_webpage);
        PyTuple_SET_ITEM0(tmp_args_value_4, 1, tmp_tuple_element_5);
        tmp_tuple_element_5 = mod_consts[198];
        PyTuple_SET_ITEM0(tmp_args_value_4, 2, tmp_tuple_element_5);
        tmp_kwargs_value_4 = DICT_COPY(mod_consts[199]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2533;
        tmp_or_right_value_1 = CALL_FUNCTION(tmp_called_value_48, tmp_args_value_4, tmp_kwargs_value_4);
        Py_DECREF(tmp_called_value_48);
        Py_DECREF(tmp_args_value_4);
        Py_DECREF(tmp_kwargs_value_4);
        if (tmp_or_right_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2533;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_40 = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        tmp_assign_source_40 = tmp_or_left_value_1;
        or_end_1:;
        assert(var_video_title == NULL);
        var_video_title = tmp_assign_source_40;
    }
    {
        PyObject *tmp_assign_source_41;
        PyObject *tmp_called_instance_31;
        PyObject *tmp_args_element_value_75;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2538;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_31 = par_self;
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_75 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2538;
        tmp_assign_source_41 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_31, mod_consts[200], tmp_args_element_value_75);
        if (tmp_assign_source_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2538;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_age_limit == NULL);
        var_age_limit = tmp_assign_source_41;
    }
    {
        PyObject *tmp_assign_source_42;
        tmp_assign_source_42 = LIST_COPY(mod_consts[201]);
        assert(var_AGE_LIMIT_MARKERS == NULL);
        var_AGE_LIMIT_MARKERS = tmp_assign_source_42;
    }
    {
        bool tmp_condition_result_34;
        PyObject *tmp_any_arg_1;
        PyObject *tmp_capi_result_1;
        {
            PyObject *tmp_assign_source_43;
            PyObject *tmp_iter_arg_2;
            CHECK_OBJECT(var_AGE_LIMIT_MARKERS);
            tmp_iter_arg_2 = var_AGE_LIMIT_MARKERS;
            tmp_assign_source_43 = MAKE_ITERATOR(tmp_iter_arg_2);
            if (tmp_assign_source_43 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2544;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto frame_exception_exit_1;
            }
            assert(tmp_genexpr_1__$0 == NULL);
            tmp_genexpr_1__$0 = tmp_assign_source_43;
        }
        // Tried code:
        {
            struct Nuitka_CellObject *tmp_closure_1[2];

            tmp_closure_1[0] = Nuitka_Cell_New0(tmp_genexpr_1__$0);
            tmp_closure_1[1] = var_webpage;
            Py_INCREF(tmp_closure_1[1]);

            tmp_any_arg_1 = MAKE_GENERATOR_youtube_dl$extractor$generic$$$function__4__real_extract$$$genexpr__1_genexpr(tmp_closure_1);

            goto try_return_handler_6;
        }
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_6:;
        CHECK_OBJECT(tmp_genexpr_1__$0);
        Py_DECREF(tmp_genexpr_1__$0);
        tmp_genexpr_1__$0 = NULL;
        goto outline_result_1;
        // End of try:
        NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
        return NULL;
        outline_result_1:;
        tmp_capi_result_1 = BUILTIN_ANY(tmp_any_arg_1);
        Py_DECREF(tmp_any_arg_1);
        if (tmp_capi_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2544;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_34 = CHECK_IF_TRUE(tmp_capi_result_1) == 1;
        Py_DECREF(tmp_capi_result_1);
        if (tmp_condition_result_34 != false) {
            goto branch_yes_32;
        } else {
            goto branch_no_32;
        }
    }
    branch_yes_32:;
    {
        PyObject *tmp_assign_source_44;
        tmp_assign_source_44 = mod_consts[26];
        {
            PyObject *old = var_age_limit;
            assert(old != NULL);
            var_age_limit = tmp_assign_source_44;
            Py_INCREF(var_age_limit);
            Py_DECREF(old);
        }

    }
    branch_no_32:;
    {
        PyObject *tmp_assign_source_45;
        PyObject *tmp_called_instance_32;
        PyObject *tmp_args_element_value_76;
        PyObject *tmp_args_element_value_77;
        PyObject *tmp_args_element_value_78;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2548;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_32 = par_self;
        tmp_args_element_value_76 = mod_consts[202];
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_77 = Nuitka_Cell_GET(par_url);
        tmp_args_element_value_78 = mod_consts[203];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2548;
        {
            PyObject *call_args[] = {tmp_args_element_value_76, tmp_args_element_value_77, tmp_args_element_value_78};
            tmp_assign_source_45 = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_32,
                mod_consts[61],
                call_args
            );
        }

        if (tmp_assign_source_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2548;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_video_uploader == NULL);
        var_video_uploader = tmp_assign_source_45;
    }
    {
        PyObject *tmp_assign_source_46;
        PyObject *tmp_called_value_49;
        PyObject *tmp_expression_value_64;
        PyObject *tmp_args_value_5;
        PyObject *tmp_tuple_element_6;
        PyObject *tmp_kwargs_value_5;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2551;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_64 = par_self;
        tmp_called_value_49 = LOOKUP_ATTRIBUTE(tmp_expression_value_64, mod_consts[204]);
        if (tmp_called_value_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2551;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_tuple_element_6 = Nuitka_Cell_GET(var_webpage);
        tmp_args_value_5 = MAKE_TUPLE_EMPTY(1);
        PyTuple_SET_ITEM0(tmp_args_value_5, 0, tmp_tuple_element_6);
        tmp_kwargs_value_5 = DICT_COPY(mod_consts[37]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2551;
        tmp_assign_source_46 = CALL_FUNCTION(tmp_called_value_49, tmp_args_value_5, tmp_kwargs_value_5);
        Py_DECREF(tmp_called_value_49);
        Py_DECREF(tmp_args_value_5);
        Py_DECREF(tmp_kwargs_value_5);
        if (tmp_assign_source_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2551;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_video_description == NULL);
        var_video_description = tmp_assign_source_46;
    }
    {
        PyObject *tmp_assign_source_47;
        PyObject *tmp_called_value_50;
        PyObject *tmp_expression_value_65;
        PyObject *tmp_args_value_6;
        PyObject *tmp_tuple_element_7;
        PyObject *tmp_kwargs_value_6;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2552;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_65 = par_self;
        tmp_called_value_50 = LOOKUP_ATTRIBUTE(tmp_expression_value_65, mod_consts[205]);
        if (tmp_called_value_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2552;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_tuple_element_7 = Nuitka_Cell_GET(var_webpage);
        tmp_args_value_6 = MAKE_TUPLE_EMPTY(1);
        PyTuple_SET_ITEM0(tmp_args_value_6, 0, tmp_tuple_element_7);
        tmp_kwargs_value_6 = DICT_COPY(mod_consts[37]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2552;
        tmp_assign_source_47 = CALL_FUNCTION(tmp_called_value_50, tmp_args_value_6, tmp_kwargs_value_6);
        Py_DECREF(tmp_called_value_50);
        Py_DECREF(tmp_args_value_6);
        Py_DECREF(tmp_kwargs_value_6);
        if (tmp_assign_source_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2552;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_video_thumbnail == NULL);
        var_video_thumbnail = tmp_assign_source_47;
    }
    {
        PyObject *tmp_called_value_51;
        PyObject *tmp_expression_value_66;
        PyObject *tmp_call_result_24;
        PyObject *tmp_args_element_value_79;
        PyObject *tmp_dict_key_5;
        PyObject *tmp_dict_value_5;
        if (var_info_dict == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[152]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2554;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_66 = var_info_dict;
        tmp_called_value_51 = LOOKUP_ATTRIBUTE(tmp_expression_value_66, mod_consts[206]);
        if (tmp_called_value_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2554;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_5 = mod_consts[34];
        CHECK_OBJECT(var_video_title);
        tmp_dict_value_5 = var_video_title;
        tmp_args_element_value_79 = _PyDict_NewPresized( 4 );
        tmp_res = PyDict_SetItem(tmp_args_element_value_79, tmp_dict_key_5, tmp_dict_value_5);
        assert(!(tmp_res != 0));
        tmp_dict_key_5 = mod_consts[36];
        CHECK_OBJECT(var_video_description);
        tmp_dict_value_5 = var_video_description;
        tmp_res = PyDict_SetItem(tmp_args_element_value_79, tmp_dict_key_5, tmp_dict_value_5);
        assert(!(tmp_res != 0));
        tmp_dict_key_5 = mod_consts[44];
        CHECK_OBJECT(var_video_thumbnail);
        tmp_dict_value_5 = var_video_thumbnail;
        tmp_res = PyDict_SetItem(tmp_args_element_value_79, tmp_dict_key_5, tmp_dict_value_5);
        assert(!(tmp_res != 0));
        tmp_dict_key_5 = mod_consts[56];
        CHECK_OBJECT(var_age_limit);
        tmp_dict_value_5 = var_age_limit;
        tmp_res = PyDict_SetItem(tmp_args_element_value_79, tmp_dict_key_5, tmp_dict_value_5);
        assert(!(tmp_res != 0));
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2554;
        tmp_call_result_24 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_51, tmp_args_element_value_79);
        Py_DECREF(tmp_called_value_51);
        Py_DECREF(tmp_args_element_value_79);
        if (tmp_call_result_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2554;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_24);
    }
    {
        PyObject *tmp_assign_source_48;
        PyObject *tmp_called_instance_33;
        PyObject *tmp_args_element_value_80;
        tmp_called_instance_33 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[207]);

        if (unlikely(tmp_called_instance_33 == NULL)) {
            tmp_called_instance_33 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[207]);
        }

        if (tmp_called_instance_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2562;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_80 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2562;
        tmp_assign_source_48 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_33, mod_consts[208], tmp_args_element_value_80);
        if (tmp_assign_source_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2562;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_bc_urls == NULL);
        var_bc_urls = tmp_assign_source_48;
    }
    {
        nuitka_bool tmp_condition_result_35;
        int tmp_truth_name_13;
        CHECK_OBJECT(var_bc_urls);
        tmp_truth_name_13 = CHECK_IF_TRUE(var_bc_urls);
        if (tmp_truth_name_13 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2563;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_35 = tmp_truth_name_13 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_35 == NUITKA_BOOL_TRUE) {
            goto branch_yes_33;
        } else {
            goto branch_no_33;
        }
    }
    branch_yes_33:;
    {
        PyObject *tmp_assign_source_49;
        // Tried code:
        {
            PyObject *tmp_assign_source_50;
            PyObject *tmp_iter_arg_3;
            CHECK_OBJECT(var_bc_urls);
            tmp_iter_arg_3 = var_bc_urls;
            tmp_assign_source_50 = MAKE_ITERATOR(tmp_iter_arg_3);
            if (tmp_assign_source_50 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2564;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto try_except_handler_7;
            }
            assert(tmp_listcomp_1__$0 == NULL);
            tmp_listcomp_1__$0 = tmp_assign_source_50;
        }
        {
            PyObject *tmp_assign_source_51;
            tmp_assign_source_51 = MAKE_LIST_EMPTY(0);
            assert(tmp_listcomp_1__contraction == NULL);
            tmp_listcomp_1__contraction = tmp_assign_source_51;
        }
        if (isFrameUnusable(cache_frame_d5410f41becd5e1a240995c7a89c98a1_2)) {
            Py_XDECREF(cache_frame_d5410f41becd5e1a240995c7a89c98a1_2);

#if _DEBUG_REFCOUNTS
            if (cache_frame_d5410f41becd5e1a240995c7a89c98a1_2 == NULL) {
                count_active_frame_cache_instances += 1;
            } else {
                count_released_frame_cache_instances += 1;
            }
            count_allocated_frame_cache_instances += 1;
#endif
            cache_frame_d5410f41becd5e1a240995c7a89c98a1_2 = MAKE_FUNCTION_FRAME(codeobj_d5410f41becd5e1a240995c7a89c98a1, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
        } else {
            count_hit_frame_cache_instances += 1;
#endif
        }
        assert(cache_frame_d5410f41becd5e1a240995c7a89c98a1_2->m_type_description == NULL);
        frame_d5410f41becd5e1a240995c7a89c98a1_2 = cache_frame_d5410f41becd5e1a240995c7a89c98a1_2;


        // Push the new frame as the currently active one.
        pushFrameStack(frame_d5410f41becd5e1a240995c7a89c98a1_2);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_d5410f41becd5e1a240995c7a89c98a1_2) == 2); // Frame stack

        // Framed code:
        // Tried code:
        loop_start_1:;
        {
            PyObject *tmp_next_source_1;
            PyObject *tmp_assign_source_52;
            CHECK_OBJECT(tmp_listcomp_1__$0);
            tmp_next_source_1 = tmp_listcomp_1__$0;
            tmp_assign_source_52 = ITERATOR_NEXT(tmp_next_source_1);
            if (tmp_assign_source_52 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_1;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "oc";
                    exception_lineno = 2564;
                    goto try_except_handler_8;
                }
            }

            {
                PyObject *old = tmp_listcomp_1__iter_value_0;
                tmp_listcomp_1__iter_value_0 = tmp_assign_source_52;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_53;
            CHECK_OBJECT(tmp_listcomp_1__iter_value_0);
            tmp_assign_source_53 = tmp_listcomp_1__iter_value_0;
            {
                PyObject *old = outline_0_var_bc_url;
                outline_0_var_bc_url = tmp_assign_source_53;
                Py_INCREF(outline_0_var_bc_url);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_append_list_1;
            PyObject *tmp_append_value_1;
            PyObject *tmp_dict_key_6;
            PyObject *tmp_dict_value_6;
            CHECK_OBJECT(tmp_listcomp_1__contraction);
            tmp_append_list_1 = tmp_listcomp_1__contraction;
            tmp_dict_key_6 = mod_consts[31];
            tmp_dict_value_6 = mod_consts[33];
            tmp_append_value_1 = _PyDict_NewPresized( 3 );
            {
                PyObject *tmp_called_value_52;
                PyObject *tmp_args_element_value_81;
                PyObject *tmp_args_element_value_82;
                PyObject *tmp_dict_key_7;
                PyObject *tmp_dict_value_7;
                tmp_res = PyDict_SetItem(tmp_append_value_1, tmp_dict_key_6, tmp_dict_value_6);
                assert(!(tmp_res != 0));
                tmp_dict_key_6 = mod_consts[33];
                tmp_called_value_52 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[125]);

                if (unlikely(tmp_called_value_52 == NULL)) {
                    tmp_called_value_52 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[125]);
                }

                if (tmp_called_value_52 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 2566;
                    type_description_2 = "oc";
                    goto dict_build_exception_3;
                }
                CHECK_OBJECT(outline_0_var_bc_url);
                tmp_args_element_value_81 = outline_0_var_bc_url;
                tmp_dict_key_7 = mod_consts[209];
                if (Nuitka_Cell_GET(par_url) == NULL) {

                    FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[33]);
                    exception_tb = NULL;
                    NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                    CHAIN_EXCEPTION(exception_value);

                    exception_lineno = 2566;
                    type_description_2 = "oc";
                    goto dict_build_exception_3;
                }

                tmp_dict_value_7 = Nuitka_Cell_GET(par_url);
                tmp_args_element_value_82 = _PyDict_NewPresized( 1 );
                tmp_res = PyDict_SetItem(tmp_args_element_value_82, tmp_dict_key_7, tmp_dict_value_7);
                assert(!(tmp_res != 0));
                frame_d5410f41becd5e1a240995c7a89c98a1_2->m_frame.f_lineno = 2566;
                {
                    PyObject *call_args[] = {tmp_args_element_value_81, tmp_args_element_value_82};
                    tmp_dict_value_6 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_52, call_args);
                }

                Py_DECREF(tmp_args_element_value_82);
                if (tmp_dict_value_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 2566;
                    type_description_2 = "oc";
                    goto dict_build_exception_3;
                }
                tmp_res = PyDict_SetItem(tmp_append_value_1, tmp_dict_key_6, tmp_dict_value_6);
                Py_DECREF(tmp_dict_value_6);
                assert(!(tmp_res != 0));
                tmp_dict_key_6 = mod_consts[210];
                tmp_dict_value_6 = mod_consts[211];
                tmp_res = PyDict_SetItem(tmp_append_value_1, tmp_dict_key_6, tmp_dict_value_6);
                assert(!(tmp_res != 0));
            }
            goto dict_build_noexception_3;
            // Exception handling pass through code for dict_build:
            dict_build_exception_3:;
            Py_DECREF(tmp_append_value_1);
            goto try_except_handler_8;
            // Finished with no exception for dict_build:
            dict_build_noexception_3:;
            assert(PyList_Check(tmp_append_list_1));
            tmp_result = LIST_APPEND1(tmp_append_list_1, tmp_append_value_1);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 2564;
                type_description_2 = "oc";
                goto try_except_handler_8;
            }
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2564;
            type_description_2 = "oc";
            goto try_except_handler_8;
        }
        goto loop_start_1;
        loop_end_1:;
        CHECK_OBJECT(tmp_listcomp_1__contraction);
        tmp_assign_source_49 = tmp_listcomp_1__contraction;
        Py_INCREF(tmp_assign_source_49);
        goto try_return_handler_8;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_8:;
        CHECK_OBJECT(tmp_listcomp_1__$0);
        Py_DECREF(tmp_listcomp_1__$0);
        tmp_listcomp_1__$0 = NULL;
        CHECK_OBJECT(tmp_listcomp_1__contraction);
        Py_DECREF(tmp_listcomp_1__contraction);
        tmp_listcomp_1__contraction = NULL;
        Py_XDECREF(tmp_listcomp_1__iter_value_0);
        tmp_listcomp_1__iter_value_0 = NULL;
        goto frame_return_exit_2;
        // Exception handler code:
        try_except_handler_8:;
        exception_keeper_type_5 = exception_type;
        exception_keeper_value_5 = exception_value;
        exception_keeper_tb_5 = exception_tb;
        exception_keeper_lineno_5 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT(tmp_listcomp_1__$0);
        Py_DECREF(tmp_listcomp_1__$0);
        tmp_listcomp_1__$0 = NULL;
        CHECK_OBJECT(tmp_listcomp_1__contraction);
        Py_DECREF(tmp_listcomp_1__contraction);
        tmp_listcomp_1__contraction = NULL;
        Py_XDECREF(tmp_listcomp_1__iter_value_0);
        tmp_listcomp_1__iter_value_0 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_5;
        exception_value = exception_keeper_value_5;
        exception_tb = exception_keeper_tb_5;
        exception_lineno = exception_keeper_lineno_5;

        goto frame_exception_exit_2;
        // End of try:

#if 0
        RESTORE_FRAME_EXCEPTION(frame_d5410f41becd5e1a240995c7a89c98a1_2);
#endif

        // Put the previous frame back on top.
        popFrameStack();


        goto frame_no_exception_1;

        frame_return_exit_2:;
#if 0
        RESTORE_FRAME_EXCEPTION(frame_d5410f41becd5e1a240995c7a89c98a1_2);
#endif

        // Put the previous frame back on top.
        popFrameStack();


        goto try_return_handler_7;

        frame_exception_exit_2:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_d5410f41becd5e1a240995c7a89c98a1_2);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_d5410f41becd5e1a240995c7a89c98a1_2, exception_lineno);
        } else if (exception_tb->tb_frame != &frame_d5410f41becd5e1a240995c7a89c98a1_2->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_d5410f41becd5e1a240995c7a89c98a1_2, exception_lineno);
        }

        // Attaches locals to frame if any.
        Nuitka_Frame_AttachLocals(
            frame_d5410f41becd5e1a240995c7a89c98a1_2,
            type_description_2,
            outline_0_var_bc_url,
            par_url
        );


        // Release cached frame if used for exception.
        if (frame_d5410f41becd5e1a240995c7a89c98a1_2 == cache_frame_d5410f41becd5e1a240995c7a89c98a1_2) {
#if _DEBUG_REFCOUNTS
            count_active_frame_cache_instances -= 1;
            count_released_frame_cache_instances += 1;
#endif

            Py_DECREF(cache_frame_d5410f41becd5e1a240995c7a89c98a1_2);
            cache_frame_d5410f41becd5e1a240995c7a89c98a1_2 = NULL;
        }

        assertFrameObject(frame_d5410f41becd5e1a240995c7a89c98a1_2);

        // Put the previous frame back on top.
        popFrameStack();


        // Return the error.
        goto nested_frame_exit_1;

        frame_no_exception_1:;
        goto skip_nested_handling_1;
        nested_frame_exit_1:;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_7;
        skip_nested_handling_1:;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_7:;
        Py_XDECREF(outline_0_var_bc_url);
        outline_0_var_bc_url = NULL;
        goto outline_result_2;
        // Exception handler code:
        try_except_handler_7:;
        exception_keeper_type_6 = exception_type;
        exception_keeper_value_6 = exception_value;
        exception_keeper_tb_6 = exception_tb;
        exception_keeper_lineno_6 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(outline_0_var_bc_url);
        outline_0_var_bc_url = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_6;
        exception_value = exception_keeper_value_6;
        exception_tb = exception_keeper_tb_6;
        exception_lineno = exception_keeper_lineno_6;

        goto outline_exception_1;
        // End of try:
        NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
        return NULL;
        outline_exception_1:;
        exception_lineno = 2564;
        goto frame_exception_exit_1;
        outline_result_2:;
        assert(var_entries == NULL);
        var_entries = tmp_assign_source_49;
    }
    {
        PyObject *tmp_dict_key_8;
        PyObject *tmp_dict_value_8;
        tmp_dict_key_8 = mod_consts[31];
        tmp_dict_value_8 = mod_consts[57];
        tmp_return_value = _PyDict_NewPresized( 4 );
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_8, tmp_dict_value_8);
        assert(!(tmp_res != 0));
        tmp_dict_key_8 = mod_consts[34];
        CHECK_OBJECT(var_video_title);
        tmp_dict_value_8 = var_video_title;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_8, tmp_dict_value_8);
        assert(!(tmp_res != 0));
        tmp_dict_key_8 = mod_consts[58];
        CHECK_OBJECT(var_video_id);
        tmp_dict_value_8 = var_video_id;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_8, tmp_dict_value_8);
        assert(!(tmp_res != 0));
        tmp_dict_key_8 = mod_consts[29];
        CHECK_OBJECT(var_entries);
        tmp_dict_value_8 = var_entries;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_8, tmp_dict_value_8);
        assert(!(tmp_res != 0));
        goto frame_return_exit_1;
    }
    branch_no_33:;
    {
        PyObject *tmp_assign_source_54;
        PyObject *tmp_called_value_53;
        PyObject *tmp_expression_value_67;
        PyObject *tmp_args_element_value_83;
        PyObject *tmp_args_element_value_84;
        tmp_expression_value_67 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[212]);

        if (unlikely(tmp_expression_value_67 == NULL)) {
            tmp_expression_value_67 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[212]);
        }

        if (tmp_expression_value_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2578;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_53 = LOOKUP_ATTRIBUTE(tmp_expression_value_67, mod_consts[213]);
        if (tmp_called_value_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2578;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_53);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2578;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_value_83 = par_self;
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_84 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2578;
        {
            PyObject *call_args[] = {tmp_args_element_value_83, tmp_args_element_value_84};
            tmp_assign_source_54 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_53, call_args);
        }

        Py_DECREF(tmp_called_value_53);
        if (tmp_assign_source_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2578;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_bc_urls;
            assert(old != NULL);
            var_bc_urls = tmp_assign_source_54;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_36;
        int tmp_truth_name_14;
        CHECK_OBJECT(var_bc_urls);
        tmp_truth_name_14 = CHECK_IF_TRUE(var_bc_urls);
        if (tmp_truth_name_14 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2579;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_36 = tmp_truth_name_14 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_36 == NUITKA_BOOL_TRUE) {
            goto branch_yes_34;
        } else {
            goto branch_no_34;
        }
    }
    branch_yes_34:;
    {
        PyObject *tmp_called_value_54;
        PyObject *tmp_expression_value_68;
        PyObject *tmp_kw_call_arg_value_0_5;
        PyObject *tmp_kw_call_arg_value_1_4;
        PyObject *tmp_kw_call_arg_value_2_2;
        PyObject *tmp_kw_call_dict_value_0_5;
        struct Nuitka_CellObject *tmp_closure_2[1];
        PyObject *tmp_kw_call_dict_value_1_4;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2580;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_68 = par_self;
        tmp_called_value_54 = LOOKUP_ATTRIBUTE(tmp_expression_value_68, mod_consts[214]);
        if (tmp_called_value_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2580;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_bc_urls);
        tmp_kw_call_arg_value_0_5 = var_bc_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_4 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_2 = var_video_title;

        tmp_closure_2[0] = par_url;
        Py_INCREF(tmp_closure_2[0]);

        tmp_kw_call_dict_value_0_5 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__2_lambda(tmp_closure_2);

        tmp_kw_call_dict_value_1_4 = mod_consts[215];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2580;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_5, tmp_kw_call_arg_value_1_4, tmp_kw_call_arg_value_2_2};
            PyObject *kw_values[2] = {tmp_kw_call_dict_value_0_5, tmp_kw_call_dict_value_1_4};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_54, args, kw_values, mod_consts[216]);
        }

        Py_DECREF(tmp_called_value_54);
        Py_DECREF(tmp_kw_call_dict_value_0_5);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2580;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_34:;
    {
        PyObject *tmp_assign_source_55;
        PyObject *tmp_called_instance_34;
        PyObject *tmp_args_element_value_85;
        tmp_called_instance_34 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[217]);

        if (unlikely(tmp_called_instance_34 == NULL)) {
            tmp_called_instance_34 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[217]);
        }

        if (tmp_called_instance_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2586;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_85 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2586;
        tmp_assign_source_55 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_34, mod_consts[213], tmp_args_element_value_85);
        if (tmp_assign_source_55 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2586;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_nexx_urls == NULL);
        var_nexx_urls = tmp_assign_source_55;
    }
    {
        nuitka_bool tmp_condition_result_37;
        int tmp_truth_name_15;
        CHECK_OBJECT(var_nexx_urls);
        tmp_truth_name_15 = CHECK_IF_TRUE(var_nexx_urls);
        if (tmp_truth_name_15 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2587;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_37 = tmp_truth_name_15 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_37 == NUITKA_BOOL_TRUE) {
            goto branch_yes_35;
        } else {
            goto branch_no_35;
        }
    }
    branch_yes_35:;
    {
        PyObject *tmp_called_value_55;
        PyObject *tmp_expression_value_69;
        PyObject *tmp_kw_call_arg_value_0_6;
        PyObject *tmp_kw_call_arg_value_1_5;
        PyObject *tmp_kw_call_arg_value_2_3;
        PyObject *tmp_kw_call_dict_value_0_6;
        PyObject *tmp_called_instance_35;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2588;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_69 = par_self;
        tmp_called_value_55 = LOOKUP_ATTRIBUTE(tmp_expression_value_69, mod_consts[214]);
        if (tmp_called_value_55 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2588;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_nexx_urls);
        tmp_kw_call_arg_value_0_6 = var_nexx_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_5 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_3 = var_video_title;
        tmp_called_instance_35 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[217]);

        if (unlikely(tmp_called_instance_35 == NULL)) {
            tmp_called_instance_35 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[217]);
        }

        if (tmp_called_instance_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_55);

            exception_lineno = 2588;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2588;
        tmp_kw_call_dict_value_0_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_35, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_55);

            exception_lineno = 2588;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2588;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_6, tmp_kw_call_arg_value_1_5, tmp_kw_call_arg_value_2_3};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_6};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_55, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_55);
        Py_DECREF(tmp_kw_call_dict_value_0_6);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2588;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_35:;
    {
        PyObject *tmp_assign_source_56;
        PyObject *tmp_called_instance_36;
        PyObject *tmp_args_element_value_86;
        tmp_called_instance_36 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[219]);

        if (unlikely(tmp_called_instance_36 == NULL)) {
            tmp_called_instance_36 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[219]);
        }

        if (tmp_called_instance_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2591;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_86 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2591;
        tmp_assign_source_56 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_36, mod_consts[213], tmp_args_element_value_86);
        if (tmp_assign_source_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2591;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_nexx_embed_urls == NULL);
        var_nexx_embed_urls = tmp_assign_source_56;
    }
    {
        nuitka_bool tmp_condition_result_38;
        int tmp_truth_name_16;
        CHECK_OBJECT(var_nexx_embed_urls);
        tmp_truth_name_16 = CHECK_IF_TRUE(var_nexx_embed_urls);
        if (tmp_truth_name_16 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2592;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_38 = tmp_truth_name_16 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_38 == NUITKA_BOOL_TRUE) {
            goto branch_yes_36;
        } else {
            goto branch_no_36;
        }
    }
    branch_yes_36:;
    {
        PyObject *tmp_called_value_56;
        PyObject *tmp_expression_value_70;
        PyObject *tmp_kw_call_arg_value_0_7;
        PyObject *tmp_kw_call_arg_value_1_6;
        PyObject *tmp_kw_call_arg_value_2_4;
        PyObject *tmp_kw_call_dict_value_0_7;
        PyObject *tmp_called_instance_37;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2593;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_70 = par_self;
        tmp_called_value_56 = LOOKUP_ATTRIBUTE(tmp_expression_value_70, mod_consts[214]);
        if (tmp_called_value_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2593;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_nexx_embed_urls);
        tmp_kw_call_arg_value_0_7 = var_nexx_embed_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_6 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_4 = var_video_title;
        tmp_called_instance_37 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[219]);

        if (unlikely(tmp_called_instance_37 == NULL)) {
            tmp_called_instance_37 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[219]);
        }

        if (tmp_called_instance_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_56);

            exception_lineno = 2593;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2593;
        tmp_kw_call_dict_value_0_7 = CALL_METHOD_NO_ARGS(tmp_called_instance_37, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_56);

            exception_lineno = 2593;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2593;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_7, tmp_kw_call_arg_value_1_6, tmp_kw_call_arg_value_2_4};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_7};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_56, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_56);
        Py_DECREF(tmp_kw_call_dict_value_0_7);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2593;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_36:;
    {
        PyObject *tmp_assign_source_57;
        PyObject *tmp_called_instance_38;
        PyObject *tmp_args_element_value_87;
        tmp_called_instance_38 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[220]);

        if (unlikely(tmp_called_instance_38 == NULL)) {
            tmp_called_instance_38 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[220]);
        }

        if (tmp_called_instance_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2596;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_87 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2596;
        tmp_assign_source_57 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_38, mod_consts[213], tmp_args_element_value_87);
        if (tmp_assign_source_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2596;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_tp_urls == NULL);
        var_tp_urls = tmp_assign_source_57;
    }
    {
        nuitka_bool tmp_condition_result_39;
        int tmp_truth_name_17;
        CHECK_OBJECT(var_tp_urls);
        tmp_truth_name_17 = CHECK_IF_TRUE(var_tp_urls);
        if (tmp_truth_name_17 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2597;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_39 = tmp_truth_name_17 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_39 == NUITKA_BOOL_TRUE) {
            goto branch_yes_37;
        } else {
            goto branch_no_37;
        }
    }
    branch_yes_37:;
    {
        PyObject *tmp_called_value_57;
        PyObject *tmp_expression_value_71;
        PyObject *tmp_args_value_7;
        PyObject *tmp_tuple_element_8;
        PyObject *tmp_kwargs_value_7;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2598;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_71 = par_self;
        tmp_called_value_57 = LOOKUP_ATTRIBUTE(tmp_expression_value_71, mod_consts[214]);
        if (tmp_called_value_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2598;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_tp_urls);
        tmp_tuple_element_8 = var_tp_urls;
        tmp_args_value_7 = MAKE_TUPLE_EMPTY(3);
        PyTuple_SET_ITEM0(tmp_args_value_7, 0, tmp_tuple_element_8);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_8 = var_video_id;
        PyTuple_SET_ITEM0(tmp_args_value_7, 1, tmp_tuple_element_8);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_8 = var_video_title;
        PyTuple_SET_ITEM0(tmp_args_value_7, 2, tmp_tuple_element_8);
        tmp_kwargs_value_7 = DICT_COPY(mod_consts[221]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2598;
        tmp_return_value = CALL_FUNCTION(tmp_called_value_57, tmp_args_value_7, tmp_kwargs_value_7);
        Py_DECREF(tmp_called_value_57);
        Py_DECREF(tmp_args_value_7);
        Py_DECREF(tmp_kwargs_value_7);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2598;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_37:;
    {
        PyObject *tmp_assign_source_58;
        PyObject *tmp_called_instance_39;
        PyObject *tmp_args_element_value_88;
        tmp_called_instance_39 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[222]);

        if (unlikely(tmp_called_instance_39 == NULL)) {
            tmp_called_instance_39 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[222]);
        }

        if (tmp_called_instance_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2600;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_88 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2600;
        tmp_assign_source_58 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_39, mod_consts[213], tmp_args_element_value_88);
        if (tmp_assign_source_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2600;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_arc_urls == NULL);
        var_arc_urls = tmp_assign_source_58;
    }
    {
        nuitka_bool tmp_condition_result_40;
        int tmp_truth_name_18;
        CHECK_OBJECT(var_arc_urls);
        tmp_truth_name_18 = CHECK_IF_TRUE(var_arc_urls);
        if (tmp_truth_name_18 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2601;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_40 = tmp_truth_name_18 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_40 == NUITKA_BOOL_TRUE) {
            goto branch_yes_38;
        } else {
            goto branch_no_38;
        }
    }
    branch_yes_38:;
    {
        PyObject *tmp_called_value_58;
        PyObject *tmp_expression_value_72;
        PyObject *tmp_kw_call_arg_value_0_8;
        PyObject *tmp_kw_call_arg_value_1_7;
        PyObject *tmp_kw_call_arg_value_2_5;
        PyObject *tmp_kw_call_dict_value_0_8;
        PyObject *tmp_called_instance_40;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2602;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_72 = par_self;
        tmp_called_value_58 = LOOKUP_ATTRIBUTE(tmp_expression_value_72, mod_consts[214]);
        if (tmp_called_value_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2602;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_arc_urls);
        tmp_kw_call_arg_value_0_8 = var_arc_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_7 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_5 = var_video_title;
        tmp_called_instance_40 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[222]);

        if (unlikely(tmp_called_instance_40 == NULL)) {
            tmp_called_instance_40 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[222]);
        }

        if (tmp_called_instance_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_58);

            exception_lineno = 2602;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2602;
        tmp_kw_call_dict_value_0_8 = CALL_METHOD_NO_ARGS(tmp_called_instance_40, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_58);

            exception_lineno = 2602;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2602;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_8, tmp_kw_call_arg_value_1_7, tmp_kw_call_arg_value_2_5};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_8};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_58, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_58);
        Py_DECREF(tmp_kw_call_dict_value_0_8);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2602;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_38:;
    {
        PyObject *tmp_assign_source_59;
        PyObject *tmp_called_instance_41;
        PyObject *tmp_args_element_value_89;
        tmp_called_instance_41 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[223]);

        if (unlikely(tmp_called_instance_41 == NULL)) {
            tmp_called_instance_41 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[223]);
        }

        if (tmp_called_instance_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2604;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_89 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2604;
        tmp_assign_source_59 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_41, mod_consts[213], tmp_args_element_value_89);
        if (tmp_assign_source_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2604;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mychannels_urls == NULL);
        var_mychannels_urls = tmp_assign_source_59;
    }
    {
        nuitka_bool tmp_condition_result_41;
        int tmp_truth_name_19;
        CHECK_OBJECT(var_mychannels_urls);
        tmp_truth_name_19 = CHECK_IF_TRUE(var_mychannels_urls);
        if (tmp_truth_name_19 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2605;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_41 = tmp_truth_name_19 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_41 == NUITKA_BOOL_TRUE) {
            goto branch_yes_39;
        } else {
            goto branch_no_39;
        }
    }
    branch_yes_39:;
    {
        PyObject *tmp_called_value_59;
        PyObject *tmp_expression_value_73;
        PyObject *tmp_kw_call_arg_value_0_9;
        PyObject *tmp_kw_call_arg_value_1_8;
        PyObject *tmp_kw_call_arg_value_2_6;
        PyObject *tmp_kw_call_dict_value_0_9;
        PyObject *tmp_called_instance_42;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2606;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_73 = par_self;
        tmp_called_value_59 = LOOKUP_ATTRIBUTE(tmp_expression_value_73, mod_consts[214]);
        if (tmp_called_value_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2606;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mychannels_urls);
        tmp_kw_call_arg_value_0_9 = var_mychannels_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_8 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_6 = var_video_title;
        tmp_called_instance_42 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[223]);

        if (unlikely(tmp_called_instance_42 == NULL)) {
            tmp_called_instance_42 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[223]);
        }

        if (tmp_called_instance_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_59);

            exception_lineno = 2607;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2607;
        tmp_kw_call_dict_value_0_9 = CALL_METHOD_NO_ARGS(tmp_called_instance_42, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_59);

            exception_lineno = 2607;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2606;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_9, tmp_kw_call_arg_value_1_8, tmp_kw_call_arg_value_2_6};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_9};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_59, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_59);
        Py_DECREF(tmp_kw_call_dict_value_0_9);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2606;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_39:;
    {
        PyObject *tmp_assign_source_60;
        PyObject *tmp_called_instance_43;
        PyObject *tmp_args_element_value_90;
        PyObject *tmp_args_element_value_91;
        tmp_called_instance_43 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_43 == NULL)) {
            tmp_called_instance_43 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2610;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_90 = mod_consts[224];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_91 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2610;
        {
            PyObject *call_args[] = {tmp_args_element_value_90, tmp_args_element_value_91};
            tmp_assign_source_60 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_43,
                mod_consts[9],
                call_args
            );
        }

        if (tmp_assign_source_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2610;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_matches == NULL);
        var_matches = tmp_assign_source_60;
    }
    {
        nuitka_bool tmp_condition_result_42;
        int tmp_truth_name_20;
        CHECK_OBJECT(var_matches);
        tmp_truth_name_20 = CHECK_IF_TRUE(var_matches);
        if (tmp_truth_name_20 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2613;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_42 = tmp_truth_name_20 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_42 == NUITKA_BOOL_TRUE) {
            goto branch_yes_40;
        } else {
            goto branch_no_40;
        }
    }
    branch_yes_40:;
    {
        PyObject *tmp_called_value_60;
        PyObject *tmp_expression_value_74;
        PyObject *tmp_args_value_8;
        PyObject *tmp_tuple_element_9;
        PyObject *tmp_kwargs_value_8;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2614;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_74 = par_self;
        tmp_called_value_60 = LOOKUP_ATTRIBUTE(tmp_expression_value_74, mod_consts[214]);
        if (tmp_called_value_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2614;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_matches);
        tmp_tuple_element_9 = var_matches;
        tmp_args_value_8 = MAKE_TUPLE_EMPTY(3);
        PyTuple_SET_ITEM0(tmp_args_value_8, 0, tmp_tuple_element_9);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_9 = var_video_id;
        PyTuple_SET_ITEM0(tmp_args_value_8, 1, tmp_tuple_element_9);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_9 = var_video_title;
        PyTuple_SET_ITEM0(tmp_args_value_8, 2, tmp_tuple_element_9);
        tmp_kwargs_value_8 = DICT_COPY(mod_consts[225]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2614;
        tmp_return_value = CALL_FUNCTION(tmp_called_value_60, tmp_args_value_8, tmp_kwargs_value_8);
        Py_DECREF(tmp_called_value_60);
        Py_DECREF(tmp_args_value_8);
        Py_DECREF(tmp_kwargs_value_8);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2614;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_40:;
    {
        PyObject *tmp_assign_source_61;
        PyObject *tmp_called_instance_44;
        PyObject *tmp_args_element_value_92;
        PyObject *tmp_args_element_value_93;
        tmp_called_instance_44 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[226]);

        if (unlikely(tmp_called_instance_44 == NULL)) {
            tmp_called_instance_44 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[226]);
        }

        if (tmp_called_instance_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2616;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_92 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_93 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2616;
        {
            PyObject *call_args[] = {tmp_args_element_value_92, tmp_args_element_value_93};
            tmp_assign_source_61 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_44,
                mod_consts[213],
                call_args
            );
        }

        if (tmp_assign_source_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2616;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vimeo_urls == NULL);
        var_vimeo_urls = tmp_assign_source_61;
    }
    {
        nuitka_bool tmp_condition_result_43;
        int tmp_truth_name_21;
        CHECK_OBJECT(var_vimeo_urls);
        tmp_truth_name_21 = CHECK_IF_TRUE(var_vimeo_urls);
        if (tmp_truth_name_21 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2617;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_43 = tmp_truth_name_21 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_43 == NUITKA_BOOL_TRUE) {
            goto branch_yes_41;
        } else {
            goto branch_no_41;
        }
    }
    branch_yes_41:;
    {
        PyObject *tmp_called_value_61;
        PyObject *tmp_expression_value_75;
        PyObject *tmp_kw_call_arg_value_0_10;
        PyObject *tmp_kw_call_arg_value_1_9;
        PyObject *tmp_kw_call_arg_value_2_7;
        PyObject *tmp_kw_call_dict_value_0_10;
        PyObject *tmp_called_instance_45;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2618;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_75 = par_self;
        tmp_called_value_61 = LOOKUP_ATTRIBUTE(tmp_expression_value_75, mod_consts[214]);
        if (tmp_called_value_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2618;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_vimeo_urls);
        tmp_kw_call_arg_value_0_10 = var_vimeo_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_9 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_7 = var_video_title;
        tmp_called_instance_45 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[226]);

        if (unlikely(tmp_called_instance_45 == NULL)) {
            tmp_called_instance_45 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[226]);
        }

        if (tmp_called_instance_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_61);

            exception_lineno = 2618;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2618;
        tmp_kw_call_dict_value_0_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_45, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_61);

            exception_lineno = 2618;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2618;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_10, tmp_kw_call_arg_value_1_9, tmp_kw_call_arg_value_2_7};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_10};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_61, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_61);
        Py_DECREF(tmp_kw_call_dict_value_0_10);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2618;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_41:;
    {
        PyObject *tmp_assign_source_62;
        PyObject *tmp_called_instance_46;
        PyObject *tmp_args_element_value_94;
        tmp_called_instance_46 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[227]);

        if (unlikely(tmp_called_instance_46 == NULL)) {
            tmp_called_instance_46 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[227]);
        }

        if (tmp_called_instance_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2620;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_94 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2620;
        tmp_assign_source_62 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_46, mod_consts[228], tmp_args_element_value_94);
        if (tmp_assign_source_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2620;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vhx_url == NULL);
        var_vhx_url = tmp_assign_source_62;
    }
    {
        nuitka_bool tmp_condition_result_44;
        int tmp_truth_name_22;
        CHECK_OBJECT(var_vhx_url);
        tmp_truth_name_22 = CHECK_IF_TRUE(var_vhx_url);
        if (tmp_truth_name_22 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2621;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_44 = tmp_truth_name_22 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_44 == NUITKA_BOOL_TRUE) {
            goto branch_yes_42;
        } else {
            goto branch_no_42;
        }
    }
    branch_yes_42:;
    {
        PyObject *tmp_called_value_62;
        PyObject *tmp_expression_value_76;
        PyObject *tmp_args_element_value_95;
        PyObject *tmp_args_element_value_96;
        PyObject *tmp_called_instance_47;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2622;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_76 = par_self;
        tmp_called_value_62 = LOOKUP_ATTRIBUTE(tmp_expression_value_76, mod_consts[87]);
        if (tmp_called_value_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2622;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_vhx_url);
        tmp_args_element_value_95 = var_vhx_url;
        tmp_called_instance_47 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[227]);

        if (unlikely(tmp_called_instance_47 == NULL)) {
            tmp_called_instance_47 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[227]);
        }

        if (tmp_called_instance_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_62);

            exception_lineno = 2622;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2622;
        tmp_args_element_value_96 = CALL_METHOD_NO_ARGS(tmp_called_instance_47, mod_consts[210]);
        if (tmp_args_element_value_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_62);

            exception_lineno = 2622;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2622;
        {
            PyObject *call_args[] = {tmp_args_element_value_95, tmp_args_element_value_96};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_62, call_args);
        }

        Py_DECREF(tmp_called_value_62);
        Py_DECREF(tmp_args_element_value_96);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2622;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_42:;
    {
        PyObject *tmp_assign_source_63;
        PyObject *tmp_called_value_63;
        PyObject *tmp_expression_value_77;
        PyObject *tmp_args_value_9;
        PyObject *tmp_tuple_element_10;
        PyObject *tmp_kwargs_value_9;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2624;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_77 = par_self;
        tmp_called_value_63 = LOOKUP_ATTRIBUTE(tmp_expression_value_77, mod_consts[61]);
        if (tmp_called_value_63 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2624;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_tuple_element_10 = mod_consts[229];
        tmp_args_value_9 = MAKE_TUPLE_EMPTY(3);
        PyTuple_SET_ITEM0(tmp_args_value_9, 0, tmp_tuple_element_10);
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_tuple_element_10 = Nuitka_Cell_GET(var_webpage);
        PyTuple_SET_ITEM0(tmp_args_value_9, 1, tmp_tuple_element_10);
        tmp_tuple_element_10 = mod_consts[230];
        PyTuple_SET_ITEM0(tmp_args_value_9, 2, tmp_tuple_element_10);
        tmp_kwargs_value_9 = DICT_COPY(mod_consts[37]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2624;
        tmp_assign_source_63 = CALL_FUNCTION(tmp_called_value_63, tmp_args_value_9, tmp_kwargs_value_9);
        Py_DECREF(tmp_called_value_63);
        Py_DECREF(tmp_args_value_9);
        Py_DECREF(tmp_kwargs_value_9);
        if (tmp_assign_source_63 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2624;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vid_me_embed_url == NULL);
        var_vid_me_embed_url = tmp_assign_source_63;
    }
    {
        bool tmp_condition_result_45;
        PyObject *tmp_cmp_expr_left_19;
        PyObject *tmp_cmp_expr_right_19;
        CHECK_OBJECT(var_vid_me_embed_url);
        tmp_cmp_expr_left_19 = var_vid_me_embed_url;
        tmp_cmp_expr_right_19 = Py_None;
        tmp_condition_result_45 = (tmp_cmp_expr_left_19 != tmp_cmp_expr_right_19) ? true : false;
        if (tmp_condition_result_45 != false) {
            goto branch_yes_43;
        } else {
            goto branch_no_43;
        }
    }
    branch_yes_43:;
    {
        PyObject *tmp_called_instance_48;
        PyObject *tmp_args_element_value_97;
        PyObject *tmp_args_element_value_98;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2628;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_48 = par_self;
        CHECK_OBJECT(var_vid_me_embed_url);
        tmp_args_element_value_97 = var_vid_me_embed_url;
        tmp_args_element_value_98 = mod_consts[231];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2628;
        {
            PyObject *call_args[] = {tmp_args_element_value_97, tmp_args_element_value_98};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_48,
                mod_consts[87],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2628;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_43:;
    {
        PyObject *tmp_assign_source_64;
        PyObject *tmp_called_instance_49;
        PyObject *tmp_args_element_value_99;
        tmp_called_instance_49 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[232]);

        if (unlikely(tmp_called_instance_49 == NULL)) {
            tmp_called_instance_49 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[232]);
        }

        if (tmp_called_instance_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2631;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_99 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2631;
        tmp_assign_source_64 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_49, mod_consts[213], tmp_args_element_value_99);
        if (tmp_assign_source_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2631;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_youtube_urls == NULL);
        var_youtube_urls = tmp_assign_source_64;
    }
    {
        nuitka_bool tmp_condition_result_46;
        int tmp_truth_name_23;
        CHECK_OBJECT(var_youtube_urls);
        tmp_truth_name_23 = CHECK_IF_TRUE(var_youtube_urls);
        if (tmp_truth_name_23 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2632;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_46 = tmp_truth_name_23 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_46 == NUITKA_BOOL_TRUE) {
            goto branch_yes_44;
        } else {
            goto branch_no_44;
        }
    }
    branch_yes_44:;
    {
        PyObject *tmp_called_value_64;
        PyObject *tmp_expression_value_78;
        PyObject *tmp_kw_call_arg_value_0_11;
        PyObject *tmp_kw_call_arg_value_1_10;
        PyObject *tmp_kw_call_arg_value_2_8;
        PyObject *tmp_kw_call_dict_value_0_11;
        PyObject *tmp_called_instance_50;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2633;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_78 = par_self;
        tmp_called_value_64 = LOOKUP_ATTRIBUTE(tmp_expression_value_78, mod_consts[214]);
        if (tmp_called_value_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2633;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_youtube_urls);
        tmp_kw_call_arg_value_0_11 = var_youtube_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_10 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_8 = var_video_title;
        tmp_called_instance_50 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[232]);

        if (unlikely(tmp_called_instance_50 == NULL)) {
            tmp_called_instance_50 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[232]);
        }

        if (tmp_called_instance_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_64);

            exception_lineno = 2634;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2634;
        tmp_kw_call_dict_value_0_11 = CALL_METHOD_NO_ARGS(tmp_called_instance_50, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_64);

            exception_lineno = 2634;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2633;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_11, tmp_kw_call_arg_value_1_10, tmp_kw_call_arg_value_2_8};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_11};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_64, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_64);
        Py_DECREF(tmp_kw_call_dict_value_0_11);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2633;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_44:;
    {
        PyObject *tmp_assign_source_65;
        PyObject *tmp_called_instance_51;
        PyObject *tmp_args_element_value_100;
        tmp_called_instance_51 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[233]);

        if (unlikely(tmp_called_instance_51 == NULL)) {
            tmp_called_instance_51 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[233]);
        }

        if (tmp_called_instance_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2636;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_100 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2636;
        tmp_assign_source_65 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_51, mod_consts[213], tmp_args_element_value_100);
        if (tmp_assign_source_65 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2636;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_matches;
            assert(old != NULL);
            var_matches = tmp_assign_source_65;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_47;
        int tmp_truth_name_24;
        CHECK_OBJECT(var_matches);
        tmp_truth_name_24 = CHECK_IF_TRUE(var_matches);
        if (tmp_truth_name_24 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2637;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_47 = tmp_truth_name_24 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_47 == NUITKA_BOOL_TRUE) {
            goto branch_yes_45;
        } else {
            goto branch_no_45;
        }
    }
    branch_yes_45:;
    {
        PyObject *tmp_called_instance_52;
        PyObject *tmp_args_element_value_101;
        PyObject *tmp_args_element_value_102;
        PyObject *tmp_args_element_value_103;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2638;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_52 = par_self;
        CHECK_OBJECT(var_matches);
        tmp_args_element_value_101 = var_matches;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_102 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_103 = var_video_title;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2638;
        {
            PyObject *call_args[] = {tmp_args_element_value_101, tmp_args_element_value_102, tmp_args_element_value_103};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_52,
                mod_consts[214],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2638;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_45:;
    {
        PyObject *tmp_assign_source_66;
        PyObject *tmp_called_instance_53;
        PyObject *tmp_args_element_value_104;
        PyObject *tmp_args_element_value_105;
        tmp_called_instance_53 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_53 == NULL)) {
            tmp_called_instance_53 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2641;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_104 = mod_consts[235];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_105 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2641;
        {
            PyObject *call_args[] = {tmp_args_element_value_104, tmp_args_element_value_105};
            tmp_assign_source_66 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_53,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_66 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2641;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_m;
            assert(old != NULL);
            var_m = tmp_assign_source_66;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_48;
        int tmp_truth_name_25;
        CHECK_OBJECT(var_m);
        tmp_truth_name_25 = CHECK_IF_TRUE(var_m);
        if (tmp_truth_name_25 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2643;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_48 = tmp_truth_name_25 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_48 == NUITKA_BOOL_TRUE) {
            goto branch_yes_46;
        } else {
            goto branch_no_46;
        }
    }
    branch_yes_46:;
    {
        PyObject *tmp_assign_source_67;
        PyObject *tmp_called_value_65;
        PyObject *tmp_expression_value_79;
        PyObject *tmp_args_element_value_106;
        PyObject *tmp_args_element_value_107;
        PyObject *tmp_called_value_66;
        PyObject *tmp_args_element_value_108;
        PyObject *tmp_called_instance_54;
        tmp_expression_value_79 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_expression_value_79 == NULL)) {
            tmp_expression_value_79 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_expression_value_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2644;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_65 = LOOKUP_ATTRIBUTE(tmp_expression_value_79, mod_consts[9]);
        if (tmp_called_value_65 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2644;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_106 = mod_consts[236];
        tmp_called_value_66 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[237]);

        if (unlikely(tmp_called_value_66 == NULL)) {
            tmp_called_value_66 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[237]);
        }

        if (tmp_called_value_66 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_65);

            exception_lineno = 2645;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_m);
        tmp_called_instance_54 = var_m;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2645;
        tmp_args_element_value_108 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_54,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_65);

            exception_lineno = 2645;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2645;
        tmp_args_element_value_107 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_66, tmp_args_element_value_108);
        Py_DECREF(tmp_args_element_value_108);
        if (tmp_args_element_value_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_65);

            exception_lineno = 2645;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2644;
        {
            PyObject *call_args[] = {tmp_args_element_value_106, tmp_args_element_value_107};
            tmp_assign_source_67 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_65, call_args);
        }

        Py_DECREF(tmp_called_value_65);
        Py_DECREF(tmp_args_element_value_107);
        if (tmp_assign_source_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2644;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_playlists == NULL);
        var_playlists = tmp_assign_source_67;
    }
    {
        nuitka_bool tmp_condition_result_49;
        int tmp_truth_name_26;
        CHECK_OBJECT(var_playlists);
        tmp_truth_name_26 = CHECK_IF_TRUE(var_playlists);
        if (tmp_truth_name_26 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2646;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_49 = tmp_truth_name_26 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_49 == NUITKA_BOOL_TRUE) {
            goto branch_yes_47;
        } else {
            goto branch_no_47;
        }
    }
    branch_yes_47:;
    {
        PyObject *tmp_called_instance_55;
        PyObject *tmp_args_element_value_109;
        PyObject *tmp_args_element_value_110;
        PyObject *tmp_args_element_value_111;
        PyObject *tmp_args_element_value_112;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2647;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_55 = par_self;
        CHECK_OBJECT(var_playlists);
        tmp_args_element_value_109 = var_playlists;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_110 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_111 = var_video_title;


        tmp_args_element_value_112 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__3_lambda();

        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2647;
        {
            PyObject *call_args[] = {tmp_args_element_value_109, tmp_args_element_value_110, tmp_args_element_value_111, tmp_args_element_value_112};
            tmp_return_value = CALL_METHOD_WITH_ARGS4(
                tmp_called_instance_55,
                mod_consts[214],
                call_args
            );
        }

        Py_DECREF(tmp_args_element_value_112);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2647;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_47:;
    branch_no_46:;
    {
        PyObject *tmp_assign_source_68;
        PyObject *tmp_called_instance_56;
        PyObject *tmp_args_element_value_113;
        tmp_called_instance_56 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[238]);

        if (unlikely(tmp_called_instance_56 == NULL)) {
            tmp_called_instance_56 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[238]);
        }

        if (tmp_called_instance_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2651;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_113 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2651;
        tmp_assign_source_68 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_56, mod_consts[213], tmp_args_element_value_113);
        if (tmp_assign_source_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2651;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_dailymail_urls == NULL);
        var_dailymail_urls = tmp_assign_source_68;
    }
    {
        nuitka_bool tmp_condition_result_50;
        int tmp_truth_name_27;
        CHECK_OBJECT(var_dailymail_urls);
        tmp_truth_name_27 = CHECK_IF_TRUE(var_dailymail_urls);
        if (tmp_truth_name_27 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2652;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_50 = tmp_truth_name_27 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_50 == NUITKA_BOOL_TRUE) {
            goto branch_yes_48;
        } else {
            goto branch_no_48;
        }
    }
    branch_yes_48:;
    {
        PyObject *tmp_called_value_67;
        PyObject *tmp_expression_value_80;
        PyObject *tmp_kw_call_arg_value_0_12;
        PyObject *tmp_kw_call_arg_value_1_11;
        PyObject *tmp_kw_call_arg_value_2_9;
        PyObject *tmp_kw_call_dict_value_0_12;
        PyObject *tmp_called_instance_57;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2653;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_80 = par_self;
        tmp_called_value_67 = LOOKUP_ATTRIBUTE(tmp_expression_value_80, mod_consts[214]);
        if (tmp_called_value_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2653;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_dailymail_urls);
        tmp_kw_call_arg_value_0_12 = var_dailymail_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_11 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_9 = var_video_title;
        tmp_called_instance_57 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[238]);

        if (unlikely(tmp_called_instance_57 == NULL)) {
            tmp_called_instance_57 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[238]);
        }

        if (tmp_called_instance_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_67);

            exception_lineno = 2654;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2654;
        tmp_kw_call_dict_value_0_12 = CALL_METHOD_NO_ARGS(tmp_called_instance_57, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_67);

            exception_lineno = 2654;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2653;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_12, tmp_kw_call_arg_value_1_11, tmp_kw_call_arg_value_2_9};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_12};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_67, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_67);
        Py_DECREF(tmp_kw_call_dict_value_0_12);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2653;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_48:;
    {
        PyObject *tmp_assign_source_69;
        PyObject *tmp_called_instance_58;
        PyObject *tmp_args_element_value_114;
        PyObject *tmp_args_element_value_115;
        tmp_called_instance_58 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[239]);

        if (unlikely(tmp_called_instance_58 == NULL)) {
            tmp_called_instance_58 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[239]);
        }

        if (tmp_called_instance_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2657;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_114 = Nuitka_Cell_GET(var_webpage);
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_115 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2657;
        {
            PyObject *call_args[] = {tmp_args_element_value_114, tmp_args_element_value_115};
            tmp_assign_source_69 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_58,
                mod_consts[228],
                call_args
            );
        }

        if (tmp_assign_source_69 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2657;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_teachable_url == NULL);
        var_teachable_url = tmp_assign_source_69;
    }
    {
        nuitka_bool tmp_condition_result_51;
        int tmp_truth_name_28;
        CHECK_OBJECT(var_teachable_url);
        tmp_truth_name_28 = CHECK_IF_TRUE(var_teachable_url);
        if (tmp_truth_name_28 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2658;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_51 = tmp_truth_name_28 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_51 == NUITKA_BOOL_TRUE) {
            goto branch_yes_49;
        } else {
            goto branch_no_49;
        }
    }
    branch_yes_49:;
    {
        PyObject *tmp_called_instance_59;
        PyObject *tmp_args_element_value_116;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2659;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_59 = par_self;
        CHECK_OBJECT(var_teachable_url);
        tmp_args_element_value_116 = var_teachable_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2659;
        tmp_return_value = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_59, mod_consts[87], tmp_args_element_value_116);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2659;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_49:;
    {
        PyObject *tmp_assign_source_70;
        PyObject *tmp_called_instance_60;
        PyObject *tmp_args_element_value_117;
        tmp_called_instance_60 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[240]);

        if (unlikely(tmp_called_instance_60 == NULL)) {
            tmp_called_instance_60 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[240]);
        }

        if (tmp_called_instance_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2662;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_117 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2662;
        tmp_assign_source_70 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_60, mod_consts[213], tmp_args_element_value_117);
        if (tmp_assign_source_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2662;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_wistia_urls == NULL);
        var_wistia_urls = tmp_assign_source_70;
    }
    {
        nuitka_bool tmp_condition_result_52;
        int tmp_truth_name_29;
        CHECK_OBJECT(var_wistia_urls);
        tmp_truth_name_29 = CHECK_IF_TRUE(var_wistia_urls);
        if (tmp_truth_name_29 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2663;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_52 = tmp_truth_name_29 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_52 == NUITKA_BOOL_TRUE) {
            goto branch_yes_50;
        } else {
            goto branch_no_50;
        }
    }
    branch_yes_50:;
    {
        PyObject *tmp_assign_source_71;
        PyObject *tmp_called_value_68;
        PyObject *tmp_expression_value_81;
        PyObject *tmp_kw_call_arg_value_0_13;
        PyObject *tmp_kw_call_arg_value_1_12;
        PyObject *tmp_kw_call_arg_value_2_10;
        PyObject *tmp_kw_call_dict_value_0_13;
        PyObject *tmp_called_instance_61;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2664;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_81 = par_self;
        tmp_called_value_68 = LOOKUP_ATTRIBUTE(tmp_expression_value_81, mod_consts[214]);
        if (tmp_called_value_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2664;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_wistia_urls);
        tmp_kw_call_arg_value_0_13 = var_wistia_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_12 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_10 = var_video_title;
        tmp_called_instance_61 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[240]);

        if (unlikely(tmp_called_instance_61 == NULL)) {
            tmp_called_instance_61 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[240]);
        }

        if (tmp_called_instance_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_68);

            exception_lineno = 2664;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2664;
        tmp_kw_call_dict_value_0_13 = CALL_METHOD_NO_ARGS(tmp_called_instance_61, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_68);

            exception_lineno = 2664;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2664;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_13, tmp_kw_call_arg_value_1_12, tmp_kw_call_arg_value_2_10};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_13};
            tmp_assign_source_71 = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_68, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_68);
        Py_DECREF(tmp_kw_call_dict_value_0_13);
        if (tmp_assign_source_71 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2664;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_playlist == NULL);
        var_playlist = tmp_assign_source_71;
    }
    {
        PyObject *tmp_assign_source_72;
        PyObject *tmp_iter_arg_4;
        PyObject *tmp_expression_value_82;
        PyObject *tmp_subscript_value_8;
        CHECK_OBJECT(var_playlist);
        tmp_expression_value_82 = var_playlist;
        tmp_subscript_value_8 = mod_consts[29];
        tmp_iter_arg_4 = LOOKUP_SUBSCRIPT(tmp_expression_value_82, tmp_subscript_value_8);
        if (tmp_iter_arg_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2665;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_72 = MAKE_ITERATOR(tmp_iter_arg_4);
        Py_DECREF(tmp_iter_arg_4);
        if (tmp_assign_source_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2665;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_1__for_iterator == NULL);
        tmp_for_loop_1__for_iterator = tmp_assign_source_72;
    }
    // Tried code:
    loop_start_2:;
    {
        PyObject *tmp_next_source_2;
        PyObject *tmp_assign_source_73;
        CHECK_OBJECT(tmp_for_loop_1__for_iterator);
        tmp_next_source_2 = tmp_for_loop_1__for_iterator;
        tmp_assign_source_73 = ITERATOR_NEXT(tmp_next_source_2);
        if (tmp_assign_source_73 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_2;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                exception_lineno = 2665;
                goto try_except_handler_9;
            }
        }

        {
            PyObject *old = tmp_for_loop_1__iter_value;
            tmp_for_loop_1__iter_value = tmp_assign_source_73;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_74;
        CHECK_OBJECT(tmp_for_loop_1__iter_value);
        tmp_assign_source_74 = tmp_for_loop_1__iter_value;
        {
            PyObject *old = var_entry;
            var_entry = tmp_assign_source_74;
            Py_INCREF(var_entry);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_called_value_69;
        PyObject *tmp_expression_value_83;
        PyObject *tmp_call_result_25;
        PyObject *tmp_args_element_value_118;
        PyObject *tmp_dict_key_9;
        PyObject *tmp_dict_value_9;
        CHECK_OBJECT(var_entry);
        tmp_expression_value_83 = var_entry;
        tmp_called_value_69 = LOOKUP_ATTRIBUTE(tmp_expression_value_83, mod_consts[206]);
        if (tmp_called_value_69 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2666;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_9;
        }
        tmp_dict_key_9 = mod_consts[31];
        tmp_dict_value_9 = mod_consts[32];
        tmp_args_element_value_118 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_args_element_value_118, tmp_dict_key_9, tmp_dict_value_9);
        assert(!(tmp_res != 0));
        tmp_dict_key_9 = mod_consts[241];
        if (var_video_uploader == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[242]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2668;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto dict_build_exception_4;
        }

        tmp_dict_value_9 = var_video_uploader;
        tmp_res = PyDict_SetItem(tmp_args_element_value_118, tmp_dict_key_9, tmp_dict_value_9);
        assert(!(tmp_res != 0));
        goto dict_build_noexception_4;
        // Exception handling pass through code for dict_build:
        dict_build_exception_4:;
        Py_DECREF(tmp_called_value_69);
        Py_DECREF(tmp_args_element_value_118);
        goto try_except_handler_9;
        // Finished with no exception for dict_build:
        dict_build_noexception_4:;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2666;
        tmp_call_result_25 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_69, tmp_args_element_value_118);
        Py_DECREF(tmp_called_value_69);
        Py_DECREF(tmp_args_element_value_118);
        if (tmp_call_result_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2666;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_9;
        }
        Py_DECREF(tmp_call_result_25);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 2665;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_9;
    }
    goto loop_start_2;
    loop_end_2:;
    goto try_end_5;
    // Exception handler code:
    try_except_handler_9:;
    exception_keeper_type_7 = exception_type;
    exception_keeper_value_7 = exception_value;
    exception_keeper_tb_7 = exception_tb;
    exception_keeper_lineno_7 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_7;
    exception_value = exception_keeper_value_7;
    exception_tb = exception_keeper_tb_7;
    exception_lineno = exception_keeper_lineno_7;

    goto frame_exception_exit_1;
    // End of try:
    try_end_5:;
    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    CHECK_OBJECT(var_playlist);
    tmp_return_value = var_playlist;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_50:;
    {
        PyObject *tmp_assign_source_75;
        PyObject *tmp_called_instance_62;
        PyObject *tmp_args_element_value_119;
        tmp_called_instance_62 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[243]);

        if (unlikely(tmp_called_instance_62 == NULL)) {
            tmp_called_instance_62 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[243]);
        }

        if (tmp_called_instance_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2673;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_119 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2673;
        tmp_assign_source_75 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_62, mod_consts[228], tmp_args_element_value_119);
        if (tmp_assign_source_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2673;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_svt_url == NULL);
        var_svt_url = tmp_assign_source_75;
    }
    {
        nuitka_bool tmp_condition_result_53;
        int tmp_truth_name_30;
        CHECK_OBJECT(var_svt_url);
        tmp_truth_name_30 = CHECK_IF_TRUE(var_svt_url);
        if (tmp_truth_name_30 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2674;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_53 = tmp_truth_name_30 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_53 == NUITKA_BOOL_TRUE) {
            goto branch_yes_51;
        } else {
            goto branch_no_51;
        }
    }
    branch_yes_51:;
    {
        PyObject *tmp_called_instance_63;
        PyObject *tmp_args_element_value_120;
        PyObject *tmp_args_element_value_121;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2675;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_63 = par_self;
        CHECK_OBJECT(var_svt_url);
        tmp_args_element_value_120 = var_svt_url;
        tmp_args_element_value_121 = mod_consts[244];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2675;
        {
            PyObject *call_args[] = {tmp_args_element_value_120, tmp_args_element_value_121};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_63,
                mod_consts[87],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2675;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_51:;
    {
        PyObject *tmp_assign_source_76;
        PyObject *tmp_called_instance_64;
        PyObject *tmp_args_element_value_122;
        PyObject *tmp_args_element_value_123;
        tmp_called_instance_64 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_64 == NULL)) {
            tmp_called_instance_64 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2678;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_122 = mod_consts[245];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_123 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2678;
        {
            PyObject *call_args[] = {tmp_args_element_value_122, tmp_args_element_value_123};
            tmp_assign_source_76 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_64,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2678;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mobj == NULL);
        var_mobj = tmp_assign_source_76;
    }
    {
        bool tmp_condition_result_54;
        PyObject *tmp_cmp_expr_left_20;
        PyObject *tmp_cmp_expr_right_20;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_20 = var_mobj;
        tmp_cmp_expr_right_20 = Py_None;
        tmp_condition_result_54 = (tmp_cmp_expr_left_20 != tmp_cmp_expr_right_20) ? true : false;
        if (tmp_condition_result_54 != false) {
            goto branch_yes_52;
        } else {
            goto branch_no_52;
        }
    }
    branch_yes_52:;
    {
        PyObject *tmp_assign_source_77;
        PyObject *tmp_called_value_70;
        PyObject *tmp_args_element_value_124;
        PyObject *tmp_called_instance_65;
        tmp_called_value_70 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[237]);

        if (unlikely(tmp_called_value_70 == NULL)) {
            tmp_called_value_70 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[237]);
        }

        if (tmp_called_value_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2680;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_65 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2680;
        tmp_args_element_value_124 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_65,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[246], 0)
        );

        if (tmp_args_element_value_124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2680;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2680;
        tmp_assign_source_77 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_70, tmp_args_element_value_124);
        Py_DECREF(tmp_args_element_value_124);
        if (tmp_assign_source_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2680;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_burl == NULL);
        var_burl = tmp_assign_source_77;
    }
    {
        PyObject *tmp_called_instance_66;
        PyObject *tmp_args_element_value_125;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2682;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_66 = par_self;
        CHECK_OBJECT(var_burl);
        tmp_args_element_value_125 = var_burl;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2682;
        tmp_return_value = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_66, mod_consts[87], tmp_args_element_value_125);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2682;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_52:;
    {
        PyObject *tmp_assign_source_78;
        PyObject *tmp_called_instance_67;
        PyObject *tmp_args_element_value_126;
        PyObject *tmp_args_element_value_127;
        tmp_called_instance_67 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_67 == NULL)) {
            tmp_called_instance_67 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2685;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_126 = mod_consts[247];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_127 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2685;
        {
            PyObject *call_args[] = {tmp_args_element_value_126, tmp_args_element_value_127};
            tmp_assign_source_78 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_67,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2685;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_78;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_55;
        PyObject *tmp_cmp_expr_left_21;
        PyObject *tmp_cmp_expr_right_21;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_21 = var_mobj;
        tmp_cmp_expr_right_21 = Py_None;
        tmp_condition_result_55 = (tmp_cmp_expr_left_21 != tmp_cmp_expr_right_21) ? true : false;
        if (tmp_condition_result_55 != false) {
            goto branch_yes_53;
        } else {
            goto branch_no_53;
        }
    }
    branch_yes_53:;
    {
        PyObject *tmp_called_value_71;
        PyObject *tmp_expression_value_84;
        PyObject *tmp_args_element_value_128;
        PyObject *tmp_called_instance_68;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2688;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_84 = par_self;
        tmp_called_value_71 = LOOKUP_ATTRIBUTE(tmp_expression_value_84, mod_consts[87]);
        if (tmp_called_value_71 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2688;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_68 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2688;
        tmp_args_element_value_128 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_68,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_71);

            exception_lineno = 2688;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2688;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_71, tmp_args_element_value_128);
        Py_DECREF(tmp_called_value_71);
        Py_DECREF(tmp_args_element_value_128);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2688;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_53:;
    {
        PyObject *tmp_assign_source_79;
        PyObject *tmp_called_instance_69;
        PyObject *tmp_args_element_value_129;
        PyObject *tmp_args_element_value_130;
        tmp_called_instance_69 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_69 == NULL)) {
            tmp_called_instance_69 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_69 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2691;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_129 = mod_consts[248];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_130 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2691;
        {
            PyObject *call_args[] = {tmp_args_element_value_129, tmp_args_element_value_130};
            tmp_assign_source_79 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_69,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2691;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_79;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_56;
        PyObject *tmp_cmp_expr_left_22;
        PyObject *tmp_cmp_expr_right_22;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_22 = var_mobj;
        tmp_cmp_expr_right_22 = Py_None;
        tmp_condition_result_56 = (tmp_cmp_expr_left_22 != tmp_cmp_expr_right_22) ? true : false;
        if (tmp_condition_result_56 != false) {
            goto branch_yes_54;
        } else {
            goto branch_no_54;
        }
    }
    branch_yes_54:;
    {
        PyObject *tmp_called_value_72;
        PyObject *tmp_expression_value_85;
        PyObject *tmp_args_element_value_131;
        PyObject *tmp_called_instance_70;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2695;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_85 = par_self;
        tmp_called_value_72 = LOOKUP_ATTRIBUTE(tmp_expression_value_85, mod_consts[87]);
        if (tmp_called_value_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2695;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_70 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2695;
        tmp_args_element_value_131 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_70,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_72);

            exception_lineno = 2695;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2695;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_72, tmp_args_element_value_131);
        Py_DECREF(tmp_called_value_72);
        Py_DECREF(tmp_args_element_value_131);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2695;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_54:;
    {
        PyObject *tmp_assign_source_80;
        PyObject *tmp_called_instance_71;
        PyObject *tmp_args_element_value_132;
        PyObject *tmp_args_element_value_133;
        tmp_called_instance_71 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_71 == NULL)) {
            tmp_called_instance_71 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_71 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2698;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_132 = mod_consts[249];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_133 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2698;
        {
            PyObject *call_args[] = {tmp_args_element_value_132, tmp_args_element_value_133};
            tmp_assign_source_80 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_71,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2698;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_80;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_57;
        PyObject *tmp_cmp_expr_left_23;
        PyObject *tmp_cmp_expr_right_23;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_23 = var_mobj;
        tmp_cmp_expr_right_23 = Py_None;
        tmp_condition_result_57 = (tmp_cmp_expr_left_23 != tmp_cmp_expr_right_23) ? true : false;
        if (tmp_condition_result_57 != false) {
            goto branch_yes_55;
        } else {
            goto branch_no_55;
        }
    }
    branch_yes_55:;
    {
        PyObject *tmp_called_value_73;
        PyObject *tmp_expression_value_86;
        PyObject *tmp_args_element_value_134;
        PyObject *tmp_called_instance_72;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2702;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_86 = par_self;
        tmp_called_value_73 = LOOKUP_ATTRIBUTE(tmp_expression_value_86, mod_consts[87]);
        if (tmp_called_value_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2702;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_72 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2702;
        tmp_args_element_value_134 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_72,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_134 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_73);

            exception_lineno = 2702;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2702;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_73, tmp_args_element_value_134);
        Py_DECREF(tmp_called_value_73);
        Py_DECREF(tmp_args_element_value_134);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2702;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_55:;
    {
        PyObject *tmp_assign_source_81;
        PyObject *tmp_called_instance_73;
        PyObject *tmp_args_element_value_135;
        PyObject *tmp_args_element_value_136;
        tmp_called_instance_73 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_73 == NULL)) {
            tmp_called_instance_73 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2705;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_135 = mod_consts[250];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_136 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2705;
        {
            PyObject *call_args[] = {tmp_args_element_value_135, tmp_args_element_value_136};
            tmp_assign_source_81 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_73,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2705;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_81;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_58;
        PyObject *tmp_cmp_expr_left_24;
        PyObject *tmp_cmp_expr_right_24;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_24 = var_mobj;
        tmp_cmp_expr_right_24 = Py_None;
        tmp_condition_result_58 = (tmp_cmp_expr_left_24 != tmp_cmp_expr_right_24) ? true : false;
        if (tmp_condition_result_58 != false) {
            goto branch_yes_56;
        } else {
            goto branch_no_56;
        }
    }
    branch_yes_56:;
    {
        PyObject *tmp_called_value_74;
        PyObject *tmp_expression_value_87;
        PyObject *tmp_args_element_value_137;
        PyObject *tmp_called_instance_74;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2708;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_87 = par_self;
        tmp_called_value_74 = LOOKUP_ATTRIBUTE(tmp_expression_value_87, mod_consts[87]);
        if (tmp_called_value_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2708;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_74 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2708;
        tmp_args_element_value_137 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_74,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_137 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_74);

            exception_lineno = 2708;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2708;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_74, tmp_args_element_value_137);
        Py_DECREF(tmp_called_value_74);
        Py_DECREF(tmp_args_element_value_137);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2708;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_56:;
    {
        PyObject *tmp_assign_source_82;
        int tmp_or_left_truth_2;
        PyObject *tmp_or_left_value_2;
        PyObject *tmp_or_right_value_2;
        PyObject *tmp_called_instance_75;
        PyObject *tmp_args_element_value_138;
        PyObject *tmp_args_element_value_139;
        int tmp_or_left_truth_3;
        PyObject *tmp_or_left_value_3;
        PyObject *tmp_or_right_value_3;
        PyObject *tmp_called_instance_76;
        PyObject *tmp_args_element_value_140;
        PyObject *tmp_args_element_value_141;
        int tmp_or_left_truth_4;
        PyObject *tmp_or_left_value_4;
        PyObject *tmp_or_right_value_4;
        PyObject *tmp_called_instance_77;
        PyObject *tmp_args_element_value_142;
        PyObject *tmp_args_element_value_143;
        int tmp_or_left_truth_5;
        PyObject *tmp_or_left_value_5;
        PyObject *tmp_or_right_value_5;
        PyObject *tmp_called_instance_78;
        PyObject *tmp_args_element_value_144;
        PyObject *tmp_args_element_value_145;
        PyObject *tmp_called_instance_79;
        PyObject *tmp_args_element_value_146;
        PyObject *tmp_args_element_value_147;
        tmp_called_instance_75 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_75 == NULL)) {
            tmp_called_instance_75 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2711;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_138 = mod_consts[251];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_139 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2711;
        {
            PyObject *call_args[] = {tmp_args_element_value_138, tmp_args_element_value_139};
            tmp_or_left_value_2 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_75,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_or_left_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2711;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_2 = CHECK_IF_TRUE(tmp_or_left_value_2);
        if (tmp_or_left_truth_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_2);

            exception_lineno = 2711;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_2 == 1) {
            goto or_left_2;
        } else {
            goto or_right_2;
        }
        or_right_2:;
        Py_DECREF(tmp_or_left_value_2);
        tmp_called_instance_76 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_76 == NULL)) {
            tmp_called_instance_76 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2712;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_140 = mod_consts[252];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_141 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2712;
        {
            PyObject *call_args[] = {tmp_args_element_value_140, tmp_args_element_value_141};
            tmp_or_left_value_3 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_76,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_or_left_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2712;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_3 = CHECK_IF_TRUE(tmp_or_left_value_3);
        if (tmp_or_left_truth_3 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_3);

            exception_lineno = 2712;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_3 == 1) {
            goto or_left_3;
        } else {
            goto or_right_3;
        }
        or_right_3:;
        Py_DECREF(tmp_or_left_value_3);
        tmp_called_instance_77 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_77 == NULL)) {
            tmp_called_instance_77 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2713;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_142 = mod_consts[253];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_143 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2713;
        {
            PyObject *call_args[] = {tmp_args_element_value_142, tmp_args_element_value_143};
            tmp_or_left_value_4 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_77,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_or_left_value_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2713;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_4 = CHECK_IF_TRUE(tmp_or_left_value_4);
        if (tmp_or_left_truth_4 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_4);

            exception_lineno = 2713;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_4 == 1) {
            goto or_left_4;
        } else {
            goto or_right_4;
        }
        or_right_4:;
        Py_DECREF(tmp_or_left_value_4);
        tmp_called_instance_78 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_78 == NULL)) {
            tmp_called_instance_78 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2714;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_144 = mod_consts[254];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_145 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2714;
        {
            PyObject *call_args[] = {tmp_args_element_value_144, tmp_args_element_value_145};
            tmp_or_left_value_5 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_78,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_or_left_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2714;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_5 = CHECK_IF_TRUE(tmp_or_left_value_5);
        if (tmp_or_left_truth_5 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_5);

            exception_lineno = 2714;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_5 == 1) {
            goto or_left_5;
        } else {
            goto or_right_5;
        }
        or_right_5:;
        Py_DECREF(tmp_or_left_value_5);
        tmp_called_instance_79 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_79 == NULL)) {
            tmp_called_instance_79 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2715;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_146 = mod_consts[255];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_147 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2715;
        {
            PyObject *call_args[] = {tmp_args_element_value_146, tmp_args_element_value_147};
            tmp_or_right_value_5 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_79,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_or_right_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2715;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_right_value_4 = tmp_or_right_value_5;
        goto or_end_5;
        or_left_5:;
        tmp_or_right_value_4 = tmp_or_left_value_5;
        or_end_5:;
        tmp_or_right_value_3 = tmp_or_right_value_4;
        goto or_end_4;
        or_left_4:;
        tmp_or_right_value_3 = tmp_or_left_value_4;
        or_end_4:;
        tmp_or_right_value_2 = tmp_or_right_value_3;
        goto or_end_3;
        or_left_3:;
        tmp_or_right_value_2 = tmp_or_left_value_3;
        or_end_3:;
        tmp_assign_source_82 = tmp_or_right_value_2;
        goto or_end_2;
        or_left_2:;
        tmp_assign_source_82 = tmp_or_left_value_2;
        or_end_2:;
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_82;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_59;
        PyObject *tmp_cmp_expr_left_25;
        PyObject *tmp_cmp_expr_right_25;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_25 = var_mobj;
        tmp_cmp_expr_right_25 = Py_None;
        tmp_condition_result_59 = (tmp_cmp_expr_left_25 != tmp_cmp_expr_right_25) ? true : false;
        if (tmp_condition_result_59 != false) {
            goto branch_yes_57;
        } else {
            goto branch_no_57;
        }
    }
    branch_yes_57:;
    {
        PyObject *tmp_assign_source_83;
        PyObject *tmp_called_value_75;
        PyObject *tmp_expression_value_88;
        PyObject *tmp_args_value_10;
        PyObject *tmp_tuple_element_11;
        PyObject *tmp_kwargs_value_10;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2717;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_88 = par_self;
        tmp_called_value_75 = LOOKUP_ATTRIBUTE(tmp_expression_value_88, mod_consts[61]);
        if (tmp_called_value_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2717;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_tuple_element_11 = mod_consts[256];
        tmp_args_value_10 = MAKE_TUPLE_EMPTY(3);
        PyTuple_SET_ITEM0(tmp_args_value_10, 0, tmp_tuple_element_11);
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_tuple_element_11 = Nuitka_Cell_GET(var_webpage);
        PyTuple_SET_ITEM0(tmp_args_value_10, 1, tmp_tuple_element_11);
        tmp_tuple_element_11 = mod_consts[257];
        PyTuple_SET_ITEM0(tmp_args_value_10, 2, tmp_tuple_element_11);
        tmp_kwargs_value_10 = DICT_COPY(mod_consts[37]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2717;
        tmp_assign_source_83 = CALL_FUNCTION(tmp_called_value_75, tmp_args_value_10, tmp_kwargs_value_10);
        Py_DECREF(tmp_called_value_75);
        Py_DECREF(tmp_args_value_10);
        Py_DECREF(tmp_kwargs_value_10);
        if (tmp_assign_source_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2717;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_embed_token == NULL);
        var_embed_token = tmp_assign_source_83;
    }
    {
        PyObject *tmp_called_value_76;
        PyObject *tmp_expression_value_89;
        PyObject *tmp_args_element_value_148;
        PyObject *tmp_called_value_77;
        PyObject *tmp_args_element_value_149;
        PyObject *tmp_called_instance_80;
        PyObject *tmp_args_element_value_150;
        PyObject *tmp_dict_key_10;
        PyObject *tmp_dict_value_10;
        tmp_expression_value_89 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[258]);

        if (unlikely(tmp_expression_value_89 == NULL)) {
            tmp_expression_value_89 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[258]);
        }

        if (tmp_expression_value_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2720;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_76 = LOOKUP_ATTRIBUTE(tmp_expression_value_89, mod_consts[259]);
        if (tmp_called_value_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2720;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_77 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[125]);

        if (unlikely(tmp_called_value_77 == NULL)) {
            tmp_called_value_77 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[125]);
        }

        if (tmp_called_value_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_76);

            exception_lineno = 2720;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_80 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2721;
        tmp_args_element_value_149 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_80,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[260], 0)
        );

        if (tmp_args_element_value_149 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_76);

            exception_lineno = 2721;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_10 = mod_consts[261];
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_dict_value_10 = Nuitka_Cell_GET(par_url);
        tmp_args_element_value_150 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_args_element_value_150, tmp_dict_key_10, tmp_dict_value_10);
        assert(!(tmp_res != 0));
        tmp_dict_key_10 = mod_consts[262];
        CHECK_OBJECT(var_embed_token);
        tmp_dict_value_10 = var_embed_token;
        tmp_res = PyDict_SetItem(tmp_args_element_value_150, tmp_dict_key_10, tmp_dict_value_10);
        assert(!(tmp_res != 0));
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2720;
        {
            PyObject *call_args[] = {tmp_args_element_value_149, tmp_args_element_value_150};
            tmp_args_element_value_148 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_77, call_args);
        }

        Py_DECREF(tmp_args_element_value_149);
        Py_DECREF(tmp_args_element_value_150);
        if (tmp_args_element_value_148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_76);

            exception_lineno = 2720;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2720;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_76, tmp_args_element_value_148);
        Py_DECREF(tmp_called_value_76);
        Py_DECREF(tmp_args_element_value_148);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2720;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_57:;
    {
        PyObject *tmp_assign_source_84;
        PyObject *tmp_called_instance_81;
        PyObject *tmp_args_element_value_151;
        PyObject *tmp_args_element_value_152;
        tmp_called_instance_81 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_81 == NULL)) {
            tmp_called_instance_81 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2727;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_151 = mod_consts[263];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_152 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2727;
        {
            PyObject *call_args[] = {tmp_args_element_value_151, tmp_args_element_value_152};
            tmp_assign_source_84 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_81,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_84 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2727;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_84;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_60;
        PyObject *tmp_cmp_expr_left_26;
        PyObject *tmp_cmp_expr_right_26;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_26 = var_mobj;
        tmp_cmp_expr_right_26 = Py_None;
        tmp_condition_result_60 = (tmp_cmp_expr_left_26 != tmp_cmp_expr_right_26) ? true : false;
        if (tmp_condition_result_60 != false) {
            goto branch_yes_58;
        } else {
            goto branch_no_58;
        }
    }
    branch_yes_58:;
    {
        PyObject *tmp_assign_source_85;
        PyObject *tmp_called_value_78;
        PyObject *tmp_expression_value_90;
        PyObject *tmp_args_value_11;
        PyObject *tmp_tuple_element_12;
        PyObject *tmp_called_instance_82;
        PyObject *tmp_kwargs_value_11;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2729;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_90 = par_self;
        tmp_called_value_78 = LOOKUP_ATTRIBUTE(tmp_expression_value_90, mod_consts[264]);
        if (tmp_called_value_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2729;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_82 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2729;
        tmp_tuple_element_12 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_82,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[246], 0)
        );

        if (tmp_tuple_element_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_78);

            exception_lineno = 2729;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_value_11 = MAKE_TUPLE_EMPTY(2);
        PyTuple_SET_ITEM(tmp_args_value_11, 0, tmp_tuple_element_12);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_12 = var_video_id;
        PyTuple_SET_ITEM0(tmp_args_value_11, 1, tmp_tuple_element_12);
        tmp_kwargs_value_11 = DICT_COPY(mod_consts[18]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2729;
        tmp_assign_source_85 = CALL_FUNCTION(tmp_called_value_78, tmp_args_value_11, tmp_kwargs_value_11);
        Py_DECREF(tmp_called_value_78);
        Py_DECREF(tmp_args_value_11);
        Py_DECREF(tmp_kwargs_value_11);
        if (tmp_assign_source_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2729;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_embeds == NULL);
        var_embeds = tmp_assign_source_85;
    }
    {
        nuitka_bool tmp_condition_result_61;
        int tmp_truth_name_31;
        CHECK_OBJECT(var_embeds);
        tmp_truth_name_31 = CHECK_IF_TRUE(var_embeds);
        if (tmp_truth_name_31 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2730;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_61 = tmp_truth_name_31 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_61 == NUITKA_BOOL_TRUE) {
            goto branch_yes_59;
        } else {
            goto branch_no_59;
        }
    }
    branch_yes_59:;
    {
        PyObject *tmp_called_value_79;
        PyObject *tmp_expression_value_91;
        PyObject *tmp_kw_call_arg_value_0_14;
        PyObject *tmp_kw_call_arg_value_1_13;
        PyObject *tmp_kw_call_arg_value_2_11;
        PyObject *tmp_kw_call_dict_value_0_14;
        struct Nuitka_CellObject *tmp_closure_3[1];
        PyObject *tmp_kw_call_dict_value_1_5;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2731;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_91 = par_self;
        tmp_called_value_79 = LOOKUP_ATTRIBUTE(tmp_expression_value_91, mod_consts[214]);
        if (tmp_called_value_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2731;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_embeds);
        tmp_kw_call_arg_value_0_14 = var_embeds;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_13 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_11 = var_video_title;

        tmp_closure_3[0] = par_url;
        Py_INCREF(tmp_closure_3[0]);

        tmp_kw_call_dict_value_0_14 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__4_lambda(tmp_closure_3);

        tmp_kw_call_dict_value_1_5 = mod_consts[265];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2731;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_14, tmp_kw_call_arg_value_1_13, tmp_kw_call_arg_value_2_11};
            PyObject *kw_values[2] = {tmp_kw_call_dict_value_0_14, tmp_kw_call_dict_value_1_5};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_79, args, kw_values, mod_consts[216]);
        }

        Py_DECREF(tmp_called_value_79);
        Py_DECREF(tmp_kw_call_dict_value_0_14);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2731;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_59:;
    branch_no_58:;
    {
        PyObject *tmp_assign_source_86;
        PyObject *tmp_called_instance_83;
        PyObject *tmp_args_element_value_153;
        PyObject *tmp_args_element_value_154;
        tmp_called_instance_83 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_83 == NULL)) {
            tmp_called_instance_83 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2736;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_153 = mod_consts[266];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_154 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2736;
        {
            PyObject *call_args[] = {tmp_args_element_value_153, tmp_args_element_value_154};
            tmp_assign_source_86 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_83,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2736;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            var_mobj = tmp_assign_source_86;
            Py_XDECREF(old);
        }

    }
    {
        bool tmp_condition_result_62;
        PyObject *tmp_cmp_expr_left_27;
        PyObject *tmp_cmp_expr_right_27;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_27 = var_mobj;
        tmp_cmp_expr_right_27 = Py_None;
        tmp_condition_result_62 = (tmp_cmp_expr_left_27 != tmp_cmp_expr_right_27) ? true : false;
        if (tmp_condition_result_62 != false) {
            goto branch_yes_60;
        } else {
            goto branch_no_60;
        }
    }
    branch_yes_60:;
    {
        PyObject *tmp_called_value_80;
        PyObject *tmp_expression_value_92;
        PyObject *tmp_args_element_value_155;
        PyObject *tmp_called_instance_84;
        PyObject *tmp_args_element_value_156;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2738;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_92 = par_self;
        tmp_called_value_80 = LOOKUP_ATTRIBUTE(tmp_expression_value_92, mod_consts[87]);
        if (tmp_called_value_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2738;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_84 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2738;
        tmp_args_element_value_155 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_84,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[246], 0)
        );

        if (tmp_args_element_value_155 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_80);

            exception_lineno = 2738;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_156 = mod_consts[267];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2738;
        {
            PyObject *call_args[] = {tmp_args_element_value_155, tmp_args_element_value_156};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_80, call_args);
        }

        Py_DECREF(tmp_called_value_80);
        Py_DECREF(tmp_args_element_value_155);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2738;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_60:;
    {
        PyObject *tmp_assign_source_87;
        PyObject *tmp_called_instance_85;
        PyObject *tmp_args_element_value_157;
        PyObject *tmp_args_element_value_158;
        tmp_called_instance_85 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_85 == NULL)) {
            tmp_called_instance_85 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2741;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_157 = mod_consts[268];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_158 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2741;
        {
            PyObject *call_args[] = {tmp_args_element_value_157, tmp_args_element_value_158};
            tmp_assign_source_87 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_85,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2741;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_87;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_63;
        PyObject *tmp_cmp_expr_left_28;
        PyObject *tmp_cmp_expr_right_28;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_28 = var_mobj;
        tmp_cmp_expr_right_28 = Py_None;
        tmp_condition_result_63 = (tmp_cmp_expr_left_28 != tmp_cmp_expr_right_28) ? true : false;
        if (tmp_condition_result_63 != false) {
            goto branch_yes_61;
        } else {
            goto branch_no_61;
        }
    }
    branch_yes_61:;
    {
        PyObject *tmp_called_value_81;
        PyObject *tmp_expression_value_93;
        PyObject *tmp_args_element_value_159;
        PyObject *tmp_called_instance_86;
        PyObject *tmp_args_element_value_160;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2743;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_93 = par_self;
        tmp_called_value_81 = LOOKUP_ATTRIBUTE(tmp_expression_value_93, mod_consts[87]);
        if (tmp_called_value_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2743;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_86 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2743;
        tmp_args_element_value_159 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_86,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[246], 0)
        );

        if (tmp_args_element_value_159 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_81);

            exception_lineno = 2743;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_160 = mod_consts[269];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2743;
        {
            PyObject *call_args[] = {tmp_args_element_value_159, tmp_args_element_value_160};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_81, call_args);
        }

        Py_DECREF(tmp_called_value_81);
        Py_DECREF(tmp_args_element_value_159);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2743;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_61:;
    {
        PyObject *tmp_assign_source_88;
        PyObject *tmp_called_instance_87;
        PyObject *tmp_args_element_value_161;
        tmp_called_instance_87 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[270]);

        if (unlikely(tmp_called_instance_87 == NULL)) {
            tmp_called_instance_87 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[270]);
        }

        if (tmp_called_instance_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2746;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_161 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2746;
        tmp_assign_source_88 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_87, mod_consts[213], tmp_args_element_value_161);
        if (tmp_assign_source_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2746;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_facebook_urls == NULL);
        var_facebook_urls = tmp_assign_source_88;
    }
    {
        nuitka_bool tmp_condition_result_64;
        int tmp_truth_name_32;
        CHECK_OBJECT(var_facebook_urls);
        tmp_truth_name_32 = CHECK_IF_TRUE(var_facebook_urls);
        if (tmp_truth_name_32 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2747;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_64 = tmp_truth_name_32 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_64 == NUITKA_BOOL_TRUE) {
            goto branch_yes_62;
        } else {
            goto branch_no_62;
        }
    }
    branch_yes_62:;
    {
        PyObject *tmp_called_instance_88;
        PyObject *tmp_args_element_value_162;
        PyObject *tmp_args_element_value_163;
        PyObject *tmp_args_element_value_164;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2748;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_88 = par_self;
        CHECK_OBJECT(var_facebook_urls);
        tmp_args_element_value_162 = var_facebook_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_163 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_164 = var_video_title;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2748;
        {
            PyObject *call_args[] = {tmp_args_element_value_162, tmp_args_element_value_163, tmp_args_element_value_164};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_88,
                mod_consts[214],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2748;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_62:;
    {
        PyObject *tmp_assign_source_89;
        PyObject *tmp_called_instance_89;
        PyObject *tmp_args_element_value_165;
        PyObject *tmp_args_element_value_166;
        tmp_called_instance_89 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_89 == NULL)) {
            tmp_called_instance_89 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2751;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_165 = mod_consts[271];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_166 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2751;
        {
            PyObject *call_args[] = {tmp_args_element_value_165, tmp_args_element_value_166};
            tmp_assign_source_89 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_89,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2751;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_89;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_65;
        PyObject *tmp_cmp_expr_left_29;
        PyObject *tmp_cmp_expr_right_29;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_29 = var_mobj;
        tmp_cmp_expr_right_29 = Py_None;
        tmp_condition_result_65 = (tmp_cmp_expr_left_29 != tmp_cmp_expr_right_29) ? true : false;
        if (tmp_condition_result_65 != false) {
            goto branch_yes_63;
        } else {
            goto branch_no_63;
        }
    }
    branch_yes_63:;
    {
        PyObject *tmp_called_value_82;
        PyObject *tmp_expression_value_94;
        PyObject *tmp_args_element_value_167;
        PyObject *tmp_called_instance_90;
        PyObject *tmp_args_element_value_168;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2753;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_94 = par_self;
        tmp_called_value_82 = LOOKUP_ATTRIBUTE(tmp_expression_value_94, mod_consts[87]);
        if (tmp_called_value_82 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2753;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_90 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2753;
        tmp_args_element_value_167 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_90,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_167 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_82);

            exception_lineno = 2753;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_168 = mod_consts[272];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2753;
        {
            PyObject *call_args[] = {tmp_args_element_value_167, tmp_args_element_value_168};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_82, call_args);
        }

        Py_DECREF(tmp_called_value_82);
        Py_DECREF(tmp_args_element_value_167);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2753;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_63:;
    {
        PyObject *tmp_assign_source_90;
        PyObject *tmp_called_instance_91;
        PyObject *tmp_args_element_value_169;
        tmp_called_instance_91 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[273]);

        if (unlikely(tmp_called_instance_91 == NULL)) {
            tmp_called_instance_91 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[273]);
        }

        if (tmp_called_instance_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2756;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_169 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2756;
        tmp_assign_source_90 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_91, mod_consts[228], tmp_args_element_value_169);
        if (tmp_assign_source_90 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2756;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_odnoklassniki_url == NULL);
        var_odnoklassniki_url = tmp_assign_source_90;
    }
    {
        nuitka_bool tmp_condition_result_66;
        int tmp_truth_name_33;
        CHECK_OBJECT(var_odnoklassniki_url);
        tmp_truth_name_33 = CHECK_IF_TRUE(var_odnoklassniki_url);
        if (tmp_truth_name_33 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2757;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_66 = tmp_truth_name_33 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_66 == NUITKA_BOOL_TRUE) {
            goto branch_yes_64;
        } else {
            goto branch_no_64;
        }
    }
    branch_yes_64:;
    {
        PyObject *tmp_called_value_83;
        PyObject *tmp_expression_value_95;
        PyObject *tmp_args_element_value_170;
        PyObject *tmp_args_element_value_171;
        PyObject *tmp_called_instance_92;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2758;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_95 = par_self;
        tmp_called_value_83 = LOOKUP_ATTRIBUTE(tmp_expression_value_95, mod_consts[87]);
        if (tmp_called_value_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2758;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_odnoklassniki_url);
        tmp_args_element_value_170 = var_odnoklassniki_url;
        tmp_called_instance_92 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[273]);

        if (unlikely(tmp_called_instance_92 == NULL)) {
            tmp_called_instance_92 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[273]);
        }

        if (tmp_called_instance_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_83);

            exception_lineno = 2758;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2758;
        tmp_args_element_value_171 = CALL_METHOD_NO_ARGS(tmp_called_instance_92, mod_consts[210]);
        if (tmp_args_element_value_171 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_83);

            exception_lineno = 2758;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2758;
        {
            PyObject *call_args[] = {tmp_args_element_value_170, tmp_args_element_value_171};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_83, call_args);
        }

        Py_DECREF(tmp_called_value_83);
        Py_DECREF(tmp_args_element_value_171);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2758;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_64:;
    {
        PyObject *tmp_assign_source_91;
        PyObject *tmp_called_instance_93;
        PyObject *tmp_args_element_value_172;
        tmp_called_instance_93 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[274]);

        if (unlikely(tmp_called_instance_93 == NULL)) {
            tmp_called_instance_93 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[274]);
        }

        if (tmp_called_instance_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2761;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_172 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2761;
        tmp_assign_source_91 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_93, mod_consts[275], tmp_args_element_value_172);
        if (tmp_assign_source_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2761;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_sibnet_urls == NULL);
        var_sibnet_urls = tmp_assign_source_91;
    }
    {
        nuitka_bool tmp_condition_result_67;
        int tmp_truth_name_34;
        CHECK_OBJECT(var_sibnet_urls);
        tmp_truth_name_34 = CHECK_IF_TRUE(var_sibnet_urls);
        if (tmp_truth_name_34 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2762;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_67 = tmp_truth_name_34 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_67 == NUITKA_BOOL_TRUE) {
            goto branch_yes_65;
        } else {
            goto branch_no_65;
        }
    }
    branch_yes_65:;
    {
        PyObject *tmp_called_instance_94;
        PyObject *tmp_args_element_value_173;
        PyObject *tmp_args_element_value_174;
        PyObject *tmp_args_element_value_175;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2763;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_94 = par_self;
        CHECK_OBJECT(var_sibnet_urls);
        tmp_args_element_value_173 = var_sibnet_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_174 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_175 = var_video_title;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2763;
        {
            PyObject *call_args[] = {tmp_args_element_value_173, tmp_args_element_value_174, tmp_args_element_value_175};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_94,
                mod_consts[214],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2763;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_65:;
    {
        PyObject *tmp_assign_source_92;
        PyObject *tmp_called_instance_95;
        PyObject *tmp_args_element_value_176;
        PyObject *tmp_args_element_value_177;
        tmp_called_instance_95 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_95 == NULL)) {
            tmp_called_instance_95 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2766;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_176 = mod_consts[276];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_177 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2766;
        {
            PyObject *call_args[] = {tmp_args_element_value_176, tmp_args_element_value_177};
            tmp_assign_source_92 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_95,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2766;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_92;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_68;
        PyObject *tmp_cmp_expr_left_30;
        PyObject *tmp_cmp_expr_right_30;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_30 = var_mobj;
        tmp_cmp_expr_right_30 = Py_None;
        tmp_condition_result_68 = (tmp_cmp_expr_left_30 != tmp_cmp_expr_right_30) ? true : false;
        if (tmp_condition_result_68 != false) {
            goto branch_yes_66;
        } else {
            goto branch_no_66;
        }
    }
    branch_yes_66:;
    {
        PyObject *tmp_called_value_84;
        PyObject *tmp_expression_value_96;
        PyObject *tmp_args_element_value_178;
        PyObject *tmp_called_instance_96;
        PyObject *tmp_args_element_value_179;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2768;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_96 = par_self;
        tmp_called_value_84 = LOOKUP_ATTRIBUTE(tmp_expression_value_96, mod_consts[87]);
        if (tmp_called_value_84 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2768;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_96 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2768;
        tmp_args_element_value_178 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_96,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_178 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_84);

            exception_lineno = 2768;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_179 = mod_consts[277];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2768;
        {
            PyObject *call_args[] = {tmp_args_element_value_178, tmp_args_element_value_179};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_84, call_args);
        }

        Py_DECREF(tmp_called_value_84);
        Py_DECREF(tmp_args_element_value_178);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2768;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_66:;
    {
        PyObject *tmp_assign_source_93;
        PyObject *tmp_called_instance_97;
        PyObject *tmp_args_element_value_180;
        PyObject *tmp_args_element_value_181;
        tmp_called_instance_97 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_97 == NULL)) {
            tmp_called_instance_97 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2771;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_180 = mod_consts[278];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_181 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2771;
        {
            PyObject *call_args[] = {tmp_args_element_value_180, tmp_args_element_value_181};
            tmp_assign_source_93 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_97,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2771;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_93;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_69;
        PyObject *tmp_cmp_expr_left_31;
        PyObject *tmp_cmp_expr_right_31;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_31 = var_mobj;
        tmp_cmp_expr_right_31 = Py_None;
        tmp_condition_result_69 = (tmp_cmp_expr_left_31 != tmp_cmp_expr_right_31) ? true : false;
        if (tmp_condition_result_69 != false) {
            goto branch_yes_67;
        } else {
            goto branch_no_67;
        }
    }
    branch_yes_67:;
    {
        PyObject *tmp_called_value_85;
        PyObject *tmp_expression_value_97;
        PyObject *tmp_args_element_value_182;
        PyObject *tmp_called_instance_98;
        PyObject *tmp_args_element_value_183;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2774;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_97 = par_self;
        tmp_called_value_85 = LOOKUP_ATTRIBUTE(tmp_expression_value_97, mod_consts[87]);
        if (tmp_called_value_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2774;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_98 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2774;
        tmp_args_element_value_182 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_98,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_182 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_85);

            exception_lineno = 2774;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_183 = mod_consts[279];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2774;
        {
            PyObject *call_args[] = {tmp_args_element_value_182, tmp_args_element_value_183};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_85, call_args);
        }

        Py_DECREF(tmp_called_value_85);
        Py_DECREF(tmp_args_element_value_182);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2774;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_67:;
    {
        PyObject *tmp_assign_source_94;
        PyObject *tmp_called_instance_99;
        PyObject *tmp_args_element_value_184;
        PyObject *tmp_args_element_value_185;
        tmp_called_instance_99 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_99 == NULL)) {
            tmp_called_instance_99 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2777;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_184 = mod_consts[280];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_185 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2777;
        {
            PyObject *call_args[] = {tmp_args_element_value_184, tmp_args_element_value_185};
            tmp_assign_source_94 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_99,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_94 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2777;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_94;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_70;
        PyObject *tmp_cmp_expr_left_32;
        PyObject *tmp_cmp_expr_right_32;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_32 = var_mobj;
        tmp_cmp_expr_right_32 = Py_None;
        tmp_condition_result_70 = (tmp_cmp_expr_left_32 != tmp_cmp_expr_right_32) ? true : false;
        if (tmp_condition_result_70 != false) {
            goto branch_yes_68;
        } else {
            goto branch_no_68;
        }
    }
    branch_yes_68:;
    {
        PyObject *tmp_called_value_86;
        PyObject *tmp_expression_value_98;
        PyObject *tmp_args_element_value_186;
        PyObject *tmp_called_instance_100;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2779;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_98 = par_self;
        tmp_called_value_86 = LOOKUP_ATTRIBUTE(tmp_expression_value_98, mod_consts[87]);
        if (tmp_called_value_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2779;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_100 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2779;
        tmp_args_element_value_186 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_100,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_186 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_86);

            exception_lineno = 2779;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2779;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_86, tmp_args_element_value_186);
        Py_DECREF(tmp_called_value_86);
        Py_DECREF(tmp_args_element_value_186);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2779;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_68:;
    {
        PyObject *tmp_assign_source_95;
        PyObject *tmp_called_instance_101;
        PyObject *tmp_args_element_value_187;
        PyObject *tmp_args_element_value_188;
        tmp_called_instance_101 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_101 == NULL)) {
            tmp_called_instance_101 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2780;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_187 = mod_consts[281];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_188 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2780;
        {
            PyObject *call_args[] = {tmp_args_element_value_187, tmp_args_element_value_188};
            tmp_assign_source_95 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_101,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2780;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_95;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_71;
        PyObject *tmp_cmp_expr_left_33;
        PyObject *tmp_cmp_expr_right_33;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_33 = var_mobj;
        tmp_cmp_expr_right_33 = Py_None;
        tmp_condition_result_71 = (tmp_cmp_expr_left_33 != tmp_cmp_expr_right_33) ? true : false;
        if (tmp_condition_result_71 != false) {
            goto branch_yes_69;
        } else {
            goto branch_no_69;
        }
    }
    branch_yes_69:;
    {
        PyObject *tmp_called_value_87;
        PyObject *tmp_expression_value_99;
        PyObject *tmp_args_element_value_189;
        PyObject *tmp_called_value_88;
        PyObject *tmp_args_element_value_190;
        PyObject *tmp_called_instance_102;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2782;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_99 = par_self;
        tmp_called_value_87 = LOOKUP_ATTRIBUTE(tmp_expression_value_99, mod_consts[87]);
        if (tmp_called_value_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2782;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_88 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[282]);

        if (unlikely(tmp_called_value_88 == NULL)) {
            tmp_called_value_88 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[282]);
        }

        if (tmp_called_value_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_87);

            exception_lineno = 2782;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_102 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2782;
        tmp_args_element_value_190 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_102,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_190 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_87);

            exception_lineno = 2782;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2782;
        tmp_args_element_value_189 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_88, tmp_args_element_value_190);
        Py_DECREF(tmp_args_element_value_190);
        if (tmp_args_element_value_189 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_87);

            exception_lineno = 2782;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2782;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_87, tmp_args_element_value_189);
        Py_DECREF(tmp_called_value_87);
        Py_DECREF(tmp_args_element_value_189);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2782;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_69:;
    {
        PyObject *tmp_assign_source_96;
        PyObject *tmp_called_instance_103;
        PyObject *tmp_args_element_value_191;
        PyObject *tmp_args_element_value_192;
        tmp_called_instance_103 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_103 == NULL)) {
            tmp_called_instance_103 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2785;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_191 = mod_consts[283];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_192 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2785;
        {
            PyObject *call_args[] = {tmp_args_element_value_191, tmp_args_element_value_192};
            tmp_assign_source_96 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_103,
                mod_consts[9],
                call_args
            );
        }

        if (tmp_assign_source_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2785;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_matches;
            assert(old != NULL);
            var_matches = tmp_assign_source_96;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_72;
        int tmp_truth_name_35;
        CHECK_OBJECT(var_matches);
        tmp_truth_name_35 = CHECK_IF_TRUE(var_matches);
        if (tmp_truth_name_35 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2786;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_72 = tmp_truth_name_35 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_72 == NUITKA_BOOL_TRUE) {
            goto branch_yes_70;
        } else {
            goto branch_no_70;
        }
    }
    branch_yes_70:;
    {
        PyObject *tmp_called_value_89;
        PyObject *tmp_expression_value_100;
        PyObject *tmp_kw_call_arg_value_0_15;
        PyObject *tmp_kw_call_arg_value_1_14;
        PyObject *tmp_kw_call_arg_value_2_12;
        PyObject *tmp_kw_call_dict_value_0_15;
        PyObject *tmp_kw_call_dict_value_1_6;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2787;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_100 = par_self;
        tmp_called_value_89 = LOOKUP_ATTRIBUTE(tmp_expression_value_100, mod_consts[214]);
        if (tmp_called_value_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2787;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_matches);
        tmp_kw_call_arg_value_0_15 = var_matches;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_14 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_12 = var_video_title;
        tmp_kw_call_dict_value_0_15 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[237]);

        if (unlikely(tmp_kw_call_dict_value_0_15 == NULL)) {
            tmp_kw_call_dict_value_0_15 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[237]);
        }

        if (tmp_kw_call_dict_value_0_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_89);

            exception_lineno = 2788;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_call_dict_value_1_6 = mod_consts[284];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2787;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_15, tmp_kw_call_arg_value_1_14, tmp_kw_call_arg_value_2_12};
            PyObject *kw_values[2] = {tmp_kw_call_dict_value_0_15, tmp_kw_call_dict_value_1_6};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_89, args, kw_values, mod_consts[216]);
        }

        Py_DECREF(tmp_called_value_89);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2787;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_70:;
    {
        PyObject *tmp_assign_source_97;
        PyObject *tmp_called_instance_104;
        PyObject *tmp_args_element_value_193;
        tmp_called_instance_104 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[285]);

        if (unlikely(tmp_called_instance_104 == NULL)) {
            tmp_called_instance_104 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[285]);
        }

        if (tmp_called_instance_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2791;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_193 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2791;
        tmp_assign_source_97 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_104, mod_consts[213], tmp_args_element_value_193);
        if (tmp_assign_source_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2791;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_simplecast_urls == NULL);
        var_simplecast_urls = tmp_assign_source_97;
    }
    {
        nuitka_bool tmp_condition_result_73;
        int tmp_truth_name_36;
        CHECK_OBJECT(var_simplecast_urls);
        tmp_truth_name_36 = CHECK_IF_TRUE(var_simplecast_urls);
        if (tmp_truth_name_36 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2792;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_73 = tmp_truth_name_36 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_73 == NUITKA_BOOL_TRUE) {
            goto branch_yes_71;
        } else {
            goto branch_no_71;
        }
    }
    branch_yes_71:;
    {
        PyObject *tmp_called_instance_105;
        PyObject *tmp_args_element_value_194;
        PyObject *tmp_args_element_value_195;
        PyObject *tmp_args_element_value_196;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2793;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_105 = par_self;
        CHECK_OBJECT(var_simplecast_urls);
        tmp_args_element_value_194 = var_simplecast_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_195 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_196 = var_video_title;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2793;
        {
            PyObject *call_args[] = {tmp_args_element_value_194, tmp_args_element_value_195, tmp_args_element_value_196};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_105,
                mod_consts[214],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2793;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_71:;
    {
        PyObject *tmp_assign_source_98;
        PyObject *tmp_called_instance_106;
        PyObject *tmp_args_element_value_197;
        PyObject *tmp_args_element_value_198;
        tmp_called_instance_106 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_106 == NULL)) {
            tmp_called_instance_106 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2797;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_197 = mod_consts[286];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_198 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2797;
        {
            PyObject *call_args[] = {tmp_args_element_value_197, tmp_args_element_value_198};
            tmp_assign_source_98 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_106,
                mod_consts[9],
                call_args
            );
        }

        if (tmp_assign_source_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2797;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_matches;
            assert(old != NULL);
            var_matches = tmp_assign_source_98;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_74;
        int tmp_truth_name_37;
        CHECK_OBJECT(var_matches);
        tmp_truth_name_37 = CHECK_IF_TRUE(var_matches);
        if (tmp_truth_name_37 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2798;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_74 = tmp_truth_name_37 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_74 == NUITKA_BOOL_TRUE) {
            goto branch_yes_72;
        } else {
            goto branch_no_72;
        }
    }
    branch_yes_72:;
    {
        PyObject *tmp_called_value_90;
        PyObject *tmp_expression_value_101;
        PyObject *tmp_args_value_12;
        PyObject *tmp_tuple_element_13;
        PyObject *tmp_kwargs_value_12;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2799;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_101 = par_self;
        tmp_called_value_90 = LOOKUP_ATTRIBUTE(tmp_expression_value_101, mod_consts[214]);
        if (tmp_called_value_90 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2799;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_matches);
        tmp_tuple_element_13 = var_matches;
        tmp_args_value_12 = MAKE_TUPLE_EMPTY(3);
        PyTuple_SET_ITEM0(tmp_args_value_12, 0, tmp_tuple_element_13);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_13 = var_video_id;
        PyTuple_SET_ITEM0(tmp_args_value_12, 1, tmp_tuple_element_13);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_13 = var_video_title;
        PyTuple_SET_ITEM0(tmp_args_value_12, 2, tmp_tuple_element_13);
        tmp_kwargs_value_12 = DICT_COPY(mod_consts[287]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2799;
        tmp_return_value = CALL_FUNCTION(tmp_called_value_90, tmp_args_value_12, tmp_kwargs_value_12);
        Py_DECREF(tmp_called_value_90);
        Py_DECREF(tmp_args_value_12);
        Py_DECREF(tmp_kwargs_value_12);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2799;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_72:;
    {
        PyObject *tmp_assign_source_99;
        PyObject *tmp_called_instance_107;
        PyObject *tmp_args_element_value_199;
        tmp_called_instance_107 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[288]);

        if (unlikely(tmp_called_instance_107 == NULL)) {
            tmp_called_instance_107 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[288]);
        }

        if (tmp_called_instance_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2802;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_199 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2802;
        tmp_assign_source_99 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_107, mod_consts[228], tmp_args_element_value_199);
        if (tmp_assign_source_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2802;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_rutv_url == NULL);
        var_rutv_url = tmp_assign_source_99;
    }
    {
        nuitka_bool tmp_condition_result_75;
        int tmp_truth_name_38;
        CHECK_OBJECT(var_rutv_url);
        tmp_truth_name_38 = CHECK_IF_TRUE(var_rutv_url);
        if (tmp_truth_name_38 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2803;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_75 = tmp_truth_name_38 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_75 == NUITKA_BOOL_TRUE) {
            goto branch_yes_73;
        } else {
            goto branch_no_73;
        }
    }
    branch_yes_73:;
    {
        PyObject *tmp_called_instance_108;
        PyObject *tmp_args_element_value_200;
        PyObject *tmp_args_element_value_201;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2804;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_108 = par_self;
        CHECK_OBJECT(var_rutv_url);
        tmp_args_element_value_200 = var_rutv_url;
        tmp_args_element_value_201 = mod_consts[289];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2804;
        {
            PyObject *call_args[] = {tmp_args_element_value_200, tmp_args_element_value_201};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_108,
                mod_consts[87],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2804;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_73:;
    {
        PyObject *tmp_assign_source_100;
        PyObject *tmp_called_instance_109;
        PyObject *tmp_args_element_value_202;
        tmp_called_instance_109 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[290]);

        if (unlikely(tmp_called_instance_109 == NULL)) {
            tmp_called_instance_109 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[290]);
        }

        if (tmp_called_instance_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2807;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_202 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2807;
        tmp_assign_source_100 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_109, mod_consts[228], tmp_args_element_value_202);
        if (tmp_assign_source_100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2807;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_tvc_url == NULL);
        var_tvc_url = tmp_assign_source_100;
    }
    {
        nuitka_bool tmp_condition_result_76;
        int tmp_truth_name_39;
        CHECK_OBJECT(var_tvc_url);
        tmp_truth_name_39 = CHECK_IF_TRUE(var_tvc_url);
        if (tmp_truth_name_39 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2808;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_76 = tmp_truth_name_39 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_76 == NUITKA_BOOL_TRUE) {
            goto branch_yes_74;
        } else {
            goto branch_no_74;
        }
    }
    branch_yes_74:;
    {
        PyObject *tmp_called_instance_110;
        PyObject *tmp_args_element_value_203;
        PyObject *tmp_args_element_value_204;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2809;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_110 = par_self;
        CHECK_OBJECT(var_tvc_url);
        tmp_args_element_value_203 = var_tvc_url;
        tmp_args_element_value_204 = mod_consts[291];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2809;
        {
            PyObject *call_args[] = {tmp_args_element_value_203, tmp_args_element_value_204};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_110,
                mod_consts[87],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2809;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_74:;
    {
        PyObject *tmp_assign_source_101;
        PyObject *tmp_called_instance_111;
        PyObject *tmp_args_element_value_205;
        tmp_called_instance_111 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[292]);

        if (unlikely(tmp_called_instance_111 == NULL)) {
            tmp_called_instance_111 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[292]);
        }

        if (tmp_called_instance_111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2812;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_205 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2812;
        tmp_assign_source_101 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_111, mod_consts[213], tmp_args_element_value_205);
        if (tmp_assign_source_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2812;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_sportbox_urls == NULL);
        var_sportbox_urls = tmp_assign_source_101;
    }
    {
        nuitka_bool tmp_condition_result_77;
        int tmp_truth_name_40;
        CHECK_OBJECT(var_sportbox_urls);
        tmp_truth_name_40 = CHECK_IF_TRUE(var_sportbox_urls);
        if (tmp_truth_name_40 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2813;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_77 = tmp_truth_name_40 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_77 == NUITKA_BOOL_TRUE) {
            goto branch_yes_75;
        } else {
            goto branch_no_75;
        }
    }
    branch_yes_75:;
    {
        PyObject *tmp_called_value_91;
        PyObject *tmp_expression_value_102;
        PyObject *tmp_kw_call_arg_value_0_16;
        PyObject *tmp_kw_call_arg_value_1_15;
        PyObject *tmp_kw_call_arg_value_2_13;
        PyObject *tmp_kw_call_dict_value_0_16;
        PyObject *tmp_called_instance_112;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2814;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_102 = par_self;
        tmp_called_value_91 = LOOKUP_ATTRIBUTE(tmp_expression_value_102, mod_consts[214]);
        if (tmp_called_value_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2814;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_sportbox_urls);
        tmp_kw_call_arg_value_0_16 = var_sportbox_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_15 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_13 = var_video_title;
        tmp_called_instance_112 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[292]);

        if (unlikely(tmp_called_instance_112 == NULL)) {
            tmp_called_instance_112 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[292]);
        }

        if (tmp_called_instance_112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_91);

            exception_lineno = 2814;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2814;
        tmp_kw_call_dict_value_0_16 = CALL_METHOD_NO_ARGS(tmp_called_instance_112, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_91);

            exception_lineno = 2814;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2814;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_16, tmp_kw_call_arg_value_1_15, tmp_kw_call_arg_value_2_13};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_16};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_91, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_91);
        Py_DECREF(tmp_kw_call_dict_value_0_16);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2814;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_75:;
    {
        PyObject *tmp_assign_source_102;
        PyObject *tmp_called_instance_113;
        PyObject *tmp_args_element_value_206;
        tmp_called_instance_113 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[293]);

        if (unlikely(tmp_called_instance_113 == NULL)) {
            tmp_called_instance_113 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[293]);
        }

        if (tmp_called_instance_113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2817;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_206 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2817;
        tmp_assign_source_102 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_113, mod_consts[213], tmp_args_element_value_206);
        if (tmp_assign_source_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2817;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_xhamster_urls == NULL);
        var_xhamster_urls = tmp_assign_source_102;
    }
    {
        nuitka_bool tmp_condition_result_78;
        int tmp_truth_name_41;
        CHECK_OBJECT(var_xhamster_urls);
        tmp_truth_name_41 = CHECK_IF_TRUE(var_xhamster_urls);
        if (tmp_truth_name_41 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2818;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_78 = tmp_truth_name_41 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_78 == NUITKA_BOOL_TRUE) {
            goto branch_yes_76;
        } else {
            goto branch_no_76;
        }
    }
    branch_yes_76:;
    {
        PyObject *tmp_called_value_92;
        PyObject *tmp_expression_value_103;
        PyObject *tmp_args_value_13;
        PyObject *tmp_tuple_element_14;
        PyObject *tmp_kwargs_value_13;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2819;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_103 = par_self;
        tmp_called_value_92 = LOOKUP_ATTRIBUTE(tmp_expression_value_103, mod_consts[214]);
        if (tmp_called_value_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2819;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_xhamster_urls);
        tmp_tuple_element_14 = var_xhamster_urls;
        tmp_args_value_13 = MAKE_TUPLE_EMPTY(3);
        PyTuple_SET_ITEM0(tmp_args_value_13, 0, tmp_tuple_element_14);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_14 = var_video_id;
        PyTuple_SET_ITEM0(tmp_args_value_13, 1, tmp_tuple_element_14);
        CHECK_OBJECT(var_video_title);
        tmp_tuple_element_14 = var_video_title;
        PyTuple_SET_ITEM0(tmp_args_value_13, 2, tmp_tuple_element_14);
        tmp_kwargs_value_13 = DICT_COPY(mod_consts[294]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2819;
        tmp_return_value = CALL_FUNCTION(tmp_called_value_92, tmp_args_value_13, tmp_kwargs_value_13);
        Py_DECREF(tmp_called_value_92);
        Py_DECREF(tmp_args_value_13);
        Py_DECREF(tmp_kwargs_value_13);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2819;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_76:;
    {
        PyObject *tmp_assign_source_103;
        PyObject *tmp_called_instance_114;
        PyObject *tmp_args_element_value_207;
        tmp_called_instance_114 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[295]);

        if (unlikely(tmp_called_instance_114 == NULL)) {
            tmp_called_instance_114 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[295]);
        }

        if (tmp_called_instance_114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2822;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_207 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2822;
        tmp_assign_source_103 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_114, mod_consts[213], tmp_args_element_value_207);
        if (tmp_assign_source_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2822;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_tnaflix_urls == NULL);
        var_tnaflix_urls = tmp_assign_source_103;
    }
    {
        nuitka_bool tmp_condition_result_79;
        int tmp_truth_name_42;
        CHECK_OBJECT(var_tnaflix_urls);
        tmp_truth_name_42 = CHECK_IF_TRUE(var_tnaflix_urls);
        if (tmp_truth_name_42 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2823;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_79 = tmp_truth_name_42 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_79 == NUITKA_BOOL_TRUE) {
            goto branch_yes_77;
        } else {
            goto branch_no_77;
        }
    }
    branch_yes_77:;
    {
        PyObject *tmp_called_value_93;
        PyObject *tmp_expression_value_104;
        PyObject *tmp_kw_call_arg_value_0_17;
        PyObject *tmp_kw_call_arg_value_1_16;
        PyObject *tmp_kw_call_arg_value_2_14;
        PyObject *tmp_kw_call_dict_value_0_17;
        PyObject *tmp_called_instance_115;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2824;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_104 = par_self;
        tmp_called_value_93 = LOOKUP_ATTRIBUTE(tmp_expression_value_104, mod_consts[214]);
        if (tmp_called_value_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2824;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_tnaflix_urls);
        tmp_kw_call_arg_value_0_17 = var_tnaflix_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_16 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_14 = var_video_title;
        tmp_called_instance_115 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[295]);

        if (unlikely(tmp_called_instance_115 == NULL)) {
            tmp_called_instance_115 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[295]);
        }

        if (tmp_called_instance_115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_93);

            exception_lineno = 2824;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2824;
        tmp_kw_call_dict_value_0_17 = CALL_METHOD_NO_ARGS(tmp_called_instance_115, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_93);

            exception_lineno = 2824;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2824;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_17, tmp_kw_call_arg_value_1_16, tmp_kw_call_arg_value_2_14};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_17};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_93, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_93);
        Py_DECREF(tmp_kw_call_dict_value_0_17);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2824;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_77:;
    {
        PyObject *tmp_assign_source_104;
        PyObject *tmp_called_instance_116;
        PyObject *tmp_args_element_value_208;
        tmp_called_instance_116 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[296]);

        if (unlikely(tmp_called_instance_116 == NULL)) {
            tmp_called_instance_116 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[296]);
        }

        if (tmp_called_instance_116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2827;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_208 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2827;
        tmp_assign_source_104 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_116, mod_consts[213], tmp_args_element_value_208);
        if (tmp_assign_source_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2827;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pornhub_urls == NULL);
        var_pornhub_urls = tmp_assign_source_104;
    }
    {
        nuitka_bool tmp_condition_result_80;
        int tmp_truth_name_43;
        CHECK_OBJECT(var_pornhub_urls);
        tmp_truth_name_43 = CHECK_IF_TRUE(var_pornhub_urls);
        if (tmp_truth_name_43 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2828;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_80 = tmp_truth_name_43 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_80 == NUITKA_BOOL_TRUE) {
            goto branch_yes_78;
        } else {
            goto branch_no_78;
        }
    }
    branch_yes_78:;
    {
        PyObject *tmp_called_value_94;
        PyObject *tmp_expression_value_105;
        PyObject *tmp_kw_call_arg_value_0_18;
        PyObject *tmp_kw_call_arg_value_1_17;
        PyObject *tmp_kw_call_arg_value_2_15;
        PyObject *tmp_kw_call_dict_value_0_18;
        PyObject *tmp_called_instance_117;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2829;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_105 = par_self;
        tmp_called_value_94 = LOOKUP_ATTRIBUTE(tmp_expression_value_105, mod_consts[214]);
        if (tmp_called_value_94 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2829;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_pornhub_urls);
        tmp_kw_call_arg_value_0_18 = var_pornhub_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_17 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_15 = var_video_title;
        tmp_called_instance_117 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[296]);

        if (unlikely(tmp_called_instance_117 == NULL)) {
            tmp_called_instance_117 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[296]);
        }

        if (tmp_called_instance_117 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_94);

            exception_lineno = 2829;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2829;
        tmp_kw_call_dict_value_0_18 = CALL_METHOD_NO_ARGS(tmp_called_instance_117, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_94);

            exception_lineno = 2829;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2829;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_18, tmp_kw_call_arg_value_1_17, tmp_kw_call_arg_value_2_15};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_18};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_94, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_94);
        Py_DECREF(tmp_kw_call_dict_value_0_18);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2829;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_78:;
    {
        PyObject *tmp_assign_source_105;
        PyObject *tmp_called_instance_118;
        PyObject *tmp_args_element_value_209;
        tmp_called_instance_118 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[297]);

        if (unlikely(tmp_called_instance_118 == NULL)) {
            tmp_called_instance_118 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[297]);
        }

        if (tmp_called_instance_118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2832;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_209 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2832;
        tmp_assign_source_105 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_118, mod_consts[213], tmp_args_element_value_209);
        if (tmp_assign_source_105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2832;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_drtuber_urls == NULL);
        var_drtuber_urls = tmp_assign_source_105;
    }
    {
        nuitka_bool tmp_condition_result_81;
        int tmp_truth_name_44;
        CHECK_OBJECT(var_drtuber_urls);
        tmp_truth_name_44 = CHECK_IF_TRUE(var_drtuber_urls);
        if (tmp_truth_name_44 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2833;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_81 = tmp_truth_name_44 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_81 == NUITKA_BOOL_TRUE) {
            goto branch_yes_79;
        } else {
            goto branch_no_79;
        }
    }
    branch_yes_79:;
    {
        PyObject *tmp_called_value_95;
        PyObject *tmp_expression_value_106;
        PyObject *tmp_kw_call_arg_value_0_19;
        PyObject *tmp_kw_call_arg_value_1_18;
        PyObject *tmp_kw_call_arg_value_2_16;
        PyObject *tmp_kw_call_dict_value_0_19;
        PyObject *tmp_called_instance_119;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2834;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_106 = par_self;
        tmp_called_value_95 = LOOKUP_ATTRIBUTE(tmp_expression_value_106, mod_consts[214]);
        if (tmp_called_value_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2834;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_drtuber_urls);
        tmp_kw_call_arg_value_0_19 = var_drtuber_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_18 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_16 = var_video_title;
        tmp_called_instance_119 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[297]);

        if (unlikely(tmp_called_instance_119 == NULL)) {
            tmp_called_instance_119 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[297]);
        }

        if (tmp_called_instance_119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_95);

            exception_lineno = 2834;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2834;
        tmp_kw_call_dict_value_0_19 = CALL_METHOD_NO_ARGS(tmp_called_instance_119, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_95);

            exception_lineno = 2834;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2834;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_19, tmp_kw_call_arg_value_1_18, tmp_kw_call_arg_value_2_16};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_19};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_95, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_95);
        Py_DECREF(tmp_kw_call_dict_value_0_19);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2834;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_79:;
    {
        PyObject *tmp_assign_source_106;
        PyObject *tmp_called_instance_120;
        PyObject *tmp_args_element_value_210;
        tmp_called_instance_120 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[298]);

        if (unlikely(tmp_called_instance_120 == NULL)) {
            tmp_called_instance_120 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[298]);
        }

        if (tmp_called_instance_120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2837;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_210 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2837;
        tmp_assign_source_106 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_120, mod_consts[213], tmp_args_element_value_210);
        if (tmp_assign_source_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2837;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_redtube_urls == NULL);
        var_redtube_urls = tmp_assign_source_106;
    }
    {
        nuitka_bool tmp_condition_result_82;
        int tmp_truth_name_45;
        CHECK_OBJECT(var_redtube_urls);
        tmp_truth_name_45 = CHECK_IF_TRUE(var_redtube_urls);
        if (tmp_truth_name_45 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2838;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_82 = tmp_truth_name_45 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_82 == NUITKA_BOOL_TRUE) {
            goto branch_yes_80;
        } else {
            goto branch_no_80;
        }
    }
    branch_yes_80:;
    {
        PyObject *tmp_called_value_96;
        PyObject *tmp_expression_value_107;
        PyObject *tmp_kw_call_arg_value_0_20;
        PyObject *tmp_kw_call_arg_value_1_19;
        PyObject *tmp_kw_call_arg_value_2_17;
        PyObject *tmp_kw_call_dict_value_0_20;
        PyObject *tmp_called_instance_121;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2839;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_107 = par_self;
        tmp_called_value_96 = LOOKUP_ATTRIBUTE(tmp_expression_value_107, mod_consts[214]);
        if (tmp_called_value_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2839;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_redtube_urls);
        tmp_kw_call_arg_value_0_20 = var_redtube_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_19 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_17 = var_video_title;
        tmp_called_instance_121 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[298]);

        if (unlikely(tmp_called_instance_121 == NULL)) {
            tmp_called_instance_121 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[298]);
        }

        if (tmp_called_instance_121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_96);

            exception_lineno = 2839;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2839;
        tmp_kw_call_dict_value_0_20 = CALL_METHOD_NO_ARGS(tmp_called_instance_121, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_96);

            exception_lineno = 2839;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2839;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_20, tmp_kw_call_arg_value_1_19, tmp_kw_call_arg_value_2_17};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_20};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_96, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_96);
        Py_DECREF(tmp_kw_call_dict_value_0_20);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2839;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_80:;
    {
        PyObject *tmp_assign_source_107;
        PyObject *tmp_called_instance_122;
        PyObject *tmp_args_element_value_211;
        tmp_called_instance_122 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[299]);

        if (unlikely(tmp_called_instance_122 == NULL)) {
            tmp_called_instance_122 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[299]);
        }

        if (tmp_called_instance_122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2842;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_211 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2842;
        tmp_assign_source_107 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_122, mod_consts[213], tmp_args_element_value_211);
        if (tmp_assign_source_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2842;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_tube8_urls == NULL);
        var_tube8_urls = tmp_assign_source_107;
    }
    {
        nuitka_bool tmp_condition_result_83;
        int tmp_truth_name_46;
        CHECK_OBJECT(var_tube8_urls);
        tmp_truth_name_46 = CHECK_IF_TRUE(var_tube8_urls);
        if (tmp_truth_name_46 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2843;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_83 = tmp_truth_name_46 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_83 == NUITKA_BOOL_TRUE) {
            goto branch_yes_81;
        } else {
            goto branch_no_81;
        }
    }
    branch_yes_81:;
    {
        PyObject *tmp_called_value_97;
        PyObject *tmp_expression_value_108;
        PyObject *tmp_kw_call_arg_value_0_21;
        PyObject *tmp_kw_call_arg_value_1_20;
        PyObject *tmp_kw_call_arg_value_2_18;
        PyObject *tmp_kw_call_dict_value_0_21;
        PyObject *tmp_called_instance_123;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2844;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_108 = par_self;
        tmp_called_value_97 = LOOKUP_ATTRIBUTE(tmp_expression_value_108, mod_consts[214]);
        if (tmp_called_value_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2844;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_tube8_urls);
        tmp_kw_call_arg_value_0_21 = var_tube8_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_20 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_18 = var_video_title;
        tmp_called_instance_123 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[299]);

        if (unlikely(tmp_called_instance_123 == NULL)) {
            tmp_called_instance_123 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[299]);
        }

        if (tmp_called_instance_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_97);

            exception_lineno = 2844;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2844;
        tmp_kw_call_dict_value_0_21 = CALL_METHOD_NO_ARGS(tmp_called_instance_123, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_97);

            exception_lineno = 2844;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2844;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_21, tmp_kw_call_arg_value_1_20, tmp_kw_call_arg_value_2_18};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_21};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_97, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_97);
        Py_DECREF(tmp_kw_call_dict_value_0_21);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2844;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_81:;
    {
        PyObject *tmp_assign_source_108;
        PyObject *tmp_called_instance_124;
        PyObject *tmp_args_element_value_212;
        tmp_called_instance_124 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[300]);

        if (unlikely(tmp_called_instance_124 == NULL)) {
            tmp_called_instance_124 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[300]);
        }

        if (tmp_called_instance_124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2847;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_212 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2847;
        tmp_assign_source_108 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_124, mod_consts[213], tmp_args_element_value_212);
        if (tmp_assign_source_108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2847;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mofosex_urls == NULL);
        var_mofosex_urls = tmp_assign_source_108;
    }
    {
        nuitka_bool tmp_condition_result_84;
        int tmp_truth_name_47;
        CHECK_OBJECT(var_mofosex_urls);
        tmp_truth_name_47 = CHECK_IF_TRUE(var_mofosex_urls);
        if (tmp_truth_name_47 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2848;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_84 = tmp_truth_name_47 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_84 == NUITKA_BOOL_TRUE) {
            goto branch_yes_82;
        } else {
            goto branch_no_82;
        }
    }
    branch_yes_82:;
    {
        PyObject *tmp_called_value_98;
        PyObject *tmp_expression_value_109;
        PyObject *tmp_kw_call_arg_value_0_22;
        PyObject *tmp_kw_call_arg_value_1_21;
        PyObject *tmp_kw_call_arg_value_2_19;
        PyObject *tmp_kw_call_dict_value_0_22;
        PyObject *tmp_called_instance_125;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2849;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_109 = par_self;
        tmp_called_value_98 = LOOKUP_ATTRIBUTE(tmp_expression_value_109, mod_consts[214]);
        if (tmp_called_value_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2849;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mofosex_urls);
        tmp_kw_call_arg_value_0_22 = var_mofosex_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_21 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_19 = var_video_title;
        tmp_called_instance_125 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[300]);

        if (unlikely(tmp_called_instance_125 == NULL)) {
            tmp_called_instance_125 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[300]);
        }

        if (tmp_called_instance_125 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_98);

            exception_lineno = 2849;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2849;
        tmp_kw_call_dict_value_0_22 = CALL_METHOD_NO_ARGS(tmp_called_instance_125, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_98);

            exception_lineno = 2849;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2849;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_22, tmp_kw_call_arg_value_1_21, tmp_kw_call_arg_value_2_19};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_22};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_98, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_98);
        Py_DECREF(tmp_kw_call_dict_value_0_22);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2849;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_82:;
    {
        PyObject *tmp_assign_source_109;
        PyObject *tmp_called_instance_126;
        PyObject *tmp_args_element_value_213;
        tmp_called_instance_126 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[301]);

        if (unlikely(tmp_called_instance_126 == NULL)) {
            tmp_called_instance_126 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[301]);
        }

        if (tmp_called_instance_126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2852;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_213 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2852;
        tmp_assign_source_109 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_126, mod_consts[213], tmp_args_element_value_213);
        if (tmp_assign_source_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2852;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_spankwire_urls == NULL);
        var_spankwire_urls = tmp_assign_source_109;
    }
    {
        nuitka_bool tmp_condition_result_85;
        int tmp_truth_name_48;
        CHECK_OBJECT(var_spankwire_urls);
        tmp_truth_name_48 = CHECK_IF_TRUE(var_spankwire_urls);
        if (tmp_truth_name_48 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2853;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_85 = tmp_truth_name_48 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_85 == NUITKA_BOOL_TRUE) {
            goto branch_yes_83;
        } else {
            goto branch_no_83;
        }
    }
    branch_yes_83:;
    {
        PyObject *tmp_called_value_99;
        PyObject *tmp_expression_value_110;
        PyObject *tmp_kw_call_arg_value_0_23;
        PyObject *tmp_kw_call_arg_value_1_22;
        PyObject *tmp_kw_call_arg_value_2_20;
        PyObject *tmp_kw_call_dict_value_0_23;
        PyObject *tmp_called_instance_127;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2854;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_110 = par_self;
        tmp_called_value_99 = LOOKUP_ATTRIBUTE(tmp_expression_value_110, mod_consts[214]);
        if (tmp_called_value_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2854;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_spankwire_urls);
        tmp_kw_call_arg_value_0_23 = var_spankwire_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_22 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_20 = var_video_title;
        tmp_called_instance_127 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[301]);

        if (unlikely(tmp_called_instance_127 == NULL)) {
            tmp_called_instance_127 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[301]);
        }

        if (tmp_called_instance_127 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_99);

            exception_lineno = 2854;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2854;
        tmp_kw_call_dict_value_0_23 = CALL_METHOD_NO_ARGS(tmp_called_instance_127, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_99);

            exception_lineno = 2854;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2854;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_23, tmp_kw_call_arg_value_1_22, tmp_kw_call_arg_value_2_20};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_23};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_99, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_99);
        Py_DECREF(tmp_kw_call_dict_value_0_23);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2854;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_83:;
    {
        PyObject *tmp_assign_source_110;
        PyObject *tmp_called_instance_128;
        PyObject *tmp_args_element_value_214;
        tmp_called_instance_128 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[302]);

        if (unlikely(tmp_called_instance_128 == NULL)) {
            tmp_called_instance_128 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[302]);
        }

        if (tmp_called_instance_128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2857;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_214 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2857;
        tmp_assign_source_110 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_128, mod_consts[213], tmp_args_element_value_214);
        if (tmp_assign_source_110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2857;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_youporn_urls == NULL);
        var_youporn_urls = tmp_assign_source_110;
    }
    {
        nuitka_bool tmp_condition_result_86;
        int tmp_truth_name_49;
        CHECK_OBJECT(var_youporn_urls);
        tmp_truth_name_49 = CHECK_IF_TRUE(var_youporn_urls);
        if (tmp_truth_name_49 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2858;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_86 = tmp_truth_name_49 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_86 == NUITKA_BOOL_TRUE) {
            goto branch_yes_84;
        } else {
            goto branch_no_84;
        }
    }
    branch_yes_84:;
    {
        PyObject *tmp_called_value_100;
        PyObject *tmp_expression_value_111;
        PyObject *tmp_kw_call_arg_value_0_24;
        PyObject *tmp_kw_call_arg_value_1_23;
        PyObject *tmp_kw_call_arg_value_2_21;
        PyObject *tmp_kw_call_dict_value_0_24;
        PyObject *tmp_called_instance_129;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2859;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_111 = par_self;
        tmp_called_value_100 = LOOKUP_ATTRIBUTE(tmp_expression_value_111, mod_consts[214]);
        if (tmp_called_value_100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2859;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_youporn_urls);
        tmp_kw_call_arg_value_0_24 = var_youporn_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_23 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_21 = var_video_title;
        tmp_called_instance_129 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[302]);

        if (unlikely(tmp_called_instance_129 == NULL)) {
            tmp_called_instance_129 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[302]);
        }

        if (tmp_called_instance_129 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_100);

            exception_lineno = 2859;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2859;
        tmp_kw_call_dict_value_0_24 = CALL_METHOD_NO_ARGS(tmp_called_instance_129, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_100);

            exception_lineno = 2859;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2859;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_24, tmp_kw_call_arg_value_1_23, tmp_kw_call_arg_value_2_21};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_24};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_100, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_100);
        Py_DECREF(tmp_kw_call_dict_value_0_24);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2859;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_84:;
    {
        PyObject *tmp_assign_source_111;
        PyObject *tmp_called_instance_130;
        PyObject *tmp_args_element_value_215;
        PyObject *tmp_args_element_value_216;
        tmp_called_instance_130 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_130 == NULL)) {
            tmp_called_instance_130 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_130 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2862;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_215 = mod_consts[303];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_216 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2862;
        {
            PyObject *call_args[] = {tmp_args_element_value_215, tmp_args_element_value_216};
            tmp_assign_source_111 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_130,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2862;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_111;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_87;
        PyObject *tmp_cmp_expr_left_34;
        PyObject *tmp_cmp_expr_right_34;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_34 = var_mobj;
        tmp_cmp_expr_right_34 = Py_None;
        tmp_condition_result_87 = (tmp_cmp_expr_left_34 != tmp_cmp_expr_right_34) ? true : false;
        if (tmp_condition_result_87 != false) {
            goto branch_yes_85;
        } else {
            goto branch_no_85;
        }
    }
    branch_yes_85:;
    {
        PyObject *tmp_called_value_101;
        PyObject *tmp_expression_value_112;
        PyObject *tmp_args_element_value_217;
        PyObject *tmp_called_instance_131;
        PyObject *tmp_args_element_value_218;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2865;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_112 = par_self;
        tmp_called_value_101 = LOOKUP_ATTRIBUTE(tmp_expression_value_112, mod_consts[87]);
        if (tmp_called_value_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2865;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_131 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2865;
        tmp_args_element_value_217 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_131,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_217 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_101);

            exception_lineno = 2865;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_218 = mod_consts[304];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2865;
        {
            PyObject *call_args[] = {tmp_args_element_value_217, tmp_args_element_value_218};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_101, call_args);
        }

        Py_DECREF(tmp_called_value_101);
        Py_DECREF(tmp_args_element_value_217);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2865;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_85:;
    {
        PyObject *tmp_assign_source_112;
        PyObject *tmp_called_instance_132;
        PyObject *tmp_args_element_value_219;
        PyObject *tmp_args_element_value_220;
        tmp_called_instance_132 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_132 == NULL)) {
            tmp_called_instance_132 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2868;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_219 = mod_consts[305];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_220 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2868;
        {
            PyObject *call_args[] = {tmp_args_element_value_219, tmp_args_element_value_220};
            tmp_assign_source_112 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_132,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2868;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_112;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_88;
        PyObject *tmp_cmp_expr_left_35;
        PyObject *tmp_cmp_expr_right_35;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_35 = var_mobj;
        tmp_cmp_expr_right_35 = Py_None;
        tmp_condition_result_88 = (tmp_cmp_expr_left_35 != tmp_cmp_expr_right_35) ? true : false;
        if (tmp_condition_result_88 != false) {
            goto branch_yes_86;
        } else {
            goto branch_no_86;
        }
    }
    branch_yes_86:;
    {
        PyObject *tmp_called_value_102;
        PyObject *tmp_expression_value_113;
        PyObject *tmp_args_element_value_221;
        PyObject *tmp_called_instance_133;
        PyObject *tmp_args_element_value_222;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2871;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_113 = par_self;
        tmp_called_value_102 = LOOKUP_ATTRIBUTE(tmp_expression_value_113, mod_consts[87]);
        if (tmp_called_value_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2871;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_133 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2871;
        tmp_args_element_value_221 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_133,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_221 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_102);

            exception_lineno = 2871;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_222 = mod_consts[306];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2871;
        {
            PyObject *call_args[] = {tmp_args_element_value_221, tmp_args_element_value_222};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_102, call_args);
        }

        Py_DECREF(tmp_called_value_102);
        Py_DECREF(tmp_args_element_value_221);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2871;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_86:;
    {
        PyObject *tmp_assign_source_113;
        PyObject *tmp_called_instance_134;
        PyObject *tmp_args_element_value_223;
        tmp_called_instance_134 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[307]);

        if (unlikely(tmp_called_instance_134 == NULL)) {
            tmp_called_instance_134 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[307]);
        }

        if (tmp_called_instance_134 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2874;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_223 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2874;
        tmp_assign_source_113 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_134, mod_consts[228], tmp_args_element_value_223);
        if (tmp_assign_source_113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2874;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_ustream_url == NULL);
        var_ustream_url = tmp_assign_source_113;
    }
    {
        nuitka_bool tmp_condition_result_89;
        int tmp_truth_name_50;
        CHECK_OBJECT(var_ustream_url);
        tmp_truth_name_50 = CHECK_IF_TRUE(var_ustream_url);
        if (tmp_truth_name_50 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2875;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_89 = tmp_truth_name_50 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_89 == NUITKA_BOOL_TRUE) {
            goto branch_yes_87;
        } else {
            goto branch_no_87;
        }
    }
    branch_yes_87:;
    {
        PyObject *tmp_called_value_103;
        PyObject *tmp_expression_value_114;
        PyObject *tmp_args_element_value_224;
        PyObject *tmp_args_element_value_225;
        PyObject *tmp_called_instance_135;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2876;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_114 = par_self;
        tmp_called_value_103 = LOOKUP_ATTRIBUTE(tmp_expression_value_114, mod_consts[87]);
        if (tmp_called_value_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2876;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_ustream_url);
        tmp_args_element_value_224 = var_ustream_url;
        tmp_called_instance_135 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[307]);

        if (unlikely(tmp_called_instance_135 == NULL)) {
            tmp_called_instance_135 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[307]);
        }

        if (tmp_called_instance_135 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_103);

            exception_lineno = 2876;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2876;
        tmp_args_element_value_225 = CALL_METHOD_NO_ARGS(tmp_called_instance_135, mod_consts[210]);
        if (tmp_args_element_value_225 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_103);

            exception_lineno = 2876;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2876;
        {
            PyObject *call_args[] = {tmp_args_element_value_224, tmp_args_element_value_225};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_103, call_args);
        }

        Py_DECREF(tmp_called_value_103);
        Py_DECREF(tmp_args_element_value_225);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2876;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_87:;
    {
        PyObject *tmp_assign_source_114;
        PyObject *tmp_called_instance_136;
        PyObject *tmp_args_element_value_226;
        tmp_called_instance_136 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[308]);

        if (unlikely(tmp_called_instance_136 == NULL)) {
            tmp_called_instance_136 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[308]);
        }

        if (tmp_called_instance_136 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2879;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_226 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2879;
        tmp_assign_source_114 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_136, mod_consts[213], tmp_args_element_value_226);
        if (tmp_assign_source_114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2879;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_arte_urls == NULL);
        var_arte_urls = tmp_assign_source_114;
    }
    {
        nuitka_bool tmp_condition_result_90;
        int tmp_truth_name_51;
        CHECK_OBJECT(var_arte_urls);
        tmp_truth_name_51 = CHECK_IF_TRUE(var_arte_urls);
        if (tmp_truth_name_51 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2880;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_90 = tmp_truth_name_51 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_90 == NUITKA_BOOL_TRUE) {
            goto branch_yes_88;
        } else {
            goto branch_no_88;
        }
    }
    branch_yes_88:;
    {
        PyObject *tmp_called_instance_137;
        PyObject *tmp_args_element_value_227;
        PyObject *tmp_args_element_value_228;
        PyObject *tmp_args_element_value_229;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2881;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_137 = par_self;
        CHECK_OBJECT(var_arte_urls);
        tmp_args_element_value_227 = var_arte_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_228 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_229 = var_video_title;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2881;
        {
            PyObject *call_args[] = {tmp_args_element_value_227, tmp_args_element_value_228, tmp_args_element_value_229};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_137,
                mod_consts[214],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2881;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_88:;
    {
        PyObject *tmp_assign_source_115;
        PyObject *tmp_called_instance_138;
        PyObject *tmp_args_element_value_230;
        PyObject *tmp_args_element_value_231;
        tmp_called_instance_138 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_138 == NULL)) {
            tmp_called_instance_138 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_138 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2884;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_230 = mod_consts[309];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_231 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2884;
        {
            PyObject *call_args[] = {tmp_args_element_value_230, tmp_args_element_value_231};
            tmp_assign_source_115 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_138,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2884;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_115;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_91;
        PyObject *tmp_cmp_expr_left_36;
        PyObject *tmp_cmp_expr_right_36;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_36 = var_mobj;
        tmp_cmp_expr_right_36 = Py_None;
        tmp_condition_result_91 = (tmp_cmp_expr_left_36 != tmp_cmp_expr_right_36) ? true : false;
        if (tmp_condition_result_91 != false) {
            goto branch_yes_89;
        } else {
            goto branch_no_89;
        }
    }
    branch_yes_89:;
    {
        PyObject *tmp_called_value_104;
        PyObject *tmp_expression_value_115;
        PyObject *tmp_args_element_value_232;
        PyObject *tmp_called_instance_139;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2888;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_115 = par_self;
        tmp_called_value_104 = LOOKUP_ATTRIBUTE(tmp_expression_value_115, mod_consts[87]);
        if (tmp_called_value_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2888;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_139 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2888;
        tmp_args_element_value_232 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_139,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_232 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_104);

            exception_lineno = 2888;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2888;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_104, tmp_args_element_value_232);
        Py_DECREF(tmp_called_value_104);
        Py_DECREF(tmp_args_element_value_232);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2888;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_89:;
    {
        PyObject *tmp_assign_source_116;
        PyObject *tmp_called_instance_140;
        PyObject *tmp_args_element_value_233;
        tmp_called_instance_140 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[310]);

        if (unlikely(tmp_called_instance_140 == NULL)) {
            tmp_called_instance_140 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[310]);
        }

        if (tmp_called_instance_140 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2891;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_233 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2891;
        tmp_assign_source_116 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_140, mod_consts[228], tmp_args_element_value_233);
        if (tmp_assign_source_116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2891;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_myvi_url == NULL);
        var_myvi_url = tmp_assign_source_116;
    }
    {
        nuitka_bool tmp_condition_result_92;
        int tmp_truth_name_52;
        CHECK_OBJECT(var_myvi_url);
        tmp_truth_name_52 = CHECK_IF_TRUE(var_myvi_url);
        if (tmp_truth_name_52 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2892;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_92 = tmp_truth_name_52 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_92 == NUITKA_BOOL_TRUE) {
            goto branch_yes_90;
        } else {
            goto branch_no_90;
        }
    }
    branch_yes_90:;
    {
        PyObject *tmp_called_instance_141;
        PyObject *tmp_args_element_value_234;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2893;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_141 = par_self;
        CHECK_OBJECT(var_myvi_url);
        tmp_args_element_value_234 = var_myvi_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2893;
        tmp_return_value = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_141, mod_consts[87], tmp_args_element_value_234);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2893;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_90:;
    {
        PyObject *tmp_assign_source_117;
        PyObject *tmp_called_instance_142;
        PyObject *tmp_args_element_value_235;
        tmp_called_instance_142 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[311]);

        if (unlikely(tmp_called_instance_142 == NULL)) {
            tmp_called_instance_142 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[311]);
        }

        if (tmp_called_instance_142 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2896;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_235 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2896;
        tmp_assign_source_117 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_142, mod_consts[213], tmp_args_element_value_235);
        if (tmp_assign_source_117 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2896;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_soundcloud_urls == NULL);
        var_soundcloud_urls = tmp_assign_source_117;
    }
    {
        nuitka_bool tmp_condition_result_93;
        int tmp_truth_name_53;
        CHECK_OBJECT(var_soundcloud_urls);
        tmp_truth_name_53 = CHECK_IF_TRUE(var_soundcloud_urls);
        if (tmp_truth_name_53 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2897;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_93 = tmp_truth_name_53 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_93 == NUITKA_BOOL_TRUE) {
            goto branch_yes_91;
        } else {
            goto branch_no_91;
        }
    }
    branch_yes_91:;
    {
        PyObject *tmp_called_value_105;
        PyObject *tmp_expression_value_116;
        PyObject *tmp_kw_call_arg_value_0_25;
        PyObject *tmp_kw_call_arg_value_1_24;
        PyObject *tmp_kw_call_arg_value_2_22;
        PyObject *tmp_kw_call_dict_value_0_25;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2898;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_116 = par_self;
        tmp_called_value_105 = LOOKUP_ATTRIBUTE(tmp_expression_value_116, mod_consts[214]);
        if (tmp_called_value_105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2898;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_soundcloud_urls);
        tmp_kw_call_arg_value_0_25 = var_soundcloud_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_24 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_22 = var_video_title;
        tmp_kw_call_dict_value_0_25 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[237]);

        if (unlikely(tmp_kw_call_dict_value_0_25 == NULL)) {
            tmp_kw_call_dict_value_0_25 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[237]);
        }

        if (tmp_kw_call_dict_value_0_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_105);

            exception_lineno = 2898;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2898;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_25, tmp_kw_call_arg_value_1_24, tmp_kw_call_arg_value_2_22};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_25};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_105, args, kw_values, mod_consts[312]);
        }

        Py_DECREF(tmp_called_value_105);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2898;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_91:;
    {
        PyObject *tmp_assign_source_118;
        PyObject *tmp_called_instance_143;
        PyObject *tmp_args_element_value_236;
        tmp_called_instance_143 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[313]);

        if (unlikely(tmp_called_instance_143 == NULL)) {
            tmp_called_instance_143 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[313]);
        }

        if (tmp_called_instance_143 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2901;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_236 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2901;
        tmp_assign_source_118 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_143, mod_consts[213], tmp_args_element_value_236);
        if (tmp_assign_source_118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2901;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_tunein_urls == NULL);
        var_tunein_urls = tmp_assign_source_118;
    }
    {
        nuitka_bool tmp_condition_result_94;
        int tmp_truth_name_54;
        CHECK_OBJECT(var_tunein_urls);
        tmp_truth_name_54 = CHECK_IF_TRUE(var_tunein_urls);
        if (tmp_truth_name_54 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2902;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_94 = tmp_truth_name_54 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_94 == NUITKA_BOOL_TRUE) {
            goto branch_yes_92;
        } else {
            goto branch_no_92;
        }
    }
    branch_yes_92:;
    {
        PyObject *tmp_called_instance_144;
        PyObject *tmp_args_element_value_237;
        PyObject *tmp_args_element_value_238;
        PyObject *tmp_args_element_value_239;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2903;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_144 = par_self;
        CHECK_OBJECT(var_tunein_urls);
        tmp_args_element_value_237 = var_tunein_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_238 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_239 = var_video_title;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2903;
        {
            PyObject *call_args[] = {tmp_args_element_value_237, tmp_args_element_value_238, tmp_args_element_value_239};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_144,
                mod_consts[214],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2903;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_92:;
    {
        PyObject *tmp_assign_source_119;
        PyObject *tmp_called_instance_145;
        PyObject *tmp_args_element_value_240;
        tmp_called_instance_145 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[314]);

        if (unlikely(tmp_called_instance_145 == NULL)) {
            tmp_called_instance_145 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[314]);
        }

        if (tmp_called_instance_145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2906;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_240 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2906;
        tmp_assign_source_119 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_145, mod_consts[228], tmp_args_element_value_240);
        if (tmp_assign_source_119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2906;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mtvservices_url == NULL);
        var_mtvservices_url = tmp_assign_source_119;
    }
    {
        nuitka_bool tmp_condition_result_95;
        int tmp_truth_name_55;
        CHECK_OBJECT(var_mtvservices_url);
        tmp_truth_name_55 = CHECK_IF_TRUE(var_mtvservices_url);
        if (tmp_truth_name_55 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2907;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_95 = tmp_truth_name_55 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_95 == NUITKA_BOOL_TRUE) {
            goto branch_yes_93;
        } else {
            goto branch_no_93;
        }
    }
    branch_yes_93:;
    {
        PyObject *tmp_called_value_106;
        PyObject *tmp_expression_value_117;
        PyObject *tmp_args_value_14;
        PyObject *tmp_tuple_element_15;
        PyObject *tmp_kwargs_value_14;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2908;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_117 = par_self;
        tmp_called_value_106 = LOOKUP_ATTRIBUTE(tmp_expression_value_117, mod_consts[87]);
        if (tmp_called_value_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2908;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mtvservices_url);
        tmp_tuple_element_15 = var_mtvservices_url;
        tmp_args_value_14 = MAKE_TUPLE_EMPTY(1);
        PyTuple_SET_ITEM0(tmp_args_value_14, 0, tmp_tuple_element_15);
        tmp_kwargs_value_14 = DICT_COPY(mod_consts[315]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2908;
        tmp_return_value = CALL_FUNCTION(tmp_called_value_106, tmp_args_value_14, tmp_kwargs_value_14);
        Py_DECREF(tmp_called_value_106);
        Py_DECREF(tmp_args_value_14);
        Py_DECREF(tmp_kwargs_value_14);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2908;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_93:;
    {
        PyObject *tmp_assign_source_120;
        PyObject *tmp_called_instance_146;
        PyObject *tmp_args_element_value_241;
        PyObject *tmp_args_element_value_242;
        tmp_called_instance_146 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_146 == NULL)) {
            tmp_called_instance_146 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_146 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2911;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_241 = mod_consts[316];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_242 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2911;
        {
            PyObject *call_args[] = {tmp_args_element_value_241, tmp_args_element_value_242};
            tmp_assign_source_120 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_146,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2911;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_120;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_96;
        PyObject *tmp_cmp_expr_left_37;
        PyObject *tmp_cmp_expr_right_37;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_37 = var_mobj;
        tmp_cmp_expr_right_37 = Py_None;
        tmp_condition_result_96 = (tmp_cmp_expr_left_37 != tmp_cmp_expr_right_37) ? true : false;
        if (tmp_condition_result_96 != false) {
            goto branch_yes_94;
        } else {
            goto branch_no_94;
        }
    }
    branch_yes_94:;
    {
        PyObject *tmp_called_value_107;
        PyObject *tmp_expression_value_118;
        PyObject *tmp_args_element_value_243;
        PyObject *tmp_called_instance_147;
        PyObject *tmp_args_element_value_244;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2915;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_118 = par_self;
        tmp_called_value_107 = LOOKUP_ATTRIBUTE(tmp_expression_value_118, mod_consts[87]);
        if (tmp_called_value_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2915;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_147 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2915;
        tmp_args_element_value_243 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_147,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_243 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_107);

            exception_lineno = 2915;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_244 = mod_consts[317];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2915;
        {
            PyObject *call_args[] = {tmp_args_element_value_243, tmp_args_element_value_244};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_107, call_args);
        }

        Py_DECREF(tmp_called_value_107);
        Py_DECREF(tmp_args_element_value_243);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2915;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_94:;
    {
        PyObject *tmp_assign_source_121;
        PyObject *tmp_called_instance_148;
        PyObject *tmp_args_element_value_245;
        PyObject *tmp_args_element_value_246;
        tmp_called_instance_148 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_148 == NULL)) {
            tmp_called_instance_148 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2918;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_245 = mod_consts[318];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_246 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2918;
        {
            PyObject *call_args[] = {tmp_args_element_value_245, tmp_args_element_value_246};
            tmp_assign_source_121 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_148,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2918;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_121;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_97;
        PyObject *tmp_cmp_expr_left_38;
        PyObject *tmp_cmp_expr_right_38;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_38 = var_mobj;
        tmp_cmp_expr_right_38 = Py_None;
        tmp_condition_result_97 = (tmp_cmp_expr_left_38 != tmp_cmp_expr_right_38) ? true : false;
        if (tmp_condition_result_97 != false) {
            goto branch_yes_95;
        } else {
            goto branch_no_95;
        }
    }
    branch_yes_95:;
    {
        PyObject *tmp_called_value_108;
        PyObject *tmp_expression_value_119;
        PyObject *tmp_args_element_value_247;
        PyObject *tmp_called_instance_149;
        PyObject *tmp_args_element_value_248;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2927;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_119 = par_self;
        tmp_called_value_108 = LOOKUP_ATTRIBUTE(tmp_expression_value_119, mod_consts[87]);
        if (tmp_called_value_108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2927;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_149 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2927;
        tmp_args_element_value_247 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_149,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_247 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_108);

            exception_lineno = 2927;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_248 = mod_consts[319];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2927;
        {
            PyObject *call_args[] = {tmp_args_element_value_247, tmp_args_element_value_248};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_108, call_args);
        }

        Py_DECREF(tmp_called_value_108);
        Py_DECREF(tmp_args_element_value_247);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2927;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_95:;
    {
        PyObject *tmp_assign_source_122;
        PyObject *tmp_called_instance_150;
        PyObject *tmp_args_element_value_249;
        PyObject *tmp_args_element_value_250;
        tmp_called_instance_150 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_150 == NULL)) {
            tmp_called_instance_150 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2930;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_249 = mod_consts[320];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_250 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2930;
        {
            PyObject *call_args[] = {tmp_args_element_value_249, tmp_args_element_value_250};
            tmp_assign_source_122 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_150,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2930;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_122;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_98;
        PyObject *tmp_cmp_expr_left_39;
        PyObject *tmp_cmp_expr_right_39;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_39 = var_mobj;
        tmp_cmp_expr_right_39 = Py_None;
        tmp_condition_result_98 = (tmp_cmp_expr_left_39 != tmp_cmp_expr_right_39) ? true : false;
        if (tmp_condition_result_98 != false) {
            goto branch_yes_96;
        } else {
            goto branch_no_96;
        }
    }
    branch_yes_96:;
    {
        PyObject *tmp_called_value_109;
        PyObject *tmp_expression_value_120;
        PyObject *tmp_args_element_value_251;
        PyObject *tmp_called_instance_151;
        PyObject *tmp_args_element_value_252;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2934;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_120 = par_self;
        tmp_called_value_109 = LOOKUP_ATTRIBUTE(tmp_expression_value_120, mod_consts[87]);
        if (tmp_called_value_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2934;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_151 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2934;
        tmp_args_element_value_251 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_151,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_251 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_109);

            exception_lineno = 2934;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_252 = mod_consts[321];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2934;
        {
            PyObject *call_args[] = {tmp_args_element_value_251, tmp_args_element_value_252};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_109, call_args);
        }

        Py_DECREF(tmp_called_value_109);
        Py_DECREF(tmp_args_element_value_251);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2934;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_96:;
    {
        PyObject *tmp_assign_source_123;
        PyObject *tmp_called_instance_152;
        PyObject *tmp_args_element_value_253;
        PyObject *tmp_args_element_value_254;
        tmp_called_instance_152 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_152 == NULL)) {
            tmp_called_instance_152 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_152 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2936;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_253 = mod_consts[322];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_254 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2936;
        {
            PyObject *call_args[] = {tmp_args_element_value_253, tmp_args_element_value_254};
            tmp_assign_source_123 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_152,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2936;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_123;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_99;
        PyObject *tmp_operand_value_6;
        CHECK_OBJECT(var_mobj);
        tmp_operand_value_6 = var_mobj;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_6);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2939;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_99 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_99 != false) {
            goto branch_yes_97;
        } else {
            goto branch_no_97;
        }
    }
    branch_yes_97:;
    {
        PyObject *tmp_assign_source_124;
        PyObject *tmp_called_instance_153;
        PyObject *tmp_args_element_value_255;
        PyObject *tmp_args_element_value_256;
        tmp_called_instance_153 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_153 == NULL)) {
            tmp_called_instance_153 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2940;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_255 = mod_consts[323];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_256 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2940;
        {
            PyObject *call_args[] = {tmp_args_element_value_255, tmp_args_element_value_256};
            tmp_assign_source_124 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_153,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2940;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_124;
            Py_DECREF(old);
        }

    }
    branch_no_97:;
    {
        bool tmp_condition_result_100;
        PyObject *tmp_cmp_expr_left_40;
        PyObject *tmp_cmp_expr_right_40;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_40 = var_mobj;
        tmp_cmp_expr_right_40 = Py_None;
        tmp_condition_result_100 = (tmp_cmp_expr_left_40 != tmp_cmp_expr_right_40) ? true : false;
        if (tmp_condition_result_100 != false) {
            goto branch_yes_98;
        } else {
            goto branch_no_98;
        }
    }
    branch_yes_98:;
    {
        PyObject *tmp_called_value_110;
        PyObject *tmp_expression_value_121;
        PyObject *tmp_args_element_value_257;
        PyObject *tmp_called_instance_154;
        PyObject *tmp_args_element_value_258;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2944;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_121 = par_self;
        tmp_called_value_110 = LOOKUP_ATTRIBUTE(tmp_expression_value_121, mod_consts[87]);
        if (tmp_called_value_110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2944;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_154 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2944;
        tmp_args_element_value_257 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_154,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_257 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_110);

            exception_lineno = 2944;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_258 = mod_consts[324];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2944;
        {
            PyObject *call_args[] = {tmp_args_element_value_257, tmp_args_element_value_258};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_110, call_args);
        }

        Py_DECREF(tmp_called_value_110);
        Py_DECREF(tmp_args_element_value_257);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2944;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_98:;
    {
        PyObject *tmp_assign_source_125;
        PyObject *tmp_called_value_111;
        PyObject *tmp_expression_value_122;
        PyObject *tmp_args_element_value_259;
        PyObject *tmp_mod_expr_left_7;
        PyObject *tmp_mod_expr_right_7;
        PyObject *tmp_expression_value_123;
        PyObject *tmp_args_element_value_260;
        tmp_expression_value_122 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_expression_value_122 == NULL)) {
            tmp_expression_value_122 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_expression_value_122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2946;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_111 = LOOKUP_ATTRIBUTE(tmp_expression_value_122, mod_consts[234]);
        if (tmp_called_value_111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2946;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mod_expr_left_7 = mod_consts[325];
        tmp_expression_value_123 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[326]);

        if (unlikely(tmp_expression_value_123 == NULL)) {
            tmp_expression_value_123 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[326]);
        }

        if (tmp_expression_value_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_111);

            exception_lineno = 2947;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mod_expr_right_7 = LOOKUP_ATTRIBUTE(tmp_expression_value_123, mod_consts[327]);
        if (tmp_mod_expr_right_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_111);

            exception_lineno = 2947;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_259 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_mod_expr_left_7, tmp_mod_expr_right_7);
        Py_DECREF(tmp_mod_expr_right_7);
        if (tmp_args_element_value_259 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_111);

            exception_lineno = 2947;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_260 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2946;
        {
            PyObject *call_args[] = {tmp_args_element_value_259, tmp_args_element_value_260};
            tmp_assign_source_125 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_111, call_args);
        }

        Py_DECREF(tmp_called_value_111);
        Py_DECREF(tmp_args_element_value_259);
        if (tmp_assign_source_125 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2946;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_125;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_101;
        PyObject *tmp_cmp_expr_left_41;
        PyObject *tmp_cmp_expr_right_41;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_41 = var_mobj;
        tmp_cmp_expr_right_41 = Py_None;
        tmp_condition_result_101 = (tmp_cmp_expr_left_41 != tmp_cmp_expr_right_41) ? true : false;
        if (tmp_condition_result_101 != false) {
            goto branch_yes_99;
        } else {
            goto branch_no_99;
        }
    }
    branch_yes_99:;
    {
        PyObject *tmp_called_value_112;
        PyObject *tmp_expression_value_124;
        PyObject *tmp_args_element_value_261;
        PyObject *tmp_called_value_113;
        PyObject *tmp_expression_value_125;
        PyObject *tmp_args_value_15;
        PyObject *tmp_tuple_element_16;
        PyObject *tmp_called_instance_155;
        PyObject *tmp_kwargs_value_15;
        PyObject *tmp_args_element_value_262;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2950;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_124 = par_self;
        tmp_called_value_112 = LOOKUP_ATTRIBUTE(tmp_expression_value_124, mod_consts[87]);
        if (tmp_called_value_112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2950;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_112);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2950;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_125 = par_self;
        tmp_called_value_113 = LOOKUP_ATTRIBUTE(tmp_expression_value_125, mod_consts[328]);
        if (tmp_called_value_113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_112);

            exception_lineno = 2950;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_155 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2950;
        tmp_tuple_element_16 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_155,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_tuple_element_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_112);
            Py_DECREF(tmp_called_value_113);

            exception_lineno = 2950;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_value_15 = MAKE_TUPLE_EMPTY(1);
        PyTuple_SET_ITEM(tmp_args_value_15, 0, tmp_tuple_element_16);
        tmp_kwargs_value_15 = DICT_COPY(mod_consts[329]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2950;
        tmp_args_element_value_261 = CALL_FUNCTION(tmp_called_value_113, tmp_args_value_15, tmp_kwargs_value_15);
        Py_DECREF(tmp_called_value_113);
        Py_DECREF(tmp_args_value_15);
        Py_DECREF(tmp_kwargs_value_15);
        if (tmp_args_element_value_261 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_112);

            exception_lineno = 2950;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_262 = mod_consts[330];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2950;
        {
            PyObject *call_args[] = {tmp_args_element_value_261, tmp_args_element_value_262};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_112, call_args);
        }

        Py_DECREF(tmp_called_value_112);
        Py_DECREF(tmp_args_element_value_261);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2950;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_99:;
    {
        PyObject *tmp_assign_source_126;
        PyObject *tmp_called_instance_156;
        PyObject *tmp_args_element_value_263;
        PyObject *tmp_args_element_value_264;
        tmp_called_instance_156 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_156 == NULL)) {
            tmp_called_instance_156 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_156 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2952;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_263 = mod_consts[331];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_264 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2952;
        {
            PyObject *call_args[] = {tmp_args_element_value_263, tmp_args_element_value_264};
            tmp_assign_source_126 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_156,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2952;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_126;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_102;
        PyObject *tmp_cmp_expr_left_42;
        PyObject *tmp_cmp_expr_right_42;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_42 = var_mobj;
        tmp_cmp_expr_right_42 = Py_None;
        tmp_condition_result_102 = (tmp_cmp_expr_left_42 != tmp_cmp_expr_right_42) ? true : false;
        if (tmp_condition_result_102 != false) {
            goto branch_yes_100;
        } else {
            goto branch_no_100;
        }
    }
    branch_yes_100:;
    {
        PyObject *tmp_called_value_114;
        PyObject *tmp_expression_value_126;
        PyObject *tmp_args_element_value_265;
        PyObject *tmp_called_instance_157;
        PyObject *tmp_args_element_value_266;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2956;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_126 = par_self;
        tmp_called_value_114 = LOOKUP_ATTRIBUTE(tmp_expression_value_126, mod_consts[87]);
        if (tmp_called_value_114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2956;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_157 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2956;
        tmp_args_element_value_265 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_157,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_265 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_114);

            exception_lineno = 2956;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_266 = mod_consts[332];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2956;
        {
            PyObject *call_args[] = {tmp_args_element_value_265, tmp_args_element_value_266};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_114, call_args);
        }

        Py_DECREF(tmp_called_value_114);
        Py_DECREF(tmp_args_element_value_265);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2956;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_100:;
    {
        PyObject *tmp_assign_source_127;
        PyObject *tmp_called_instance_158;
        PyObject *tmp_args_element_value_267;
        PyObject *tmp_args_element_value_268;
        tmp_called_instance_158 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_158 == NULL)) {
            tmp_called_instance_158 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_158 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2959;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_267 = mod_consts[333];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_268 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2959;
        {
            PyObject *call_args[] = {tmp_args_element_value_267, tmp_args_element_value_268};
            tmp_assign_source_127 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_158,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_127 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2959;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_127;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_103;
        PyObject *tmp_cmp_expr_left_43;
        PyObject *tmp_cmp_expr_right_43;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_43 = var_mobj;
        tmp_cmp_expr_right_43 = Py_None;
        tmp_condition_result_103 = (tmp_cmp_expr_left_43 != tmp_cmp_expr_right_43) ? true : false;
        if (tmp_condition_result_103 != false) {
            goto branch_yes_101;
        } else {
            goto branch_no_101;
        }
    }
    branch_yes_101:;
    {
        PyObject *tmp_called_value_115;
        PyObject *tmp_expression_value_127;
        PyObject *tmp_args_element_value_269;
        PyObject *tmp_called_instance_159;
        PyObject *tmp_args_element_value_270;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2962;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_127 = par_self;
        tmp_called_value_115 = LOOKUP_ATTRIBUTE(tmp_expression_value_127, mod_consts[87]);
        if (tmp_called_value_115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2962;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_159 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2962;
        tmp_args_element_value_269 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_159,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_269 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_115);

            exception_lineno = 2962;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_270 = mod_consts[334];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2962;
        {
            PyObject *call_args[] = {tmp_args_element_value_269, tmp_args_element_value_270};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_115, call_args);
        }

        Py_DECREF(tmp_called_value_115);
        Py_DECREF(tmp_args_element_value_269);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2962;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_101:;
    {
        PyObject *tmp_assign_source_128;
        PyObject *tmp_called_instance_160;
        PyObject *tmp_args_element_value_271;
        tmp_called_instance_160 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[335]);

        if (unlikely(tmp_called_instance_160 == NULL)) {
            tmp_called_instance_160 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[335]);
        }

        if (tmp_called_instance_160 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2965;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_271 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2965;
        tmp_assign_source_128 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_160, mod_consts[213], tmp_args_element_value_271);
        if (tmp_assign_source_128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2965;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_kaltura_urls == NULL);
        var_kaltura_urls = tmp_assign_source_128;
    }
    {
        nuitka_bool tmp_condition_result_104;
        int tmp_truth_name_56;
        CHECK_OBJECT(var_kaltura_urls);
        tmp_truth_name_56 = CHECK_IF_TRUE(var_kaltura_urls);
        if (tmp_truth_name_56 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2966;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_104 = tmp_truth_name_56 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_104 == NUITKA_BOOL_TRUE) {
            goto branch_yes_102;
        } else {
            goto branch_no_102;
        }
    }
    branch_yes_102:;
    {
        PyObject *tmp_called_value_116;
        PyObject *tmp_expression_value_128;
        PyObject *tmp_kw_call_arg_value_0_26;
        PyObject *tmp_kw_call_arg_value_1_25;
        PyObject *tmp_kw_call_arg_value_2_23;
        PyObject *tmp_kw_call_dict_value_0_26;
        struct Nuitka_CellObject *tmp_closure_4[1];
        PyObject *tmp_kw_call_dict_value_1_7;
        PyObject *tmp_called_instance_161;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2967;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_128 = par_self;
        tmp_called_value_116 = LOOKUP_ATTRIBUTE(tmp_expression_value_128, mod_consts[214]);
        if (tmp_called_value_116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2967;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_kaltura_urls);
        tmp_kw_call_arg_value_0_26 = var_kaltura_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_25 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_23 = var_video_title;

        tmp_closure_4[0] = par_url;
        Py_INCREF(tmp_closure_4[0]);

        tmp_kw_call_dict_value_0_26 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__5_lambda(tmp_closure_4);

        tmp_called_instance_161 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[335]);

        if (unlikely(tmp_called_instance_161 == NULL)) {
            tmp_called_instance_161 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[335]);
        }

        if (tmp_called_instance_161 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_116);
            Py_DECREF(tmp_kw_call_dict_value_0_26);

            exception_lineno = 2970;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2970;
        tmp_kw_call_dict_value_1_7 = CALL_METHOD_NO_ARGS(tmp_called_instance_161, mod_consts[210]);
        if (tmp_kw_call_dict_value_1_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_116);
            Py_DECREF(tmp_kw_call_dict_value_0_26);

            exception_lineno = 2970;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2967;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_26, tmp_kw_call_arg_value_1_25, tmp_kw_call_arg_value_2_23};
            PyObject *kw_values[2] = {tmp_kw_call_dict_value_0_26, tmp_kw_call_dict_value_1_7};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_116, args, kw_values, mod_consts[216]);
        }

        Py_DECREF(tmp_called_value_116);
        Py_DECREF(tmp_kw_call_dict_value_0_26);
        Py_DECREF(tmp_kw_call_dict_value_1_7);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2967;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_102:;
    {
        PyObject *tmp_assign_source_129;
        PyObject *tmp_called_instance_162;
        PyObject *tmp_args_element_value_272;
        tmp_called_instance_162 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[336]);

        if (unlikely(tmp_called_instance_162 == NULL)) {
            tmp_called_instance_162 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[336]);
        }

        if (tmp_called_instance_162 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2973;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_272 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2973;
        tmp_assign_source_129 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_162, mod_consts[228], tmp_args_element_value_272);
        if (tmp_assign_source_129 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2973;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_eagleplatform_url == NULL);
        var_eagleplatform_url = tmp_assign_source_129;
    }
    {
        nuitka_bool tmp_condition_result_105;
        int tmp_truth_name_57;
        CHECK_OBJECT(var_eagleplatform_url);
        tmp_truth_name_57 = CHECK_IF_TRUE(var_eagleplatform_url);
        if (tmp_truth_name_57 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2974;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_105 = tmp_truth_name_57 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_105 == NUITKA_BOOL_TRUE) {
            goto branch_yes_103;
        } else {
            goto branch_no_103;
        }
    }
    branch_yes_103:;
    {
        PyObject *tmp_called_value_117;
        PyObject *tmp_expression_value_129;
        PyObject *tmp_args_element_value_273;
        PyObject *tmp_called_value_118;
        PyObject *tmp_args_element_value_274;
        PyObject *tmp_args_element_value_275;
        PyObject *tmp_dict_key_11;
        PyObject *tmp_dict_value_11;
        PyObject *tmp_args_element_value_276;
        PyObject *tmp_called_instance_163;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2975;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_129 = par_self;
        tmp_called_value_117 = LOOKUP_ATTRIBUTE(tmp_expression_value_129, mod_consts[87]);
        if (tmp_called_value_117 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2975;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_118 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[125]);

        if (unlikely(tmp_called_value_118 == NULL)) {
            tmp_called_value_118 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[125]);
        }

        if (tmp_called_value_118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_117);

            exception_lineno = 2975;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_eagleplatform_url);
        tmp_args_element_value_274 = var_eagleplatform_url;
        tmp_dict_key_11 = mod_consts[337];
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_dict_value_11 = Nuitka_Cell_GET(par_url);
        tmp_args_element_value_275 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_args_element_value_275, tmp_dict_key_11, tmp_dict_value_11);
        assert(!(tmp_res != 0));
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2975;
        {
            PyObject *call_args[] = {tmp_args_element_value_274, tmp_args_element_value_275};
            tmp_args_element_value_273 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_118, call_args);
        }

        Py_DECREF(tmp_args_element_value_275);
        if (tmp_args_element_value_273 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_117);

            exception_lineno = 2975;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_instance_163 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[336]);

        if (unlikely(tmp_called_instance_163 == NULL)) {
            tmp_called_instance_163 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[336]);
        }

        if (tmp_called_instance_163 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_117);
            Py_DECREF(tmp_args_element_value_273);

            exception_lineno = 2975;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2975;
        tmp_args_element_value_276 = CALL_METHOD_NO_ARGS(tmp_called_instance_163, mod_consts[210]);
        if (tmp_args_element_value_276 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_117);
            Py_DECREF(tmp_args_element_value_273);

            exception_lineno = 2975;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2975;
        {
            PyObject *call_args[] = {tmp_args_element_value_273, tmp_args_element_value_276};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_117, call_args);
        }

        Py_DECREF(tmp_called_value_117);
        Py_DECREF(tmp_args_element_value_273);
        Py_DECREF(tmp_args_element_value_276);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2975;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_103:;
    {
        PyObject *tmp_assign_source_130;
        PyObject *tmp_called_instance_164;
        PyObject *tmp_args_element_value_277;
        PyObject *tmp_args_element_value_278;
        tmp_called_instance_164 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_164 == NULL)) {
            tmp_called_instance_164 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_164 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2978;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_277 = mod_consts[338];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_278 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2978;
        {
            PyObject *call_args[] = {tmp_args_element_value_277, tmp_args_element_value_278};
            tmp_assign_source_130 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_164,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_130 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2978;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_130;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_106;
        PyObject *tmp_cmp_expr_left_44;
        PyObject *tmp_cmp_expr_right_44;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_44 = var_mobj;
        tmp_cmp_expr_right_44 = Py_None;
        tmp_condition_result_106 = (tmp_cmp_expr_left_44 != tmp_cmp_expr_right_44) ? true : false;
        if (tmp_condition_result_106 != false) {
            goto branch_yes_104;
        } else {
            goto branch_no_104;
        }
    }
    branch_yes_104:;
    {
        PyObject *tmp_called_value_119;
        PyObject *tmp_expression_value_130;
        PyObject *tmp_args_element_value_279;
        PyObject *tmp_mod_expr_left_8;
        PyObject *tmp_mod_expr_right_8;
        PyObject *tmp_called_instance_165;
        PyObject *tmp_args_element_value_280;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2981;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_130 = par_self;
        tmp_called_value_119 = LOOKUP_ATTRIBUTE(tmp_expression_value_130, mod_consts[87]);
        if (tmp_called_value_119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2981;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mod_expr_left_8 = mod_consts[339];
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_165 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2981;
        tmp_mod_expr_right_8 = CALL_METHOD_NO_ARGS(tmp_called_instance_165, mod_consts[340]);
        if (tmp_mod_expr_right_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_119);

            exception_lineno = 2981;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_279 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_mod_expr_left_8, tmp_mod_expr_right_8);
        Py_DECREF(tmp_mod_expr_right_8);
        if (tmp_args_element_value_279 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_119);

            exception_lineno = 2981;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_280 = mod_consts[341];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2981;
        {
            PyObject *call_args[] = {tmp_args_element_value_279, tmp_args_element_value_280};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_119, call_args);
        }

        Py_DECREF(tmp_called_value_119);
        Py_DECREF(tmp_args_element_value_279);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2981;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_104:;
    {
        PyObject *tmp_assign_source_131;
        PyObject *tmp_called_instance_166;
        PyObject *tmp_args_element_value_281;
        tmp_called_instance_166 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[342]);

        if (unlikely(tmp_called_instance_166 == NULL)) {
            tmp_called_instance_166 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[342]);
        }

        if (tmp_called_instance_166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2984;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_281 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2984;
        tmp_assign_source_131 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_166, mod_consts[228], tmp_args_element_value_281);
        if (tmp_assign_source_131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2984;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_pladform_url == NULL);
        var_pladform_url = tmp_assign_source_131;
    }
    {
        nuitka_bool tmp_condition_result_107;
        int tmp_truth_name_58;
        CHECK_OBJECT(var_pladform_url);
        tmp_truth_name_58 = CHECK_IF_TRUE(var_pladform_url);
        if (tmp_truth_name_58 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2985;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_107 = tmp_truth_name_58 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_107 == NUITKA_BOOL_TRUE) {
            goto branch_yes_105;
        } else {
            goto branch_no_105;
        }
    }
    branch_yes_105:;
    {
        PyObject *tmp_called_instance_167;
        PyObject *tmp_args_element_value_282;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2986;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_167 = par_self;
        CHECK_OBJECT(var_pladform_url);
        tmp_args_element_value_282 = var_pladform_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2986;
        tmp_return_value = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_167, mod_consts[87], tmp_args_element_value_282);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2986;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_105:;
    {
        PyObject *tmp_assign_source_132;
        PyObject *tmp_called_instance_168;
        PyObject *tmp_args_element_value_283;
        tmp_called_instance_168 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[343]);

        if (unlikely(tmp_called_instance_168 == NULL)) {
            tmp_called_instance_168 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[343]);
        }

        if (tmp_called_instance_168 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2989;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_283 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2989;
        tmp_assign_source_132 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_168, mod_consts[228], tmp_args_element_value_283);
        if (tmp_assign_source_132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2989;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_videomore_url == NULL);
        var_videomore_url = tmp_assign_source_132;
    }
    {
        nuitka_bool tmp_condition_result_108;
        int tmp_truth_name_59;
        CHECK_OBJECT(var_videomore_url);
        tmp_truth_name_59 = CHECK_IF_TRUE(var_videomore_url);
        if (tmp_truth_name_59 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2990;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_108 = tmp_truth_name_59 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_108 == NUITKA_BOOL_TRUE) {
            goto branch_yes_106;
        } else {
            goto branch_no_106;
        }
    }
    branch_yes_106:;
    {
        PyObject *tmp_called_instance_169;
        PyObject *tmp_args_element_value_284;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2991;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_169 = par_self;
        CHECK_OBJECT(var_videomore_url);
        tmp_args_element_value_284 = var_videomore_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2991;
        tmp_return_value = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_169, mod_consts[87], tmp_args_element_value_284);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2991;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_106:;
    {
        PyObject *tmp_assign_source_133;
        PyObject *tmp_called_value_120;
        PyObject *tmp_expression_value_131;
        PyObject *tmp_args_element_value_285;
        PyObject *tmp_args_element_value_286;
        tmp_expression_value_131 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[344]);

        if (unlikely(tmp_expression_value_131 == NULL)) {
            tmp_expression_value_131 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[344]);
        }

        if (tmp_expression_value_131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2994;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_120 = LOOKUP_ATTRIBUTE(tmp_expression_value_131, mod_consts[228]);
        if (tmp_called_value_120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2994;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_120);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2994;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_value_285 = par_self;
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_286 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2994;
        {
            PyObject *call_args[] = {tmp_args_element_value_285, tmp_args_element_value_286};
            tmp_assign_source_133 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_120, call_args);
        }

        Py_DECREF(tmp_called_value_120);
        if (tmp_assign_source_133 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2994;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_webcaster_url == NULL);
        var_webcaster_url = tmp_assign_source_133;
    }
    {
        nuitka_bool tmp_condition_result_109;
        int tmp_truth_name_60;
        CHECK_OBJECT(var_webcaster_url);
        tmp_truth_name_60 = CHECK_IF_TRUE(var_webcaster_url);
        if (tmp_truth_name_60 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2995;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_109 = tmp_truth_name_60 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_109 == NUITKA_BOOL_TRUE) {
            goto branch_yes_107;
        } else {
            goto branch_no_107;
        }
    }
    branch_yes_107:;
    {
        PyObject *tmp_called_value_121;
        PyObject *tmp_expression_value_132;
        PyObject *tmp_kw_call_arg_value_0_27;
        PyObject *tmp_kw_call_dict_value_0_27;
        PyObject *tmp_called_instance_170;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2996;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_132 = par_self;
        tmp_called_value_121 = LOOKUP_ATTRIBUTE(tmp_expression_value_132, mod_consts[87]);
        if (tmp_called_value_121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2996;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_webcaster_url);
        tmp_kw_call_arg_value_0_27 = var_webcaster_url;
        tmp_called_instance_170 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[344]);

        if (unlikely(tmp_called_instance_170 == NULL)) {
            tmp_called_instance_170 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[344]);
        }

        if (tmp_called_instance_170 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_121);

            exception_lineno = 2996;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2996;
        tmp_kw_call_dict_value_0_27 = CALL_METHOD_NO_ARGS(tmp_called_instance_170, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_121);

            exception_lineno = 2996;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2996;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_27};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_27};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS1_KWSPLIT(tmp_called_value_121, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_121);
        Py_DECREF(tmp_kw_call_dict_value_0_27);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2996;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_107:;
    {
        PyObject *tmp_assign_source_134;
        PyObject *tmp_called_instance_171;
        PyObject *tmp_args_element_value_287;
        PyObject *tmp_args_element_value_288;
        tmp_called_instance_171 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_171 == NULL)) {
            tmp_called_instance_171 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_171 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2999;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_287 = mod_consts[345];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_288 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 2999;
        {
            PyObject *call_args[] = {tmp_args_element_value_287, tmp_args_element_value_288};
            tmp_assign_source_134 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_171,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_134 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2999;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_134;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_110;
        PyObject *tmp_cmp_expr_left_45;
        PyObject *tmp_cmp_expr_right_45;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_45 = var_mobj;
        tmp_cmp_expr_right_45 = Py_None;
        tmp_condition_result_110 = (tmp_cmp_expr_left_45 != tmp_cmp_expr_right_45) ? true : false;
        if (tmp_condition_result_110 != false) {
            goto branch_yes_108;
        } else {
            goto branch_no_108;
        }
    }
    branch_yes_108:;
    {
        PyObject *tmp_called_value_122;
        PyObject *tmp_expression_value_133;
        PyObject *tmp_args_element_value_289;
        PyObject *tmp_called_instance_172;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3002;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_133 = par_self;
        tmp_called_value_122 = LOOKUP_ATTRIBUTE(tmp_expression_value_133, mod_consts[87]);
        if (tmp_called_value_122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3002;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_172 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3002;
        tmp_args_element_value_289 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_172,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_289 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_122);

            exception_lineno = 3002;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3002;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_122, tmp_args_element_value_289);
        Py_DECREF(tmp_called_value_122);
        Py_DECREF(tmp_args_element_value_289);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3002;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_108:;
    {
        PyObject *tmp_assign_source_135;
        PyObject *tmp_called_instance_173;
        PyObject *tmp_args_element_value_290;
        PyObject *tmp_args_element_value_291;
        tmp_called_instance_173 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_173 == NULL)) {
            tmp_called_instance_173 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_173 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3005;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_290 = mod_consts[346];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_291 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3005;
        {
            PyObject *call_args[] = {tmp_args_element_value_290, tmp_args_element_value_291};
            tmp_assign_source_135 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_173,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_135 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3005;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_135;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_111;
        PyObject *tmp_cmp_expr_left_46;
        PyObject *tmp_cmp_expr_right_46;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_46 = var_mobj;
        tmp_cmp_expr_right_46 = Py_None;
        tmp_condition_result_111 = (tmp_cmp_expr_left_46 != tmp_cmp_expr_right_46) ? true : false;
        if (tmp_condition_result_111 != false) {
            goto branch_yes_109;
        } else {
            goto branch_no_109;
        }
    }
    branch_yes_109:;
    {
        PyObject *tmp_called_value_123;
        PyObject *tmp_expression_value_134;
        PyObject *tmp_args_element_value_292;
        PyObject *tmp_mod_expr_left_9;
        PyObject *tmp_mod_expr_right_9;
        PyObject *tmp_called_instance_174;
        PyObject *tmp_args_element_value_293;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3008;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_134 = par_self;
        tmp_called_value_123 = LOOKUP_ATTRIBUTE(tmp_expression_value_134, mod_consts[87]);
        if (tmp_called_value_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3008;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mod_expr_left_9 = mod_consts[347];
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_174 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3008;
        tmp_mod_expr_right_9 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_174,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[348], 0)
        );

        if (tmp_mod_expr_right_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_123);

            exception_lineno = 3008;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_292 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_mod_expr_left_9, tmp_mod_expr_right_9);
        Py_DECREF(tmp_mod_expr_right_9);
        if (tmp_args_element_value_292 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_123);

            exception_lineno = 3008;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_293 = mod_consts[349];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3008;
        {
            PyObject *call_args[] = {tmp_args_element_value_292, tmp_args_element_value_293};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_123, call_args);
        }

        Py_DECREF(tmp_called_value_123);
        Py_DECREF(tmp_args_element_value_292);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3008;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_109:;
    {
        PyObject *tmp_assign_source_136;
        PyObject *tmp_called_instance_175;
        PyObject *tmp_args_element_value_294;
        PyObject *tmp_args_element_value_295;
        tmp_called_instance_175 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_175 == NULL)) {
            tmp_called_instance_175 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_175 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3011;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_294 = mod_consts[350];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_295 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3011;
        {
            PyObject *call_args[] = {tmp_args_element_value_294, tmp_args_element_value_295};
            tmp_assign_source_136 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_175,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_136 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3011;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_136;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_112;
        PyObject *tmp_cmp_expr_left_47;
        PyObject *tmp_cmp_expr_right_47;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_47 = var_mobj;
        tmp_cmp_expr_right_47 = Py_None;
        tmp_condition_result_112 = (tmp_cmp_expr_left_47 != tmp_cmp_expr_right_47) ? true : false;
        if (tmp_condition_result_112 != false) {
            goto branch_yes_110;
        } else {
            goto branch_no_110;
        }
    }
    branch_yes_110:;
    {
        PyObject *tmp_called_value_124;
        PyObject *tmp_expression_value_135;
        PyObject *tmp_args_element_value_296;
        PyObject *tmp_called_instance_176;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3014;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_135 = par_self;
        tmp_called_value_124 = LOOKUP_ATTRIBUTE(tmp_expression_value_135, mod_consts[87]);
        if (tmp_called_value_124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3014;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_176 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3014;
        tmp_args_element_value_296 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_176,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_296 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_124);

            exception_lineno = 3014;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3014;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_124, tmp_args_element_value_296);
        Py_DECREF(tmp_called_value_124);
        Py_DECREF(tmp_args_element_value_296);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3014;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_110:;
    {
        PyObject *tmp_assign_source_137;
        PyObject *tmp_called_instance_177;
        PyObject *tmp_args_element_value_297;
        tmp_called_instance_177 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[351]);

        if (unlikely(tmp_called_instance_177 == NULL)) {
            tmp_called_instance_177 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[351]);
        }

        if (tmp_called_instance_177 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3017;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_297 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3017;
        tmp_assign_source_137 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_177, mod_consts[228], tmp_args_element_value_297);
        if (tmp_assign_source_137 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3017;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_nbc_sports_url == NULL);
        var_nbc_sports_url = tmp_assign_source_137;
    }
    {
        nuitka_bool tmp_condition_result_113;
        int tmp_truth_name_61;
        CHECK_OBJECT(var_nbc_sports_url);
        tmp_truth_name_61 = CHECK_IF_TRUE(var_nbc_sports_url);
        if (tmp_truth_name_61 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3018;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_113 = tmp_truth_name_61 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_113 == NUITKA_BOOL_TRUE) {
            goto branch_yes_111;
        } else {
            goto branch_no_111;
        }
    }
    branch_yes_111:;
    {
        PyObject *tmp_called_instance_178;
        PyObject *tmp_args_element_value_298;
        PyObject *tmp_args_element_value_299;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3019;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_178 = par_self;
        CHECK_OBJECT(var_nbc_sports_url);
        tmp_args_element_value_298 = var_nbc_sports_url;
        tmp_args_element_value_299 = mod_consts[352];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3019;
        {
            PyObject *call_args[] = {tmp_args_element_value_298, tmp_args_element_value_299};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_178,
                mod_consts[87],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3019;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_111:;
    {
        PyObject *tmp_assign_source_138;
        PyObject *tmp_called_instance_179;
        PyObject *tmp_args_element_value_300;
        PyObject *tmp_args_element_value_301;
        tmp_called_instance_179 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_179 == NULL)) {
            tmp_called_instance_179 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_179 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3022;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_300 = mod_consts[353];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_301 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3022;
        {
            PyObject *call_args[] = {tmp_args_element_value_300, tmp_args_element_value_301};
            tmp_assign_source_138 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_179,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_138 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3022;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_nbc_news_embed_url == NULL);
        var_nbc_news_embed_url = tmp_assign_source_138;
    }
    {
        nuitka_bool tmp_condition_result_114;
        int tmp_truth_name_62;
        CHECK_OBJECT(var_nbc_news_embed_url);
        tmp_truth_name_62 = CHECK_IF_TRUE(var_nbc_news_embed_url);
        if (tmp_truth_name_62 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3024;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_114 = tmp_truth_name_62 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_114 == NUITKA_BOOL_TRUE) {
            goto branch_yes_112;
        } else {
            goto branch_no_112;
        }
    }
    branch_yes_112:;
    {
        PyObject *tmp_called_value_125;
        PyObject *tmp_expression_value_136;
        PyObject *tmp_args_element_value_302;
        PyObject *tmp_called_instance_180;
        PyObject *tmp_args_element_value_303;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3025;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_136 = par_self;
        tmp_called_value_125 = LOOKUP_ATTRIBUTE(tmp_expression_value_136, mod_consts[87]);
        if (tmp_called_value_125 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3025;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_nbc_news_embed_url);
        tmp_called_instance_180 = var_nbc_news_embed_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3025;
        tmp_args_element_value_302 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_180,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_302 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_125);

            exception_lineno = 3025;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_303 = mod_consts[354];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3025;
        {
            PyObject *call_args[] = {tmp_args_element_value_302, tmp_args_element_value_303};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_125, call_args);
        }

        Py_DECREF(tmp_called_value_125);
        Py_DECREF(tmp_args_element_value_302);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3025;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_112:;
    {
        PyObject *tmp_assign_source_139;
        PyObject *tmp_called_instance_181;
        PyObject *tmp_args_element_value_304;
        tmp_called_instance_181 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[355]);

        if (unlikely(tmp_called_instance_181 == NULL)) {
            tmp_called_instance_181 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[355]);
        }

        if (tmp_called_instance_181 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3028;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_304 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3028;
        tmp_assign_source_139 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_181, mod_consts[228], tmp_args_element_value_304);
        if (tmp_assign_source_139 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3028;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_google_drive_url == NULL);
        var_google_drive_url = tmp_assign_source_139;
    }
    {
        nuitka_bool tmp_condition_result_115;
        int tmp_truth_name_63;
        CHECK_OBJECT(var_google_drive_url);
        tmp_truth_name_63 = CHECK_IF_TRUE(var_google_drive_url);
        if (tmp_truth_name_63 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3029;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_115 = tmp_truth_name_63 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_115 == NUITKA_BOOL_TRUE) {
            goto branch_yes_113;
        } else {
            goto branch_no_113;
        }
    }
    branch_yes_113:;
    {
        PyObject *tmp_called_instance_182;
        PyObject *tmp_args_element_value_305;
        PyObject *tmp_args_element_value_306;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3030;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_182 = par_self;
        CHECK_OBJECT(var_google_drive_url);
        tmp_args_element_value_305 = var_google_drive_url;
        tmp_args_element_value_306 = mod_consts[356];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3030;
        {
            PyObject *call_args[] = {tmp_args_element_value_305, tmp_args_element_value_306};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_182,
                mod_consts[87],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3030;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_113:;
    {
        PyObject *tmp_assign_source_140;
        PyObject *tmp_called_value_126;
        PyObject *tmp_expression_value_137;
        PyObject *tmp_args_element_value_307;
        PyObject *tmp_mod_expr_left_10;
        PyObject *tmp_mod_expr_right_10;
        PyObject *tmp_expression_value_138;
        PyObject *tmp_args_element_value_308;
        tmp_expression_value_137 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_expression_value_137 == NULL)) {
            tmp_expression_value_137 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_expression_value_137 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3033;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_126 = LOOKUP_ATTRIBUTE(tmp_expression_value_137, mod_consts[234]);
        if (tmp_called_value_126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3033;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mod_expr_left_10 = mod_consts[357];
        tmp_expression_value_138 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[358]);

        if (unlikely(tmp_expression_value_138 == NULL)) {
            tmp_expression_value_138 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[358]);
        }

        if (tmp_expression_value_138 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_126);

            exception_lineno = 3034;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_mod_expr_right_10 = LOOKUP_ATTRIBUTE(tmp_expression_value_138, mod_consts[359]);
        if (tmp_mod_expr_right_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_126);

            exception_lineno = 3034;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_307 = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_mod_expr_left_10, tmp_mod_expr_right_10);
        Py_DECREF(tmp_mod_expr_right_10);
        if (tmp_args_element_value_307 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_126);

            exception_lineno = 3034;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_308 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3033;
        {
            PyObject *call_args[] = {tmp_args_element_value_307, tmp_args_element_value_308};
            tmp_assign_source_140 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_126, call_args);
        }

        Py_DECREF(tmp_called_value_126);
        Py_DECREF(tmp_args_element_value_307);
        if (tmp_assign_source_140 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3033;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_140;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_116;
        PyObject *tmp_cmp_expr_left_48;
        PyObject *tmp_cmp_expr_right_48;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_48 = var_mobj;
        tmp_cmp_expr_right_48 = Py_None;
        tmp_condition_result_116 = (tmp_cmp_expr_left_48 != tmp_cmp_expr_right_48) ? true : false;
        if (tmp_condition_result_116 != false) {
            goto branch_yes_114;
        } else {
            goto branch_no_114;
        }
    }
    branch_yes_114:;
    {
        PyObject *tmp_called_value_127;
        PyObject *tmp_expression_value_139;
        PyObject *tmp_args_element_value_309;
        PyObject *tmp_called_value_128;
        PyObject *tmp_expression_value_140;
        PyObject *tmp_args_element_value_310;
        PyObject *tmp_args_element_value_311;
        PyObject *tmp_called_instance_183;
        PyObject *tmp_args_element_value_312;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3036;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_139 = par_self;
        tmp_called_value_127 = LOOKUP_ATTRIBUTE(tmp_expression_value_139, mod_consts[87]);
        if (tmp_called_value_127 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3036;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_140 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[67]);

        if (unlikely(tmp_expression_value_140 == NULL)) {
            tmp_expression_value_140 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[67]);
        }

        if (tmp_expression_value_140 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_127);

            exception_lineno = 3037;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_128 = LOOKUP_ATTRIBUTE(tmp_expression_value_140, mod_consts[68]);
        if (tmp_called_value_128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_127);

            exception_lineno = 3037;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_310 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_183 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3037;
        tmp_args_element_value_311 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_183,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_311 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_127);
            Py_DECREF(tmp_called_value_128);

            exception_lineno = 3037;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3037;
        {
            PyObject *call_args[] = {tmp_args_element_value_310, tmp_args_element_value_311};
            tmp_args_element_value_309 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_128, call_args);
        }

        Py_DECREF(tmp_called_value_128);
        Py_DECREF(tmp_args_element_value_311);
        if (tmp_args_element_value_309 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_127);

            exception_lineno = 3037;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_312 = mod_consts[360];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3036;
        {
            PyObject *call_args[] = {tmp_args_element_value_309, tmp_args_element_value_312};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_127, call_args);
        }

        Py_DECREF(tmp_called_value_127);
        Py_DECREF(tmp_args_element_value_309);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3036;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_114:;
    {
        PyObject *tmp_assign_source_141;
        PyObject *tmp_called_instance_184;
        PyObject *tmp_args_element_value_313;
        tmp_called_instance_184 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[361]);

        if (unlikely(tmp_called_instance_184 == NULL)) {
            tmp_called_instance_184 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[361]);
        }

        if (tmp_called_instance_184 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3040;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_313 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3040;
        tmp_assign_source_141 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_184, mod_consts[362], tmp_args_element_value_313);
        if (tmp_assign_source_141 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3040;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_senate_isvp_url == NULL);
        var_senate_isvp_url = tmp_assign_source_141;
    }
    {
        nuitka_bool tmp_condition_result_117;
        int tmp_truth_name_64;
        CHECK_OBJECT(var_senate_isvp_url);
        tmp_truth_name_64 = CHECK_IF_TRUE(var_senate_isvp_url);
        if (tmp_truth_name_64 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3041;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_117 = tmp_truth_name_64 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_117 == NUITKA_BOOL_TRUE) {
            goto branch_yes_115;
        } else {
            goto branch_no_115;
        }
    }
    branch_yes_115:;
    {
        PyObject *tmp_called_instance_185;
        PyObject *tmp_args_element_value_314;
        PyObject *tmp_args_element_value_315;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3042;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_185 = par_self;
        CHECK_OBJECT(var_senate_isvp_url);
        tmp_args_element_value_314 = var_senate_isvp_url;
        tmp_args_element_value_315 = mod_consts[363];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3042;
        {
            PyObject *call_args[] = {tmp_args_element_value_314, tmp_args_element_value_315};
            tmp_return_value = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_185,
                mod_consts[87],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3042;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_115:;
    {
        PyObject *tmp_assign_source_142;
        PyObject *tmp_called_instance_186;
        PyObject *tmp_args_element_value_316;
        PyObject *tmp_args_element_value_317;
        tmp_called_instance_186 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[364]);

        if (unlikely(tmp_called_instance_186 == NULL)) {
            tmp_called_instance_186 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[364]);
        }

        if (tmp_called_instance_186 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3045;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_316 = Nuitka_Cell_GET(var_webpage);
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_317 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3045;
        {
            PyObject *call_args[] = {tmp_args_element_value_316, tmp_args_element_value_317};
            tmp_assign_source_142 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_186,
                mod_consts[213],
                call_args
            );
        }

        if (tmp_assign_source_142 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3045;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_kinja_embed_urls == NULL);
        var_kinja_embed_urls = tmp_assign_source_142;
    }
    {
        nuitka_bool tmp_condition_result_118;
        int tmp_truth_name_65;
        CHECK_OBJECT(var_kinja_embed_urls);
        tmp_truth_name_65 = CHECK_IF_TRUE(var_kinja_embed_urls);
        if (tmp_truth_name_65 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3046;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_118 = tmp_truth_name_65 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_118 == NUITKA_BOOL_TRUE) {
            goto branch_yes_116;
        } else {
            goto branch_no_116;
        }
    }
    branch_yes_116:;
    {
        PyObject *tmp_called_instance_187;
        PyObject *tmp_args_element_value_318;
        PyObject *tmp_args_element_value_319;
        PyObject *tmp_args_element_value_320;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3047;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_187 = par_self;
        CHECK_OBJECT(var_kinja_embed_urls);
        tmp_args_element_value_318 = var_kinja_embed_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_319 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_320 = var_video_title;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3047;
        {
            PyObject *call_args[] = {tmp_args_element_value_318, tmp_args_element_value_319, tmp_args_element_value_320};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_187,
                mod_consts[214],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3047;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_116:;
    {
        PyObject *tmp_assign_source_143;
        PyObject *tmp_called_instance_188;
        PyObject *tmp_args_element_value_321;
        tmp_called_instance_188 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[365]);

        if (unlikely(tmp_called_instance_188 == NULL)) {
            tmp_called_instance_188 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[365]);
        }

        if (tmp_called_instance_188 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3051;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_321 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3051;
        tmp_assign_source_143 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_188, mod_consts[228], tmp_args_element_value_321);
        if (tmp_assign_source_143 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3051;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_onionstudios_url == NULL);
        var_onionstudios_url = tmp_assign_source_143;
    }
    {
        nuitka_bool tmp_condition_result_119;
        int tmp_truth_name_66;
        CHECK_OBJECT(var_onionstudios_url);
        tmp_truth_name_66 = CHECK_IF_TRUE(var_onionstudios_url);
        if (tmp_truth_name_66 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3052;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_119 = tmp_truth_name_66 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_119 == NUITKA_BOOL_TRUE) {
            goto branch_yes_117;
        } else {
            goto branch_no_117;
        }
    }
    branch_yes_117:;
    {
        PyObject *tmp_called_instance_189;
        PyObject *tmp_args_element_value_322;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3053;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_189 = par_self;
        CHECK_OBJECT(var_onionstudios_url);
        tmp_args_element_value_322 = var_onionstudios_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3053;
        tmp_return_value = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_189, mod_consts[87], tmp_args_element_value_322);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3053;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_117:;
    {
        PyObject *tmp_assign_source_144;
        PyObject *tmp_called_instance_190;
        PyObject *tmp_args_element_value_323;
        tmp_called_instance_190 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[366]);

        if (unlikely(tmp_called_instance_190 == NULL)) {
            tmp_called_instance_190 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[366]);
        }

        if (tmp_called_instance_190 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3056;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_323 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3056;
        tmp_assign_source_144 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_190, mod_consts[228], tmp_args_element_value_323);
        if (tmp_assign_source_144 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3056;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_viewlift_url == NULL);
        var_viewlift_url = tmp_assign_source_144;
    }
    {
        nuitka_bool tmp_condition_result_120;
        int tmp_truth_name_67;
        CHECK_OBJECT(var_viewlift_url);
        tmp_truth_name_67 = CHECK_IF_TRUE(var_viewlift_url);
        if (tmp_truth_name_67 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3057;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_120 = tmp_truth_name_67 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_120 == NUITKA_BOOL_TRUE) {
            goto branch_yes_118;
        } else {
            goto branch_no_118;
        }
    }
    branch_yes_118:;
    {
        PyObject *tmp_called_instance_191;
        PyObject *tmp_args_element_value_324;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3058;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_191 = par_self;
        CHECK_OBJECT(var_viewlift_url);
        tmp_args_element_value_324 = var_viewlift_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3058;
        tmp_return_value = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_191, mod_consts[87], tmp_args_element_value_324);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3058;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_118:;
    {
        PyObject *tmp_assign_source_145;
        PyObject *tmp_called_instance_192;
        PyObject *tmp_args_element_value_325;
        tmp_called_instance_192 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[367]);

        if (unlikely(tmp_called_instance_192 == NULL)) {
            tmp_called_instance_192 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[367]);
        }

        if (tmp_called_instance_192 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3061;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_325 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3061;
        tmp_assign_source_145 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_192, mod_consts[213], tmp_args_element_value_325);
        if (tmp_assign_source_145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3061;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_jwplatform_urls == NULL);
        var_jwplatform_urls = tmp_assign_source_145;
    }
    {
        nuitka_bool tmp_condition_result_121;
        int tmp_truth_name_68;
        CHECK_OBJECT(var_jwplatform_urls);
        tmp_truth_name_68 = CHECK_IF_TRUE(var_jwplatform_urls);
        if (tmp_truth_name_68 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3062;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_121 = tmp_truth_name_68 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_121 == NUITKA_BOOL_TRUE) {
            goto branch_yes_119;
        } else {
            goto branch_no_119;
        }
    }
    branch_yes_119:;
    {
        PyObject *tmp_called_value_129;
        PyObject *tmp_expression_value_141;
        PyObject *tmp_kw_call_arg_value_0_28;
        PyObject *tmp_kw_call_arg_value_1_26;
        PyObject *tmp_kw_call_arg_value_2_24;
        PyObject *tmp_kw_call_dict_value_0_28;
        PyObject *tmp_called_instance_193;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3063;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_141 = par_self;
        tmp_called_value_129 = LOOKUP_ATTRIBUTE(tmp_expression_value_141, mod_consts[214]);
        if (tmp_called_value_129 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3063;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_jwplatform_urls);
        tmp_kw_call_arg_value_0_28 = var_jwplatform_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_26 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_24 = var_video_title;
        tmp_called_instance_193 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[367]);

        if (unlikely(tmp_called_instance_193 == NULL)) {
            tmp_called_instance_193 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[367]);
        }

        if (tmp_called_instance_193 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_129);

            exception_lineno = 3063;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3063;
        tmp_kw_call_dict_value_0_28 = CALL_METHOD_NO_ARGS(tmp_called_instance_193, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_129);

            exception_lineno = 3063;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3063;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_28, tmp_kw_call_arg_value_1_26, tmp_kw_call_arg_value_2_24};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_28};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_129, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_129);
        Py_DECREF(tmp_kw_call_dict_value_0_28);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3063;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_119:;
    {
        PyObject *tmp_assign_source_146;
        PyObject *tmp_called_instance_194;
        PyObject *tmp_args_element_value_326;
        tmp_called_instance_194 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[368]);

        if (unlikely(tmp_called_instance_194 == NULL)) {
            tmp_called_instance_194 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[368]);
        }

        if (tmp_called_instance_194 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3066;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_326 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3066;
        tmp_assign_source_146 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_194, mod_consts[228], tmp_args_element_value_326);
        if (tmp_assign_source_146 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3066;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_digiteka_url == NULL);
        var_digiteka_url = tmp_assign_source_146;
    }
    {
        nuitka_bool tmp_condition_result_122;
        int tmp_truth_name_69;
        CHECK_OBJECT(var_digiteka_url);
        tmp_truth_name_69 = CHECK_IF_TRUE(var_digiteka_url);
        if (tmp_truth_name_69 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3067;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_122 = tmp_truth_name_69 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_122 == NUITKA_BOOL_TRUE) {
            goto branch_yes_120;
        } else {
            goto branch_no_120;
        }
    }
    branch_yes_120:;
    {
        PyObject *tmp_called_value_130;
        PyObject *tmp_expression_value_142;
        PyObject *tmp_args_element_value_327;
        PyObject *tmp_called_instance_195;
        PyObject *tmp_args_element_value_328;
        PyObject *tmp_args_element_value_329;
        PyObject *tmp_called_instance_196;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3068;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_142 = par_self;
        tmp_called_value_130 = LOOKUP_ATTRIBUTE(tmp_expression_value_142, mod_consts[87]);
        if (tmp_called_value_130 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3068;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_130);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3068;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_195 = par_self;
        CHECK_OBJECT(var_digiteka_url);
        tmp_args_element_value_328 = var_digiteka_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3068;
        tmp_args_element_value_327 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_195, mod_consts[328], tmp_args_element_value_328);
        if (tmp_args_element_value_327 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_130);

            exception_lineno = 3068;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_instance_196 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[368]);

        if (unlikely(tmp_called_instance_196 == NULL)) {
            tmp_called_instance_196 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[368]);
        }

        if (tmp_called_instance_196 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_130);
            Py_DECREF(tmp_args_element_value_327);

            exception_lineno = 3068;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3068;
        tmp_args_element_value_329 = CALL_METHOD_NO_ARGS(tmp_called_instance_196, mod_consts[210]);
        if (tmp_args_element_value_329 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_130);
            Py_DECREF(tmp_args_element_value_327);

            exception_lineno = 3068;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3068;
        {
            PyObject *call_args[] = {tmp_args_element_value_327, tmp_args_element_value_329};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_130, call_args);
        }

        Py_DECREF(tmp_called_value_130);
        Py_DECREF(tmp_args_element_value_327);
        Py_DECREF(tmp_args_element_value_329);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3068;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_120:;
    {
        PyObject *tmp_assign_source_147;
        PyObject *tmp_called_instance_197;
        PyObject *tmp_args_element_value_330;
        tmp_called_instance_197 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[369]);

        if (unlikely(tmp_called_instance_197 == NULL)) {
            tmp_called_instance_197 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[369]);
        }

        if (tmp_called_instance_197 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3071;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_330 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3071;
        tmp_assign_source_147 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_197, mod_consts[228], tmp_args_element_value_330);
        if (tmp_assign_source_147 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3071;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_arkena_url == NULL);
        var_arkena_url = tmp_assign_source_147;
    }
    {
        nuitka_bool tmp_condition_result_123;
        int tmp_truth_name_70;
        CHECK_OBJECT(var_arkena_url);
        tmp_truth_name_70 = CHECK_IF_TRUE(var_arkena_url);
        if (tmp_truth_name_70 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3072;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_123 = tmp_truth_name_70 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_123 == NUITKA_BOOL_TRUE) {
            goto branch_yes_121;
        } else {
            goto branch_no_121;
        }
    }
    branch_yes_121:;
    {
        PyObject *tmp_called_value_131;
        PyObject *tmp_expression_value_143;
        PyObject *tmp_args_element_value_331;
        PyObject *tmp_args_element_value_332;
        PyObject *tmp_called_instance_198;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3073;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_143 = par_self;
        tmp_called_value_131 = LOOKUP_ATTRIBUTE(tmp_expression_value_143, mod_consts[87]);
        if (tmp_called_value_131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3073;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_arkena_url);
        tmp_args_element_value_331 = var_arkena_url;
        tmp_called_instance_198 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[369]);

        if (unlikely(tmp_called_instance_198 == NULL)) {
            tmp_called_instance_198 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[369]);
        }

        if (tmp_called_instance_198 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_131);

            exception_lineno = 3073;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3073;
        tmp_args_element_value_332 = CALL_METHOD_NO_ARGS(tmp_called_instance_198, mod_consts[210]);
        if (tmp_args_element_value_332 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_131);

            exception_lineno = 3073;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3073;
        {
            PyObject *call_args[] = {tmp_args_element_value_331, tmp_args_element_value_332};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_131, call_args);
        }

        Py_DECREF(tmp_called_value_131);
        Py_DECREF(tmp_args_element_value_332);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3073;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_121:;
    {
        PyObject *tmp_assign_source_148;
        PyObject *tmp_called_instance_199;
        PyObject *tmp_args_element_value_333;
        tmp_called_instance_199 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[370]);

        if (unlikely(tmp_called_instance_199 == NULL)) {
            tmp_called_instance_199 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[370]);
        }

        if (tmp_called_instance_199 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3076;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_333 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3076;
        tmp_assign_source_148 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_199, mod_consts[228], tmp_args_element_value_333);
        if (tmp_assign_source_148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3076;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_piksel_url == NULL);
        var_piksel_url = tmp_assign_source_148;
    }
    {
        nuitka_bool tmp_condition_result_124;
        int tmp_truth_name_71;
        CHECK_OBJECT(var_piksel_url);
        tmp_truth_name_71 = CHECK_IF_TRUE(var_piksel_url);
        if (tmp_truth_name_71 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3077;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_124 = tmp_truth_name_71 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_124 == NUITKA_BOOL_TRUE) {
            goto branch_yes_122;
        } else {
            goto branch_no_122;
        }
    }
    branch_yes_122:;
    {
        PyObject *tmp_called_value_132;
        PyObject *tmp_expression_value_144;
        PyObject *tmp_args_element_value_334;
        PyObject *tmp_args_element_value_335;
        PyObject *tmp_called_instance_200;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3078;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_144 = par_self;
        tmp_called_value_132 = LOOKUP_ATTRIBUTE(tmp_expression_value_144, mod_consts[87]);
        if (tmp_called_value_132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3078;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_piksel_url);
        tmp_args_element_value_334 = var_piksel_url;
        tmp_called_instance_200 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[370]);

        if (unlikely(tmp_called_instance_200 == NULL)) {
            tmp_called_instance_200 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[370]);
        }

        if (tmp_called_instance_200 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_132);

            exception_lineno = 3078;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3078;
        tmp_args_element_value_335 = CALL_METHOD_NO_ARGS(tmp_called_instance_200, mod_consts[210]);
        if (tmp_args_element_value_335 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_132);

            exception_lineno = 3078;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3078;
        {
            PyObject *call_args[] = {tmp_args_element_value_334, tmp_args_element_value_335};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_132, call_args);
        }

        Py_DECREF(tmp_called_value_132);
        Py_DECREF(tmp_args_element_value_335);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3078;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_122:;
    {
        PyObject *tmp_assign_source_149;
        PyObject *tmp_called_instance_201;
        PyObject *tmp_args_element_value_336;
        PyObject *tmp_args_element_value_337;
        tmp_called_instance_201 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[371]);

        if (unlikely(tmp_called_instance_201 == NULL)) {
            tmp_called_instance_201 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[371]);
        }

        if (tmp_called_instance_201 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3081;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_336 = Nuitka_Cell_GET(var_webpage);
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_337 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3081;
        {
            PyObject *call_args[] = {tmp_args_element_value_336, tmp_args_element_value_337};
            tmp_assign_source_149 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_201,
                mod_consts[213],
                call_args
            );
        }

        if (tmp_assign_source_149 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3081;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_limelight_urls == NULL);
        var_limelight_urls = tmp_assign_source_149;
    }
    {
        nuitka_bool tmp_condition_result_125;
        int tmp_truth_name_72;
        CHECK_OBJECT(var_limelight_urls);
        tmp_truth_name_72 = CHECK_IF_TRUE(var_limelight_urls);
        if (tmp_truth_name_72 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3082;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_125 = tmp_truth_name_72 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_125 == NUITKA_BOOL_TRUE) {
            goto branch_yes_123;
        } else {
            goto branch_no_123;
        }
    }
    branch_yes_123:;
    {
        PyObject *tmp_called_instance_202;
        PyObject *tmp_args_element_value_338;
        PyObject *tmp_args_element_value_339;
        PyObject *tmp_args_element_value_340;
        PyObject *tmp_args_element_value_341;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3083;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_202 = par_self;
        CHECK_OBJECT(var_limelight_urls);
        tmp_args_element_value_338 = var_limelight_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_339 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_340 = var_video_title;
        CHECK_OBJECT(var_video_description);
        tmp_args_element_value_341 = var_video_description;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3083;
        {
            PyObject *call_args[] = {tmp_args_element_value_338, tmp_args_element_value_339, tmp_args_element_value_340, tmp_args_element_value_341};
            tmp_return_value = CALL_METHOD_WITH_ARGS4(
                tmp_called_instance_202,
                mod_consts[181],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3083;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_123:;
    {
        PyObject *tmp_assign_source_150;
        PyObject *tmp_called_value_133;
        PyObject *tmp_expression_value_145;
        PyObject *tmp_args_element_value_342;
        PyObject *tmp_args_element_value_343;
        PyObject *tmp_args_element_value_344;
        tmp_expression_value_145 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[372]);

        if (unlikely(tmp_expression_value_145 == NULL)) {
            tmp_expression_value_145 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[372]);
        }

        if (tmp_expression_value_145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3087;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_133 = LOOKUP_ATTRIBUTE(tmp_expression_value_145, mod_consts[213]);
        if (tmp_called_value_133 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3087;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_133);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3087;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_value_342 = par_self;
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_343 = Nuitka_Cell_GET(var_webpage);
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_344 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3087;
        {
            PyObject *call_args[] = {tmp_args_element_value_342, tmp_args_element_value_343, tmp_args_element_value_344};
            tmp_assign_source_150 = CALL_FUNCTION_WITH_ARGS3(tmp_called_value_133, call_args);
        }

        Py_DECREF(tmp_called_value_133);
        if (tmp_assign_source_150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3087;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_anvato_urls == NULL);
        var_anvato_urls = tmp_assign_source_150;
    }
    {
        nuitka_bool tmp_condition_result_126;
        int tmp_truth_name_73;
        CHECK_OBJECT(var_anvato_urls);
        tmp_truth_name_73 = CHECK_IF_TRUE(var_anvato_urls);
        if (tmp_truth_name_73 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3088;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_126 = tmp_truth_name_73 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_126 == NUITKA_BOOL_TRUE) {
            goto branch_yes_124;
        } else {
            goto branch_no_124;
        }
    }
    branch_yes_124:;
    {
        PyObject *tmp_called_instance_203;
        PyObject *tmp_args_element_value_345;
        PyObject *tmp_args_element_value_346;
        PyObject *tmp_args_element_value_347;
        PyObject *tmp_args_element_value_348;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3089;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_203 = par_self;
        CHECK_OBJECT(var_anvato_urls);
        tmp_args_element_value_345 = var_anvato_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_346 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_347 = var_video_title;
        CHECK_OBJECT(var_video_description);
        tmp_args_element_value_348 = var_video_description;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3089;
        {
            PyObject *call_args[] = {tmp_args_element_value_345, tmp_args_element_value_346, tmp_args_element_value_347, tmp_args_element_value_348};
            tmp_return_value = CALL_METHOD_WITH_ARGS4(
                tmp_called_instance_203,
                mod_consts[181],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3089;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_124:;
    {
        PyObject *tmp_assign_source_151;
        PyObject *tmp_called_instance_204;
        PyObject *tmp_args_element_value_349;
        PyObject *tmp_args_element_value_350;
        tmp_called_instance_204 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_204 == NULL)) {
            tmp_called_instance_204 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_204 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3093;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_349 = mod_consts[373];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_350 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3093;
        {
            PyObject *call_args[] = {tmp_args_element_value_349, tmp_args_element_value_350};
            tmp_assign_source_151 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_204,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_151 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3093;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_151;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_127;
        PyObject *tmp_cmp_expr_left_49;
        PyObject *tmp_cmp_expr_right_49;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_49 = var_mobj;
        tmp_cmp_expr_right_49 = Py_None;
        tmp_condition_result_127 = (tmp_cmp_expr_left_49 != tmp_cmp_expr_right_49) ? true : false;
        if (tmp_condition_result_127 != false) {
            goto branch_yes_125;
        } else {
            goto branch_no_125;
        }
    }
    branch_yes_125:;
    {
        PyObject *tmp_called_value_134;
        PyObject *tmp_expression_value_146;
        PyObject *tmp_args_element_value_351;
        PyObject *tmp_called_value_135;
        PyObject *tmp_expression_value_147;
        PyObject *tmp_args_element_value_352;
        PyObject *tmp_called_value_136;
        PyObject *tmp_args_element_value_353;
        PyObject *tmp_called_instance_205;
        PyObject *tmp_args_element_value_354;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3097;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_146 = par_self;
        tmp_called_value_134 = LOOKUP_ATTRIBUTE(tmp_expression_value_146, mod_consts[87]);
        if (tmp_called_value_134 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3097;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_134);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3098;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_147 = par_self;
        tmp_called_value_135 = LOOKUP_ATTRIBUTE(tmp_expression_value_147, mod_consts[328]);
        if (tmp_called_value_135 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_134);

            exception_lineno = 3098;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_136 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[237]);

        if (unlikely(tmp_called_value_136 == NULL)) {
            tmp_called_value_136 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[237]);
        }

        if (tmp_called_value_136 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_134);
            Py_DECREF(tmp_called_value_135);

            exception_lineno = 3098;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_205 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3098;
        tmp_args_element_value_353 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_205,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[246], 0)
        );

        if (tmp_args_element_value_353 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_134);
            Py_DECREF(tmp_called_value_135);

            exception_lineno = 3098;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3098;
        tmp_args_element_value_352 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_136, tmp_args_element_value_353);
        Py_DECREF(tmp_args_element_value_353);
        if (tmp_args_element_value_352 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_134);
            Py_DECREF(tmp_called_value_135);

            exception_lineno = 3098;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3098;
        tmp_args_element_value_351 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_135, tmp_args_element_value_352);
        Py_DECREF(tmp_called_value_135);
        Py_DECREF(tmp_args_element_value_352);
        if (tmp_args_element_value_351 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_134);

            exception_lineno = 3098;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_354 = mod_consts[374];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3097;
        {
            PyObject *call_args[] = {tmp_args_element_value_351, tmp_args_element_value_354};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_134, call_args);
        }

        Py_DECREF(tmp_called_value_134);
        Py_DECREF(tmp_args_element_value_351);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3097;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_125:;
    {
        PyObject *tmp_assign_source_152;
        PyObject *tmp_called_instance_206;
        PyObject *tmp_args_element_value_355;
        PyObject *tmp_args_element_value_356;
        tmp_called_instance_206 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_206 == NULL)) {
            tmp_called_instance_206 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_206 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3102;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_355 = mod_consts[375];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_356 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3102;
        {
            PyObject *call_args[] = {tmp_args_element_value_355, tmp_args_element_value_356};
            tmp_assign_source_152 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_206,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_152 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3102;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_152;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_128;
        PyObject *tmp_cmp_expr_left_50;
        PyObject *tmp_cmp_expr_right_50;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_50 = var_mobj;
        tmp_cmp_expr_right_50 = Py_None;
        tmp_condition_result_128 = (tmp_cmp_expr_left_50 != tmp_cmp_expr_right_50) ? true : false;
        if (tmp_condition_result_128 != false) {
            goto branch_yes_126;
        } else {
            goto branch_no_126;
        }
    }
    branch_yes_126:;
    {
        PyObject *tmp_called_value_137;
        PyObject *tmp_expression_value_148;
        PyObject *tmp_args_element_value_357;
        PyObject *tmp_called_value_138;
        PyObject *tmp_expression_value_149;
        PyObject *tmp_args_element_value_358;
        PyObject *tmp_called_value_139;
        PyObject *tmp_args_element_value_359;
        PyObject *tmp_called_instance_207;
        PyObject *tmp_args_element_value_360;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3106;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_148 = par_self;
        tmp_called_value_137 = LOOKUP_ATTRIBUTE(tmp_expression_value_148, mod_consts[87]);
        if (tmp_called_value_137 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3106;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_137);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3107;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_149 = par_self;
        tmp_called_value_138 = LOOKUP_ATTRIBUTE(tmp_expression_value_149, mod_consts[328]);
        if (tmp_called_value_138 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_137);

            exception_lineno = 3107;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_139 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[237]);

        if (unlikely(tmp_called_value_139 == NULL)) {
            tmp_called_value_139 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[237]);
        }

        if (tmp_called_value_139 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_137);
            Py_DECREF(tmp_called_value_138);

            exception_lineno = 3107;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_207 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3107;
        tmp_args_element_value_359 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_207,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[246], 0)
        );

        if (tmp_args_element_value_359 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_137);
            Py_DECREF(tmp_called_value_138);

            exception_lineno = 3107;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3107;
        tmp_args_element_value_358 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_139, tmp_args_element_value_359);
        Py_DECREF(tmp_args_element_value_359);
        if (tmp_args_element_value_358 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_137);
            Py_DECREF(tmp_called_value_138);

            exception_lineno = 3107;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3107;
        tmp_args_element_value_357 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_138, tmp_args_element_value_358);
        Py_DECREF(tmp_called_value_138);
        Py_DECREF(tmp_args_element_value_358);
        if (tmp_args_element_value_357 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_137);

            exception_lineno = 3107;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_360 = mod_consts[376];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3106;
        {
            PyObject *call_args[] = {tmp_args_element_value_357, tmp_args_element_value_360};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_137, call_args);
        }

        Py_DECREF(tmp_called_value_137);
        Py_DECREF(tmp_args_element_value_357);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3106;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_126:;
    {
        PyObject *tmp_assign_source_153;
        PyObject *tmp_called_instance_208;
        PyObject *tmp_args_element_value_361;
        PyObject *tmp_args_element_value_362;
        tmp_called_instance_208 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_208 == NULL)) {
            tmp_called_instance_208 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_208 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3110;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_361 = mod_consts[377];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_362 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3110;
        {
            PyObject *call_args[] = {tmp_args_element_value_361, tmp_args_element_value_362};
            tmp_assign_source_153 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_208,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3110;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_153;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_129;
        PyObject *tmp_cmp_expr_left_51;
        PyObject *tmp_cmp_expr_right_51;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_51 = var_mobj;
        tmp_cmp_expr_right_51 = Py_None;
        tmp_condition_result_129 = (tmp_cmp_expr_left_51 != tmp_cmp_expr_right_51) ? true : false;
        if (tmp_condition_result_129 != false) {
            goto branch_yes_127;
        } else {
            goto branch_no_127;
        }
    }
    branch_yes_127:;
    {
        PyObject *tmp_called_value_140;
        PyObject *tmp_expression_value_150;
        PyObject *tmp_args_element_value_363;
        PyObject *tmp_called_value_141;
        PyObject *tmp_expression_value_151;
        PyObject *tmp_args_element_value_364;
        PyObject *tmp_called_value_142;
        PyObject *tmp_args_element_value_365;
        PyObject *tmp_called_instance_209;
        PyObject *tmp_args_element_value_366;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3114;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_150 = par_self;
        tmp_called_value_140 = LOOKUP_ATTRIBUTE(tmp_expression_value_150, mod_consts[87]);
        if (tmp_called_value_140 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3114;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_140);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3115;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_151 = par_self;
        tmp_called_value_141 = LOOKUP_ATTRIBUTE(tmp_expression_value_151, mod_consts[328]);
        if (tmp_called_value_141 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_140);

            exception_lineno = 3115;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_142 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[237]);

        if (unlikely(tmp_called_value_142 == NULL)) {
            tmp_called_value_142 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[237]);
        }

        if (tmp_called_value_142 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_140);
            Py_DECREF(tmp_called_value_141);

            exception_lineno = 3115;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_209 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3115;
        tmp_args_element_value_365 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_209,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[14], 0)
        );

        if (tmp_args_element_value_365 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_140);
            Py_DECREF(tmp_called_value_141);

            exception_lineno = 3115;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3115;
        tmp_args_element_value_364 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_142, tmp_args_element_value_365);
        Py_DECREF(tmp_args_element_value_365);
        if (tmp_args_element_value_364 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_140);
            Py_DECREF(tmp_called_value_141);

            exception_lineno = 3115;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3115;
        tmp_args_element_value_363 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_141, tmp_args_element_value_364);
        Py_DECREF(tmp_called_value_141);
        Py_DECREF(tmp_args_element_value_364);
        if (tmp_args_element_value_363 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_140);

            exception_lineno = 3115;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_366 = mod_consts[378];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3114;
        {
            PyObject *call_args[] = {tmp_args_element_value_363, tmp_args_element_value_366};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_140, call_args);
        }

        Py_DECREF(tmp_called_value_140);
        Py_DECREF(tmp_args_element_value_363);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3114;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_127:;
    {
        PyObject *tmp_assign_source_154;
        PyObject *tmp_called_instance_210;
        PyObject *tmp_args_element_value_367;
        PyObject *tmp_args_element_value_368;
        tmp_called_instance_210 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_210 == NULL)) {
            tmp_called_instance_210 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_210 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3118;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_367 = mod_consts[379];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_368 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3118;
        {
            PyObject *call_args[] = {tmp_args_element_value_367, tmp_args_element_value_368};
            tmp_assign_source_154 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_210,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3118;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_154;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_130;
        PyObject *tmp_cmp_expr_left_52;
        PyObject *tmp_cmp_expr_right_52;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_52 = var_mobj;
        tmp_cmp_expr_right_52 = Py_None;
        tmp_condition_result_130 = (tmp_cmp_expr_left_52 != tmp_cmp_expr_right_52) ? true : false;
        if (tmp_condition_result_130 != false) {
            goto branch_yes_128;
        } else {
            goto branch_no_128;
        }
    }
    branch_yes_128:;
    {
        PyObject *tmp_assign_source_155;
        PyObject *tmp_dict_key_12;
        PyObject *tmp_dict_value_12;
        tmp_dict_key_12 = mod_consts[31];
        tmp_dict_value_12 = mod_consts[32];
        tmp_assign_source_155 = _PyDict_NewPresized( 6 );
        {
            PyObject *tmp_called_value_143;
            PyObject *tmp_expression_value_152;
            PyObject *tmp_args_element_value_369;
            PyObject *tmp_called_value_144;
            PyObject *tmp_args_element_value_370;
            PyObject *tmp_called_instance_211;
            tmp_res = PyDict_SetItem(tmp_assign_source_155, tmp_dict_key_12, tmp_dict_value_12);
            assert(!(tmp_res != 0));
            tmp_dict_key_12 = mod_consts[33];
            if (par_self == NULL) {

                FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 3131;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_5;
            }

            tmp_expression_value_152 = par_self;
            tmp_called_value_143 = LOOKUP_ATTRIBUTE(tmp_expression_value_152, mod_consts[328]);
            if (tmp_called_value_143 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3131;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_5;
            }
            tmp_called_value_144 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[237]);

            if (unlikely(tmp_called_value_144 == NULL)) {
                tmp_called_value_144 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[237]);
            }

            if (tmp_called_value_144 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_value_143);

                exception_lineno = 3131;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_5;
            }
            CHECK_OBJECT(var_mobj);
            tmp_called_instance_211 = var_mobj;
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3131;
            tmp_args_element_value_370 = CALL_METHOD_WITH_SINGLE_ARG(
                tmp_called_instance_211,
                mod_consts[137],
                PyTuple_GET_ITEM(mod_consts[14], 0)
            );

            if (tmp_args_element_value_370 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_value_143);

                exception_lineno = 3131;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_5;
            }
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3131;
            tmp_args_element_value_369 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_144, tmp_args_element_value_370);
            Py_DECREF(tmp_args_element_value_370);
            if (tmp_args_element_value_369 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_value_143);

                exception_lineno = 3131;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_5;
            }
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3131;
            tmp_dict_value_12 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_143, tmp_args_element_value_369);
            Py_DECREF(tmp_called_value_143);
            Py_DECREF(tmp_args_element_value_369);
            if (tmp_dict_value_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3131;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_5;
            }
            tmp_res = PyDict_SetItem(tmp_assign_source_155, tmp_dict_key_12, tmp_dict_value_12);
            Py_DECREF(tmp_dict_value_12);
            assert(!(tmp_res != 0));
            tmp_dict_key_12 = mod_consts[34];
            CHECK_OBJECT(var_video_title);
            tmp_dict_value_12 = var_video_title;
            tmp_res = PyDict_SetItem(tmp_assign_source_155, tmp_dict_key_12, tmp_dict_value_12);
            assert(!(tmp_res != 0));
            tmp_dict_key_12 = mod_consts[36];
            CHECK_OBJECT(var_video_description);
            tmp_dict_value_12 = var_video_description;
            tmp_res = PyDict_SetItem(tmp_assign_source_155, tmp_dict_key_12, tmp_dict_value_12);
            assert(!(tmp_res != 0));
            tmp_dict_key_12 = mod_consts[44];
            CHECK_OBJECT(var_video_thumbnail);
            tmp_dict_value_12 = var_video_thumbnail;
            tmp_res = PyDict_SetItem(tmp_assign_source_155, tmp_dict_key_12, tmp_dict_value_12);
            assert(!(tmp_res != 0));
            tmp_dict_key_12 = mod_consts[241];
            CHECK_OBJECT(var_video_uploader);
            tmp_dict_value_12 = var_video_uploader;
            tmp_res = PyDict_SetItem(tmp_assign_source_155, tmp_dict_key_12, tmp_dict_value_12);
            assert(!(tmp_res != 0));
        }
        goto dict_build_noexception_5;
        // Exception handling pass through code for dict_build:
        dict_build_exception_5:;
        Py_DECREF(tmp_assign_source_155);
        goto frame_exception_exit_1;
        // Finished with no exception for dict_build:
        dict_build_noexception_5:;
        assert(var_info == NULL);
        var_info = tmp_assign_source_155;
    }
    {
        PyObject *tmp_assign_source_156;
        PyObject *tmp_called_instance_212;
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_212 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3137;
        tmp_assign_source_156 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_212,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[380], 0)
        );

        if (tmp_assign_source_156 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3137;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_video_id;
            assert(old != NULL);
            var_video_id = tmp_assign_source_156;
            Py_DECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_131;
        int tmp_truth_name_74;
        CHECK_OBJECT(var_video_id);
        tmp_truth_name_74 = CHECK_IF_TRUE(var_video_id);
        if (tmp_truth_name_74 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3138;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_131 = tmp_truth_name_74 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_131 == NUITKA_BOOL_TRUE) {
            goto branch_yes_129;
        } else {
            goto branch_no_129;
        }
    }
    branch_yes_129:;
    {
        PyObject *tmp_dict_arg_value_2;
        PyObject *tmp_iterable_value_2;
        PyObject *tmp_dict_key_13;
        PyObject *tmp_dict_value_13;
        CHECK_OBJECT(var_info);
        tmp_dict_arg_value_2 = var_info;
        tmp_dict_key_13 = mod_consts[210];
        tmp_dict_value_13 = mod_consts[381];
        tmp_iterable_value_2 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_iterable_value_2, tmp_dict_key_13, tmp_dict_value_13);
        assert(!(tmp_res != 0));
        tmp_dict_key_13 = mod_consts[58];
        CHECK_OBJECT(var_video_id);
        tmp_dict_value_13 = var_video_id;
        tmp_res = PyDict_SetItem(tmp_iterable_value_2, tmp_dict_key_13, tmp_dict_value_13);
        assert(!(tmp_res != 0));
        assert(PyDict_Check(tmp_dict_arg_value_2));
            tmp_res = PyDict_Merge(tmp_dict_arg_value_2, tmp_iterable_value_2, 1);

        Py_DECREF(tmp_iterable_value_2);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3139;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
    }
    goto branch_end_129;
    branch_no_129:;
    {
        PyObject *tmp_dict_arg_value_3;
        PyObject *tmp_iterable_value_3;
        PyObject *tmp_dict_key_14;
        PyObject *tmp_dict_value_14;
        CHECK_OBJECT(var_info);
        tmp_dict_arg_value_3 = var_info;
        tmp_dict_key_14 = mod_consts[210];
        tmp_dict_value_14 = mod_consts[382];
        tmp_iterable_value_3 = _PyDict_NewPresized( 2 );
        {
            PyObject *tmp_called_instance_213;
            tmp_res = PyDict_SetItem(tmp_iterable_value_3, tmp_dict_key_14, tmp_dict_value_14);
            assert(!(tmp_res != 0));
            tmp_dict_key_14 = mod_consts[58];
            CHECK_OBJECT(var_mobj);
            tmp_called_instance_213 = var_mobj;
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3146;
            tmp_dict_value_14 = CALL_METHOD_WITH_SINGLE_ARG(
                tmp_called_instance_213,
                mod_consts[137],
                PyTuple_GET_ITEM(mod_consts[383], 0)
            );

            if (tmp_dict_value_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3146;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_6;
            }
            tmp_res = PyDict_SetItem(tmp_iterable_value_3, tmp_dict_key_14, tmp_dict_value_14);
            Py_DECREF(tmp_dict_value_14);
            assert(!(tmp_res != 0));
        }
        goto dict_build_noexception_6;
        // Exception handling pass through code for dict_build:
        dict_build_exception_6:;
        Py_DECREF(tmp_iterable_value_3);
        goto frame_exception_exit_1;
        // Finished with no exception for dict_build:
        dict_build_noexception_6:;
        assert(PyDict_Check(tmp_dict_arg_value_3));
            tmp_res = PyDict_Merge(tmp_dict_arg_value_3, tmp_iterable_value_3, 1);

        Py_DECREF(tmp_iterable_value_3);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3144;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
    }
    branch_end_129:;
    if (var_info == NULL) {

        FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[384]);
        exception_tb = NULL;
        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
        CHAIN_EXCEPTION(exception_value);

        exception_lineno = 3148;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto frame_exception_exit_1;
    }

    tmp_return_value = var_info;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_128:;
    {
        PyObject *tmp_assign_source_157;
        PyObject *tmp_called_instance_214;
        PyObject *tmp_args_element_value_371;
        tmp_called_instance_214 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[385]);

        if (unlikely(tmp_called_instance_214 == NULL)) {
            tmp_called_instance_214 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[385]);
        }

        if (tmp_called_instance_214 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3151;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_371 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3151;
        tmp_assign_source_157 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_214, mod_consts[386], tmp_args_element_value_371);
        if (tmp_assign_source_157 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3151;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_instagram_embed_url == NULL);
        var_instagram_embed_url = tmp_assign_source_157;
    }
    {
        bool tmp_condition_result_132;
        PyObject *tmp_cmp_expr_left_53;
        PyObject *tmp_cmp_expr_right_53;
        CHECK_OBJECT(var_instagram_embed_url);
        tmp_cmp_expr_left_53 = var_instagram_embed_url;
        tmp_cmp_expr_right_53 = Py_None;
        tmp_condition_result_132 = (tmp_cmp_expr_left_53 != tmp_cmp_expr_right_53) ? true : false;
        if (tmp_condition_result_132 != false) {
            goto branch_yes_130;
        } else {
            goto branch_no_130;
        }
    }
    branch_yes_130:;
    {
        PyObject *tmp_called_value_145;
        PyObject *tmp_expression_value_153;
        PyObject *tmp_args_element_value_372;
        PyObject *tmp_called_instance_215;
        PyObject *tmp_args_element_value_373;
        PyObject *tmp_args_element_value_374;
        PyObject *tmp_called_instance_216;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3153;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_153 = par_self;
        tmp_called_value_145 = LOOKUP_ATTRIBUTE(tmp_expression_value_153, mod_consts[87]);
        if (tmp_called_value_145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3153;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_145);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3154;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_215 = par_self;
        CHECK_OBJECT(var_instagram_embed_url);
        tmp_args_element_value_373 = var_instagram_embed_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3154;
        tmp_args_element_value_372 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_215, mod_consts[328], tmp_args_element_value_373);
        if (tmp_args_element_value_372 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_145);

            exception_lineno = 3154;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_instance_216 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[385]);

        if (unlikely(tmp_called_instance_216 == NULL)) {
            tmp_called_instance_216 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[385]);
        }

        if (tmp_called_instance_216 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_145);
            Py_DECREF(tmp_args_element_value_372);

            exception_lineno = 3154;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3154;
        tmp_args_element_value_374 = CALL_METHOD_NO_ARGS(tmp_called_instance_216, mod_consts[210]);
        if (tmp_args_element_value_374 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_145);
            Py_DECREF(tmp_args_element_value_372);

            exception_lineno = 3154;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3153;
        {
            PyObject *call_args[] = {tmp_args_element_value_372, tmp_args_element_value_374};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_145, call_args);
        }

        Py_DECREF(tmp_called_value_145);
        Py_DECREF(tmp_args_element_value_372);
        Py_DECREF(tmp_args_element_value_374);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3153;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_130:;
    {
        PyObject *tmp_assign_source_158;
        PyObject *tmp_called_instance_217;
        PyObject *tmp_args_element_value_375;
        tmp_called_instance_217 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[387]);

        if (unlikely(tmp_called_instance_217 == NULL)) {
            tmp_called_instance_217 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[387]);
        }

        if (tmp_called_instance_217 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3157;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_375 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3157;
        tmp_assign_source_158 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_217, mod_consts[228], tmp_args_element_value_375);
        if (tmp_assign_source_158 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3157;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_threeqsdn_url == NULL);
        var_threeqsdn_url = tmp_assign_source_158;
    }
    {
        nuitka_bool tmp_condition_result_133;
        int tmp_truth_name_75;
        CHECK_OBJECT(var_threeqsdn_url);
        tmp_truth_name_75 = CHECK_IF_TRUE(var_threeqsdn_url);
        if (tmp_truth_name_75 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3158;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_133 = tmp_truth_name_75 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_133 == NUITKA_BOOL_TRUE) {
            goto branch_yes_131;
        } else {
            goto branch_no_131;
        }
    }
    branch_yes_131:;
    {
        PyObject *tmp_dict_key_15;
        PyObject *tmp_dict_value_15;
        tmp_dict_key_15 = mod_consts[31];
        tmp_dict_value_15 = mod_consts[32];
        tmp_return_value = _PyDict_NewPresized( 7 );
        {
            PyObject *tmp_called_instance_218;
            PyObject *tmp_called_instance_219;
            PyObject *tmp_args_element_value_376;
            tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_15, tmp_dict_value_15);
            assert(!(tmp_res != 0));
            tmp_dict_key_15 = mod_consts[210];
            tmp_called_instance_218 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[387]);

            if (unlikely(tmp_called_instance_218 == NULL)) {
                tmp_called_instance_218 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[387]);
            }

            if (tmp_called_instance_218 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3161;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_7;
            }
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3161;
            tmp_dict_value_15 = CALL_METHOD_NO_ARGS(tmp_called_instance_218, mod_consts[210]);
            if (tmp_dict_value_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3161;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_7;
            }
            tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_15, tmp_dict_value_15);
            Py_DECREF(tmp_dict_value_15);
            assert(!(tmp_res != 0));
            tmp_dict_key_15 = mod_consts[33];
            if (par_self == NULL) {

                FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 3162;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_7;
            }

            tmp_called_instance_219 = par_self;
            CHECK_OBJECT(var_threeqsdn_url);
            tmp_args_element_value_376 = var_threeqsdn_url;
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3162;
            tmp_dict_value_15 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_219, mod_consts[328], tmp_args_element_value_376);
            if (tmp_dict_value_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3162;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_7;
            }
            tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_15, tmp_dict_value_15);
            Py_DECREF(tmp_dict_value_15);
            assert(!(tmp_res != 0));
            tmp_dict_key_15 = mod_consts[34];
            CHECK_OBJECT(var_video_title);
            tmp_dict_value_15 = var_video_title;
            tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_15, tmp_dict_value_15);
            assert(!(tmp_res != 0));
            tmp_dict_key_15 = mod_consts[36];
            CHECK_OBJECT(var_video_description);
            tmp_dict_value_15 = var_video_description;
            tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_15, tmp_dict_value_15);
            assert(!(tmp_res != 0));
            tmp_dict_key_15 = mod_consts[44];
            CHECK_OBJECT(var_video_thumbnail);
            tmp_dict_value_15 = var_video_thumbnail;
            tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_15, tmp_dict_value_15);
            assert(!(tmp_res != 0));
            tmp_dict_key_15 = mod_consts[241];
            CHECK_OBJECT(var_video_uploader);
            tmp_dict_value_15 = var_video_uploader;
            tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_15, tmp_dict_value_15);
            assert(!(tmp_res != 0));
        }
        goto dict_build_noexception_7;
        // Exception handling pass through code for dict_build:
        dict_build_exception_7:;
        Py_DECREF(tmp_return_value);
        goto frame_exception_exit_1;
        // Finished with no exception for dict_build:
        dict_build_noexception_7:;
        goto frame_return_exit_1;
    }
    branch_no_131:;
    {
        PyObject *tmp_assign_source_159;
        PyObject *tmp_called_instance_220;
        PyObject *tmp_args_element_value_377;
        tmp_called_instance_220 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[388]);

        if (unlikely(tmp_called_instance_220 == NULL)) {
            tmp_called_instance_220 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[388]);
        }

        if (tmp_called_instance_220 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3170;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_377 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3170;
        tmp_assign_source_159 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_220, mod_consts[228], tmp_args_element_value_377);
        if (tmp_assign_source_159 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3170;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vbox7_url == NULL);
        var_vbox7_url = tmp_assign_source_159;
    }
    {
        nuitka_bool tmp_condition_result_134;
        int tmp_truth_name_76;
        CHECK_OBJECT(var_vbox7_url);
        tmp_truth_name_76 = CHECK_IF_TRUE(var_vbox7_url);
        if (tmp_truth_name_76 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3171;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_134 = tmp_truth_name_76 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_134 == NUITKA_BOOL_TRUE) {
            goto branch_yes_132;
        } else {
            goto branch_no_132;
        }
    }
    branch_yes_132:;
    {
        PyObject *tmp_called_value_146;
        PyObject *tmp_expression_value_154;
        PyObject *tmp_args_element_value_378;
        PyObject *tmp_args_element_value_379;
        PyObject *tmp_called_instance_221;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3172;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_154 = par_self;
        tmp_called_value_146 = LOOKUP_ATTRIBUTE(tmp_expression_value_154, mod_consts[87]);
        if (tmp_called_value_146 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3172;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_vbox7_url);
        tmp_args_element_value_378 = var_vbox7_url;
        tmp_called_instance_221 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[388]);

        if (unlikely(tmp_called_instance_221 == NULL)) {
            tmp_called_instance_221 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[388]);
        }

        if (tmp_called_instance_221 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_146);

            exception_lineno = 3172;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3172;
        tmp_args_element_value_379 = CALL_METHOD_NO_ARGS(tmp_called_instance_221, mod_consts[210]);
        if (tmp_args_element_value_379 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_146);

            exception_lineno = 3172;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3172;
        {
            PyObject *call_args[] = {tmp_args_element_value_378, tmp_args_element_value_379};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_146, call_args);
        }

        Py_DECREF(tmp_called_value_146);
        Py_DECREF(tmp_args_element_value_379);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3172;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_132:;
    {
        PyObject *tmp_assign_source_160;
        PyObject *tmp_called_instance_222;
        PyObject *tmp_args_element_value_380;
        tmp_called_instance_222 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[389]);

        if (unlikely(tmp_called_instance_222 == NULL)) {
            tmp_called_instance_222 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[389]);
        }

        if (tmp_called_instance_222 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3175;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_380 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3175;
        tmp_assign_source_160 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_222, mod_consts[213], tmp_args_element_value_380);
        if (tmp_assign_source_160 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3175;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_dbtv_urls == NULL);
        var_dbtv_urls = tmp_assign_source_160;
    }
    {
        nuitka_bool tmp_condition_result_135;
        int tmp_truth_name_77;
        CHECK_OBJECT(var_dbtv_urls);
        tmp_truth_name_77 = CHECK_IF_TRUE(var_dbtv_urls);
        if (tmp_truth_name_77 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3176;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_135 = tmp_truth_name_77 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_135 == NUITKA_BOOL_TRUE) {
            goto branch_yes_133;
        } else {
            goto branch_no_133;
        }
    }
    branch_yes_133:;
    {
        PyObject *tmp_called_value_147;
        PyObject *tmp_expression_value_155;
        PyObject *tmp_kw_call_arg_value_0_29;
        PyObject *tmp_kw_call_arg_value_1_27;
        PyObject *tmp_kw_call_arg_value_2_25;
        PyObject *tmp_kw_call_dict_value_0_29;
        PyObject *tmp_called_instance_223;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3177;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_155 = par_self;
        tmp_called_value_147 = LOOKUP_ATTRIBUTE(tmp_expression_value_155, mod_consts[214]);
        if (tmp_called_value_147 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3177;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_dbtv_urls);
        tmp_kw_call_arg_value_0_29 = var_dbtv_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_27 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_25 = var_video_title;
        tmp_called_instance_223 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[389]);

        if (unlikely(tmp_called_instance_223 == NULL)) {
            tmp_called_instance_223 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[389]);
        }

        if (tmp_called_instance_223 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_147);

            exception_lineno = 3177;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3177;
        tmp_kw_call_dict_value_0_29 = CALL_METHOD_NO_ARGS(tmp_called_instance_223, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_147);

            exception_lineno = 3177;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3177;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_29, tmp_kw_call_arg_value_1_27, tmp_kw_call_arg_value_2_25};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_29};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_147, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_147);
        Py_DECREF(tmp_kw_call_dict_value_0_29);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3177;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_133:;
    {
        PyObject *tmp_assign_source_161;
        PyObject *tmp_called_instance_224;
        PyObject *tmp_args_element_value_381;
        tmp_called_instance_224 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[390]);

        if (unlikely(tmp_called_instance_224 == NULL)) {
            tmp_called_instance_224 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[390]);
        }

        if (tmp_called_instance_224 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3180;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_381 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3180;
        tmp_assign_source_161 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_224, mod_consts[213], tmp_args_element_value_381);
        if (tmp_assign_source_161 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3180;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_videa_urls == NULL);
        var_videa_urls = tmp_assign_source_161;
    }
    {
        nuitka_bool tmp_condition_result_136;
        int tmp_truth_name_78;
        CHECK_OBJECT(var_videa_urls);
        tmp_truth_name_78 = CHECK_IF_TRUE(var_videa_urls);
        if (tmp_truth_name_78 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3181;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_136 = tmp_truth_name_78 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_136 == NUITKA_BOOL_TRUE) {
            goto branch_yes_134;
        } else {
            goto branch_no_134;
        }
    }
    branch_yes_134:;
    {
        PyObject *tmp_called_value_148;
        PyObject *tmp_expression_value_156;
        PyObject *tmp_kw_call_arg_value_0_30;
        PyObject *tmp_kw_call_arg_value_1_28;
        PyObject *tmp_kw_call_arg_value_2_26;
        PyObject *tmp_kw_call_dict_value_0_30;
        PyObject *tmp_called_instance_225;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3182;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_156 = par_self;
        tmp_called_value_148 = LOOKUP_ATTRIBUTE(tmp_expression_value_156, mod_consts[214]);
        if (tmp_called_value_148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3182;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_videa_urls);
        tmp_kw_call_arg_value_0_30 = var_videa_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_28 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_26 = var_video_title;
        tmp_called_instance_225 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[390]);

        if (unlikely(tmp_called_instance_225 == NULL)) {
            tmp_called_instance_225 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[390]);
        }

        if (tmp_called_instance_225 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_148);

            exception_lineno = 3182;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3182;
        tmp_kw_call_dict_value_0_30 = CALL_METHOD_NO_ARGS(tmp_called_instance_225, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_148);

            exception_lineno = 3182;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3182;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_30, tmp_kw_call_arg_value_1_28, tmp_kw_call_arg_value_2_26};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_30};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_148, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_148);
        Py_DECREF(tmp_kw_call_dict_value_0_30);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3182;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_134:;
    {
        PyObject *tmp_assign_source_162;
        PyObject *tmp_called_instance_226;
        PyObject *tmp_args_element_value_382;
        tmp_called_instance_226 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[391]);

        if (unlikely(tmp_called_instance_226 == NULL)) {
            tmp_called_instance_226 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[391]);
        }

        if (tmp_called_instance_226 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3185;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_382 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3185;
        tmp_assign_source_162 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_226, mod_consts[213], tmp_args_element_value_382);
        if (tmp_assign_source_162 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3185;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_twentymin_urls == NULL);
        var_twentymin_urls = tmp_assign_source_162;
    }
    {
        nuitka_bool tmp_condition_result_137;
        int tmp_truth_name_79;
        CHECK_OBJECT(var_twentymin_urls);
        tmp_truth_name_79 = CHECK_IF_TRUE(var_twentymin_urls);
        if (tmp_truth_name_79 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3186;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_137 = tmp_truth_name_79 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_137 == NUITKA_BOOL_TRUE) {
            goto branch_yes_135;
        } else {
            goto branch_no_135;
        }
    }
    branch_yes_135:;
    {
        PyObject *tmp_called_value_149;
        PyObject *tmp_expression_value_157;
        PyObject *tmp_kw_call_arg_value_0_31;
        PyObject *tmp_kw_call_arg_value_1_29;
        PyObject *tmp_kw_call_arg_value_2_27;
        PyObject *tmp_kw_call_dict_value_0_31;
        PyObject *tmp_called_instance_227;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3187;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_157 = par_self;
        tmp_called_value_149 = LOOKUP_ATTRIBUTE(tmp_expression_value_157, mod_consts[214]);
        if (tmp_called_value_149 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3187;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_twentymin_urls);
        tmp_kw_call_arg_value_0_31 = var_twentymin_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_29 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_27 = var_video_title;
        tmp_called_instance_227 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[391]);

        if (unlikely(tmp_called_instance_227 == NULL)) {
            tmp_called_instance_227 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[391]);
        }

        if (tmp_called_instance_227 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_149);

            exception_lineno = 3188;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3188;
        tmp_kw_call_dict_value_0_31 = CALL_METHOD_NO_ARGS(tmp_called_instance_227, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_149);

            exception_lineno = 3188;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3187;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_31, tmp_kw_call_arg_value_1_29, tmp_kw_call_arg_value_2_27};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_31};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_149, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_149);
        Py_DECREF(tmp_kw_call_dict_value_0_31);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3187;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_135:;
    {
        PyObject *tmp_assign_source_163;
        PyObject *tmp_called_instance_228;
        PyObject *tmp_args_element_value_383;
        tmp_called_instance_228 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[392]);

        if (unlikely(tmp_called_instance_228 == NULL)) {
            tmp_called_instance_228 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[392]);
        }

        if (tmp_called_instance_228 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3191;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_383 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3191;
        tmp_assign_source_163 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_228, mod_consts[213], tmp_args_element_value_383);
        if (tmp_assign_source_163 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3191;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_videopress_urls == NULL);
        var_videopress_urls = tmp_assign_source_163;
    }
    {
        nuitka_bool tmp_condition_result_138;
        int tmp_truth_name_80;
        CHECK_OBJECT(var_videopress_urls);
        tmp_truth_name_80 = CHECK_IF_TRUE(var_videopress_urls);
        if (tmp_truth_name_80 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3192;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_138 = tmp_truth_name_80 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_138 == NUITKA_BOOL_TRUE) {
            goto branch_yes_136;
        } else {
            goto branch_no_136;
        }
    }
    branch_yes_136:;
    {
        PyObject *tmp_called_value_150;
        PyObject *tmp_expression_value_158;
        PyObject *tmp_kw_call_arg_value_0_32;
        PyObject *tmp_kw_call_arg_value_1_30;
        PyObject *tmp_kw_call_arg_value_2_28;
        PyObject *tmp_kw_call_dict_value_0_32;
        PyObject *tmp_called_instance_229;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3193;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_158 = par_self;
        tmp_called_value_150 = LOOKUP_ATTRIBUTE(tmp_expression_value_158, mod_consts[214]);
        if (tmp_called_value_150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3193;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_videopress_urls);
        tmp_kw_call_arg_value_0_32 = var_videopress_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_30 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_28 = var_video_title;
        tmp_called_instance_229 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[392]);

        if (unlikely(tmp_called_instance_229 == NULL)) {
            tmp_called_instance_229 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[392]);
        }

        if (tmp_called_instance_229 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_150);

            exception_lineno = 3194;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3194;
        tmp_kw_call_dict_value_0_32 = CALL_METHOD_NO_ARGS(tmp_called_instance_229, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_150);

            exception_lineno = 3194;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3193;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_32, tmp_kw_call_arg_value_1_30, tmp_kw_call_arg_value_2_28};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_32};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_150, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_150);
        Py_DECREF(tmp_kw_call_dict_value_0_32);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3193;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_136:;
    {
        PyObject *tmp_assign_source_164;
        PyObject *tmp_called_instance_230;
        PyObject *tmp_args_element_value_384;
        tmp_called_instance_230 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[393]);

        if (unlikely(tmp_called_instance_230 == NULL)) {
            tmp_called_instance_230 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[393]);
        }

        if (tmp_called_instance_230 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3197;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_384 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3197;
        tmp_assign_source_164 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_230, mod_consts[213], tmp_args_element_value_384);
        if (tmp_assign_source_164 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3197;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_rutube_urls == NULL);
        var_rutube_urls = tmp_assign_source_164;
    }
    {
        nuitka_bool tmp_condition_result_139;
        int tmp_truth_name_81;
        CHECK_OBJECT(var_rutube_urls);
        tmp_truth_name_81 = CHECK_IF_TRUE(var_rutube_urls);
        if (tmp_truth_name_81 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3198;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_139 = tmp_truth_name_81 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_139 == NUITKA_BOOL_TRUE) {
            goto branch_yes_137;
        } else {
            goto branch_no_137;
        }
    }
    branch_yes_137:;
    {
        PyObject *tmp_called_value_151;
        PyObject *tmp_expression_value_159;
        PyObject *tmp_kw_call_arg_value_0_33;
        PyObject *tmp_kw_call_arg_value_1_31;
        PyObject *tmp_kw_call_arg_value_2_29;
        PyObject *tmp_kw_call_dict_value_0_33;
        PyObject *tmp_called_instance_231;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3199;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_159 = par_self;
        tmp_called_value_151 = LOOKUP_ATTRIBUTE(tmp_expression_value_159, mod_consts[214]);
        if (tmp_called_value_151 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3199;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_rutube_urls);
        tmp_kw_call_arg_value_0_33 = var_rutube_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_31 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_29 = var_video_title;
        tmp_called_instance_231 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[393]);

        if (unlikely(tmp_called_instance_231 == NULL)) {
            tmp_called_instance_231 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[393]);
        }

        if (tmp_called_instance_231 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_151);

            exception_lineno = 3200;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3200;
        tmp_kw_call_dict_value_0_33 = CALL_METHOD_NO_ARGS(tmp_called_instance_231, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_151);

            exception_lineno = 3200;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3199;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_33, tmp_kw_call_arg_value_1_31, tmp_kw_call_arg_value_2_29};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_33};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_151, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_151);
        Py_DECREF(tmp_kw_call_dict_value_0_33);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3199;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_137:;
    {
        PyObject *tmp_assign_source_165;
        PyObject *tmp_called_instance_232;
        PyObject *tmp_args_element_value_385;
        tmp_called_instance_232 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[394]);

        if (unlikely(tmp_called_instance_232 == NULL)) {
            tmp_called_instance_232 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[394]);
        }

        if (tmp_called_instance_232 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3203;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_385 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3203;
        tmp_assign_source_165 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_232, mod_consts[213], tmp_args_element_value_385);
        if (tmp_assign_source_165 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3203;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_wapo_urls == NULL);
        var_wapo_urls = tmp_assign_source_165;
    }
    {
        nuitka_bool tmp_condition_result_140;
        int tmp_truth_name_82;
        CHECK_OBJECT(var_wapo_urls);
        tmp_truth_name_82 = CHECK_IF_TRUE(var_wapo_urls);
        if (tmp_truth_name_82 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3204;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_140 = tmp_truth_name_82 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_140 == NUITKA_BOOL_TRUE) {
            goto branch_yes_138;
        } else {
            goto branch_no_138;
        }
    }
    branch_yes_138:;
    {
        PyObject *tmp_called_value_152;
        PyObject *tmp_expression_value_160;
        PyObject *tmp_kw_call_arg_value_0_34;
        PyObject *tmp_kw_call_arg_value_1_32;
        PyObject *tmp_kw_call_arg_value_2_30;
        PyObject *tmp_kw_call_dict_value_0_34;
        PyObject *tmp_called_instance_233;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3205;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_160 = par_self;
        tmp_called_value_152 = LOOKUP_ATTRIBUTE(tmp_expression_value_160, mod_consts[214]);
        if (tmp_called_value_152 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3205;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_wapo_urls);
        tmp_kw_call_arg_value_0_34 = var_wapo_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_32 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_30 = var_video_title;
        tmp_called_instance_233 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[394]);

        if (unlikely(tmp_called_instance_233 == NULL)) {
            tmp_called_instance_233 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[394]);
        }

        if (tmp_called_instance_233 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_152);

            exception_lineno = 3206;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3206;
        tmp_kw_call_dict_value_0_34 = CALL_METHOD_NO_ARGS(tmp_called_instance_233, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_152);

            exception_lineno = 3206;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3205;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_34, tmp_kw_call_arg_value_1_32, tmp_kw_call_arg_value_2_30};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_34};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_152, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_152);
        Py_DECREF(tmp_kw_call_dict_value_0_34);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3205;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_138:;
    {
        PyObject *tmp_assign_source_166;
        PyObject *tmp_called_value_153;
        PyObject *tmp_expression_value_161;
        PyObject *tmp_args_element_value_386;
        PyObject *tmp_args_element_value_387;
        tmp_expression_value_161 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[395]);

        if (unlikely(tmp_expression_value_161 == NULL)) {
            tmp_expression_value_161 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[395]);
        }

        if (tmp_expression_value_161 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3209;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_153 = LOOKUP_ATTRIBUTE(tmp_expression_value_161, mod_consts[213]);
        if (tmp_called_value_153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3209;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_153);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3209;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_value_386 = par_self;
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_387 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3209;
        {
            PyObject *call_args[] = {tmp_args_element_value_386, tmp_args_element_value_387};
            tmp_assign_source_166 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_153, call_args);
        }

        Py_DECREF(tmp_called_value_153);
        if (tmp_assign_source_166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3209;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mediaset_urls == NULL);
        var_mediaset_urls = tmp_assign_source_166;
    }
    {
        nuitka_bool tmp_condition_result_141;
        int tmp_truth_name_83;
        CHECK_OBJECT(var_mediaset_urls);
        tmp_truth_name_83 = CHECK_IF_TRUE(var_mediaset_urls);
        if (tmp_truth_name_83 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3210;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_141 = tmp_truth_name_83 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_141 == NUITKA_BOOL_TRUE) {
            goto branch_yes_139;
        } else {
            goto branch_no_139;
        }
    }
    branch_yes_139:;
    {
        PyObject *tmp_called_value_154;
        PyObject *tmp_expression_value_162;
        PyObject *tmp_kw_call_arg_value_0_35;
        PyObject *tmp_kw_call_arg_value_1_33;
        PyObject *tmp_kw_call_arg_value_2_31;
        PyObject *tmp_kw_call_dict_value_0_35;
        PyObject *tmp_called_instance_234;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3211;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_162 = par_self;
        tmp_called_value_154 = LOOKUP_ATTRIBUTE(tmp_expression_value_162, mod_consts[214]);
        if (tmp_called_value_154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3211;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mediaset_urls);
        tmp_kw_call_arg_value_0_35 = var_mediaset_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_33 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_31 = var_video_title;
        tmp_called_instance_234 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[395]);

        if (unlikely(tmp_called_instance_234 == NULL)) {
            tmp_called_instance_234 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[395]);
        }

        if (tmp_called_instance_234 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_154);

            exception_lineno = 3212;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3212;
        tmp_kw_call_dict_value_0_35 = CALL_METHOD_NO_ARGS(tmp_called_instance_234, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_154);

            exception_lineno = 3212;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3211;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_35, tmp_kw_call_arg_value_1_33, tmp_kw_call_arg_value_2_31};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_35};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_154, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_154);
        Py_DECREF(tmp_kw_call_dict_value_0_35);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3211;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_139:;
    {
        PyObject *tmp_assign_source_167;
        PyObject *tmp_called_instance_235;
        PyObject *tmp_args_element_value_388;
        tmp_called_instance_235 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[396]);

        if (unlikely(tmp_called_instance_235 == NULL)) {
            tmp_called_instance_235 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[396]);
        }

        if (tmp_called_instance_235 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3215;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_388 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3215;
        tmp_assign_source_167 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_235, mod_consts[213], tmp_args_element_value_388);
        if (tmp_assign_source_167 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3215;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_joj_urls == NULL);
        var_joj_urls = tmp_assign_source_167;
    }
    {
        nuitka_bool tmp_condition_result_142;
        int tmp_truth_name_84;
        CHECK_OBJECT(var_joj_urls);
        tmp_truth_name_84 = CHECK_IF_TRUE(var_joj_urls);
        if (tmp_truth_name_84 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3216;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_142 = tmp_truth_name_84 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_142 == NUITKA_BOOL_TRUE) {
            goto branch_yes_140;
        } else {
            goto branch_no_140;
        }
    }
    branch_yes_140:;
    {
        PyObject *tmp_called_value_155;
        PyObject *tmp_expression_value_163;
        PyObject *tmp_kw_call_arg_value_0_36;
        PyObject *tmp_kw_call_arg_value_1_34;
        PyObject *tmp_kw_call_arg_value_2_32;
        PyObject *tmp_kw_call_dict_value_0_36;
        PyObject *tmp_called_instance_236;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3217;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_163 = par_self;
        tmp_called_value_155 = LOOKUP_ATTRIBUTE(tmp_expression_value_163, mod_consts[214]);
        if (tmp_called_value_155 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3217;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_joj_urls);
        tmp_kw_call_arg_value_0_36 = var_joj_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_34 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_32 = var_video_title;
        tmp_called_instance_236 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[396]);

        if (unlikely(tmp_called_instance_236 == NULL)) {
            tmp_called_instance_236 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[396]);
        }

        if (tmp_called_instance_236 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_155);

            exception_lineno = 3218;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3218;
        tmp_kw_call_dict_value_0_36 = CALL_METHOD_NO_ARGS(tmp_called_instance_236, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_155);

            exception_lineno = 3218;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3217;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_36, tmp_kw_call_arg_value_1_34, tmp_kw_call_arg_value_2_32};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_36};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_155, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_155);
        Py_DECREF(tmp_kw_call_dict_value_0_36);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3217;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_140:;
    {
        PyObject *tmp_assign_source_168;
        PyObject *tmp_called_instance_237;
        PyObject *tmp_args_element_value_389;
        tmp_called_instance_237 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[397]);

        if (unlikely(tmp_called_instance_237 == NULL)) {
            tmp_called_instance_237 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[397]);
        }

        if (tmp_called_instance_237 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3221;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_389 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3221;
        tmp_assign_source_168 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_237, mod_consts[213], tmp_args_element_value_389);
        if (tmp_assign_source_168 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3221;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mpfn_urls == NULL);
        var_mpfn_urls = tmp_assign_source_168;
    }
    {
        nuitka_bool tmp_condition_result_143;
        int tmp_truth_name_85;
        CHECK_OBJECT(var_mpfn_urls);
        tmp_truth_name_85 = CHECK_IF_TRUE(var_mpfn_urls);
        if (tmp_truth_name_85 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3222;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_143 = tmp_truth_name_85 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_143 == NUITKA_BOOL_TRUE) {
            goto branch_yes_141;
        } else {
            goto branch_no_141;
        }
    }
    branch_yes_141:;
    {
        PyObject *tmp_called_value_156;
        PyObject *tmp_expression_value_164;
        PyObject *tmp_kw_call_arg_value_0_37;
        PyObject *tmp_kw_call_arg_value_1_35;
        PyObject *tmp_kw_call_arg_value_2_33;
        PyObject *tmp_kw_call_dict_value_0_37;
        PyObject *tmp_called_instance_238;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3223;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_164 = par_self;
        tmp_called_value_156 = LOOKUP_ATTRIBUTE(tmp_expression_value_164, mod_consts[214]);
        if (tmp_called_value_156 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3223;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mpfn_urls);
        tmp_kw_call_arg_value_0_37 = var_mpfn_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_35 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_33 = var_video_title;
        tmp_called_instance_238 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[397]);

        if (unlikely(tmp_called_instance_238 == NULL)) {
            tmp_called_instance_238 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[397]);
        }

        if (tmp_called_instance_238 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_156);

            exception_lineno = 3224;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3224;
        tmp_kw_call_dict_value_0_37 = CALL_METHOD_NO_ARGS(tmp_called_instance_238, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_156);

            exception_lineno = 3224;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3223;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_37, tmp_kw_call_arg_value_1_35, tmp_kw_call_arg_value_2_33};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_37};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_156, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_156);
        Py_DECREF(tmp_kw_call_dict_value_0_37);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3223;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_141:;
    {
        PyObject *tmp_assign_source_169;
        PyObject *tmp_called_instance_239;
        PyObject *tmp_args_element_value_390;
        tmp_called_instance_239 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[398]);

        if (unlikely(tmp_called_instance_239 == NULL)) {
            tmp_called_instance_239 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[398]);
        }

        if (tmp_called_instance_239 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3227;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_390 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3227;
        tmp_assign_source_169 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_239, mod_consts[213], tmp_args_element_value_390);
        if (tmp_assign_source_169 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3227;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vzaar_urls == NULL);
        var_vzaar_urls = tmp_assign_source_169;
    }
    {
        nuitka_bool tmp_condition_result_144;
        int tmp_truth_name_86;
        CHECK_OBJECT(var_vzaar_urls);
        tmp_truth_name_86 = CHECK_IF_TRUE(var_vzaar_urls);
        if (tmp_truth_name_86 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3228;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_144 = tmp_truth_name_86 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_144 == NUITKA_BOOL_TRUE) {
            goto branch_yes_142;
        } else {
            goto branch_no_142;
        }
    }
    branch_yes_142:;
    {
        PyObject *tmp_called_value_157;
        PyObject *tmp_expression_value_165;
        PyObject *tmp_kw_call_arg_value_0_38;
        PyObject *tmp_kw_call_arg_value_1_36;
        PyObject *tmp_kw_call_arg_value_2_34;
        PyObject *tmp_kw_call_dict_value_0_38;
        PyObject *tmp_called_instance_240;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3229;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_165 = par_self;
        tmp_called_value_157 = LOOKUP_ATTRIBUTE(tmp_expression_value_165, mod_consts[214]);
        if (tmp_called_value_157 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3229;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_vzaar_urls);
        tmp_kw_call_arg_value_0_38 = var_vzaar_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_36 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_34 = var_video_title;
        tmp_called_instance_240 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[398]);

        if (unlikely(tmp_called_instance_240 == NULL)) {
            tmp_called_instance_240 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[398]);
        }

        if (tmp_called_instance_240 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_157);

            exception_lineno = 3230;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3230;
        tmp_kw_call_dict_value_0_38 = CALL_METHOD_NO_ARGS(tmp_called_instance_240, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_157);

            exception_lineno = 3230;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3229;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_38, tmp_kw_call_arg_value_1_36, tmp_kw_call_arg_value_2_34};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_38};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_157, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_157);
        Py_DECREF(tmp_kw_call_dict_value_0_38);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3229;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_142:;
    {
        PyObject *tmp_assign_source_170;
        PyObject *tmp_called_instance_241;
        PyObject *tmp_args_element_value_391;
        tmp_called_instance_241 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[399]);

        if (unlikely(tmp_called_instance_241 == NULL)) {
            tmp_called_instance_241 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[399]);
        }

        if (tmp_called_instance_241 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3232;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_391 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3232;
        tmp_assign_source_170 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_241, mod_consts[213], tmp_args_element_value_391);
        if (tmp_assign_source_170 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3232;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_channel9_urls == NULL);
        var_channel9_urls = tmp_assign_source_170;
    }
    {
        nuitka_bool tmp_condition_result_145;
        int tmp_truth_name_87;
        CHECK_OBJECT(var_channel9_urls);
        tmp_truth_name_87 = CHECK_IF_TRUE(var_channel9_urls);
        if (tmp_truth_name_87 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3233;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_145 = tmp_truth_name_87 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_145 == NUITKA_BOOL_TRUE) {
            goto branch_yes_143;
        } else {
            goto branch_no_143;
        }
    }
    branch_yes_143:;
    {
        PyObject *tmp_called_value_158;
        PyObject *tmp_expression_value_166;
        PyObject *tmp_kw_call_arg_value_0_39;
        PyObject *tmp_kw_call_arg_value_1_37;
        PyObject *tmp_kw_call_arg_value_2_35;
        PyObject *tmp_kw_call_dict_value_0_39;
        PyObject *tmp_called_instance_242;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3234;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_166 = par_self;
        tmp_called_value_158 = LOOKUP_ATTRIBUTE(tmp_expression_value_166, mod_consts[214]);
        if (tmp_called_value_158 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3234;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_channel9_urls);
        tmp_kw_call_arg_value_0_39 = var_channel9_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_37 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_35 = var_video_title;
        tmp_called_instance_242 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[399]);

        if (unlikely(tmp_called_instance_242 == NULL)) {
            tmp_called_instance_242 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[399]);
        }

        if (tmp_called_instance_242 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_158);

            exception_lineno = 3235;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3235;
        tmp_kw_call_dict_value_0_39 = CALL_METHOD_NO_ARGS(tmp_called_instance_242, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_158);

            exception_lineno = 3235;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3234;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_39, tmp_kw_call_arg_value_1_37, tmp_kw_call_arg_value_2_35};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_39};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_158, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_158);
        Py_DECREF(tmp_kw_call_dict_value_0_39);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3234;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_143:;
    {
        PyObject *tmp_assign_source_171;
        PyObject *tmp_called_instance_243;
        PyObject *tmp_args_element_value_392;
        tmp_called_instance_243 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[400]);

        if (unlikely(tmp_called_instance_243 == NULL)) {
            tmp_called_instance_243 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[400]);
        }

        if (tmp_called_instance_243 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3237;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_392 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3237;
        tmp_assign_source_171 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_243, mod_consts[213], tmp_args_element_value_392);
        if (tmp_assign_source_171 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3237;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vshare_urls == NULL);
        var_vshare_urls = tmp_assign_source_171;
    }
    {
        nuitka_bool tmp_condition_result_146;
        int tmp_truth_name_88;
        CHECK_OBJECT(var_vshare_urls);
        tmp_truth_name_88 = CHECK_IF_TRUE(var_vshare_urls);
        if (tmp_truth_name_88 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3238;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_146 = tmp_truth_name_88 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_146 == NUITKA_BOOL_TRUE) {
            goto branch_yes_144;
        } else {
            goto branch_no_144;
        }
    }
    branch_yes_144:;
    {
        PyObject *tmp_called_value_159;
        PyObject *tmp_expression_value_167;
        PyObject *tmp_kw_call_arg_value_0_40;
        PyObject *tmp_kw_call_arg_value_1_38;
        PyObject *tmp_kw_call_arg_value_2_36;
        PyObject *tmp_kw_call_dict_value_0_40;
        PyObject *tmp_called_instance_244;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3239;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_167 = par_self;
        tmp_called_value_159 = LOOKUP_ATTRIBUTE(tmp_expression_value_167, mod_consts[214]);
        if (tmp_called_value_159 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3239;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_vshare_urls);
        tmp_kw_call_arg_value_0_40 = var_vshare_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_38 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_36 = var_video_title;
        tmp_called_instance_244 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[400]);

        if (unlikely(tmp_called_instance_244 == NULL)) {
            tmp_called_instance_244 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[400]);
        }

        if (tmp_called_instance_244 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_159);

            exception_lineno = 3240;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3240;
        tmp_kw_call_dict_value_0_40 = CALL_METHOD_NO_ARGS(tmp_called_instance_244, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_159);

            exception_lineno = 3240;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3239;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_40, tmp_kw_call_arg_value_1_38, tmp_kw_call_arg_value_2_36};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_40};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_159, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_159);
        Py_DECREF(tmp_kw_call_dict_value_0_40);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3239;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_144:;
    {
        PyObject *tmp_assign_source_172;
        PyObject *tmp_called_instance_245;
        PyObject *tmp_args_element_value_393;
        tmp_called_instance_245 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[401]);

        if (unlikely(tmp_called_instance_245 == NULL)) {
            tmp_called_instance_245 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[401]);
        }

        if (tmp_called_instance_245 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3243;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_393 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3243;
        tmp_assign_source_172 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_245, mod_consts[213], tmp_args_element_value_393);
        if (tmp_assign_source_172 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3243;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_mediasite_urls == NULL);
        var_mediasite_urls = tmp_assign_source_172;
    }
    {
        nuitka_bool tmp_condition_result_147;
        int tmp_truth_name_89;
        CHECK_OBJECT(var_mediasite_urls);
        tmp_truth_name_89 = CHECK_IF_TRUE(var_mediasite_urls);
        if (tmp_truth_name_89 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3244;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_147 = tmp_truth_name_89 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_147 == NUITKA_BOOL_TRUE) {
            goto branch_yes_145;
        } else {
            goto branch_no_145;
        }
    }
    branch_yes_145:;
    {
        PyObject *tmp_assign_source_173;
        // Tried code:
        {
            PyObject *tmp_assign_source_174;
            PyObject *tmp_iter_arg_5;
            CHECK_OBJECT(var_mediasite_urls);
            tmp_iter_arg_5 = var_mediasite_urls;
            tmp_assign_source_174 = MAKE_ITERATOR(tmp_iter_arg_5);
            if (tmp_assign_source_174 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3245;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto try_except_handler_10;
            }
            assert(tmp_listcomp_2__$0 == NULL);
            tmp_listcomp_2__$0 = tmp_assign_source_174;
        }
        {
            PyObject *tmp_assign_source_175;
            tmp_assign_source_175 = MAKE_LIST_EMPTY(0);
            assert(tmp_listcomp_2__contraction == NULL);
            tmp_listcomp_2__contraction = tmp_assign_source_175;
        }
        if (isFrameUnusable(cache_frame_6df4876305f5a7f7c039ed9e97e0ad34_3)) {
            Py_XDECREF(cache_frame_6df4876305f5a7f7c039ed9e97e0ad34_3);

#if _DEBUG_REFCOUNTS
            if (cache_frame_6df4876305f5a7f7c039ed9e97e0ad34_3 == NULL) {
                count_active_frame_cache_instances += 1;
            } else {
                count_released_frame_cache_instances += 1;
            }
            count_allocated_frame_cache_instances += 1;
#endif
            cache_frame_6df4876305f5a7f7c039ed9e97e0ad34_3 = MAKE_FUNCTION_FRAME(codeobj_6df4876305f5a7f7c039ed9e97e0ad34, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
        } else {
            count_hit_frame_cache_instances += 1;
#endif
        }
        assert(cache_frame_6df4876305f5a7f7c039ed9e97e0ad34_3->m_type_description == NULL);
        frame_6df4876305f5a7f7c039ed9e97e0ad34_3 = cache_frame_6df4876305f5a7f7c039ed9e97e0ad34_3;


        // Push the new frame as the currently active one.
        pushFrameStack(frame_6df4876305f5a7f7c039ed9e97e0ad34_3);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_6df4876305f5a7f7c039ed9e97e0ad34_3) == 2); // Frame stack

        // Framed code:
        // Tried code:
        loop_start_3:;
        {
            PyObject *tmp_next_source_3;
            PyObject *tmp_assign_source_176;
            CHECK_OBJECT(tmp_listcomp_2__$0);
            tmp_next_source_3 = tmp_listcomp_2__$0;
            tmp_assign_source_176 = ITERATOR_NEXT(tmp_next_source_3);
            if (tmp_assign_source_176 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_3;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "ooc";
                    exception_lineno = 3245;
                    goto try_except_handler_11;
                }
            }

            {
                PyObject *old = tmp_listcomp_2__iter_value_0;
                tmp_listcomp_2__iter_value_0 = tmp_assign_source_176;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_177;
            CHECK_OBJECT(tmp_listcomp_2__iter_value_0);
            tmp_assign_source_177 = tmp_listcomp_2__iter_value_0;
            {
                PyObject *old = outline_1_var_mediasite_url;
                outline_1_var_mediasite_url = tmp_assign_source_177;
                Py_INCREF(outline_1_var_mediasite_url);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_append_list_2;
            PyObject *tmp_append_value_2;
            PyObject *tmp_called_value_160;
            PyObject *tmp_expression_value_168;
            PyObject *tmp_kw_call_arg_value_0_41;
            PyObject *tmp_called_value_161;
            PyObject *tmp_args_element_value_394;
            PyObject *tmp_called_value_162;
            PyObject *tmp_expression_value_169;
            PyObject *tmp_args_element_value_395;
            PyObject *tmp_args_element_value_396;
            PyObject *tmp_args_element_value_397;
            PyObject *tmp_dict_key_16;
            PyObject *tmp_dict_value_16;
            PyObject *tmp_kw_call_dict_value_0_41;
            PyObject *tmp_called_instance_246;
            CHECK_OBJECT(tmp_listcomp_2__contraction);
            tmp_append_list_2 = tmp_listcomp_2__contraction;
            if (par_self == NULL) {

                FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[117]);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 3246;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }

            tmp_expression_value_168 = par_self;
            tmp_called_value_160 = LOOKUP_ATTRIBUTE(tmp_expression_value_168, mod_consts[87]);
            if (tmp_called_value_160 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3246;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            tmp_called_value_161 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[125]);

            if (unlikely(tmp_called_value_161 == NULL)) {
                tmp_called_value_161 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[125]);
            }

            if (tmp_called_value_161 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_value_160);

                exception_lineno = 3246;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            tmp_expression_value_169 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[67]);

            if (unlikely(tmp_expression_value_169 == NULL)) {
                tmp_expression_value_169 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[67]);
            }

            if (tmp_expression_value_169 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_value_160);

                exception_lineno = 3247;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            tmp_called_value_162 = LOOKUP_ATTRIBUTE(tmp_expression_value_169, mod_consts[68]);
            if (tmp_called_value_162 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_value_160);

                exception_lineno = 3247;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            if (Nuitka_Cell_GET(par_url) == NULL) {
                Py_DECREF(tmp_called_value_160);
                Py_DECREF(tmp_called_value_162);
                FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[33]);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 3247;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }

            tmp_args_element_value_395 = Nuitka_Cell_GET(par_url);
            CHECK_OBJECT(outline_1_var_mediasite_url);
            tmp_args_element_value_396 = outline_1_var_mediasite_url;
            frame_6df4876305f5a7f7c039ed9e97e0ad34_3->m_frame.f_lineno = 3247;
            {
                PyObject *call_args[] = {tmp_args_element_value_395, tmp_args_element_value_396};
                tmp_args_element_value_394 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_162, call_args);
            }

            Py_DECREF(tmp_called_value_162);
            if (tmp_args_element_value_394 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_value_160);

                exception_lineno = 3247;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            tmp_dict_key_16 = mod_consts[402];
            if (Nuitka_Cell_GET(par_url) == NULL) {
                Py_DECREF(tmp_called_value_160);
                Py_DECREF(tmp_args_element_value_394);
                FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[33]);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 3248;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }

            tmp_dict_value_16 = Nuitka_Cell_GET(par_url);
            tmp_args_element_value_397 = _PyDict_NewPresized( 1 );
            tmp_res = PyDict_SetItem(tmp_args_element_value_397, tmp_dict_key_16, tmp_dict_value_16);
            assert(!(tmp_res != 0));
            frame_6df4876305f5a7f7c039ed9e97e0ad34_3->m_frame.f_lineno = 3246;
            {
                PyObject *call_args[] = {tmp_args_element_value_394, tmp_args_element_value_397};
                tmp_kw_call_arg_value_0_41 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_161, call_args);
            }

            Py_DECREF(tmp_args_element_value_394);
            Py_DECREF(tmp_args_element_value_397);
            if (tmp_kw_call_arg_value_0_41 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_value_160);

                exception_lineno = 3246;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            tmp_called_instance_246 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[401]);

            if (unlikely(tmp_called_instance_246 == NULL)) {
                tmp_called_instance_246 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[401]);
            }

            if (tmp_called_instance_246 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_value_160);
                Py_DECREF(tmp_kw_call_arg_value_0_41);

                exception_lineno = 3248;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            frame_6df4876305f5a7f7c039ed9e97e0ad34_3->m_frame.f_lineno = 3248;
            tmp_kw_call_dict_value_0_41 = CALL_METHOD_NO_ARGS(tmp_called_instance_246, mod_consts[210]);
            if (tmp_kw_call_dict_value_0_41 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_called_value_160);
                Py_DECREF(tmp_kw_call_arg_value_0_41);

                exception_lineno = 3248;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            frame_6df4876305f5a7f7c039ed9e97e0ad34_3->m_frame.f_lineno = 3246;
            {
                PyObject *args[] = {tmp_kw_call_arg_value_0_41};
                PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_41};
                tmp_append_value_2 = CALL_FUNCTION_WITH_ARGS1_KWSPLIT(tmp_called_value_160, args, kw_values, mod_consts[218]);
            }

            Py_DECREF(tmp_called_value_160);
            Py_DECREF(tmp_kw_call_arg_value_0_41);
            Py_DECREF(tmp_kw_call_dict_value_0_41);
            if (tmp_append_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3246;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
            assert(PyList_Check(tmp_append_list_2));
            tmp_result = LIST_APPEND1(tmp_append_list_2, tmp_append_value_2);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3245;
                type_description_2 = "ooc";
                goto try_except_handler_11;
            }
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3245;
            type_description_2 = "ooc";
            goto try_except_handler_11;
        }
        goto loop_start_3;
        loop_end_3:;
        CHECK_OBJECT(tmp_listcomp_2__contraction);
        tmp_assign_source_173 = tmp_listcomp_2__contraction;
        Py_INCREF(tmp_assign_source_173);
        goto try_return_handler_11;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_11:;
        CHECK_OBJECT(tmp_listcomp_2__$0);
        Py_DECREF(tmp_listcomp_2__$0);
        tmp_listcomp_2__$0 = NULL;
        CHECK_OBJECT(tmp_listcomp_2__contraction);
        Py_DECREF(tmp_listcomp_2__contraction);
        tmp_listcomp_2__contraction = NULL;
        Py_XDECREF(tmp_listcomp_2__iter_value_0);
        tmp_listcomp_2__iter_value_0 = NULL;
        goto frame_return_exit_3;
        // Exception handler code:
        try_except_handler_11:;
        exception_keeper_type_8 = exception_type;
        exception_keeper_value_8 = exception_value;
        exception_keeper_tb_8 = exception_tb;
        exception_keeper_lineno_8 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT(tmp_listcomp_2__$0);
        Py_DECREF(tmp_listcomp_2__$0);
        tmp_listcomp_2__$0 = NULL;
        CHECK_OBJECT(tmp_listcomp_2__contraction);
        Py_DECREF(tmp_listcomp_2__contraction);
        tmp_listcomp_2__contraction = NULL;
        Py_XDECREF(tmp_listcomp_2__iter_value_0);
        tmp_listcomp_2__iter_value_0 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_8;
        exception_value = exception_keeper_value_8;
        exception_tb = exception_keeper_tb_8;
        exception_lineno = exception_keeper_lineno_8;

        goto frame_exception_exit_3;
        // End of try:

#if 0
        RESTORE_FRAME_EXCEPTION(frame_6df4876305f5a7f7c039ed9e97e0ad34_3);
#endif

        // Put the previous frame back on top.
        popFrameStack();


        goto frame_no_exception_2;

        frame_return_exit_3:;
#if 0
        RESTORE_FRAME_EXCEPTION(frame_6df4876305f5a7f7c039ed9e97e0ad34_3);
#endif

        // Put the previous frame back on top.
        popFrameStack();


        goto try_return_handler_10;

        frame_exception_exit_3:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_6df4876305f5a7f7c039ed9e97e0ad34_3);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_6df4876305f5a7f7c039ed9e97e0ad34_3, exception_lineno);
        } else if (exception_tb->tb_frame != &frame_6df4876305f5a7f7c039ed9e97e0ad34_3->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_6df4876305f5a7f7c039ed9e97e0ad34_3, exception_lineno);
        }

        // Attaches locals to frame if any.
        Nuitka_Frame_AttachLocals(
            frame_6df4876305f5a7f7c039ed9e97e0ad34_3,
            type_description_2,
            outline_1_var_mediasite_url,
            par_self,
            par_url
        );


        // Release cached frame if used for exception.
        if (frame_6df4876305f5a7f7c039ed9e97e0ad34_3 == cache_frame_6df4876305f5a7f7c039ed9e97e0ad34_3) {
#if _DEBUG_REFCOUNTS
            count_active_frame_cache_instances -= 1;
            count_released_frame_cache_instances += 1;
#endif

            Py_DECREF(cache_frame_6df4876305f5a7f7c039ed9e97e0ad34_3);
            cache_frame_6df4876305f5a7f7c039ed9e97e0ad34_3 = NULL;
        }

        assertFrameObject(frame_6df4876305f5a7f7c039ed9e97e0ad34_3);

        // Put the previous frame back on top.
        popFrameStack();


        // Return the error.
        goto nested_frame_exit_2;

        frame_no_exception_2:;
        goto skip_nested_handling_2;
        nested_frame_exit_2:;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_10;
        skip_nested_handling_2:;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_10:;
        Py_XDECREF(outline_1_var_mediasite_url);
        outline_1_var_mediasite_url = NULL;
        goto outline_result_3;
        // Exception handler code:
        try_except_handler_10:;
        exception_keeper_type_9 = exception_type;
        exception_keeper_value_9 = exception_value;
        exception_keeper_tb_9 = exception_tb;
        exception_keeper_lineno_9 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(outline_1_var_mediasite_url);
        outline_1_var_mediasite_url = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_9;
        exception_value = exception_keeper_value_9;
        exception_tb = exception_keeper_tb_9;
        exception_lineno = exception_keeper_lineno_9;

        goto outline_exception_2;
        // End of try:
        NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
        return NULL;
        outline_exception_2:;
        exception_lineno = 3245;
        goto frame_exception_exit_1;
        outline_result_3:;
        assert(var_entries == NULL);
        var_entries = tmp_assign_source_173;
    }
    {
        PyObject *tmp_called_instance_247;
        PyObject *tmp_args_element_value_398;
        PyObject *tmp_args_element_value_399;
        PyObject *tmp_args_element_value_400;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3250;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_247 = par_self;
        CHECK_OBJECT(var_entries);
        tmp_args_element_value_398 = var_entries;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_399 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_400 = var_video_title;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3250;
        {
            PyObject *call_args[] = {tmp_args_element_value_398, tmp_args_element_value_399, tmp_args_element_value_400};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_247,
                mod_consts[181],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3250;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_145:;
    {
        PyObject *tmp_assign_source_178;
        PyObject *tmp_called_instance_248;
        PyObject *tmp_args_element_value_401;
        tmp_called_instance_248 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[403]);

        if (unlikely(tmp_called_instance_248 == NULL)) {
            tmp_called_instance_248 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[403]);
        }

        if (tmp_called_instance_248 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3252;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_401 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3252;
        tmp_assign_source_178 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_248, mod_consts[213], tmp_args_element_value_401);
        if (tmp_assign_source_178 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3252;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_springboardplatform_urls == NULL);
        var_springboardplatform_urls = tmp_assign_source_178;
    }
    {
        nuitka_bool tmp_condition_result_148;
        int tmp_truth_name_90;
        CHECK_OBJECT(var_springboardplatform_urls);
        tmp_truth_name_90 = CHECK_IF_TRUE(var_springboardplatform_urls);
        if (tmp_truth_name_90 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3253;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_148 = tmp_truth_name_90 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_148 == NUITKA_BOOL_TRUE) {
            goto branch_yes_146;
        } else {
            goto branch_no_146;
        }
    }
    branch_yes_146:;
    {
        PyObject *tmp_called_value_163;
        PyObject *tmp_expression_value_170;
        PyObject *tmp_kw_call_arg_value_0_42;
        PyObject *tmp_kw_call_arg_value_1_39;
        PyObject *tmp_kw_call_arg_value_2_37;
        PyObject *tmp_kw_call_dict_value_0_42;
        PyObject *tmp_called_instance_249;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3254;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_170 = par_self;
        tmp_called_value_163 = LOOKUP_ATTRIBUTE(tmp_expression_value_170, mod_consts[214]);
        if (tmp_called_value_163 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3254;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_springboardplatform_urls);
        tmp_kw_call_arg_value_0_42 = var_springboardplatform_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_39 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_37 = var_video_title;
        tmp_called_instance_249 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[403]);

        if (unlikely(tmp_called_instance_249 == NULL)) {
            tmp_called_instance_249 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[403]);
        }

        if (tmp_called_instance_249 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_163);

            exception_lineno = 3256;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3256;
        tmp_kw_call_dict_value_0_42 = CALL_METHOD_NO_ARGS(tmp_called_instance_249, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_163);

            exception_lineno = 3256;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3254;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_42, tmp_kw_call_arg_value_1_39, tmp_kw_call_arg_value_2_37};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_42};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_163, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_163);
        Py_DECREF(tmp_kw_call_dict_value_0_42);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3254;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_146:;
    {
        PyObject *tmp_assign_source_179;
        PyObject *tmp_called_instance_250;
        PyObject *tmp_args_element_value_402;
        tmp_called_instance_250 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[404]);

        if (unlikely(tmp_called_instance_250 == NULL)) {
            tmp_called_instance_250 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[404]);
        }

        if (tmp_called_instance_250 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3258;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_402 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3258;
        tmp_assign_source_179 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_250, mod_consts[213], tmp_args_element_value_402);
        if (tmp_assign_source_179 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3258;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_yapfiles_urls == NULL);
        var_yapfiles_urls = tmp_assign_source_179;
    }
    {
        nuitka_bool tmp_condition_result_149;
        int tmp_truth_name_91;
        CHECK_OBJECT(var_yapfiles_urls);
        tmp_truth_name_91 = CHECK_IF_TRUE(var_yapfiles_urls);
        if (tmp_truth_name_91 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3259;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_149 = tmp_truth_name_91 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_149 == NUITKA_BOOL_TRUE) {
            goto branch_yes_147;
        } else {
            goto branch_no_147;
        }
    }
    branch_yes_147:;
    {
        PyObject *tmp_called_value_164;
        PyObject *tmp_expression_value_171;
        PyObject *tmp_kw_call_arg_value_0_43;
        PyObject *tmp_kw_call_arg_value_1_40;
        PyObject *tmp_kw_call_arg_value_2_38;
        PyObject *tmp_kw_call_dict_value_0_43;
        PyObject *tmp_called_instance_251;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3260;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_171 = par_self;
        tmp_called_value_164 = LOOKUP_ATTRIBUTE(tmp_expression_value_171, mod_consts[214]);
        if (tmp_called_value_164 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3260;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_yapfiles_urls);
        tmp_kw_call_arg_value_0_43 = var_yapfiles_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_40 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_38 = var_video_title;
        tmp_called_instance_251 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[404]);

        if (unlikely(tmp_called_instance_251 == NULL)) {
            tmp_called_instance_251 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[404]);
        }

        if (tmp_called_instance_251 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_164);

            exception_lineno = 3261;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3261;
        tmp_kw_call_dict_value_0_43 = CALL_METHOD_NO_ARGS(tmp_called_instance_251, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_164);

            exception_lineno = 3261;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3260;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_43, tmp_kw_call_arg_value_1_40, tmp_kw_call_arg_value_2_38};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_43};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_164, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_164);
        Py_DECREF(tmp_kw_call_dict_value_0_43);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3260;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_147:;
    {
        PyObject *tmp_assign_source_180;
        PyObject *tmp_called_instance_252;
        PyObject *tmp_args_element_value_403;
        tmp_called_instance_252 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[405]);

        if (unlikely(tmp_called_instance_252 == NULL)) {
            tmp_called_instance_252 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[405]);
        }

        if (tmp_called_instance_252 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3263;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_403 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3263;
        tmp_assign_source_180 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_252, mod_consts[213], tmp_args_element_value_403);
        if (tmp_assign_source_180 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3263;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_vice_urls == NULL);
        var_vice_urls = tmp_assign_source_180;
    }
    {
        nuitka_bool tmp_condition_result_150;
        int tmp_truth_name_92;
        CHECK_OBJECT(var_vice_urls);
        tmp_truth_name_92 = CHECK_IF_TRUE(var_vice_urls);
        if (tmp_truth_name_92 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3264;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_150 = tmp_truth_name_92 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_150 == NUITKA_BOOL_TRUE) {
            goto branch_yes_148;
        } else {
            goto branch_no_148;
        }
    }
    branch_yes_148:;
    {
        PyObject *tmp_called_value_165;
        PyObject *tmp_expression_value_172;
        PyObject *tmp_kw_call_arg_value_0_44;
        PyObject *tmp_kw_call_arg_value_1_41;
        PyObject *tmp_kw_call_arg_value_2_39;
        PyObject *tmp_kw_call_dict_value_0_44;
        PyObject *tmp_called_instance_253;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3265;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_172 = par_self;
        tmp_called_value_165 = LOOKUP_ATTRIBUTE(tmp_expression_value_172, mod_consts[214]);
        if (tmp_called_value_165 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3265;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_vice_urls);
        tmp_kw_call_arg_value_0_44 = var_vice_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_41 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_39 = var_video_title;
        tmp_called_instance_253 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[405]);

        if (unlikely(tmp_called_instance_253 == NULL)) {
            tmp_called_instance_253 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[405]);
        }

        if (tmp_called_instance_253 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_165);

            exception_lineno = 3266;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3266;
        tmp_kw_call_dict_value_0_44 = CALL_METHOD_NO_ARGS(tmp_called_instance_253, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_165);

            exception_lineno = 3266;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3265;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_44, tmp_kw_call_arg_value_1_41, tmp_kw_call_arg_value_2_39};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_44};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_165, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_165);
        Py_DECREF(tmp_kw_call_dict_value_0_44);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3265;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_148:;
    {
        PyObject *tmp_assign_source_181;
        PyObject *tmp_called_instance_254;
        PyObject *tmp_args_element_value_404;
        tmp_called_instance_254 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[406]);

        if (unlikely(tmp_called_instance_254 == NULL)) {
            tmp_called_instance_254 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[406]);
        }

        if (tmp_called_instance_254 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3268;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_404 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3268;
        tmp_assign_source_181 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_254, mod_consts[213], tmp_args_element_value_404);
        if (tmp_assign_source_181 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3268;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_xfileshare_urls == NULL);
        var_xfileshare_urls = tmp_assign_source_181;
    }
    {
        nuitka_bool tmp_condition_result_151;
        int tmp_truth_name_93;
        CHECK_OBJECT(var_xfileshare_urls);
        tmp_truth_name_93 = CHECK_IF_TRUE(var_xfileshare_urls);
        if (tmp_truth_name_93 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3269;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_151 = tmp_truth_name_93 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_151 == NUITKA_BOOL_TRUE) {
            goto branch_yes_149;
        } else {
            goto branch_no_149;
        }
    }
    branch_yes_149:;
    {
        PyObject *tmp_called_value_166;
        PyObject *tmp_expression_value_173;
        PyObject *tmp_kw_call_arg_value_0_45;
        PyObject *tmp_kw_call_arg_value_1_42;
        PyObject *tmp_kw_call_arg_value_2_40;
        PyObject *tmp_kw_call_dict_value_0_45;
        PyObject *tmp_called_instance_255;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3270;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_173 = par_self;
        tmp_called_value_166 = LOOKUP_ATTRIBUTE(tmp_expression_value_173, mod_consts[214]);
        if (tmp_called_value_166 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3270;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_xfileshare_urls);
        tmp_kw_call_arg_value_0_45 = var_xfileshare_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_42 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_40 = var_video_title;
        tmp_called_instance_255 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[406]);

        if (unlikely(tmp_called_instance_255 == NULL)) {
            tmp_called_instance_255 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[406]);
        }

        if (tmp_called_instance_255 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_166);

            exception_lineno = 3271;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3271;
        tmp_kw_call_dict_value_0_45 = CALL_METHOD_NO_ARGS(tmp_called_instance_255, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_166);

            exception_lineno = 3271;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3270;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_45, tmp_kw_call_arg_value_1_42, tmp_kw_call_arg_value_2_40};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_45};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_166, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_166);
        Py_DECREF(tmp_kw_call_dict_value_0_45);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3270;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_149:;
    {
        PyObject *tmp_assign_source_182;
        PyObject *tmp_called_instance_256;
        PyObject *tmp_args_element_value_405;
        tmp_called_instance_256 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[407]);

        if (unlikely(tmp_called_instance_256 == NULL)) {
            tmp_called_instance_256 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[407]);
        }

        if (tmp_called_instance_256 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3273;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_405 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3273;
        tmp_assign_source_182 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_256, mod_consts[213], tmp_args_element_value_405);
        if (tmp_assign_source_182 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3273;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_cloudflarestream_urls == NULL);
        var_cloudflarestream_urls = tmp_assign_source_182;
    }
    {
        nuitka_bool tmp_condition_result_152;
        int tmp_truth_name_94;
        CHECK_OBJECT(var_cloudflarestream_urls);
        tmp_truth_name_94 = CHECK_IF_TRUE(var_cloudflarestream_urls);
        if (tmp_truth_name_94 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3274;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_152 = tmp_truth_name_94 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_152 == NUITKA_BOOL_TRUE) {
            goto branch_yes_150;
        } else {
            goto branch_no_150;
        }
    }
    branch_yes_150:;
    {
        PyObject *tmp_called_value_167;
        PyObject *tmp_expression_value_174;
        PyObject *tmp_kw_call_arg_value_0_46;
        PyObject *tmp_kw_call_arg_value_1_43;
        PyObject *tmp_kw_call_arg_value_2_41;
        PyObject *tmp_kw_call_dict_value_0_46;
        PyObject *tmp_called_instance_257;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3275;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_174 = par_self;
        tmp_called_value_167 = LOOKUP_ATTRIBUTE(tmp_expression_value_174, mod_consts[214]);
        if (tmp_called_value_167 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3275;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_cloudflarestream_urls);
        tmp_kw_call_arg_value_0_46 = var_cloudflarestream_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_43 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_41 = var_video_title;
        tmp_called_instance_257 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[407]);

        if (unlikely(tmp_called_instance_257 == NULL)) {
            tmp_called_instance_257 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[407]);
        }

        if (tmp_called_instance_257 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_167);

            exception_lineno = 3276;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3276;
        tmp_kw_call_dict_value_0_46 = CALL_METHOD_NO_ARGS(tmp_called_instance_257, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_167);

            exception_lineno = 3276;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3275;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_46, tmp_kw_call_arg_value_1_43, tmp_kw_call_arg_value_2_41};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_46};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_167, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_167);
        Py_DECREF(tmp_kw_call_dict_value_0_46);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3275;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_150:;
    {
        PyObject *tmp_assign_source_183;
        PyObject *tmp_called_instance_258;
        PyObject *tmp_args_element_value_406;
        PyObject *tmp_args_element_value_407;
        tmp_called_instance_258 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[408]);

        if (unlikely(tmp_called_instance_258 == NULL)) {
            tmp_called_instance_258 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[408]);
        }

        if (tmp_called_instance_258 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3278;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_406 = Nuitka_Cell_GET(var_webpage);
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_args_element_value_407 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3278;
        {
            PyObject *call_args[] = {tmp_args_element_value_406, tmp_args_element_value_407};
            tmp_assign_source_183 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_258,
                mod_consts[213],
                call_args
            );
        }

        if (tmp_assign_source_183 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3278;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_peertube_urls == NULL);
        var_peertube_urls = tmp_assign_source_183;
    }
    {
        nuitka_bool tmp_condition_result_153;
        int tmp_truth_name_95;
        CHECK_OBJECT(var_peertube_urls);
        tmp_truth_name_95 = CHECK_IF_TRUE(var_peertube_urls);
        if (tmp_truth_name_95 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3279;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_153 = tmp_truth_name_95 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_153 == NUITKA_BOOL_TRUE) {
            goto branch_yes_151;
        } else {
            goto branch_no_151;
        }
    }
    branch_yes_151:;
    {
        PyObject *tmp_called_value_168;
        PyObject *tmp_expression_value_175;
        PyObject *tmp_kw_call_arg_value_0_47;
        PyObject *tmp_kw_call_arg_value_1_44;
        PyObject *tmp_kw_call_arg_value_2_42;
        PyObject *tmp_kw_call_dict_value_0_47;
        PyObject *tmp_called_instance_259;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3280;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_175 = par_self;
        tmp_called_value_168 = LOOKUP_ATTRIBUTE(tmp_expression_value_175, mod_consts[214]);
        if (tmp_called_value_168 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3280;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_peertube_urls);
        tmp_kw_call_arg_value_0_47 = var_peertube_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_44 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_42 = var_video_title;
        tmp_called_instance_259 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[408]);

        if (unlikely(tmp_called_instance_259 == NULL)) {
            tmp_called_instance_259 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[408]);
        }

        if (tmp_called_instance_259 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_168);

            exception_lineno = 3281;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3281;
        tmp_kw_call_dict_value_0_47 = CALL_METHOD_NO_ARGS(tmp_called_instance_259, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_168);

            exception_lineno = 3281;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3280;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_47, tmp_kw_call_arg_value_1_44, tmp_kw_call_arg_value_2_42};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_47};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_168, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_168);
        Py_DECREF(tmp_kw_call_dict_value_0_47);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3280;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_151:;
    {
        PyObject *tmp_assign_source_184;
        PyObject *tmp_called_instance_260;
        PyObject *tmp_args_element_value_408;
        tmp_called_instance_260 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[409]);

        if (unlikely(tmp_called_instance_260 == NULL)) {
            tmp_called_instance_260 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[409]);
        }

        if (tmp_called_instance_260 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3283;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_408 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3283;
        tmp_assign_source_184 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_260, mod_consts[213], tmp_args_element_value_408);
        if (tmp_assign_source_184 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3283;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_indavideo_urls == NULL);
        var_indavideo_urls = tmp_assign_source_184;
    }
    {
        nuitka_bool tmp_condition_result_154;
        int tmp_truth_name_96;
        CHECK_OBJECT(var_indavideo_urls);
        tmp_truth_name_96 = CHECK_IF_TRUE(var_indavideo_urls);
        if (tmp_truth_name_96 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3284;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_154 = tmp_truth_name_96 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_154 == NUITKA_BOOL_TRUE) {
            goto branch_yes_152;
        } else {
            goto branch_no_152;
        }
    }
    branch_yes_152:;
    {
        PyObject *tmp_called_value_169;
        PyObject *tmp_expression_value_176;
        PyObject *tmp_kw_call_arg_value_0_48;
        PyObject *tmp_kw_call_arg_value_1_45;
        PyObject *tmp_kw_call_arg_value_2_43;
        PyObject *tmp_kw_call_dict_value_0_48;
        PyObject *tmp_called_instance_261;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3285;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_176 = par_self;
        tmp_called_value_169 = LOOKUP_ATTRIBUTE(tmp_expression_value_176, mod_consts[214]);
        if (tmp_called_value_169 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3285;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_indavideo_urls);
        tmp_kw_call_arg_value_0_48 = var_indavideo_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_45 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_43 = var_video_title;
        tmp_called_instance_261 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[409]);

        if (unlikely(tmp_called_instance_261 == NULL)) {
            tmp_called_instance_261 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[409]);
        }

        if (tmp_called_instance_261 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_169);

            exception_lineno = 3286;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3286;
        tmp_kw_call_dict_value_0_48 = CALL_METHOD_NO_ARGS(tmp_called_instance_261, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_169);

            exception_lineno = 3286;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3285;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_48, tmp_kw_call_arg_value_1_45, tmp_kw_call_arg_value_2_43};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_48};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_169, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_169);
        Py_DECREF(tmp_kw_call_dict_value_0_48);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3285;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_152:;
    {
        PyObject *tmp_assign_source_185;
        PyObject *tmp_called_instance_262;
        PyObject *tmp_args_element_value_409;
        tmp_called_instance_262 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[410]);

        if (unlikely(tmp_called_instance_262 == NULL)) {
            tmp_called_instance_262 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[410]);
        }

        if (tmp_called_instance_262 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3288;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_409 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3288;
        tmp_assign_source_185 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_262, mod_consts[213], tmp_args_element_value_409);
        if (tmp_assign_source_185 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3288;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_apa_urls == NULL);
        var_apa_urls = tmp_assign_source_185;
    }
    {
        nuitka_bool tmp_condition_result_155;
        int tmp_truth_name_97;
        CHECK_OBJECT(var_apa_urls);
        tmp_truth_name_97 = CHECK_IF_TRUE(var_apa_urls);
        if (tmp_truth_name_97 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3289;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_155 = tmp_truth_name_97 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_155 == NUITKA_BOOL_TRUE) {
            goto branch_yes_153;
        } else {
            goto branch_no_153;
        }
    }
    branch_yes_153:;
    {
        PyObject *tmp_called_value_170;
        PyObject *tmp_expression_value_177;
        PyObject *tmp_kw_call_arg_value_0_49;
        PyObject *tmp_kw_call_arg_value_1_46;
        PyObject *tmp_kw_call_arg_value_2_44;
        PyObject *tmp_kw_call_dict_value_0_49;
        PyObject *tmp_called_instance_263;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3290;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_177 = par_self;
        tmp_called_value_170 = LOOKUP_ATTRIBUTE(tmp_expression_value_177, mod_consts[214]);
        if (tmp_called_value_170 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3290;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_apa_urls);
        tmp_kw_call_arg_value_0_49 = var_apa_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_46 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_44 = var_video_title;
        tmp_called_instance_263 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[410]);

        if (unlikely(tmp_called_instance_263 == NULL)) {
            tmp_called_instance_263 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[410]);
        }

        if (tmp_called_instance_263 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_170);

            exception_lineno = 3291;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3291;
        tmp_kw_call_dict_value_0_49 = CALL_METHOD_NO_ARGS(tmp_called_instance_263, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_170);

            exception_lineno = 3291;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3290;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_49, tmp_kw_call_arg_value_1_46, tmp_kw_call_arg_value_2_44};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_49};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_170, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_170);
        Py_DECREF(tmp_kw_call_dict_value_0_49);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3290;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_153:;
    {
        PyObject *tmp_assign_source_186;
        PyObject *tmp_called_instance_264;
        PyObject *tmp_args_element_value_410;
        tmp_called_instance_264 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[411]);

        if (unlikely(tmp_called_instance_264 == NULL)) {
            tmp_called_instance_264 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[411]);
        }

        if (tmp_called_instance_264 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3293;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_410 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3293;
        tmp_assign_source_186 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_264, mod_consts[213], tmp_args_element_value_410);
        if (tmp_assign_source_186 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3293;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_foxnews_urls == NULL);
        var_foxnews_urls = tmp_assign_source_186;
    }
    {
        nuitka_bool tmp_condition_result_156;
        int tmp_truth_name_98;
        CHECK_OBJECT(var_foxnews_urls);
        tmp_truth_name_98 = CHECK_IF_TRUE(var_foxnews_urls);
        if (tmp_truth_name_98 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3294;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_156 = tmp_truth_name_98 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_156 == NUITKA_BOOL_TRUE) {
            goto branch_yes_154;
        } else {
            goto branch_no_154;
        }
    }
    branch_yes_154:;
    {
        PyObject *tmp_called_value_171;
        PyObject *tmp_expression_value_178;
        PyObject *tmp_kw_call_arg_value_0_50;
        PyObject *tmp_kw_call_arg_value_1_47;
        PyObject *tmp_kw_call_arg_value_2_45;
        PyObject *tmp_kw_call_dict_value_0_50;
        PyObject *tmp_called_instance_265;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3295;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_178 = par_self;
        tmp_called_value_171 = LOOKUP_ATTRIBUTE(tmp_expression_value_178, mod_consts[214]);
        if (tmp_called_value_171 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3295;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_foxnews_urls);
        tmp_kw_call_arg_value_0_50 = var_foxnews_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_47 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_45 = var_video_title;
        tmp_called_instance_265 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[411]);

        if (unlikely(tmp_called_instance_265 == NULL)) {
            tmp_called_instance_265 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[411]);
        }

        if (tmp_called_instance_265 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_171);

            exception_lineno = 3296;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3296;
        tmp_kw_call_dict_value_0_50 = CALL_METHOD_NO_ARGS(tmp_called_instance_265, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_171);

            exception_lineno = 3296;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3295;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_50, tmp_kw_call_arg_value_1_47, tmp_kw_call_arg_value_2_45};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_50};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_171, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_171);
        Py_DECREF(tmp_kw_call_dict_value_0_50);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3295;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_154:;
    {
        PyObject *tmp_assign_source_187;
        // Tried code:
        {
            PyObject *tmp_assign_source_188;
            PyObject *tmp_iter_arg_6;
            PyObject *tmp_called_instance_266;
            PyObject *tmp_args_element_value_411;
            PyObject *tmp_args_element_value_412;
            tmp_called_instance_266 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

            if (unlikely(tmp_called_instance_266 == NULL)) {
                tmp_called_instance_266 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
            }

            if (tmp_called_instance_266 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3298;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto try_except_handler_12;
            }
            tmp_args_element_value_411 = mod_consts[413];
            CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
            tmp_args_element_value_412 = Nuitka_Cell_GET(var_webpage);
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3298;
            {
                PyObject *call_args[] = {tmp_args_element_value_411, tmp_args_element_value_412};
                tmp_iter_arg_6 = CALL_METHOD_WITH_ARGS2(
                    tmp_called_instance_266,
                    mod_consts[412],
                    call_args
                );
            }

            if (tmp_iter_arg_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3298;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto try_except_handler_12;
            }
            tmp_assign_source_188 = MAKE_ITERATOR(tmp_iter_arg_6);
            Py_DECREF(tmp_iter_arg_6);
            if (tmp_assign_source_188 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3298;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto try_except_handler_12;
            }
            assert(tmp_listcomp_3__$0 == NULL);
            tmp_listcomp_3__$0 = tmp_assign_source_188;
        }
        {
            PyObject *tmp_assign_source_189;
            tmp_assign_source_189 = MAKE_LIST_EMPTY(0);
            assert(tmp_listcomp_3__contraction == NULL);
            tmp_listcomp_3__contraction = tmp_assign_source_189;
        }
        if (isFrameUnusable(cache_frame_da6cf79541b6741dd6f53859a67ff7a5_4)) {
            Py_XDECREF(cache_frame_da6cf79541b6741dd6f53859a67ff7a5_4);

#if _DEBUG_REFCOUNTS
            if (cache_frame_da6cf79541b6741dd6f53859a67ff7a5_4 == NULL) {
                count_active_frame_cache_instances += 1;
            } else {
                count_released_frame_cache_instances += 1;
            }
            count_allocated_frame_cache_instances += 1;
#endif
            cache_frame_da6cf79541b6741dd6f53859a67ff7a5_4 = MAKE_FUNCTION_FRAME(codeobj_da6cf79541b6741dd6f53859a67ff7a5, module_youtube_dl$extractor$generic, sizeof(void *));
#if _DEBUG_REFCOUNTS
        } else {
            count_hit_frame_cache_instances += 1;
#endif
        }
        assert(cache_frame_da6cf79541b6741dd6f53859a67ff7a5_4->m_type_description == NULL);
        frame_da6cf79541b6741dd6f53859a67ff7a5_4 = cache_frame_da6cf79541b6741dd6f53859a67ff7a5_4;


        // Push the new frame as the currently active one.
        pushFrameStack(frame_da6cf79541b6741dd6f53859a67ff7a5_4);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_da6cf79541b6741dd6f53859a67ff7a5_4) == 2); // Frame stack

        // Framed code:
        // Tried code:
        loop_start_4:;
        {
            PyObject *tmp_next_source_4;
            PyObject *tmp_assign_source_190;
            CHECK_OBJECT(tmp_listcomp_3__$0);
            tmp_next_source_4 = tmp_listcomp_3__$0;
            tmp_assign_source_190 = ITERATOR_NEXT(tmp_next_source_4);
            if (tmp_assign_source_190 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_4;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    exception_lineno = 3298;
                    goto try_except_handler_13;
                }
            }

            {
                PyObject *old = tmp_listcomp_3__iter_value_0;
                tmp_listcomp_3__iter_value_0 = tmp_assign_source_190;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_191;
            CHECK_OBJECT(tmp_listcomp_3__iter_value_0);
            tmp_assign_source_191 = tmp_listcomp_3__iter_value_0;
            {
                PyObject *old = outline_2_var_sharevideos_mobj;
                outline_2_var_sharevideos_mobj = tmp_assign_source_191;
                Py_INCREF(outline_2_var_sharevideos_mobj);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_append_list_3;
            PyObject *tmp_append_value_3;
            PyObject *tmp_called_instance_267;
            CHECK_OBJECT(tmp_listcomp_3__contraction);
            tmp_append_list_3 = tmp_listcomp_3__contraction;
            CHECK_OBJECT(outline_2_var_sharevideos_mobj);
            tmp_called_instance_267 = outline_2_var_sharevideos_mobj;
            frame_da6cf79541b6741dd6f53859a67ff7a5_4->m_frame.f_lineno = 3298;
            tmp_append_value_3 = CALL_METHOD_WITH_SINGLE_ARG(
                tmp_called_instance_267,
                mod_consts[137],
                PyTuple_GET_ITEM(mod_consts[14], 0)
            );

            if (tmp_append_value_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3298;
                type_description_2 = "o";
                goto try_except_handler_13;
            }
            assert(PyList_Check(tmp_append_list_3));
            tmp_result = LIST_APPEND1(tmp_append_list_3, tmp_append_value_3);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3298;
                type_description_2 = "o";
                goto try_except_handler_13;
            }
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3298;
            type_description_2 = "o";
            goto try_except_handler_13;
        }
        goto loop_start_4;
        loop_end_4:;
        CHECK_OBJECT(tmp_listcomp_3__contraction);
        tmp_assign_source_187 = tmp_listcomp_3__contraction;
        Py_INCREF(tmp_assign_source_187);
        goto try_return_handler_13;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_13:;
        CHECK_OBJECT(tmp_listcomp_3__$0);
        Py_DECREF(tmp_listcomp_3__$0);
        tmp_listcomp_3__$0 = NULL;
        CHECK_OBJECT(tmp_listcomp_3__contraction);
        Py_DECREF(tmp_listcomp_3__contraction);
        tmp_listcomp_3__contraction = NULL;
        Py_XDECREF(tmp_listcomp_3__iter_value_0);
        tmp_listcomp_3__iter_value_0 = NULL;
        goto frame_return_exit_4;
        // Exception handler code:
        try_except_handler_13:;
        exception_keeper_type_10 = exception_type;
        exception_keeper_value_10 = exception_value;
        exception_keeper_tb_10 = exception_tb;
        exception_keeper_lineno_10 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT(tmp_listcomp_3__$0);
        Py_DECREF(tmp_listcomp_3__$0);
        tmp_listcomp_3__$0 = NULL;
        CHECK_OBJECT(tmp_listcomp_3__contraction);
        Py_DECREF(tmp_listcomp_3__contraction);
        tmp_listcomp_3__contraction = NULL;
        Py_XDECREF(tmp_listcomp_3__iter_value_0);
        tmp_listcomp_3__iter_value_0 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_10;
        exception_value = exception_keeper_value_10;
        exception_tb = exception_keeper_tb_10;
        exception_lineno = exception_keeper_lineno_10;

        goto frame_exception_exit_4;
        // End of try:

#if 0
        RESTORE_FRAME_EXCEPTION(frame_da6cf79541b6741dd6f53859a67ff7a5_4);
#endif

        // Put the previous frame back on top.
        popFrameStack();


        goto frame_no_exception_3;

        frame_return_exit_4:;
#if 0
        RESTORE_FRAME_EXCEPTION(frame_da6cf79541b6741dd6f53859a67ff7a5_4);
#endif

        // Put the previous frame back on top.
        popFrameStack();


        goto try_return_handler_12;

        frame_exception_exit_4:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_da6cf79541b6741dd6f53859a67ff7a5_4);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_da6cf79541b6741dd6f53859a67ff7a5_4, exception_lineno);
        } else if (exception_tb->tb_frame != &frame_da6cf79541b6741dd6f53859a67ff7a5_4->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_da6cf79541b6741dd6f53859a67ff7a5_4, exception_lineno);
        }

        // Attaches locals to frame if any.
        Nuitka_Frame_AttachLocals(
            frame_da6cf79541b6741dd6f53859a67ff7a5_4,
            type_description_2,
            outline_2_var_sharevideos_mobj
        );


        // Release cached frame if used for exception.
        if (frame_da6cf79541b6741dd6f53859a67ff7a5_4 == cache_frame_da6cf79541b6741dd6f53859a67ff7a5_4) {
#if _DEBUG_REFCOUNTS
            count_active_frame_cache_instances -= 1;
            count_released_frame_cache_instances += 1;
#endif

            Py_DECREF(cache_frame_da6cf79541b6741dd6f53859a67ff7a5_4);
            cache_frame_da6cf79541b6741dd6f53859a67ff7a5_4 = NULL;
        }

        assertFrameObject(frame_da6cf79541b6741dd6f53859a67ff7a5_4);

        // Put the previous frame back on top.
        popFrameStack();


        // Return the error.
        goto nested_frame_exit_3;

        frame_no_exception_3:;
        goto skip_nested_handling_3;
        nested_frame_exit_3:;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_12;
        skip_nested_handling_3:;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_12:;
        Py_XDECREF(outline_2_var_sharevideos_mobj);
        outline_2_var_sharevideos_mobj = NULL;
        goto outline_result_4;
        // Exception handler code:
        try_except_handler_12:;
        exception_keeper_type_11 = exception_type;
        exception_keeper_value_11 = exception_value;
        exception_keeper_tb_11 = exception_tb;
        exception_keeper_lineno_11 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(outline_2_var_sharevideos_mobj);
        outline_2_var_sharevideos_mobj = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_11;
        exception_value = exception_keeper_value_11;
        exception_tb = exception_keeper_tb_11;
        exception_lineno = exception_keeper_lineno_11;

        goto outline_exception_3;
        // End of try:
        NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
        return NULL;
        outline_exception_3:;
        exception_lineno = 3298;
        goto frame_exception_exit_1;
        outline_result_4:;
        assert(var_sharevideos_urls == NULL);
        var_sharevideos_urls = tmp_assign_source_187;
    }
    {
        nuitka_bool tmp_condition_result_157;
        int tmp_truth_name_99;
        CHECK_OBJECT(var_sharevideos_urls);
        tmp_truth_name_99 = CHECK_IF_TRUE(var_sharevideos_urls);
        if (tmp_truth_name_99 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3301;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_157 = tmp_truth_name_99 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_157 == NUITKA_BOOL_TRUE) {
            goto branch_yes_155;
        } else {
            goto branch_no_155;
        }
    }
    branch_yes_155:;
    {
        PyObject *tmp_called_instance_268;
        PyObject *tmp_args_element_value_413;
        PyObject *tmp_args_element_value_414;
        PyObject *tmp_args_element_value_415;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3302;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_268 = par_self;
        CHECK_OBJECT(var_sharevideos_urls);
        tmp_args_element_value_413 = var_sharevideos_urls;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_414 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_415 = var_video_title;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3302;
        {
            PyObject *call_args[] = {tmp_args_element_value_413, tmp_args_element_value_414, tmp_args_element_value_415};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_268,
                mod_consts[214],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3302;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_155:;
    {
        PyObject *tmp_assign_source_192;
        PyObject *tmp_called_instance_269;
        PyObject *tmp_args_element_value_416;
        tmp_called_instance_269 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[414]);

        if (unlikely(tmp_called_instance_269 == NULL)) {
            tmp_called_instance_269 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[414]);
        }

        if (tmp_called_instance_269 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3305;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_416 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3305;
        tmp_assign_source_192 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_269, mod_consts[213], tmp_args_element_value_416);
        if (tmp_assign_source_192 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3305;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_viqeo_urls == NULL);
        var_viqeo_urls = tmp_assign_source_192;
    }
    {
        nuitka_bool tmp_condition_result_158;
        int tmp_truth_name_100;
        CHECK_OBJECT(var_viqeo_urls);
        tmp_truth_name_100 = CHECK_IF_TRUE(var_viqeo_urls);
        if (tmp_truth_name_100 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3306;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_158 = tmp_truth_name_100 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_158 == NUITKA_BOOL_TRUE) {
            goto branch_yes_156;
        } else {
            goto branch_no_156;
        }
    }
    branch_yes_156:;
    {
        PyObject *tmp_called_value_172;
        PyObject *tmp_expression_value_179;
        PyObject *tmp_kw_call_arg_value_0_51;
        PyObject *tmp_kw_call_arg_value_1_48;
        PyObject *tmp_kw_call_arg_value_2_46;
        PyObject *tmp_kw_call_dict_value_0_51;
        PyObject *tmp_called_instance_270;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3307;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_179 = par_self;
        tmp_called_value_172 = LOOKUP_ATTRIBUTE(tmp_expression_value_179, mod_consts[214]);
        if (tmp_called_value_172 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3307;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_viqeo_urls);
        tmp_kw_call_arg_value_0_51 = var_viqeo_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_48 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_46 = var_video_title;
        tmp_called_instance_270 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[414]);

        if (unlikely(tmp_called_instance_270 == NULL)) {
            tmp_called_instance_270 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[414]);
        }

        if (tmp_called_instance_270 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_172);

            exception_lineno = 3308;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3308;
        tmp_kw_call_dict_value_0_51 = CALL_METHOD_NO_ARGS(tmp_called_instance_270, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_172);

            exception_lineno = 3308;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3307;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_51, tmp_kw_call_arg_value_1_48, tmp_kw_call_arg_value_2_46};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_51};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_172, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_172);
        Py_DECREF(tmp_kw_call_dict_value_0_51);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3307;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_156:;
    {
        PyObject *tmp_assign_source_193;
        PyObject *tmp_called_instance_271;
        PyObject *tmp_args_element_value_417;
        tmp_called_instance_271 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[415]);

        if (unlikely(tmp_called_instance_271 == NULL)) {
            tmp_called_instance_271 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[415]);
        }

        if (tmp_called_instance_271 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3310;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_417 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3310;
        tmp_assign_source_193 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_271, mod_consts[213], tmp_args_element_value_417);
        if (tmp_assign_source_193 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3310;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_expressen_urls == NULL);
        var_expressen_urls = tmp_assign_source_193;
    }
    {
        nuitka_bool tmp_condition_result_159;
        int tmp_truth_name_101;
        CHECK_OBJECT(var_expressen_urls);
        tmp_truth_name_101 = CHECK_IF_TRUE(var_expressen_urls);
        if (tmp_truth_name_101 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3311;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_159 = tmp_truth_name_101 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_159 == NUITKA_BOOL_TRUE) {
            goto branch_yes_157;
        } else {
            goto branch_no_157;
        }
    }
    branch_yes_157:;
    {
        PyObject *tmp_called_value_173;
        PyObject *tmp_expression_value_180;
        PyObject *tmp_kw_call_arg_value_0_52;
        PyObject *tmp_kw_call_arg_value_1_49;
        PyObject *tmp_kw_call_arg_value_2_47;
        PyObject *tmp_kw_call_dict_value_0_52;
        PyObject *tmp_called_instance_272;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3312;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_180 = par_self;
        tmp_called_value_173 = LOOKUP_ATTRIBUTE(tmp_expression_value_180, mod_consts[214]);
        if (tmp_called_value_173 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3312;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_expressen_urls);
        tmp_kw_call_arg_value_0_52 = var_expressen_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_49 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_47 = var_video_title;
        tmp_called_instance_272 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[415]);

        if (unlikely(tmp_called_instance_272 == NULL)) {
            tmp_called_instance_272 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[415]);
        }

        if (tmp_called_instance_272 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_173);

            exception_lineno = 3313;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3313;
        tmp_kw_call_dict_value_0_52 = CALL_METHOD_NO_ARGS(tmp_called_instance_272, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_173);

            exception_lineno = 3313;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3312;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_52, tmp_kw_call_arg_value_1_49, tmp_kw_call_arg_value_2_47};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_52};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_173, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_173);
        Py_DECREF(tmp_kw_call_dict_value_0_52);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3312;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_157:;
    {
        PyObject *tmp_assign_source_194;
        PyObject *tmp_called_instance_273;
        PyObject *tmp_args_element_value_418;
        tmp_called_instance_273 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[416]);

        if (unlikely(tmp_called_instance_273 == NULL)) {
            tmp_called_instance_273 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[416]);
        }

        if (tmp_called_instance_273 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3315;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_418 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3315;
        tmp_assign_source_194 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_273, mod_consts[213], tmp_args_element_value_418);
        if (tmp_assign_source_194 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3315;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_zype_urls == NULL);
        var_zype_urls = tmp_assign_source_194;
    }
    {
        nuitka_bool tmp_condition_result_160;
        int tmp_truth_name_102;
        CHECK_OBJECT(var_zype_urls);
        tmp_truth_name_102 = CHECK_IF_TRUE(var_zype_urls);
        if (tmp_truth_name_102 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3316;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_160 = tmp_truth_name_102 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_160 == NUITKA_BOOL_TRUE) {
            goto branch_yes_158;
        } else {
            goto branch_no_158;
        }
    }
    branch_yes_158:;
    {
        PyObject *tmp_called_value_174;
        PyObject *tmp_expression_value_181;
        PyObject *tmp_kw_call_arg_value_0_53;
        PyObject *tmp_kw_call_arg_value_1_50;
        PyObject *tmp_kw_call_arg_value_2_48;
        PyObject *tmp_kw_call_dict_value_0_53;
        PyObject *tmp_called_instance_274;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3317;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_181 = par_self;
        tmp_called_value_174 = LOOKUP_ATTRIBUTE(tmp_expression_value_181, mod_consts[214]);
        if (tmp_called_value_174 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3317;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_zype_urls);
        tmp_kw_call_arg_value_0_53 = var_zype_urls;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_50 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_kw_call_arg_value_2_48 = var_video_title;
        tmp_called_instance_274 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[416]);

        if (unlikely(tmp_called_instance_274 == NULL)) {
            tmp_called_instance_274 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[416]);
        }

        if (tmp_called_instance_274 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_174);

            exception_lineno = 3318;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3318;
        tmp_kw_call_dict_value_0_53 = CALL_METHOD_NO_ARGS(tmp_called_instance_274, mod_consts[210]);
        if (tmp_kw_call_dict_value_0_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_174);

            exception_lineno = 3318;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3317;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_53, tmp_kw_call_arg_value_1_50, tmp_kw_call_arg_value_2_48};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_53};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS3_KWSPLIT(tmp_called_value_174, args, kw_values, mod_consts[218]);
        }

        Py_DECREF(tmp_called_value_174);
        Py_DECREF(tmp_kw_call_dict_value_0_53);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3317;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_158:;
    {
        PyObject *tmp_assign_source_195;
        PyObject *tmp_called_value_175;
        PyObject *tmp_expression_value_182;
        PyObject *tmp_args_value_16;
        PyObject *tmp_tuple_element_17;
        PyObject *tmp_kwargs_value_16;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3321;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_182 = par_self;
        tmp_called_value_175 = LOOKUP_ATTRIBUTE(tmp_expression_value_182, mod_consts[417]);
        if (tmp_called_value_175 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3321;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_tuple_element_17 = Nuitka_Cell_GET(par_url);
        tmp_args_value_16 = MAKE_TUPLE_EMPTY(3);
        PyTuple_SET_ITEM0(tmp_args_value_16, 0, tmp_tuple_element_17);
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_tuple_element_17 = Nuitka_Cell_GET(var_webpage);
        PyTuple_SET_ITEM0(tmp_args_value_16, 1, tmp_tuple_element_17);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_17 = var_video_id;
        PyTuple_SET_ITEM0(tmp_args_value_16, 2, tmp_tuple_element_17);
        tmp_kwargs_value_16 = DICT_COPY(mod_consts[418]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3321;
        tmp_assign_source_195 = CALL_FUNCTION(tmp_called_value_175, tmp_args_value_16, tmp_kwargs_value_16);
        Py_DECREF(tmp_called_value_175);
        Py_DECREF(tmp_args_value_16);
        Py_DECREF(tmp_kwargs_value_16);
        if (tmp_assign_source_195 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3321;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_entries == NULL);
        var_entries = tmp_assign_source_195;
    }
    {
        nuitka_bool tmp_condition_result_161;
        int tmp_truth_name_103;
        CHECK_OBJECT(var_entries);
        tmp_truth_name_103 = CHECK_IF_TRUE(var_entries);
        if (tmp_truth_name_103 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3322;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_161 = tmp_truth_name_103 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_161 == NUITKA_BOOL_TRUE) {
            goto branch_yes_159;
        } else {
            goto branch_no_159;
        }
    }
    branch_yes_159:;
    {
        bool tmp_condition_result_162;
        PyObject *tmp_cmp_expr_left_54;
        nuitka_digit tmp_cmp_expr_right_54;
        PyObject *tmp_len_arg_1;
        CHECK_OBJECT(var_entries);
        tmp_len_arg_1 = var_entries;
        tmp_cmp_expr_left_54 = BUILTIN_LEN(tmp_len_arg_1);
        if (tmp_cmp_expr_left_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3323;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_cmp_expr_right_54 = 1;
        tmp_condition_result_162 = RICH_COMPARE_EQ_CBOOL_LONG_DIGIT(tmp_cmp_expr_left_54, tmp_cmp_expr_right_54);
        Py_DECREF(tmp_cmp_expr_left_54);
        if (tmp_condition_result_162 != false) {
            goto branch_yes_160;
        } else {
            goto branch_no_160;
        }
    }
    branch_yes_160:;
    {
        PyObject *tmp_called_value_176;
        PyObject *tmp_expression_value_183;
        PyObject *tmp_expression_value_184;
        PyObject *tmp_subscript_value_9;
        PyObject *tmp_call_result_26;
        PyObject *tmp_args_element_value_419;
        PyObject *tmp_dict_key_17;
        PyObject *tmp_dict_value_17;
        CHECK_OBJECT(var_entries);
        tmp_expression_value_184 = var_entries;
        tmp_subscript_value_9 = mod_consts[28];
        tmp_expression_value_183 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_value_184, tmp_subscript_value_9, 0);
        if (tmp_expression_value_183 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3324;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_176 = LOOKUP_ATTRIBUTE(tmp_expression_value_183, mod_consts[206]);
        Py_DECREF(tmp_expression_value_183);
        if (tmp_called_value_176 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3324;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_17 = mod_consts[58];
        CHECK_OBJECT(var_video_id);
        tmp_dict_value_17 = var_video_id;
        tmp_args_element_value_419 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_args_element_value_419, tmp_dict_key_17, tmp_dict_value_17);
        assert(!(tmp_res != 0));
        tmp_dict_key_17 = mod_consts[34];
        CHECK_OBJECT(var_video_title);
        tmp_dict_value_17 = var_video_title;
        tmp_res = PyDict_SetItem(tmp_args_element_value_419, tmp_dict_key_17, tmp_dict_value_17);
        assert(!(tmp_res != 0));
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3324;
        tmp_call_result_26 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_176, tmp_args_element_value_419);
        Py_DECREF(tmp_called_value_176);
        Py_DECREF(tmp_args_element_value_419);
        if (tmp_call_result_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3324;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_26);
    }
    goto branch_end_160;
    branch_no_160:;
    {
        PyObject *tmp_assign_source_196;
        PyObject *tmp_iter_arg_7;
        PyObject *tmp_called_value_177;
        PyObject *tmp_args_value_17;
        PyObject *tmp_tuple_element_18;
        PyObject *tmp_kwargs_value_17;
        tmp_called_value_177 = (PyObject *)&PyEnum_Type;
        CHECK_OBJECT(var_entries);
        tmp_tuple_element_18 = var_entries;
        tmp_args_value_17 = MAKE_TUPLE_EMPTY(1);
        PyTuple_SET_ITEM0(tmp_args_value_17, 0, tmp_tuple_element_18);
        tmp_kwargs_value_17 = DICT_COPY(mod_consts[419]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3329;
        tmp_iter_arg_7 = CALL_FUNCTION(tmp_called_value_177, tmp_args_value_17, tmp_kwargs_value_17);
        Py_DECREF(tmp_args_value_17);
        Py_DECREF(tmp_kwargs_value_17);
        if (tmp_iter_arg_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3329;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_196 = MAKE_ITERATOR(tmp_iter_arg_7);
        Py_DECREF(tmp_iter_arg_7);
        if (tmp_assign_source_196 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3329;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_2__for_iterator == NULL);
        tmp_for_loop_2__for_iterator = tmp_assign_source_196;
    }
    // Tried code:
    loop_start_5:;
    {
        PyObject *tmp_next_source_5;
        PyObject *tmp_assign_source_197;
        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
        tmp_next_source_5 = tmp_for_loop_2__for_iterator;
        tmp_assign_source_197 = ITERATOR_NEXT(tmp_next_source_5);
        if (tmp_assign_source_197 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_5;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                exception_lineno = 3329;
                goto try_except_handler_14;
            }
        }

        {
            PyObject *old = tmp_for_loop_2__iter_value;
            tmp_for_loop_2__iter_value = tmp_assign_source_197;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_198;
        PyObject *tmp_iter_arg_8;
        CHECK_OBJECT(tmp_for_loop_2__iter_value);
        tmp_iter_arg_8 = tmp_for_loop_2__iter_value;
        tmp_assign_source_198 = MAKE_UNPACK_ITERATOR(tmp_iter_arg_8);
        if (tmp_assign_source_198 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3329;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_15;
        }
        {
            PyObject *old = tmp_tuple_unpack_2__source_iter;
            tmp_tuple_unpack_2__source_iter = tmp_assign_source_198;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_199;
        PyObject *tmp_unpack_3;
        CHECK_OBJECT(tmp_tuple_unpack_2__source_iter);
        tmp_unpack_3 = tmp_tuple_unpack_2__source_iter;
        tmp_assign_source_199 = UNPACK_NEXT(tmp_unpack_3, 0, 2);
        if (tmp_assign_source_199 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 3329;
            goto try_except_handler_16;
        }
        {
            PyObject *old = tmp_tuple_unpack_2__element_1;
            tmp_tuple_unpack_2__element_1 = tmp_assign_source_199;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_200;
        PyObject *tmp_unpack_4;
        CHECK_OBJECT(tmp_tuple_unpack_2__source_iter);
        tmp_unpack_4 = tmp_tuple_unpack_2__source_iter;
        tmp_assign_source_200 = UNPACK_NEXT(tmp_unpack_4, 1, 2);
        if (tmp_assign_source_200 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 3329;
            goto try_except_handler_16;
        }
        {
            PyObject *old = tmp_tuple_unpack_2__element_2;
            tmp_tuple_unpack_2__element_2 = tmp_assign_source_200;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_iterator_name_2;
        CHECK_OBJECT(tmp_tuple_unpack_2__source_iter);
        tmp_iterator_name_2 = tmp_tuple_unpack_2__source_iter;
        // Check if iterator has left-over elements.
        CHECK_OBJECT(tmp_iterator_name_2); assert(HAS_ITERNEXT(tmp_iterator_name_2));

        tmp_iterator_attempt = (*Py_TYPE(tmp_iterator_name_2)->tp_iternext)(tmp_iterator_name_2);

        if (likely(tmp_iterator_attempt == NULL)) {
            PyObject *error = GET_ERROR_OCCURRED();

            if (error != NULL) {
                if (EXCEPTION_MATCH_BOOL_SINGLE(error, PyExc_StopIteration)) {
                    CLEAR_ERROR_OCCURRED();
                } else {
                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);

                    type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                    exception_lineno = 3329;
                    goto try_except_handler_16;
                }
            }
        } else {
            Py_DECREF(tmp_iterator_attempt);

            exception_type = PyExc_ValueError;
            Py_INCREF(PyExc_ValueError);
            exception_value = mod_consts[112];
            Py_INCREF(exception_value);
            exception_tb = NULL;

            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 3329;
            goto try_except_handler_16;
        }
    }
    goto try_end_6;
    // Exception handler code:
    try_except_handler_16:;
    exception_keeper_type_12 = exception_type;
    exception_keeper_value_12 = exception_value;
    exception_keeper_tb_12 = exception_tb;
    exception_keeper_lineno_12 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_tuple_unpack_2__source_iter);
    Py_DECREF(tmp_tuple_unpack_2__source_iter);
    tmp_tuple_unpack_2__source_iter = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_12;
    exception_value = exception_keeper_value_12;
    exception_tb = exception_keeper_tb_12;
    exception_lineno = exception_keeper_lineno_12;

    goto try_except_handler_15;
    // End of try:
    try_end_6:;
    goto try_end_7;
    // Exception handler code:
    try_except_handler_15:;
    exception_keeper_type_13 = exception_type;
    exception_keeper_value_13 = exception_value;
    exception_keeper_tb_13 = exception_tb;
    exception_keeper_lineno_13 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_tuple_unpack_2__element_1);
    tmp_tuple_unpack_2__element_1 = NULL;
    Py_XDECREF(tmp_tuple_unpack_2__element_2);
    tmp_tuple_unpack_2__element_2 = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_13;
    exception_value = exception_keeper_value_13;
    exception_tb = exception_keeper_tb_13;
    exception_lineno = exception_keeper_lineno_13;

    goto try_except_handler_14;
    // End of try:
    try_end_7:;
    CHECK_OBJECT(tmp_tuple_unpack_2__source_iter);
    Py_DECREF(tmp_tuple_unpack_2__source_iter);
    tmp_tuple_unpack_2__source_iter = NULL;
    {
        PyObject *tmp_assign_source_201;
        CHECK_OBJECT(tmp_tuple_unpack_2__element_1);
        tmp_assign_source_201 = tmp_tuple_unpack_2__element_1;
        {
            PyObject *old = var_num;
            var_num = tmp_assign_source_201;
            Py_INCREF(var_num);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_2__element_1);
    tmp_tuple_unpack_2__element_1 = NULL;

    {
        PyObject *tmp_assign_source_202;
        CHECK_OBJECT(tmp_tuple_unpack_2__element_2);
        tmp_assign_source_202 = tmp_tuple_unpack_2__element_2;
        {
            PyObject *old = var_entry;
            var_entry = tmp_assign_source_202;
            Py_INCREF(var_entry);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_2__element_2);
    tmp_tuple_unpack_2__element_2 = NULL;

    {
        PyObject *tmp_called_value_178;
        PyObject *tmp_expression_value_185;
        PyObject *tmp_call_result_27;
        PyObject *tmp_args_element_value_420;
        PyObject *tmp_dict_key_18;
        PyObject *tmp_dict_value_18;
        PyObject *tmp_mod_expr_left_11;
        PyObject *tmp_mod_expr_right_11;
        PyObject *tmp_tuple_element_19;
        CHECK_OBJECT(var_entry);
        tmp_expression_value_185 = var_entry;
        tmp_called_value_178 = LOOKUP_ATTRIBUTE(tmp_expression_value_185, mod_consts[206]);
        if (tmp_called_value_178 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3330;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_14;
        }
        tmp_dict_key_18 = mod_consts[58];
        tmp_mod_expr_left_11 = mod_consts[420];
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_19 = var_video_id;
        tmp_mod_expr_right_11 = MAKE_TUPLE_EMPTY(2);
        PyTuple_SET_ITEM0(tmp_mod_expr_right_11, 0, tmp_tuple_element_19);
        CHECK_OBJECT(var_num);
        tmp_tuple_element_19 = var_num;
        PyTuple_SET_ITEM0(tmp_mod_expr_right_11, 1, tmp_tuple_element_19);
        tmp_dict_value_18 = BINARY_OPERATION_MOD_OBJECT_UNICODE_TUPLE(tmp_mod_expr_left_11, tmp_mod_expr_right_11);
        Py_DECREF(tmp_mod_expr_right_11);
        if (tmp_dict_value_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_178);

            exception_lineno = 3331;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_14;
        }
        tmp_args_element_value_420 = _PyDict_NewPresized( 2 );
        {
            PyObject *tmp_mod_expr_left_12;
            PyObject *tmp_mod_expr_right_12;
            PyObject *tmp_tuple_element_20;
            tmp_res = PyDict_SetItem(tmp_args_element_value_420, tmp_dict_key_18, tmp_dict_value_18);
            Py_DECREF(tmp_dict_value_18);
            assert(!(tmp_res != 0));
            tmp_dict_key_18 = mod_consts[34];
            tmp_mod_expr_left_12 = mod_consts[421];
            CHECK_OBJECT(var_video_title);
            tmp_tuple_element_20 = var_video_title;
            tmp_mod_expr_right_12 = MAKE_TUPLE_EMPTY(2);
            PyTuple_SET_ITEM0(tmp_mod_expr_right_12, 0, tmp_tuple_element_20);
            CHECK_OBJECT(var_num);
            tmp_tuple_element_20 = var_num;
            PyTuple_SET_ITEM0(tmp_mod_expr_right_12, 1, tmp_tuple_element_20);
            tmp_dict_value_18 = BINARY_OPERATION_MOD_OBJECT_UNICODE_TUPLE(tmp_mod_expr_left_12, tmp_mod_expr_right_12);
            Py_DECREF(tmp_mod_expr_right_12);
            if (tmp_dict_value_18 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3332;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_8;
            }
            tmp_res = PyDict_SetItem(tmp_args_element_value_420, tmp_dict_key_18, tmp_dict_value_18);
            Py_DECREF(tmp_dict_value_18);
            assert(!(tmp_res != 0));
        }
        goto dict_build_noexception_8;
        // Exception handling pass through code for dict_build:
        dict_build_exception_8:;
        Py_DECREF(tmp_called_value_178);
        Py_DECREF(tmp_args_element_value_420);
        goto try_except_handler_14;
        // Finished with no exception for dict_build:
        dict_build_noexception_8:;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3330;
        tmp_call_result_27 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_178, tmp_args_element_value_420);
        Py_DECREF(tmp_called_value_178);
        Py_DECREF(tmp_args_element_value_420);
        if (tmp_call_result_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3330;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_14;
        }
        Py_DECREF(tmp_call_result_27);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 3329;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_14;
    }
    goto loop_start_5;
    loop_end_5:;
    goto try_end_8;
    // Exception handler code:
    try_except_handler_14:;
    exception_keeper_type_14 = exception_type;
    exception_keeper_value_14 = exception_value;
    exception_keeper_tb_14 = exception_tb;
    exception_keeper_lineno_14 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_14;
    exception_value = exception_keeper_value_14;
    exception_tb = exception_keeper_tb_14;
    exception_lineno = exception_keeper_lineno_14;

    goto frame_exception_exit_1;
    // End of try:
    try_end_8:;
    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;
    branch_end_160:;
    {
        PyObject *tmp_assign_source_203;
        PyObject *tmp_iter_arg_9;
        CHECK_OBJECT(var_entries);
        tmp_iter_arg_9 = var_entries;
        tmp_assign_source_203 = MAKE_ITERATOR(tmp_iter_arg_9);
        if (tmp_assign_source_203 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3334;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_3__for_iterator == NULL);
        tmp_for_loop_3__for_iterator = tmp_assign_source_203;
    }
    // Tried code:
    loop_start_6:;
    {
        PyObject *tmp_next_source_6;
        PyObject *tmp_assign_source_204;
        CHECK_OBJECT(tmp_for_loop_3__for_iterator);
        tmp_next_source_6 = tmp_for_loop_3__for_iterator;
        tmp_assign_source_204 = ITERATOR_NEXT(tmp_next_source_6);
        if (tmp_assign_source_204 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_6;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                exception_lineno = 3334;
                goto try_except_handler_17;
            }
        }

        {
            PyObject *old = tmp_for_loop_3__iter_value;
            tmp_for_loop_3__iter_value = tmp_assign_source_204;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_205;
        CHECK_OBJECT(tmp_for_loop_3__iter_value);
        tmp_assign_source_205 = tmp_for_loop_3__iter_value;
        {
            PyObject *old = var_entry;
            var_entry = tmp_assign_source_205;
            Py_INCREF(var_entry);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_called_value_179;
        PyObject *tmp_expression_value_186;
        PyObject *tmp_call_result_28;
        PyObject *tmp_args_element_value_421;
        PyObject *tmp_expression_value_187;
        PyObject *tmp_subscript_value_10;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3335;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_17;
        }

        tmp_expression_value_186 = par_self;
        tmp_called_value_179 = LOOKUP_ATTRIBUTE(tmp_expression_value_186, mod_consts[151]);
        if (tmp_called_value_179 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3335;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_17;
        }
        CHECK_OBJECT(var_entry);
        tmp_expression_value_187 = var_entry;
        tmp_subscript_value_10 = mod_consts[153];
        tmp_args_element_value_421 = LOOKUP_SUBSCRIPT(tmp_expression_value_187, tmp_subscript_value_10);
        if (tmp_args_element_value_421 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_179);

            exception_lineno = 3335;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_17;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3335;
        tmp_call_result_28 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_179, tmp_args_element_value_421);
        Py_DECREF(tmp_called_value_179);
        Py_DECREF(tmp_args_element_value_421);
        if (tmp_call_result_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3335;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_17;
        }
        Py_DECREF(tmp_call_result_28);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 3334;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_17;
    }
    goto loop_start_6;
    loop_end_6:;
    goto try_end_9;
    // Exception handler code:
    try_except_handler_17:;
    exception_keeper_type_15 = exception_type;
    exception_keeper_value_15 = exception_value;
    exception_keeper_tb_15 = exception_tb;
    exception_keeper_lineno_15 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_15;
    exception_value = exception_keeper_value_15;
    exception_tb = exception_keeper_tb_15;
    exception_lineno = exception_keeper_lineno_15;

    goto frame_exception_exit_1;
    // End of try:
    try_end_9:;
    Py_XDECREF(tmp_for_loop_3__iter_value);
    tmp_for_loop_3__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_3__for_iterator);
    Py_DECREF(tmp_for_loop_3__for_iterator);
    tmp_for_loop_3__for_iterator = NULL;
    {
        PyObject *tmp_called_instance_275;
        PyObject *tmp_args_element_value_422;
        PyObject *tmp_args_element_value_423;
        PyObject *tmp_args_element_value_424;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3336;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_275 = par_self;
        CHECK_OBJECT(var_entries);
        tmp_args_element_value_422 = var_entries;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_423 = var_video_id;
        CHECK_OBJECT(var_video_title);
        tmp_args_element_value_424 = var_video_title;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3336;
        {
            PyObject *call_args[] = {tmp_args_element_value_422, tmp_args_element_value_423, tmp_args_element_value_424};
            tmp_return_value = CALL_METHOD_WITH_ARGS3(
                tmp_called_instance_275,
                mod_consts[181],
                call_args
            );
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3336;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_159:;
    {
        PyObject *tmp_assign_source_206;
        PyObject *tmp_called_value_180;
        PyObject *tmp_expression_value_188;
        PyObject *tmp_kw_call_arg_value_0_54;
        PyObject *tmp_kw_call_arg_value_1_51;
        PyObject *tmp_kw_call_dict_value_0_54;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3338;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_188 = par_self;
        tmp_called_value_180 = LOOKUP_ATTRIBUTE(tmp_expression_value_188, mod_consts[422]);
        if (tmp_called_value_180 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3338;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_kw_call_arg_value_0_54 = Nuitka_Cell_GET(var_webpage);
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_51 = var_video_id;
        tmp_kw_call_dict_value_0_54 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[423]);

        if (unlikely(tmp_kw_call_dict_value_0_54 == NULL)) {
            tmp_kw_call_dict_value_0_54 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[423]);
        }

        if (tmp_kw_call_dict_value_0_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_180);

            exception_lineno = 3339;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3338;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_54, tmp_kw_call_arg_value_1_51};
            PyObject *kw_values[1] = {tmp_kw_call_dict_value_0_54};
            tmp_assign_source_206 = CALL_FUNCTION_WITH_ARGS2_KWSPLIT(tmp_called_value_180, args, kw_values, mod_consts[424]);
        }

        Py_DECREF(tmp_called_value_180);
        if (tmp_assign_source_206 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3338;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_jwplayer_data == NULL);
        var_jwplayer_data = tmp_assign_source_206;
    }
    {
        nuitka_bool tmp_condition_result_163;
        int tmp_truth_name_104;
        CHECK_OBJECT(var_jwplayer_data);
        tmp_truth_name_104 = CHECK_IF_TRUE(var_jwplayer_data);
        if (tmp_truth_name_104 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3340;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_163 = tmp_truth_name_104 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_163 == NUITKA_BOOL_TRUE) {
            goto branch_yes_161;
        } else {
            goto branch_no_161;
        }
    }
    branch_yes_161:;
    // Tried code:
    {
        PyObject *tmp_assign_source_207;
        PyObject *tmp_called_value_181;
        PyObject *tmp_expression_value_189;
        PyObject *tmp_kw_call_arg_value_0_55;
        PyObject *tmp_kw_call_arg_value_1_52;
        PyObject *tmp_kw_call_dict_value_0_55;
        PyObject *tmp_kw_call_dict_value_1_8;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3342;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_18;
        }

        tmp_expression_value_189 = par_self;
        tmp_called_value_181 = LOOKUP_ATTRIBUTE(tmp_expression_value_189, mod_consts[425]);
        if (tmp_called_value_181 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3342;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_18;
        }
        CHECK_OBJECT(var_jwplayer_data);
        tmp_kw_call_arg_value_0_55 = var_jwplayer_data;
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_52 = var_video_id;
        tmp_kw_call_dict_value_0_55 = Py_False;
        CHECK_OBJECT(Nuitka_Cell_GET(par_url));
        tmp_kw_call_dict_value_1_8 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3342;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_55, tmp_kw_call_arg_value_1_52};
            PyObject *kw_values[2] = {tmp_kw_call_dict_value_0_55, tmp_kw_call_dict_value_1_8};
            tmp_assign_source_207 = CALL_FUNCTION_WITH_ARGS2_KWSPLIT(tmp_called_value_181, args, kw_values, mod_consts[426]);
        }

        Py_DECREF(tmp_called_value_181);
        if (tmp_assign_source_207 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3342;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_18;
        }
        assert(var_info == NULL);
        var_info = tmp_assign_source_207;
    }
    {
        PyObject *tmp_called_value_182;
        PyObject *tmp_args_element_value_425;
        PyObject *tmp_args_element_value_426;
        tmp_called_value_182 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[427]);

        if (unlikely(tmp_called_value_182 == NULL)) {
            tmp_called_value_182 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[427]);
        }

        if (tmp_called_value_182 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3344;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_18;
        }
        CHECK_OBJECT(var_info);
        tmp_args_element_value_425 = var_info;
        if (var_info_dict == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[152]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3344;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_18;
        }

        tmp_args_element_value_426 = var_info_dict;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3344;
        {
            PyObject *call_args[] = {tmp_args_element_value_425, tmp_args_element_value_426};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_182, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3344;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_18;
        }
        goto frame_return_exit_1;
    }
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Exception handler code:
    try_except_handler_18:;
    exception_keeper_type_16 = exception_type;
    exception_keeper_value_16 = exception_value;
    exception_keeper_tb_16 = exception_tb;
    exception_keeper_lineno_16 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Preserve existing published exception id 2.
    exception_preserved_2 = GET_CURRENT_EXCEPTION();

    if (exception_keeper_tb_16 == NULL) {
        exception_keeper_tb_16 = MAKE_TRACEBACK(frame_713f709215410de619f38bbb0405e5b8, exception_keeper_lineno_16);
    } else if (exception_keeper_lineno_16 != 0) {
        exception_keeper_tb_16 = ADD_TRACEBACK(exception_keeper_tb_16, frame_713f709215410de619f38bbb0405e5b8, exception_keeper_lineno_16);
    }

    PUBLISH_CURRENT_EXCEPTION(&exception_keeper_type_16, &exception_keeper_value_16, &exception_keeper_tb_16);
    // Tried code:
    {
        bool tmp_condition_result_164;
        PyObject *tmp_cmp_expr_left_55;
        PyObject *tmp_cmp_expr_right_55;
        tmp_cmp_expr_left_55 = EXC_TYPE(PyThreadState_GET());
        tmp_cmp_expr_right_55 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[103]);

        if (unlikely(tmp_cmp_expr_right_55 == NULL)) {
            tmp_cmp_expr_right_55 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[103]);
        }

        if (tmp_cmp_expr_right_55 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3345;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_19;
        }
        tmp_res = EXCEPTION_MATCH_BOOL(tmp_cmp_expr_left_55, tmp_cmp_expr_right_55);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3345;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_19;
        }
        tmp_condition_result_164 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_164 != false) {
            goto branch_yes_162;
        } else {
            goto branch_no_162;
        }
    }
    branch_yes_162:;
    tmp_result = RERAISE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
    if (unlikely(tmp_result == false)) {
        exception_lineno = 3341;
    }

    if (exception_tb && exception_tb->tb_frame == &frame_713f709215410de619f38bbb0405e5b8->m_frame) frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = exception_tb->tb_lineno;
    type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
    goto try_except_handler_19;
    branch_no_162:;
    goto try_end_10;
    // Exception handler code:
    try_except_handler_19:;
    exception_keeper_type_17 = exception_type;
    exception_keeper_value_17 = exception_value;
    exception_keeper_tb_17 = exception_tb;
    exception_keeper_lineno_17 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Restore previous exception id 2.
    SET_CURRENT_EXCEPTION(&exception_preserved_2);

    // Re-raise.
    exception_type = exception_keeper_type_17;
    exception_value = exception_keeper_value_17;
    exception_tb = exception_keeper_tb_17;
    exception_lineno = exception_keeper_lineno_17;

    goto frame_exception_exit_1;
    // End of try:
    try_end_10:;
    // Restore previous exception id 2.
    SET_CURRENT_EXCEPTION(&exception_preserved_2);

    goto try_end_11;
    NUITKA_CANNOT_GET_HERE("exception handler codes exits in all cases");
    return NULL;
    // End of try:
    try_end_11:;
    branch_no_161:;
    {
        PyObject *tmp_assign_source_208;
        PyObject *tmp_called_instance_276;
        PyObject *tmp_args_element_value_427;
        PyObject *tmp_args_element_value_428;
        tmp_called_instance_276 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_276 == NULL)) {
            tmp_called_instance_276 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_276 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3350;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_427 = mod_consts[428];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_428 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3350;
        {
            PyObject *call_args[] = {tmp_args_element_value_427, tmp_args_element_value_428};
            tmp_assign_source_208 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_276,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_208 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3350;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_mobj;
            assert(old != NULL);
            var_mobj = tmp_assign_source_208;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_165;
        PyObject *tmp_cmp_expr_left_56;
        PyObject *tmp_cmp_expr_right_56;
        CHECK_OBJECT(var_mobj);
        tmp_cmp_expr_left_56 = var_mobj;
        tmp_cmp_expr_right_56 = Py_None;
        tmp_condition_result_165 = (tmp_cmp_expr_left_56 != tmp_cmp_expr_right_56) ? true : false;
        if (tmp_condition_result_165 != false) {
            goto branch_yes_163;
        } else {
            goto branch_no_163;
        }
    }
    branch_yes_163:;
    {
        PyObject *tmp_assign_source_209;
        int tmp_or_left_truth_6;
        PyObject *tmp_or_left_value_6;
        PyObject *tmp_or_right_value_6;
        PyObject *tmp_called_value_183;
        PyObject *tmp_expression_value_190;
        PyObject *tmp_kw_call_arg_value_0_56;
        PyObject *tmp_called_instance_277;
        PyObject *tmp_kw_call_arg_value_1_53;
        PyObject *tmp_kw_call_dict_value_0_56;
        PyObject *tmp_kw_call_dict_value_1_9;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3354;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_190 = par_self;
        tmp_called_value_183 = LOOKUP_ATTRIBUTE(tmp_expression_value_190, mod_consts[264]);
        if (tmp_called_value_183 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3354;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_mobj);
        tmp_called_instance_277 = var_mobj;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3355;
        tmp_kw_call_arg_value_0_56 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_277,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[246], 0)
        );

        if (tmp_kw_call_arg_value_0_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_183);

            exception_lineno = 3355;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_video_id);
        tmp_kw_call_arg_value_1_53 = var_video_id;
        tmp_kw_call_dict_value_0_56 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[423]);

        if (unlikely(tmp_kw_call_dict_value_0_56 == NULL)) {
            tmp_kw_call_dict_value_0_56 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[423]);
        }

        if (tmp_kw_call_dict_value_0_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_183);
            Py_DECREF(tmp_kw_call_arg_value_0_56);

            exception_lineno = 3355;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_kw_call_dict_value_1_9 = Py_False;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3354;
        {
            PyObject *args[] = {tmp_kw_call_arg_value_0_56, tmp_kw_call_arg_value_1_53};
            PyObject *kw_values[2] = {tmp_kw_call_dict_value_0_56, tmp_kw_call_dict_value_1_9};
            tmp_or_left_value_6 = CALL_FUNCTION_WITH_ARGS2_KWSPLIT(tmp_called_value_183, args, kw_values, mod_consts[429]);
        }

        Py_DECREF(tmp_called_value_183);
        Py_DECREF(tmp_kw_call_arg_value_0_56);
        if (tmp_or_left_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3354;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_or_left_truth_6 = CHECK_IF_TRUE(tmp_or_left_value_6);
        if (tmp_or_left_truth_6 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_or_left_value_6);

            exception_lineno = 3354;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_or_left_truth_6 == 1) {
            goto or_left_6;
        } else {
            goto or_right_6;
        }
        or_right_6:;
        Py_DECREF(tmp_or_left_value_6);
        tmp_or_right_value_6 = MAKE_LIST_EMPTY(0);
        tmp_assign_source_209 = tmp_or_right_value_6;
        goto or_end_6;
        or_left_6:;
        tmp_assign_source_209 = tmp_or_left_value_6;
        or_end_6:;
        assert(var_sources == NULL);
        var_sources = tmp_assign_source_209;
    }
    {
        bool tmp_condition_result_166;
        PyObject *tmp_operand_value_7;
        PyObject *tmp_isinstance_inst_1;
        PyObject *tmp_isinstance_cls_1;
        CHECK_OBJECT(var_sources);
        tmp_isinstance_inst_1 = var_sources;
        tmp_isinstance_cls_1 = (PyObject *)&PyList_Type;
        tmp_res = PyObject_IsInstance(tmp_isinstance_inst_1, tmp_isinstance_cls_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3357;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_operand_value_7 = (tmp_res != 0) ? Py_True : Py_False;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_7);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3357;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_166 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_166 != false) {
            goto branch_yes_164;
        } else {
            goto branch_no_164;
        }
    }
    branch_yes_164:;
    {
        PyObject *tmp_assign_source_210;
        PyObject *tmp_list_element_2;
        CHECK_OBJECT(var_sources);
        tmp_list_element_2 = var_sources;
        tmp_assign_source_210 = MAKE_LIST_EMPTY(1);
        PyList_SET_ITEM0(tmp_assign_source_210, 0, tmp_list_element_2);
        {
            PyObject *old = var_sources;
            assert(old != NULL);
            var_sources = tmp_assign_source_210;
            Py_DECREF(old);
        }

    }
    branch_no_164:;
    {
        PyObject *tmp_assign_source_211;
        tmp_assign_source_211 = MAKE_LIST_EMPTY(0);
        assert(var_formats == NULL);
        var_formats = tmp_assign_source_211;
    }
    {
        PyObject *tmp_assign_source_212;
        PyObject *tmp_iter_arg_10;
        CHECK_OBJECT(var_sources);
        tmp_iter_arg_10 = var_sources;
        tmp_assign_source_212 = MAKE_ITERATOR(tmp_iter_arg_10);
        if (tmp_assign_source_212 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3360;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_4__for_iterator == NULL);
        tmp_for_loop_4__for_iterator = tmp_assign_source_212;
    }
    // Tried code:
    loop_start_7:;
    {
        PyObject *tmp_next_source_7;
        PyObject *tmp_assign_source_213;
        CHECK_OBJECT(tmp_for_loop_4__for_iterator);
        tmp_next_source_7 = tmp_for_loop_4__for_iterator;
        tmp_assign_source_213 = ITERATOR_NEXT(tmp_next_source_7);
        if (tmp_assign_source_213 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_7;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                exception_lineno = 3360;
                goto try_except_handler_20;
            }
        }

        {
            PyObject *old = tmp_for_loop_4__iter_value;
            tmp_for_loop_4__iter_value = tmp_assign_source_213;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_214;
        CHECK_OBJECT(tmp_for_loop_4__iter_value);
        tmp_assign_source_214 = tmp_for_loop_4__iter_value;
        {
            PyObject *old = var_source;
            var_source = tmp_assign_source_214;
            Py_INCREF(var_source);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_215;
        PyObject *tmp_called_value_184;
        PyObject *tmp_expression_value_191;
        CHECK_OBJECT(var_source);
        tmp_expression_value_191 = var_source;
        tmp_called_value_184 = LOOKUP_ATTRIBUTE(tmp_expression_value_191, mod_consts[13]);
        if (tmp_called_value_184 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3361;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3361;
        tmp_assign_source_215 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_184, mod_consts[430]);

        Py_DECREF(tmp_called_value_184);
        if (tmp_assign_source_215 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3361;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        {
            PyObject *old = var_src;
            var_src = tmp_assign_source_215;
            Py_XDECREF(old);
        }

    }
    {
        bool tmp_condition_result_167;
        int tmp_or_left_truth_7;
        bool tmp_or_left_value_7;
        bool tmp_or_right_value_7;
        PyObject *tmp_operand_value_8;
        PyObject *tmp_operand_value_9;
        PyObject *tmp_isinstance_inst_2;
        PyObject *tmp_isinstance_cls_2;
        CHECK_OBJECT(var_src);
        tmp_operand_value_8 = var_src;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_8);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3362;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_or_left_value_7 = (tmp_res == 0) ? true : false;
        tmp_or_left_truth_7 = tmp_or_left_value_7 != false ? 1 : 0;
        if (tmp_or_left_truth_7 == 1) {
            goto or_left_7;
        } else {
            goto or_right_7;
        }
        or_right_7:;
        CHECK_OBJECT(var_src);
        tmp_isinstance_inst_2 = var_src;
        tmp_isinstance_cls_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[136]);

        if (unlikely(tmp_isinstance_cls_2 == NULL)) {
            tmp_isinstance_cls_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[136]);
        }

        if (tmp_isinstance_cls_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3362;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_res = PyObject_IsInstance(tmp_isinstance_inst_2, tmp_isinstance_cls_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3362;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_operand_value_9 = (tmp_res != 0) ? Py_True : Py_False;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_9);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3362;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_or_right_value_7 = (tmp_res == 0) ? true : false;
        tmp_condition_result_167 = tmp_or_right_value_7;
        goto or_end_7;
        or_left_7:;
        tmp_condition_result_167 = tmp_or_left_value_7;
        or_end_7:;
        if (tmp_condition_result_167 != false) {
            goto branch_yes_165;
        } else {
            goto branch_no_165;
        }
    }
    branch_yes_165:;
    goto loop_start_7;
    branch_no_165:;
    {
        PyObject *tmp_assign_source_216;
        PyObject *tmp_called_value_185;
        PyObject *tmp_expression_value_192;
        PyObject *tmp_args_element_value_429;
        PyObject *tmp_args_element_value_430;
        tmp_expression_value_192 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[67]);

        if (unlikely(tmp_expression_value_192 == NULL)) {
            tmp_expression_value_192 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[67]);
        }

        if (tmp_expression_value_192 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3364;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_called_value_185 = LOOKUP_ATTRIBUTE(tmp_expression_value_192, mod_consts[68]);
        if (tmp_called_value_185 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3364;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        if (Nuitka_Cell_GET(par_url) == NULL) {
            Py_DECREF(tmp_called_value_185);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[33]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3364;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_args_element_value_429 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_src);
        tmp_args_element_value_430 = var_src;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3364;
        {
            PyObject *call_args[] = {tmp_args_element_value_429, tmp_args_element_value_430};
            tmp_assign_source_216 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_185, call_args);
        }

        Py_DECREF(tmp_called_value_185);
        if (tmp_assign_source_216 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3364;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        {
            PyObject *old = var_src;
            assert(old != NULL);
            var_src = tmp_assign_source_216;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_217;
        PyObject *tmp_called_value_186;
        PyObject *tmp_expression_value_193;
        CHECK_OBJECT(var_source);
        tmp_expression_value_193 = var_source;
        tmp_called_value_186 = LOOKUP_ATTRIBUTE(tmp_expression_value_193, mod_consts[13]);
        if (tmp_called_value_186 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3365;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3365;
        tmp_assign_source_217 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_186, mod_consts[147]);

        Py_DECREF(tmp_called_value_186);
        if (tmp_assign_source_217 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3365;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        {
            PyObject *old = var_src_type;
            var_src_type = tmp_assign_source_217;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_168;
        PyObject *tmp_isinstance_inst_3;
        PyObject *tmp_isinstance_cls_3;
        CHECK_OBJECT(var_src_type);
        tmp_isinstance_inst_3 = var_src_type;
        tmp_isinstance_cls_3 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[136]);

        if (unlikely(tmp_isinstance_cls_3 == NULL)) {
            tmp_isinstance_cls_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[136]);
        }

        if (tmp_isinstance_cls_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3366;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_res = PyObject_IsInstance(tmp_isinstance_inst_3, tmp_isinstance_cls_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3366;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_condition_result_168 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_168 == NUITKA_BOOL_TRUE) {
            goto branch_yes_166;
        } else {
            goto branch_no_166;
        }
    }
    branch_yes_166:;
    {
        PyObject *tmp_assign_source_218;
        PyObject *tmp_called_value_187;
        PyObject *tmp_expression_value_194;
        CHECK_OBJECT(var_src_type);
        tmp_expression_value_194 = var_src_type;
        tmp_called_value_187 = LOOKUP_ATTRIBUTE(tmp_expression_value_194, mod_consts[24]);
        if (tmp_called_value_187 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3367;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3367;
        tmp_assign_source_218 = CALL_FUNCTION_NO_ARGS(tmp_called_value_187);
        Py_DECREF(tmp_called_value_187);
        if (tmp_assign_source_218 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3367;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        {
            PyObject *old = var_src_type;
            assert(old != NULL);
            var_src_type = tmp_assign_source_218;
            Py_DECREF(old);
        }

    }
    branch_no_166:;
    {
        PyObject *tmp_assign_source_219;
        PyObject *tmp_called_value_188;
        PyObject *tmp_expression_value_195;
        PyObject *tmp_called_value_189;
        PyObject *tmp_args_element_value_431;
        tmp_called_value_189 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[431]);

        if (unlikely(tmp_called_value_189 == NULL)) {
            tmp_called_value_189 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[431]);
        }

        if (tmp_called_value_189 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3368;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        CHECK_OBJECT(var_src);
        tmp_args_element_value_431 = var_src;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3368;
        tmp_expression_value_195 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_189, tmp_args_element_value_431);
        if (tmp_expression_value_195 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3368;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_called_value_188 = LOOKUP_ATTRIBUTE(tmp_expression_value_195, mod_consts[24]);
        Py_DECREF(tmp_expression_value_195);
        if (tmp_called_value_188 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3368;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3368;
        tmp_assign_source_219 = CALL_FUNCTION_NO_ARGS(tmp_called_value_188);
        Py_DECREF(tmp_called_value_188);
        if (tmp_assign_source_219 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3368;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        {
            PyObject *old = var_ext;
            var_ext = tmp_assign_source_219;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_169;
        PyObject *tmp_cmp_expr_left_57;
        PyObject *tmp_cmp_expr_right_57;
        CHECK_OBJECT(var_src_type);
        tmp_cmp_expr_left_57 = var_src_type;
        tmp_cmp_expr_right_57 = mod_consts[432];
        tmp_condition_result_169 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_57, tmp_cmp_expr_right_57);
        if (tmp_condition_result_169 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3369;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        if (tmp_condition_result_169 == NUITKA_BOOL_TRUE) {
            goto branch_yes_167;
        } else {
            goto branch_no_167;
        }
    }
    branch_yes_167:;
    {
        PyObject *tmp_called_value_190;
        PyObject *tmp_expression_value_196;
        PyObject *tmp_args_element_value_432;
        PyObject *tmp_args_element_value_433;
        PyObject *tmp_called_instance_278;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3370;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_expression_value_196 = par_self;
        tmp_called_value_190 = LOOKUP_ATTRIBUTE(tmp_expression_value_196, mod_consts[87]);
        if (tmp_called_value_190 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3370;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        CHECK_OBJECT(var_src);
        tmp_args_element_value_432 = var_src;
        tmp_called_instance_278 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[232]);

        if (unlikely(tmp_called_instance_278 == NULL)) {
            tmp_called_instance_278 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[232]);
        }

        if (tmp_called_instance_278 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_190);

            exception_lineno = 3370;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3370;
        tmp_args_element_value_433 = CALL_METHOD_NO_ARGS(tmp_called_instance_278, mod_consts[210]);
        if (tmp_args_element_value_433 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_190);

            exception_lineno = 3370;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3370;
        {
            PyObject *call_args[] = {tmp_args_element_value_432, tmp_args_element_value_433};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_190, call_args);
        }

        Py_DECREF(tmp_called_value_190);
        Py_DECREF(tmp_args_element_value_433);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3370;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        goto try_return_handler_20;
    }
    branch_no_167:;
    {
        nuitka_bool tmp_condition_result_170;
        int tmp_or_left_truth_8;
        nuitka_bool tmp_or_left_value_8;
        nuitka_bool tmp_or_right_value_8;
        PyObject *tmp_cmp_expr_left_58;
        PyObject *tmp_cmp_expr_right_58;
        PyObject *tmp_cmp_expr_left_59;
        PyObject *tmp_cmp_expr_right_59;
        CHECK_OBJECT(var_src_type);
        tmp_cmp_expr_left_58 = var_src_type;
        tmp_cmp_expr_right_58 = mod_consts[433];
        tmp_or_left_value_8 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_58, tmp_cmp_expr_right_58);
        if (tmp_or_left_value_8 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3371;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_or_left_truth_8 = tmp_or_left_value_8 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_8 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3371;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        if (tmp_or_left_truth_8 == 1) {
            goto or_left_8;
        } else {
            goto or_right_8;
        }
        or_right_8:;
        CHECK_OBJECT(var_ext);
        tmp_cmp_expr_left_59 = var_ext;
        tmp_cmp_expr_right_59 = mod_consts[434];
        tmp_or_right_value_8 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_59, tmp_cmp_expr_right_59);
        if (tmp_or_right_value_8 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3371;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_condition_result_170 = tmp_or_right_value_8;
        goto or_end_8;
        or_left_8:;
        tmp_condition_result_170 = tmp_or_left_value_8;
        or_end_8:;
        if (tmp_condition_result_170 == NUITKA_BOOL_TRUE) {
            goto branch_yes_168;
        } else {
            goto branch_no_168;
        }
    }
    branch_yes_168:;
    {
        PyObject *tmp_called_value_191;
        PyObject *tmp_expression_value_197;
        PyObject *tmp_call_result_29;
        PyObject *tmp_args_element_value_434;
        PyObject *tmp_called_value_192;
        PyObject *tmp_expression_value_198;
        PyObject *tmp_args_value_18;
        PyObject *tmp_tuple_element_21;
        PyObject *tmp_kwargs_value_18;
        if (var_formats == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[153]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3372;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_expression_value_197 = var_formats;
        tmp_called_value_191 = LOOKUP_ATTRIBUTE(tmp_expression_value_197, mod_consts[435]);
        if (tmp_called_value_191 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3372;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_191);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3372;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_expression_value_198 = par_self;
        tmp_called_value_192 = LOOKUP_ATTRIBUTE(tmp_expression_value_198, mod_consts[436]);
        if (tmp_called_value_192 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_191);

            exception_lineno = 3372;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        CHECK_OBJECT(var_src);
        tmp_tuple_element_21 = var_src;
        tmp_args_value_18 = MAKE_TUPLE_EMPTY(2);
        PyTuple_SET_ITEM0(tmp_args_value_18, 0, tmp_tuple_element_21);
        if (var_video_id == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[437]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3373;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto tuple_build_exception_1;
        }

        tmp_tuple_element_21 = var_video_id;
        PyTuple_SET_ITEM0(tmp_args_value_18, 1, tmp_tuple_element_21);
        goto tuple_build_noexception_1;
        // Exception handling pass through code for tuple_build:
        tuple_build_exception_1:;
        Py_DECREF(tmp_called_value_191);
        Py_DECREF(tmp_called_value_192);
        Py_DECREF(tmp_args_value_18);
        goto try_except_handler_20;
        // Finished with no exception for tuple_build:
        tuple_build_noexception_1:;
        tmp_kwargs_value_18 = DICT_COPY(mod_consts[438]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3372;
        tmp_args_element_value_434 = CALL_FUNCTION(tmp_called_value_192, tmp_args_value_18, tmp_kwargs_value_18);
        Py_DECREF(tmp_called_value_192);
        Py_DECREF(tmp_args_value_18);
        Py_DECREF(tmp_kwargs_value_18);
        if (tmp_args_element_value_434 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_191);

            exception_lineno = 3372;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3372;
        tmp_call_result_29 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_191, tmp_args_element_value_434);
        Py_DECREF(tmp_called_value_191);
        Py_DECREF(tmp_args_element_value_434);
        if (tmp_call_result_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3372;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        Py_DECREF(tmp_call_result_29);
    }
    goto branch_end_168;
    branch_no_168:;
    {
        nuitka_bool tmp_condition_result_171;
        int tmp_or_left_truth_9;
        nuitka_bool tmp_or_left_value_9;
        nuitka_bool tmp_or_right_value_9;
        PyObject *tmp_cmp_expr_left_60;
        PyObject *tmp_cmp_expr_right_60;
        PyObject *tmp_cmp_expr_left_61;
        PyObject *tmp_cmp_expr_right_61;
        CHECK_OBJECT(var_src_type);
        tmp_cmp_expr_left_60 = var_src_type;
        tmp_cmp_expr_right_60 = mod_consts[439];
        tmp_or_left_value_9 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_60, tmp_cmp_expr_right_60);
        if (tmp_or_left_value_9 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3374;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_or_left_truth_9 = tmp_or_left_value_9 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_or_left_truth_9 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3374;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        if (tmp_or_left_truth_9 == 1) {
            goto or_left_9;
        } else {
            goto or_right_9;
        }
        or_right_9:;
        CHECK_OBJECT(var_ext);
        tmp_cmp_expr_left_61 = var_ext;
        tmp_cmp_expr_right_61 = mod_consts[440];
        tmp_or_right_value_9 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_61, tmp_cmp_expr_right_61);
        if (tmp_or_right_value_9 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3374;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_condition_result_171 = tmp_or_right_value_9;
        goto or_end_9;
        or_left_9:;
        tmp_condition_result_171 = tmp_or_left_value_9;
        or_end_9:;
        if (tmp_condition_result_171 == NUITKA_BOOL_TRUE) {
            goto branch_yes_169;
        } else {
            goto branch_no_169;
        }
    }
    branch_yes_169:;
    {
        PyObject *tmp_called_value_193;
        PyObject *tmp_expression_value_199;
        PyObject *tmp_call_result_30;
        PyObject *tmp_args_element_value_435;
        PyObject *tmp_called_value_194;
        PyObject *tmp_expression_value_200;
        PyObject *tmp_args_value_19;
        PyObject *tmp_tuple_element_22;
        PyObject *tmp_kwargs_value_19;
        if (var_formats == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[153]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3375;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_expression_value_199 = var_formats;
        tmp_called_value_193 = LOOKUP_ATTRIBUTE(tmp_expression_value_199, mod_consts[435]);
        if (tmp_called_value_193 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3375;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_193);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3375;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_expression_value_200 = par_self;
        tmp_called_value_194 = LOOKUP_ATTRIBUTE(tmp_expression_value_200, mod_consts[141]);
        if (tmp_called_value_194 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_193);

            exception_lineno = 3375;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        CHECK_OBJECT(var_src);
        tmp_tuple_element_22 = var_src;
        tmp_args_value_19 = MAKE_TUPLE_EMPTY(3);
        PyTuple_SET_ITEM0(tmp_args_value_19, 0, tmp_tuple_element_22);
        if (var_video_id == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[437]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3376;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto tuple_build_exception_2;
        }

        tmp_tuple_element_22 = var_video_id;
        PyTuple_SET_ITEM0(tmp_args_value_19, 1, tmp_tuple_element_22);
        tmp_tuple_element_22 = mod_consts[142];
        PyTuple_SET_ITEM0(tmp_args_value_19, 2, tmp_tuple_element_22);
        goto tuple_build_noexception_2;
        // Exception handling pass through code for tuple_build:
        tuple_build_exception_2:;
        Py_DECREF(tmp_called_value_193);
        Py_DECREF(tmp_called_value_194);
        Py_DECREF(tmp_args_value_19);
        goto try_except_handler_20;
        // Finished with no exception for tuple_build:
        tuple_build_noexception_2:;
        tmp_kwargs_value_19 = DICT_COPY(mod_consts[441]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3375;
        tmp_args_element_value_435 = CALL_FUNCTION(tmp_called_value_194, tmp_args_value_19, tmp_kwargs_value_19);
        Py_DECREF(tmp_called_value_194);
        Py_DECREF(tmp_args_value_19);
        Py_DECREF(tmp_kwargs_value_19);
        if (tmp_args_element_value_435 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_193);

            exception_lineno = 3375;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3375;
        tmp_call_result_30 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_193, tmp_args_element_value_435);
        Py_DECREF(tmp_called_value_193);
        Py_DECREF(tmp_args_element_value_435);
        if (tmp_call_result_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3375;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        Py_DECREF(tmp_call_result_30);
    }
    goto branch_end_169;
    branch_no_169:;
    {
        PyObject *tmp_called_value_195;
        PyObject *tmp_expression_value_201;
        PyObject *tmp_call_result_31;
        PyObject *tmp_args_element_value_436;
        PyObject *tmp_dict_key_19;
        PyObject *tmp_dict_value_19;
        if (var_formats == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[153]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3379;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }

        tmp_expression_value_201 = var_formats;
        tmp_called_value_195 = LOOKUP_ATTRIBUTE(tmp_expression_value_201, mod_consts[30]);
        if (tmp_called_value_195 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3379;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        tmp_dict_key_19 = mod_consts[33];
        CHECK_OBJECT(var_src);
        tmp_dict_value_19 = var_src;
        tmp_args_element_value_436 = _PyDict_NewPresized( 3 );
        {
            bool tmp_condition_result_172;
            PyObject *tmp_cmp_expr_left_62;
            PyObject *tmp_cmp_expr_right_62;
            int tmp_or_left_truth_10;
            PyObject *tmp_or_left_value_10;
            PyObject *tmp_or_right_value_10;
            PyObject *tmp_called_value_196;
            PyObject *tmp_args_element_value_437;
            PyObject *tmp_dict_key_20;
            PyObject *tmp_dict_value_20;
            PyObject *tmp_called_instance_279;
            tmp_res = PyDict_SetItem(tmp_args_element_value_436, tmp_dict_key_19, tmp_dict_value_19);
            assert(!(tmp_res != 0));
            tmp_dict_key_19 = mod_consts[442];
            CHECK_OBJECT(var_ext);
            tmp_cmp_expr_left_62 = var_ext;
            tmp_cmp_expr_right_62 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[443]);

            if (unlikely(tmp_cmp_expr_right_62 == NULL)) {
                tmp_cmp_expr_right_62 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[443]);
            }

            if (tmp_cmp_expr_right_62 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3382;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_9;
            }
            tmp_res = PySequence_Contains(tmp_cmp_expr_right_62, tmp_cmp_expr_left_62);
            if (tmp_res == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3382;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_9;
            }
            tmp_condition_result_172 = (tmp_res == 1) ? true : false;
            if (tmp_condition_result_172 != false) {
                goto condexpr_true_3;
            } else {
                goto condexpr_false_3;
            }
            condexpr_true_3:;
            tmp_called_value_196 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[444]);

            if (unlikely(tmp_called_value_196 == NULL)) {
                tmp_called_value_196 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[444]);
            }

            if (tmp_called_value_196 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3381;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_9;
            }
            CHECK_OBJECT(var_src_type);
            tmp_args_element_value_437 = var_src_type;
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3381;
            tmp_or_left_value_10 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_196, tmp_args_element_value_437);
            if (tmp_or_left_value_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3381;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_9;
            }
            tmp_or_left_truth_10 = CHECK_IF_TRUE(tmp_or_left_value_10);
            if (tmp_or_left_truth_10 == -1) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_or_left_value_10);

                exception_lineno = 3381;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_9;
            }
            if (tmp_or_left_truth_10 == 1) {
                goto or_left_10;
            } else {
                goto or_right_10;
            }
            or_right_10:;
            Py_DECREF(tmp_or_left_value_10);
            CHECK_OBJECT(var_ext);
            tmp_or_right_value_10 = var_ext;
            Py_INCREF(tmp_or_right_value_10);
            tmp_dict_value_19 = tmp_or_right_value_10;
            goto or_end_10;
            or_left_10:;
            tmp_dict_value_19 = tmp_or_left_value_10;
            or_end_10:;
            goto condexpr_end_3;
            condexpr_false_3:;
            tmp_dict_value_19 = mod_consts[142];
            Py_INCREF(tmp_dict_value_19);
            condexpr_end_3:;
            tmp_res = PyDict_SetItem(tmp_args_element_value_436, tmp_dict_key_19, tmp_dict_value_19);
            Py_DECREF(tmp_dict_value_19);
            assert(!(tmp_res != 0));
            tmp_dict_key_19 = mod_consts[445];
            tmp_dict_key_20 = mod_consts[209];
            if (var_full_response == NULL) {

                FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[159]);
                exception_tb = NULL;
                NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
                CHAIN_EXCEPTION(exception_value);

                exception_lineno = 3384;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_9;
            }

            tmp_called_instance_279 = var_full_response;
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3384;
            tmp_dict_value_20 = CALL_METHOD_NO_ARGS(tmp_called_instance_279, mod_consts[123]);
            if (tmp_dict_value_20 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3384;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_9;
            }
            tmp_dict_value_19 = _PyDict_NewPresized( 1 );
            tmp_res = PyDict_SetItem(tmp_dict_value_19, tmp_dict_key_20, tmp_dict_value_20);
            Py_DECREF(tmp_dict_value_20);
            assert(!(tmp_res != 0));
            tmp_res = PyDict_SetItem(tmp_args_element_value_436, tmp_dict_key_19, tmp_dict_value_19);
            Py_DECREF(tmp_dict_value_19);
            assert(!(tmp_res != 0));
        }
        goto dict_build_noexception_9;
        // Exception handling pass through code for dict_build:
        dict_build_exception_9:;
        Py_DECREF(tmp_called_value_195);
        Py_DECREF(tmp_args_element_value_436);
        goto try_except_handler_20;
        // Finished with no exception for dict_build:
        dict_build_noexception_9:;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3379;
        tmp_call_result_31 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_195, tmp_args_element_value_436);
        Py_DECREF(tmp_called_value_195);
        Py_DECREF(tmp_args_element_value_436);
        if (tmp_call_result_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3379;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_20;
        }
        Py_DECREF(tmp_call_result_31);
    }
    branch_end_169:;
    branch_end_168:;
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 3360;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_20;
    }
    goto loop_start_7;
    loop_end_7:;
    goto try_end_12;
    // Return handler code:
    try_return_handler_20:;
    CHECK_OBJECT(tmp_for_loop_4__iter_value);
    Py_DECREF(tmp_for_loop_4__iter_value);
    tmp_for_loop_4__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_4__for_iterator);
    Py_DECREF(tmp_for_loop_4__for_iterator);
    tmp_for_loop_4__for_iterator = NULL;
    goto frame_return_exit_1;
    // Exception handler code:
    try_except_handler_20:;
    exception_keeper_type_18 = exception_type;
    exception_keeper_value_18 = exception_value;
    exception_keeper_tb_18 = exception_tb;
    exception_keeper_lineno_18 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_4__iter_value);
    tmp_for_loop_4__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_4__for_iterator);
    Py_DECREF(tmp_for_loop_4__for_iterator);
    tmp_for_loop_4__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_18;
    exception_value = exception_keeper_value_18;
    exception_tb = exception_keeper_tb_18;
    exception_lineno = exception_keeper_lineno_18;

    goto frame_exception_exit_1;
    // End of try:
    try_end_12:;
    Py_XDECREF(tmp_for_loop_4__iter_value);
    tmp_for_loop_4__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_4__for_iterator);
    Py_DECREF(tmp_for_loop_4__for_iterator);
    tmp_for_loop_4__for_iterator = NULL;
    {
        nuitka_bool tmp_condition_result_173;
        int tmp_truth_name_105;
        if (var_formats == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[153]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3387;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_truth_name_105 = CHECK_IF_TRUE(var_formats);
        if (tmp_truth_name_105 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3387;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_173 = tmp_truth_name_105 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_173 == NUITKA_BOOL_TRUE) {
            goto branch_yes_170;
        } else {
            goto branch_no_170;
        }
    }
    branch_yes_170:;
    {
        PyObject *tmp_called_value_197;
        PyObject *tmp_expression_value_202;
        PyObject *tmp_call_result_32;
        PyObject *tmp_args_element_value_438;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3388;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_202 = par_self;
        tmp_called_value_197 = LOOKUP_ATTRIBUTE(tmp_expression_value_202, mod_consts[151]);
        if (tmp_called_value_197 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3388;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (var_formats == NULL) {
            Py_DECREF(tmp_called_value_197);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[153]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3388;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_value_438 = var_formats;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3388;
        tmp_call_result_32 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_197, tmp_args_element_value_438);
        Py_DECREF(tmp_called_value_197);
        if (tmp_call_result_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3388;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_32);
    }
    {
        PyObject *tmp_ass_subvalue_2;
        PyObject *tmp_ass_subscribed_2;
        PyObject *tmp_ass_subscript_2;
        if (var_formats == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[153]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3389;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_ass_subvalue_2 = var_formats;
        if (var_info_dict == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[152]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3389;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_ass_subscribed_2 = var_info_dict;
        tmp_ass_subscript_2 = mod_consts[153];
        tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_2, tmp_ass_subscript_2, tmp_ass_subvalue_2);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3389;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
    }
    if (var_info_dict == NULL) {

        FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[152]);
        exception_tb = NULL;
        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
        CHAIN_EXCEPTION(exception_value);

        exception_lineno = 3390;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto frame_exception_exit_1;
    }

    tmp_return_value = var_info_dict;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_170:;
    branch_no_163:;
    {
        PyObject *tmp_assign_source_220;
        PyObject *tmp_called_value_198;
        PyObject *tmp_expression_value_203;
        PyObject *tmp_args_value_20;
        PyObject *tmp_tuple_element_23;
        PyObject *tmp_kwargs_value_20;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3393;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_203 = par_self;
        tmp_called_value_198 = LOOKUP_ATTRIBUTE(tmp_expression_value_203, mod_consts[446]);
        if (tmp_called_value_198 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3393;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_tuple_element_23 = Nuitka_Cell_GET(var_webpage);
        tmp_args_value_20 = MAKE_TUPLE_EMPTY(2);
        PyTuple_SET_ITEM0(tmp_args_value_20, 0, tmp_tuple_element_23);
        if (var_video_id == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[437]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3394;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto tuple_build_exception_3;
        }

        tmp_tuple_element_23 = var_video_id;
        PyTuple_SET_ITEM0(tmp_args_value_20, 1, tmp_tuple_element_23);
        goto tuple_build_noexception_3;
        // Exception handling pass through code for tuple_build:
        tuple_build_exception_3:;
        Py_DECREF(tmp_called_value_198);
        Py_DECREF(tmp_args_value_20);
        goto frame_exception_exit_1;
        // Finished with no exception for tuple_build:
        tuple_build_noexception_3:;
        tmp_kwargs_value_20 = DEEP_COPY_DICT(mod_consts[447]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3393;
        tmp_assign_source_220 = CALL_FUNCTION(tmp_called_value_198, tmp_args_value_20, tmp_kwargs_value_20);
        Py_DECREF(tmp_called_value_198);
        Py_DECREF(tmp_args_value_20);
        Py_DECREF(tmp_kwargs_value_20);
        if (tmp_assign_source_220 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3393;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_json_ld == NULL);
        var_json_ld = tmp_assign_source_220;
    }
    {
        nuitka_bool tmp_condition_result_174;
        PyObject *tmp_called_value_199;
        PyObject *tmp_expression_value_204;
        PyObject *tmp_call_result_33;
        int tmp_truth_name_106;
        CHECK_OBJECT(var_json_ld);
        tmp_expression_value_204 = var_json_ld;
        tmp_called_value_199 = LOOKUP_ATTRIBUTE(tmp_expression_value_204, mod_consts[13]);
        if (tmp_called_value_199 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3395;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3395;
        tmp_call_result_33 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_199, mod_consts[14]);

        Py_DECREF(tmp_called_value_199);
        if (tmp_call_result_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3395;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_106 = CHECK_IF_TRUE(tmp_call_result_33);
        if (tmp_truth_name_106 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_33);

            exception_lineno = 3395;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_174 = tmp_truth_name_106 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_33);
        if (tmp_condition_result_174 == NUITKA_BOOL_TRUE) {
            goto branch_yes_171;
        } else {
            goto branch_no_171;
        }
    }
    branch_yes_171:;
    {
        PyObject *tmp_called_value_200;
        PyObject *tmp_args_element_value_439;
        PyObject *tmp_args_element_value_440;
        tmp_called_value_200 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[427]);

        if (unlikely(tmp_called_value_200 == NULL)) {
            tmp_called_value_200 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[427]);
        }

        if (tmp_called_value_200 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3396;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_json_ld);
        tmp_args_element_value_439 = var_json_ld;
        if (var_info_dict == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[152]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3396;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_value_440 = var_info_dict;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3396;
        {
            PyObject *call_args[] = {tmp_args_element_value_439, tmp_args_element_value_440};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_200, call_args);
        }

        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3396;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_171:;
    {
        PyObject *tmp_assign_source_221;


        tmp_assign_source_221 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__6_check_video();

        assert(Nuitka_Cell_GET(var_check_video) == NULL);
        PyCell_SET(var_check_video, tmp_assign_source_221);

    }
    {
        PyObject *tmp_assign_source_222;
        struct Nuitka_CellObject *tmp_closure_5[1];

        tmp_closure_5[0] = var_check_video;
        Py_INCREF(tmp_closure_5[0]);

        tmp_assign_source_222 = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__7_filter_video(tmp_closure_5);

        assert(var_filter_video == NULL);
        var_filter_video = tmp_assign_source_222;
    }
    {
        PyObject *tmp_assign_source_223;
        PyObject *tmp_called_value_201;
        PyObject *tmp_args_element_value_441;
        PyObject *tmp_called_instance_280;
        PyObject *tmp_args_element_value_442;
        PyObject *tmp_args_element_value_443;
        CHECK_OBJECT(var_filter_video);
        tmp_called_value_201 = var_filter_video;
        tmp_called_instance_280 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_280 == NULL)) {
            tmp_called_instance_280 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_280 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_442 = mod_consts[452];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_443 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3411;
        {
            PyObject *call_args[] = {tmp_args_element_value_442, tmp_args_element_value_443};
            tmp_args_element_value_441 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_280,
                mod_consts[9],
                call_args
            );
        }

        if (tmp_args_element_value_441 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3411;
        tmp_assign_source_223 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_201, tmp_args_element_value_441);
        Py_DECREF(tmp_args_element_value_441);
        if (tmp_assign_source_223 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3411;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_found == NULL);
        var_found = tmp_assign_source_223;
    }
    {
        bool tmp_condition_result_175;
        PyObject *tmp_operand_value_10;
        CHECK_OBJECT(var_found);
        tmp_operand_value_10 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_10);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3412;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_175 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_175 != false) {
            goto branch_yes_172;
        } else {
            goto branch_no_172;
        }
    }
    branch_yes_172:;
    {
        PyObject *tmp_assign_source_224;
        PyObject *tmp_called_value_202;
        PyObject *tmp_args_element_value_444;
        PyObject *tmp_called_instance_281;
        PyObject *tmp_args_element_value_445;
        PyObject *tmp_args_element_value_446;
        CHECK_OBJECT(var_filter_video);
        tmp_called_value_202 = var_filter_video;
        tmp_called_instance_281 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_281 == NULL)) {
            tmp_called_instance_281 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_281 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3414;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_445 = mod_consts[453];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_446 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3414;
        {
            PyObject *call_args[] = {tmp_args_element_value_445, tmp_args_element_value_446};
            tmp_args_element_value_444 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_281,
                mod_consts[9],
                call_args
            );
        }

        if (tmp_args_element_value_444 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3414;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3414;
        tmp_assign_source_224 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_202, tmp_args_element_value_444);
        Py_DECREF(tmp_args_element_value_444);
        if (tmp_assign_source_224 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3414;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_224;
            Py_DECREF(old);
        }

    }
    branch_no_172:;
    {
        bool tmp_condition_result_176;
        PyObject *tmp_operand_value_11;
        CHECK_OBJECT(var_found);
        tmp_operand_value_11 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_11);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3422;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_176 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_176 != false) {
            goto branch_yes_173;
        } else {
            goto branch_no_173;
        }
    }
    branch_yes_173:;
    {
        PyObject *tmp_assign_source_225;
        PyObject *tmp_called_value_203;
        PyObject *tmp_args_element_value_447;
        PyObject *tmp_called_instance_282;
        PyObject *tmp_args_element_value_448;
        PyObject *tmp_args_element_value_449;
        CHECK_OBJECT(var_filter_video);
        tmp_called_value_203 = var_filter_video;
        tmp_called_instance_282 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_282 == NULL)) {
            tmp_called_instance_282 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_282 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3424;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_448 = mod_consts[454];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_449 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3424;
        {
            PyObject *call_args[] = {tmp_args_element_value_448, tmp_args_element_value_449};
            tmp_args_element_value_447 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_282,
                mod_consts[9],
                call_args
            );
        }

        if (tmp_args_element_value_447 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3424;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3424;
        tmp_assign_source_225 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_203, tmp_args_element_value_447);
        Py_DECREF(tmp_args_element_value_447);
        if (tmp_assign_source_225 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3424;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_225;
            Py_DECREF(old);
        }

    }
    branch_no_173:;
    {
        bool tmp_condition_result_177;
        PyObject *tmp_operand_value_12;
        CHECK_OBJECT(var_found);
        tmp_operand_value_12 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_12);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3425;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_177 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_177 != false) {
            goto branch_yes_174;
        } else {
            goto branch_no_174;
        }
    }
    branch_yes_174:;
    {
        PyObject *tmp_assign_source_226;
        PyObject *tmp_called_value_204;
        PyObject *tmp_args_element_value_450;
        PyObject *tmp_called_instance_283;
        PyObject *tmp_args_element_value_451;
        PyObject *tmp_args_element_value_452;
        CHECK_OBJECT(var_filter_video);
        tmp_called_value_204 = var_filter_video;
        tmp_called_instance_283 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_283 == NULL)) {
            tmp_called_instance_283 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_283 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3427;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_451 = mod_consts[455];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_452 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3427;
        {
            PyObject *call_args[] = {tmp_args_element_value_451, tmp_args_element_value_452};
            tmp_args_element_value_450 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_283,
                mod_consts[9],
                call_args
            );
        }

        if (tmp_args_element_value_450 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3427;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3427;
        tmp_assign_source_226 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_204, tmp_args_element_value_450);
        Py_DECREF(tmp_args_element_value_450);
        if (tmp_assign_source_226 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3427;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_226;
            Py_DECREF(old);
        }

    }
    branch_no_174:;
    {
        bool tmp_condition_result_178;
        PyObject *tmp_operand_value_13;
        CHECK_OBJECT(var_found);
        tmp_operand_value_13 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_13);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3429;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_178 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_178 != false) {
            goto branch_yes_175;
        } else {
            goto branch_no_175;
        }
    }
    branch_yes_175:;
    {
        PyObject *tmp_assign_source_227;
        PyObject *tmp_called_value_205;
        PyObject *tmp_args_element_value_453;
        PyObject *tmp_called_instance_284;
        PyObject *tmp_args_element_value_454;
        PyObject *tmp_args_element_value_455;
        CHECK_OBJECT(var_filter_video);
        tmp_called_value_205 = var_filter_video;
        tmp_called_instance_284 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_284 == NULL)) {
            tmp_called_instance_284 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_284 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3431;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_454 = mod_consts[456];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_455 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3431;
        {
            PyObject *call_args[] = {tmp_args_element_value_454, tmp_args_element_value_455};
            tmp_args_element_value_453 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_284,
                mod_consts[9],
                call_args
            );
        }

        if (tmp_args_element_value_453 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3431;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3431;
        tmp_assign_source_227 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_205, tmp_args_element_value_453);
        Py_DECREF(tmp_args_element_value_453);
        if (tmp_assign_source_227 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3431;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_227;
            Py_DECREF(old);
        }

    }
    branch_no_175:;
    {
        bool tmp_condition_result_179;
        PyObject *tmp_operand_value_14;
        CHECK_OBJECT(var_found);
        tmp_operand_value_14 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_14);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3437;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_179 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_179 != false) {
            goto branch_yes_176;
        } else {
            goto branch_no_176;
        }
    }
    branch_yes_176:;
    {
        PyObject *tmp_assign_source_228;
        PyObject *tmp_called_instance_285;
        PyObject *tmp_args_element_value_456;
        PyObject *tmp_args_element_value_457;
        tmp_called_instance_285 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_285 == NULL)) {
            tmp_called_instance_285 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_285 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3439;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_456 = mod_consts[457];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_457 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3439;
        {
            PyObject *call_args[] = {tmp_args_element_value_456, tmp_args_element_value_457};
            tmp_assign_source_228 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_285,
                mod_consts[9],
                call_args
            );
        }

        if (tmp_assign_source_228 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3439;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_228;
            Py_DECREF(old);
        }

    }
    branch_no_176:;
    {
        bool tmp_condition_result_180;
        PyObject *tmp_operand_value_15;
        CHECK_OBJECT(var_found);
        tmp_operand_value_15 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_15);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3441;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_180 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_180 != false) {
            goto branch_yes_177;
        } else {
            goto branch_no_177;
        }
    }
    branch_yes_177:;
    {
        PyObject *tmp_assign_source_229;
        PyObject *tmp_called_value_206;
        PyObject *tmp_args_element_value_458;
        PyObject *tmp_called_instance_286;
        PyObject *tmp_args_element_value_459;
        PyObject *tmp_args_element_value_460;
        CHECK_OBJECT(var_filter_video);
        tmp_called_value_206 = var_filter_video;
        tmp_called_instance_286 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_286 == NULL)) {
            tmp_called_instance_286 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_286 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3446;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_459 = mod_consts[458];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_460 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3446;
        {
            PyObject *call_args[] = {tmp_args_element_value_459, tmp_args_element_value_460};
            tmp_args_element_value_458 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_286,
                mod_consts[9],
                call_args
            );
        }

        if (tmp_args_element_value_458 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3446;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3446;
        tmp_assign_source_229 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_206, tmp_args_element_value_458);
        Py_DECREF(tmp_args_element_value_458);
        if (tmp_assign_source_229 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3446;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_229;
            Py_DECREF(old);
        }

    }
    branch_no_177:;
    {
        bool tmp_condition_result_181;
        PyObject *tmp_operand_value_16;
        CHECK_OBJECT(var_found);
        tmp_operand_value_16 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_16);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3448;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_181 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_181 != false) {
            goto branch_yes_178;
        } else {
            goto branch_no_178;
        }
    }
    branch_yes_178:;
    {
        PyObject *tmp_assign_source_230;
        PyObject *tmp_called_instance_287;
        PyObject *tmp_args_element_value_461;
        PyObject *tmp_args_element_value_462;
        tmp_called_instance_287 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_287 == NULL)) {
            tmp_called_instance_287 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_287 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3451;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_461 = mod_consts[459];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_462 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3451;
        {
            PyObject *call_args[] = {tmp_args_element_value_461, tmp_args_element_value_462};
            tmp_assign_source_230 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_287,
                mod_consts[9],
                call_args
            );
        }

        if (tmp_assign_source_230 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3451;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_m_video_type == NULL);
        var_m_video_type = tmp_assign_source_230;
    }
    {
        bool tmp_condition_result_182;
        PyObject *tmp_cmp_expr_left_63;
        PyObject *tmp_cmp_expr_right_63;
        CHECK_OBJECT(var_m_video_type);
        tmp_cmp_expr_left_63 = var_m_video_type;
        tmp_cmp_expr_right_63 = Py_None;
        tmp_condition_result_182 = (tmp_cmp_expr_left_63 != tmp_cmp_expr_right_63) ? true : false;
        if (tmp_condition_result_182 != false) {
            goto branch_yes_179;
        } else {
            goto branch_no_179;
        }
    }
    branch_yes_179:;
    {
        PyObject *tmp_assign_source_231;
        PyObject *tmp_called_value_207;
        PyObject *tmp_args_element_value_463;
        PyObject *tmp_called_instance_288;
        PyObject *tmp_args_element_value_464;
        PyObject *tmp_args_element_value_465;
        CHECK_OBJECT(var_filter_video);
        tmp_called_value_207 = var_filter_video;
        tmp_called_instance_288 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_288 == NULL)) {
            tmp_called_instance_288 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_288 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3454;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_464 = mod_consts[460];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_465 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3454;
        {
            PyObject *call_args[] = {tmp_args_element_value_464, tmp_args_element_value_465};
            tmp_args_element_value_463 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_288,
                mod_consts[9],
                call_args
            );
        }

        if (tmp_args_element_value_463 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3454;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3454;
        tmp_assign_source_231 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_207, tmp_args_element_value_463);
        Py_DECREF(tmp_args_element_value_463);
        if (tmp_assign_source_231 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3454;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_231;
            Py_DECREF(old);
        }

    }
    branch_no_179:;
    branch_no_178:;
    {
        bool tmp_condition_result_183;
        PyObject *tmp_operand_value_17;
        CHECK_OBJECT(var_found);
        tmp_operand_value_17 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_17);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3455;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_183 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_183 != false) {
            goto branch_yes_180;
        } else {
            goto branch_no_180;
        }
    }
    branch_yes_180:;
    {
        PyObject *tmp_assign_source_232;
        PyObject *tmp_called_instance_289;
        PyObject *tmp_args_element_value_466;
        PyObject *tmp_args_element_value_467;
        tmp_called_instance_289 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_289 == NULL)) {
            tmp_called_instance_289 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_289 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3457;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_466 = mod_consts[461];
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_args_element_value_467 = Nuitka_Cell_GET(var_webpage);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3457;
        {
            PyObject *call_args[] = {tmp_args_element_value_466, tmp_args_element_value_467};
            tmp_assign_source_232 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_289,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_232 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3457;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_232;
            Py_DECREF(old);
        }

    }
    {
        bool tmp_condition_result_184;
        PyObject *tmp_operand_value_18;
        CHECK_OBJECT(var_found);
        tmp_operand_value_18 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_18);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3461;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_184 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_184 != false) {
            goto branch_yes_181;
        } else {
            goto branch_no_181;
        }
    }
    branch_yes_181:;
    {
        PyObject *tmp_assign_source_233;
        PyObject *tmp_called_value_208;
        PyObject *tmp_expression_value_205;
        PyObject *tmp_expression_value_206;
        if (var_head_response == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[127]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3463;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_206 = var_head_response;
        tmp_expression_value_205 = LOOKUP_ATTRIBUTE(tmp_expression_value_206, mod_consts[132]);
        if (tmp_expression_value_205 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3463;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_208 = LOOKUP_ATTRIBUTE(tmp_expression_value_205, mod_consts[13]);
        Py_DECREF(tmp_expression_value_205);
        if (tmp_called_value_208 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3463;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3463;
        tmp_assign_source_233 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_208, mod_consts[462]);

        Py_DECREF(tmp_called_value_208);
        if (tmp_assign_source_233 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3463;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_refresh_header == NULL);
        var_refresh_header = tmp_assign_source_233;
    }
    {
        nuitka_bool tmp_condition_result_185;
        int tmp_truth_name_107;
        CHECK_OBJECT(var_refresh_header);
        tmp_truth_name_107 = CHECK_IF_TRUE(var_refresh_header);
        if (tmp_truth_name_107 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3464;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_185 = tmp_truth_name_107 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_185 == NUITKA_BOOL_TRUE) {
            goto branch_yes_182;
        } else {
            goto branch_no_182;
        }
    }
    branch_yes_182:;
    {
        PyObject *tmp_assign_source_234;
        PyObject *tmp_called_instance_290;
        PyObject *tmp_args_element_value_468;
        PyObject *tmp_args_element_value_469;
        tmp_called_instance_290 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_290 == NULL)) {
            tmp_called_instance_290 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_290 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3468;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_args_element_value_468 = mod_consts[463];
        CHECK_OBJECT(var_refresh_header);
        tmp_args_element_value_469 = var_refresh_header;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3468;
        {
            PyObject *call_args[] = {tmp_args_element_value_468, tmp_args_element_value_469};
            tmp_assign_source_234 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_290,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_assign_source_234 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3468;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_234;
            Py_DECREF(old);
        }

    }
    branch_no_182:;
    branch_no_181:;
    {
        nuitka_bool tmp_condition_result_186;
        int tmp_truth_name_108;
        CHECK_OBJECT(var_found);
        tmp_truth_name_108 = CHECK_IF_TRUE(var_found);
        if (tmp_truth_name_108 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3469;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_186 = tmp_truth_name_108 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_186 == NUITKA_BOOL_TRUE) {
            goto branch_yes_183;
        } else {
            goto branch_no_183;
        }
    }
    branch_yes_183:;
    {
        PyObject *tmp_assign_source_235;
        PyObject *tmp_called_value_209;
        PyObject *tmp_expression_value_207;
        PyObject *tmp_args_element_value_470;
        PyObject *tmp_args_element_value_471;
        PyObject *tmp_called_value_210;
        PyObject *tmp_args_element_value_472;
        PyObject *tmp_called_instance_291;
        tmp_expression_value_207 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[67]);

        if (unlikely(tmp_expression_value_207 == NULL)) {
            tmp_expression_value_207 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[67]);
        }

        if (tmp_expression_value_207 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3470;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_called_value_209 = LOOKUP_ATTRIBUTE(tmp_expression_value_207, mod_consts[68]);
        if (tmp_called_value_209 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3470;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (Nuitka_Cell_GET(par_url) == NULL) {
            Py_DECREF(tmp_called_value_209);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[33]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3470;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_value_470 = Nuitka_Cell_GET(par_url);
        tmp_called_value_210 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[237]);

        if (unlikely(tmp_called_value_210 == NULL)) {
            tmp_called_value_210 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[237]);
        }

        if (tmp_called_value_210 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_209);

            exception_lineno = 3470;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_found);
        tmp_called_instance_291 = var_found;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3470;
        tmp_args_element_value_472 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_291,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[246], 0)
        );

        if (tmp_args_element_value_472 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_209);

            exception_lineno = 3470;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3470;
        tmp_args_element_value_471 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_210, tmp_args_element_value_472);
        Py_DECREF(tmp_args_element_value_472);
        if (tmp_args_element_value_471 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_209);

            exception_lineno = 3470;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3470;
        {
            PyObject *call_args[] = {tmp_args_element_value_470, tmp_args_element_value_471};
            tmp_assign_source_235 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_209, call_args);
        }

        Py_DECREF(tmp_called_value_209);
        Py_DECREF(tmp_args_element_value_471);
        if (tmp_assign_source_235 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3470;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        {
            PyObject *old = var_new_url;
            var_new_url = tmp_assign_source_235;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_187;
        PyObject *tmp_cmp_expr_left_64;
        PyObject *tmp_cmp_expr_right_64;
        CHECK_OBJECT(var_new_url);
        tmp_cmp_expr_left_64 = var_new_url;
        if (Nuitka_Cell_GET(par_url) == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[33]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3471;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_cmp_expr_right_64 = Nuitka_Cell_GET(par_url);
        tmp_condition_result_187 = RICH_COMPARE_NE_NBOOL_OBJECT_OBJECT(tmp_cmp_expr_left_64, tmp_cmp_expr_right_64);
        if (tmp_condition_result_187 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3471;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_condition_result_187 == NUITKA_BOOL_TRUE) {
            goto branch_yes_184;
        } else {
            goto branch_no_184;
        }
    }
    branch_yes_184:;
    {
        PyObject *tmp_called_instance_292;
        PyObject *tmp_call_result_34;
        PyObject *tmp_args_element_value_473;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3472;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_292 = par_self;
        CHECK_OBJECT(var_new_url);
        tmp_args_element_value_473 = var_new_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3472;
        tmp_call_result_34 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_292, mod_consts[124], tmp_args_element_value_473);
        if (tmp_call_result_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3472;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_call_result_34);
    }
    {
        PyObject *tmp_dict_key_21;
        PyObject *tmp_dict_value_21;
        tmp_dict_key_21 = mod_consts[31];
        tmp_dict_value_21 = mod_consts[33];
        tmp_return_value = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_21, tmp_dict_value_21);
        assert(!(tmp_res != 0));
        tmp_dict_key_21 = mod_consts[33];
        CHECK_OBJECT(var_new_url);
        tmp_dict_value_21 = var_new_url;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_21, tmp_dict_value_21);
        assert(!(tmp_res != 0));
        goto frame_return_exit_1;
    }
    goto branch_end_184;
    branch_no_184:;
    {
        PyObject *tmp_assign_source_236;
        tmp_assign_source_236 = Py_None;
        {
            PyObject *old = var_found;
            assert(old != NULL);
            var_found = tmp_assign_source_236;
            Py_INCREF(var_found);
            Py_DECREF(old);
        }

    }
    branch_end_184:;
    branch_no_183:;
    branch_no_180:;
    {
        bool tmp_condition_result_188;
        PyObject *tmp_operand_value_19;
        CHECK_OBJECT(var_found);
        tmp_operand_value_19 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_19);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3480;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_188 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_188 != false) {
            goto branch_yes_185;
        } else {
            goto branch_no_185;
        }
    }
    branch_yes_185:;
    {
        PyObject *tmp_assign_source_237;
        PyObject *tmp_called_value_211;
        PyObject *tmp_expression_value_208;
        PyObject *tmp_args_value_21;
        PyObject *tmp_tuple_element_24;
        PyObject *tmp_kwargs_value_21;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3484;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_208 = par_self;
        tmp_called_value_211 = LOOKUP_ATTRIBUTE(tmp_expression_value_208, mod_consts[64]);
        if (tmp_called_value_211 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3484;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_tuple_element_24 = mod_consts[464];
        tmp_args_value_21 = MAKE_TUPLE_EMPTY(2);
        PyTuple_SET_ITEM0(tmp_args_value_21, 0, tmp_tuple_element_24);
        CHECK_OBJECT(Nuitka_Cell_GET(var_webpage));
        tmp_tuple_element_24 = Nuitka_Cell_GET(var_webpage);
        PyTuple_SET_ITEM0(tmp_args_value_21, 1, tmp_tuple_element_24);
        tmp_kwargs_value_21 = DICT_COPY(mod_consts[37]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3484;
        tmp_assign_source_237 = CALL_FUNCTION(tmp_called_value_211, tmp_args_value_21, tmp_kwargs_value_21);
        Py_DECREF(tmp_called_value_211);
        Py_DECREF(tmp_args_value_21);
        Py_DECREF(tmp_kwargs_value_21);
        if (tmp_assign_source_237 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3484;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(var_embed_url == NULL);
        var_embed_url = tmp_assign_source_237;
    }
    {
        nuitka_bool tmp_condition_result_189;
        int tmp_and_left_truth_4;
        nuitka_bool tmp_and_left_value_4;
        nuitka_bool tmp_and_right_value_4;
        int tmp_truth_name_109;
        PyObject *tmp_cmp_expr_left_65;
        PyObject *tmp_cmp_expr_right_65;
        CHECK_OBJECT(var_embed_url);
        tmp_truth_name_109 = CHECK_IF_TRUE(var_embed_url);
        if (tmp_truth_name_109 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3485;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_4 = tmp_truth_name_109 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        tmp_and_left_truth_4 = tmp_and_left_value_4 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_4 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3485;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (tmp_and_left_truth_4 == 1) {
            goto and_right_4;
        } else {
            goto and_left_4;
        }
        and_right_4:;
        CHECK_OBJECT(var_embed_url);
        tmp_cmp_expr_left_65 = var_embed_url;
        if (Nuitka_Cell_GET(par_url) == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[33]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3485;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_cmp_expr_right_65 = Nuitka_Cell_GET(par_url);
        tmp_and_right_value_4 = RICH_COMPARE_NE_NBOOL_OBJECT_OBJECT(tmp_cmp_expr_left_65, tmp_cmp_expr_right_65);
        if (tmp_and_right_value_4 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3485;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_189 = tmp_and_right_value_4;
        goto and_end_4;
        and_left_4:;
        tmp_condition_result_189 = tmp_and_left_value_4;
        and_end_4:;
        if (tmp_condition_result_189 == NUITKA_BOOL_TRUE) {
            goto branch_yes_186;
        } else {
            goto branch_no_186;
        }
    }
    branch_yes_186:;
    {
        PyObject *tmp_called_instance_293;
        PyObject *tmp_args_element_value_474;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3486;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_called_instance_293 = par_self;
        CHECK_OBJECT(var_embed_url);
        tmp_args_element_value_474 = var_embed_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3486;
        tmp_return_value = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_293, mod_consts[87], tmp_args_element_value_474);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3486;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_186:;
    branch_no_185:;
    {
        bool tmp_condition_result_190;
        PyObject *tmp_operand_value_20;
        CHECK_OBJECT(var_found);
        tmp_operand_value_20 = var_found;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_20);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3488;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_190 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_190 != false) {
            goto branch_yes_187;
        } else {
            goto branch_no_187;
        }
    }
    branch_yes_187:;
    {
        PyObject *tmp_raise_type_3;
        PyObject *tmp_called_value_212;
        PyObject *tmp_args_element_value_475;
        tmp_called_value_212 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[465]);

        if (unlikely(tmp_called_value_212 == NULL)) {
            tmp_called_value_212 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[465]);
        }

        if (tmp_called_value_212 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3489;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        if (Nuitka_Cell_GET(par_url) == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[33]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3489;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_args_element_value_475 = Nuitka_Cell_GET(par_url);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3489;
        tmp_raise_type_3 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_212, tmp_args_element_value_475);
        if (tmp_raise_type_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3489;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        exception_type = tmp_raise_type_3;
        exception_lineno = 3489;
        RAISE_EXCEPTION_WITH_TYPE(&exception_type, &exception_value, &exception_tb);
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto frame_exception_exit_1;
    }
    branch_no_187:;
    {
        PyObject *tmp_assign_source_238;
        tmp_assign_source_238 = MAKE_LIST_EMPTY(0);
        {
            PyObject *old = var_entries;
            assert(old != NULL);
            var_entries = tmp_assign_source_238;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_239;
        PyObject *tmp_iter_arg_11;
        PyObject *tmp_called_value_213;
        PyObject *tmp_args_element_value_476;
        tmp_called_value_213 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[466]);

        if (unlikely(tmp_called_value_213 == NULL)) {
            tmp_called_value_213 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[466]);
        }

        if (tmp_called_value_213 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3492;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_found);
        tmp_args_element_value_476 = var_found;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3492;
        tmp_iter_arg_11 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_213, tmp_args_element_value_476);
        if (tmp_iter_arg_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3492;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_239 = MAKE_ITERATOR(tmp_iter_arg_11);
        Py_DECREF(tmp_iter_arg_11);
        if (tmp_assign_source_239 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3492;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_5__for_iterator == NULL);
        tmp_for_loop_5__for_iterator = tmp_assign_source_239;
    }
    // Tried code:
    loop_start_8:;
    {
        PyObject *tmp_next_source_8;
        PyObject *tmp_assign_source_240;
        CHECK_OBJECT(tmp_for_loop_5__for_iterator);
        tmp_next_source_8 = tmp_for_loop_5__for_iterator;
        tmp_assign_source_240 = ITERATOR_NEXT(tmp_next_source_8);
        if (tmp_assign_source_240 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_8;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                exception_lineno = 3492;
                goto try_except_handler_21;
            }
        }

        {
            PyObject *old = tmp_for_loop_5__iter_value;
            tmp_for_loop_5__iter_value = tmp_assign_source_240;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_241;
        CHECK_OBJECT(tmp_for_loop_5__iter_value);
        tmp_assign_source_241 = tmp_for_loop_5__iter_value;
        {
            PyObject *old = var_video_url;
            var_video_url = tmp_assign_source_241;
            Py_INCREF(var_video_url);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_242;
        PyObject *tmp_called_value_214;
        PyObject *tmp_args_element_value_477;
        tmp_called_value_214 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[237]);

        if (unlikely(tmp_called_value_214 == NULL)) {
            tmp_called_value_214 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[237]);
        }

        if (tmp_called_value_214 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3493;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_477 = var_video_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3493;
        tmp_assign_source_242 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_214, tmp_args_element_value_477);
        if (tmp_assign_source_242 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3493;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_video_url;
            assert(old != NULL);
            var_video_url = tmp_assign_source_242;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_243;
        PyObject *tmp_called_value_215;
        PyObject *tmp_expression_value_209;
        CHECK_OBJECT(var_video_url);
        tmp_expression_value_209 = var_video_url;
        tmp_called_value_215 = LOOKUP_ATTRIBUTE(tmp_expression_value_209, mod_consts[467]);
        if (tmp_called_value_215 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3494;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3494;
        tmp_assign_source_243 = CALL_FUNCTION_WITH_POSARGS2(tmp_called_value_215, mod_consts[468]);

        Py_DECREF(tmp_called_value_215);
        if (tmp_assign_source_243 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3494;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_video_url;
            assert(old != NULL);
            var_video_url = tmp_assign_source_243;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_244;
        PyObject *tmp_called_value_216;
        PyObject *tmp_expression_value_210;
        PyObject *tmp_args_element_value_478;
        PyObject *tmp_args_element_value_479;
        tmp_expression_value_210 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[67]);

        if (unlikely(tmp_expression_value_210 == NULL)) {
            tmp_expression_value_210 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[67]);
        }

        if (tmp_expression_value_210 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3495;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_called_value_216 = LOOKUP_ATTRIBUTE(tmp_expression_value_210, mod_consts[68]);
        if (tmp_called_value_216 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3495;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (Nuitka_Cell_GET(par_url) == NULL) {
            Py_DECREF(tmp_called_value_216);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[33]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3495;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_args_element_value_478 = Nuitka_Cell_GET(par_url);
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_479 = var_video_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3495;
        {
            PyObject *call_args[] = {tmp_args_element_value_478, tmp_args_element_value_479};
            tmp_assign_source_244 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_216, call_args);
        }

        Py_DECREF(tmp_called_value_216);
        if (tmp_assign_source_244 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3495;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_video_url;
            assert(old != NULL);
            var_video_url = tmp_assign_source_244;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_245;
        PyObject *tmp_called_value_217;
        PyObject *tmp_args_element_value_480;
        PyObject *tmp_called_instance_294;
        PyObject *tmp_expression_value_211;
        PyObject *tmp_args_element_value_481;
        tmp_called_value_217 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[282]);

        if (unlikely(tmp_called_value_217 == NULL)) {
            tmp_called_value_217 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[282]);
        }

        if (tmp_called_value_217 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3496;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_expression_value_211 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[74]);

        if (unlikely(tmp_expression_value_211 == NULL)) {
            tmp_expression_value_211 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[74]);
        }

        if (tmp_expression_value_211 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3496;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_called_instance_294 = LOOKUP_ATTRIBUTE(tmp_expression_value_211, mod_consts[75]);
        if (tmp_called_instance_294 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3496;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_481 = var_video_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3496;
        tmp_args_element_value_480 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_294, mod_consts[469], tmp_args_element_value_481);
        Py_DECREF(tmp_called_instance_294);
        if (tmp_args_element_value_480 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3496;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3496;
        tmp_assign_source_245 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_217, tmp_args_element_value_480);
        Py_DECREF(tmp_args_element_value_480);
        if (tmp_assign_source_245 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3496;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_video_id;
            var_video_id = tmp_assign_source_245;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_191;
        PyObject *tmp_called_instance_295;
        PyObject *tmp_call_result_35;
        PyObject *tmp_args_element_value_482;
        int tmp_truth_name_110;
        tmp_called_instance_295 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[232]);

        if (unlikely(tmp_called_instance_295 == NULL)) {
            tmp_called_instance_295 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[232]);
        }

        if (tmp_called_instance_295 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3499;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_482 = var_video_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3499;
        tmp_call_result_35 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_295, mod_consts[470], tmp_args_element_value_482);
        if (tmp_call_result_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3499;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_110 = CHECK_IF_TRUE(tmp_call_result_35);
        if (tmp_truth_name_110 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_35);

            exception_lineno = 3499;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_191 = tmp_truth_name_110 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_35);
        if (tmp_condition_result_191 == NUITKA_BOOL_TRUE) {
            goto branch_yes_188;
        } else {
            goto branch_no_188;
        }
    }
    branch_yes_188:;
    {
        PyObject *tmp_called_value_218;
        PyObject *tmp_expression_value_212;
        PyObject *tmp_call_result_36;
        PyObject *tmp_args_element_value_483;
        PyObject *tmp_called_instance_296;
        PyObject *tmp_args_element_value_484;
        PyObject *tmp_args_element_value_485;
        if (var_entries == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[29]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3500;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_expression_value_212 = var_entries;
        tmp_called_value_218 = LOOKUP_ATTRIBUTE(tmp_expression_value_212, mod_consts[30]);
        if (tmp_called_value_218 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3500;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_218);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3500;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_296 = par_self;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_484 = var_video_url;
        tmp_args_element_value_485 = mod_consts[471];
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3500;
        {
            PyObject *call_args[] = {tmp_args_element_value_484, tmp_args_element_value_485};
            tmp_args_element_value_483 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_296,
                mod_consts[87],
                call_args
            );
        }

        if (tmp_args_element_value_483 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_218);

            exception_lineno = 3500;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3500;
        tmp_call_result_36 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_218, tmp_args_element_value_483);
        Py_DECREF(tmp_called_value_218);
        Py_DECREF(tmp_args_element_value_483);
        if (tmp_call_result_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3500;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        Py_DECREF(tmp_call_result_36);
    }
    goto loop_start_8;
    branch_no_188:;
    {
        PyObject *tmp_assign_source_246;
        PyObject *tmp_expression_value_213;
        PyObject *tmp_called_instance_297;
        PyObject *tmp_expression_value_214;
        PyObject *tmp_args_element_value_486;
        PyObject *tmp_subscript_value_11;
        tmp_expression_value_214 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[74]);

        if (unlikely(tmp_expression_value_214 == NULL)) {
            tmp_expression_value_214 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[74]);
        }

        if (tmp_expression_value_214 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3504;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_called_instance_297 = LOOKUP_ATTRIBUTE(tmp_expression_value_214, mod_consts[75]);
        if (tmp_called_instance_297 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3504;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_486 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3504;
        tmp_expression_value_213 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_297, mod_consts[76], tmp_args_element_value_486);
        Py_DECREF(tmp_called_instance_297);
        if (tmp_expression_value_213 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3504;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_subscript_value_11 = mod_consts[28];
        tmp_assign_source_246 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_value_213, tmp_subscript_value_11, 0);
        Py_DECREF(tmp_expression_value_213);
        if (tmp_assign_source_246 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3504;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_video_id;
            assert(old != NULL);
            var_video_id = tmp_assign_source_246;
            Py_DECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_247;
        PyObject *tmp_dict_key_22;
        PyObject *tmp_dict_value_22;
        tmp_dict_key_22 = mod_consts[58];
        CHECK_OBJECT(var_video_id);
        tmp_dict_value_22 = var_video_id;
        tmp_assign_source_247 = _PyDict_NewPresized( 4 );
        tmp_res = PyDict_SetItem(tmp_assign_source_247, tmp_dict_key_22, tmp_dict_value_22);
        assert(!(tmp_res != 0));
        tmp_dict_key_22 = mod_consts[241];
        CHECK_OBJECT(var_video_uploader);
        tmp_dict_value_22 = var_video_uploader;
        tmp_res = PyDict_SetItem(tmp_assign_source_247, tmp_dict_key_22, tmp_dict_value_22);
        assert(!(tmp_res != 0));
        tmp_dict_key_22 = mod_consts[34];
        CHECK_OBJECT(var_video_title);
        tmp_dict_value_22 = var_video_title;
        tmp_res = PyDict_SetItem(tmp_assign_source_247, tmp_dict_key_22, tmp_dict_value_22);
        assert(!(tmp_res != 0));
        tmp_dict_key_22 = mod_consts[56];
        CHECK_OBJECT(var_age_limit);
        tmp_dict_value_22 = var_age_limit;
        tmp_res = PyDict_SetItem(tmp_assign_source_247, tmp_dict_key_22, tmp_dict_value_22);
        assert(!(tmp_res != 0));
        {
            PyObject *old = var_entry_info_dict;
            var_entry_info_dict = tmp_assign_source_247;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_192;
        PyObject *tmp_called_instance_298;
        PyObject *tmp_call_result_37;
        PyObject *tmp_args_element_value_487;
        int tmp_truth_name_111;
        tmp_called_instance_298 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[472]);

        if (unlikely(tmp_called_instance_298 == NULL)) {
            tmp_called_instance_298 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[472]);
        }

        if (tmp_called_instance_298 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3513;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_487 = var_video_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3513;
        tmp_call_result_37 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_298, mod_consts[470], tmp_args_element_value_487);
        if (tmp_call_result_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3513;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_111 = CHECK_IF_TRUE(tmp_call_result_37);
        if (tmp_truth_name_111 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_37);

            exception_lineno = 3513;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_192 = tmp_truth_name_111 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_37);
        if (tmp_condition_result_192 == NUITKA_BOOL_TRUE) {
            goto branch_yes_189;
        } else {
            goto branch_no_189;
        }
    }
    branch_yes_189:;
    {
        PyObject *tmp_dict_arg_value_4;
        PyObject *tmp_iterable_value_4;
        PyObject *tmp_dict_key_23;
        PyObject *tmp_dict_value_23;
        CHECK_OBJECT(var_entry_info_dict);
        tmp_dict_arg_value_4 = var_entry_info_dict;
        tmp_dict_key_23 = mod_consts[31];
        tmp_dict_value_23 = mod_consts[32];
        tmp_iterable_value_4 = _PyDict_NewPresized( 3 );
        {
            PyObject *tmp_called_instance_299;
            tmp_res = PyDict_SetItem(tmp_iterable_value_4, tmp_dict_key_23, tmp_dict_value_23);
            assert(!(tmp_res != 0));
            tmp_dict_key_23 = mod_consts[210];
            tmp_called_instance_299 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[472]);

            if (unlikely(tmp_called_instance_299 == NULL)) {
                tmp_called_instance_299 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[472]);
            }

            if (tmp_called_instance_299 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3516;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_10;
            }
            frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3516;
            tmp_dict_value_23 = CALL_METHOD_NO_ARGS(tmp_called_instance_299, mod_consts[210]);
            if (tmp_dict_value_23 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 3516;
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                goto dict_build_exception_10;
            }
            tmp_res = PyDict_SetItem(tmp_iterable_value_4, tmp_dict_key_23, tmp_dict_value_23);
            Py_DECREF(tmp_dict_value_23);
            assert(!(tmp_res != 0));
            tmp_dict_key_23 = mod_consts[33];
            CHECK_OBJECT(var_video_url);
            tmp_dict_value_23 = var_video_url;
            tmp_res = PyDict_SetItem(tmp_iterable_value_4, tmp_dict_key_23, tmp_dict_value_23);
            assert(!(tmp_res != 0));
        }
        goto dict_build_noexception_10;
        // Exception handling pass through code for dict_build:
        dict_build_exception_10:;
        Py_DECREF(tmp_iterable_value_4);
        goto try_except_handler_21;
        // Finished with no exception for dict_build:
        dict_build_noexception_10:;
        assert(PyDict_Check(tmp_dict_arg_value_4));
            tmp_res = PyDict_Merge(tmp_dict_arg_value_4, tmp_iterable_value_4, 1);

        Py_DECREF(tmp_iterable_value_4);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3514;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
    }
    {
        PyObject *tmp_called_instance_300;
        PyObject *tmp_call_result_38;
        PyObject *tmp_args_element_value_488;
        if (var_entries == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[29]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3519;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_300 = var_entries;
        CHECK_OBJECT(var_entry_info_dict);
        tmp_args_element_value_488 = var_entry_info_dict;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3519;
        tmp_call_result_38 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_300, mod_consts[30], tmp_args_element_value_488);
        if (tmp_call_result_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3519;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        Py_DECREF(tmp_call_result_38);
    }
    goto loop_start_8;
    branch_no_189:;
    {
        PyObject *tmp_assign_source_248;
        PyObject *tmp_called_value_219;
        PyObject *tmp_args_element_value_489;
        tmp_called_value_219 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[431]);

        if (unlikely(tmp_called_value_219 == NULL)) {
            tmp_called_value_219 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[431]);
        }

        if (tmp_called_value_219 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3522;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_489 = var_video_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3522;
        tmp_assign_source_248 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_219, tmp_args_element_value_489);
        if (tmp_assign_source_248 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3522;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_ext;
            var_ext = tmp_assign_source_248;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_193;
        PyObject *tmp_cmp_expr_left_66;
        PyObject *tmp_cmp_expr_right_66;
        CHECK_OBJECT(var_ext);
        tmp_cmp_expr_left_66 = var_ext;
        tmp_cmp_expr_right_66 = mod_consts[473];
        tmp_condition_result_193 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_66, tmp_cmp_expr_right_66);
        if (tmp_condition_result_193 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3523;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (tmp_condition_result_193 == NUITKA_BOOL_TRUE) {
            goto branch_yes_190;
        } else {
            goto branch_no_190;
        }
    }
    branch_yes_190:;
    {
        PyObject *tmp_called_instance_301;
        PyObject *tmp_args_element_value_490;
        PyObject *tmp_args_element_value_491;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3524;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_301 = par_self;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_490 = var_video_url;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_491 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3524;
        {
            PyObject *call_args[] = {tmp_args_element_value_490, tmp_args_element_value_491};
            tmp_dictset_value = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_301,
                mod_consts[474],
                call_args
            );
        }

        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3524;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_entry_info_dict);
        tmp_dictset_dict = var_entry_info_dict;
        tmp_dictset_key = mod_consts[153];
        assert(PyDict_CheckExact(tmp_dictset_dict));
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);

        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    goto branch_end_190;
    branch_no_190:;
    {
        nuitka_bool tmp_condition_result_194;
        PyObject *tmp_cmp_expr_left_67;
        PyObject *tmp_cmp_expr_right_67;
        CHECK_OBJECT(var_ext);
        tmp_cmp_expr_left_67 = var_ext;
        tmp_cmp_expr_right_67 = mod_consts[475];
        tmp_condition_result_194 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_67, tmp_cmp_expr_right_67);
        if (tmp_condition_result_194 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3525;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (tmp_condition_result_194 == NUITKA_BOOL_TRUE) {
            goto branch_yes_191;
        } else {
            goto branch_no_191;
        }
    }
    branch_yes_191:;
    {
        PyObject *tmp_called_value_220;
        PyObject *tmp_expression_value_215;
        PyObject *tmp_args_element_value_492;
        PyObject *tmp_called_instance_302;
        PyObject *tmp_args_element_value_493;
        PyObject *tmp_args_element_value_494;
        PyObject *tmp_args_element_value_495;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3526;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_expression_value_215 = par_self;
        tmp_called_value_220 = LOOKUP_ATTRIBUTE(tmp_expression_value_215, mod_consts[181]);
        if (tmp_called_value_220 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3526;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (par_self == NULL) {
            Py_DECREF(tmp_called_value_220);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3526;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_302 = par_self;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_493 = var_video_url;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_494 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3526;
        {
            PyObject *call_args[] = {tmp_args_element_value_493, tmp_args_element_value_494};
            tmp_args_element_value_492 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_302,
                mod_consts[476],
                call_args
            );
        }

        if (tmp_args_element_value_492 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_220);

            exception_lineno = 3526;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_495 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3526;
        {
            PyObject *call_args[] = {tmp_args_element_value_492, tmp_args_element_value_495};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_220, call_args);
        }

        Py_DECREF(tmp_called_value_220);
        Py_DECREF(tmp_args_element_value_492);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3526;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        goto try_return_handler_21;
    }
    goto branch_end_191;
    branch_no_191:;
    {
        nuitka_bool tmp_condition_result_195;
        PyObject *tmp_cmp_expr_left_68;
        PyObject *tmp_cmp_expr_right_68;
        CHECK_OBJECT(var_ext);
        tmp_cmp_expr_left_68 = var_ext;
        tmp_cmp_expr_right_68 = mod_consts[440];
        tmp_condition_result_195 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_68, tmp_cmp_expr_right_68);
        if (tmp_condition_result_195 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3527;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (tmp_condition_result_195 == NUITKA_BOOL_TRUE) {
            goto branch_yes_192;
        } else {
            goto branch_no_192;
        }
    }
    branch_yes_192:;
    {
        PyObject *tmp_called_value_221;
        PyObject *tmp_expression_value_216;
        PyObject *tmp_args_value_22;
        PyObject *tmp_tuple_element_25;
        PyObject *tmp_kwargs_value_22;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3528;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_expression_value_216 = par_self;
        tmp_called_value_221 = LOOKUP_ATTRIBUTE(tmp_expression_value_216, mod_consts[141]);
        if (tmp_called_value_221 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3528;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_url);
        tmp_tuple_element_25 = var_video_url;
        tmp_args_value_22 = MAKE_TUPLE_EMPTY(2);
        PyTuple_SET_ITEM0(tmp_args_value_22, 0, tmp_tuple_element_25);
        CHECK_OBJECT(var_video_id);
        tmp_tuple_element_25 = var_video_id;
        PyTuple_SET_ITEM0(tmp_args_value_22, 1, tmp_tuple_element_25);
        tmp_kwargs_value_22 = DICT_COPY(mod_consts[477]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3528;
        tmp_dictset_value = CALL_FUNCTION(tmp_called_value_221, tmp_args_value_22, tmp_kwargs_value_22);
        Py_DECREF(tmp_called_value_221);
        Py_DECREF(tmp_args_value_22);
        Py_DECREF(tmp_kwargs_value_22);
        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3528;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_entry_info_dict);
        tmp_dictset_dict = var_entry_info_dict;
        tmp_dictset_key = mod_consts[153];
        assert(PyDict_CheckExact(tmp_dictset_dict));
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);

        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    goto branch_end_192;
    branch_no_192:;
    {
        nuitka_bool tmp_condition_result_196;
        PyObject *tmp_cmp_expr_left_69;
        PyObject *tmp_cmp_expr_right_69;
        CHECK_OBJECT(var_ext);
        tmp_cmp_expr_left_69 = var_ext;
        tmp_cmp_expr_right_69 = mod_consts[434];
        tmp_condition_result_196 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_69, tmp_cmp_expr_right_69);
        if (tmp_condition_result_196 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3529;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (tmp_condition_result_196 == NUITKA_BOOL_TRUE) {
            goto branch_yes_193;
        } else {
            goto branch_no_193;
        }
    }
    branch_yes_193:;
    {
        PyObject *tmp_called_instance_303;
        PyObject *tmp_args_element_value_496;
        PyObject *tmp_args_element_value_497;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3530;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_303 = par_self;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_496 = var_video_url;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_497 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3530;
        {
            PyObject *call_args[] = {tmp_args_element_value_496, tmp_args_element_value_497};
            tmp_dictset_value = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_303,
                mod_consts[436],
                call_args
            );
        }

        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3530;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_entry_info_dict);
        tmp_dictset_dict = var_entry_info_dict;
        tmp_dictset_key = mod_consts[153];
        assert(PyDict_CheckExact(tmp_dictset_dict));
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);

        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    goto branch_end_193;
    branch_no_193:;
    {
        nuitka_bool tmp_condition_result_197;
        PyObject *tmp_cmp_expr_left_70;
        PyObject *tmp_cmp_expr_right_70;
        CHECK_OBJECT(var_ext);
        tmp_cmp_expr_left_70 = var_ext;
        tmp_cmp_expr_right_70 = mod_consts[143];
        tmp_condition_result_197 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_70, tmp_cmp_expr_right_70);
        if (tmp_condition_result_197 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3531;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (tmp_condition_result_197 == NUITKA_BOOL_TRUE) {
            goto branch_yes_194;
        } else {
            goto branch_no_194;
        }
    }
    branch_yes_194:;
    {
        PyObject *tmp_called_instance_304;
        PyObject *tmp_args_element_value_498;
        PyObject *tmp_args_element_value_499;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3532;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_called_instance_304 = par_self;
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_498 = var_video_url;
        CHECK_OBJECT(var_video_id);
        tmp_args_element_value_499 = var_video_id;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3532;
        {
            PyObject *call_args[] = {tmp_args_element_value_498, tmp_args_element_value_499};
            tmp_dictset_value = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_304,
                mod_consts[144],
                call_args
            );
        }

        if (tmp_dictset_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3532;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_entry_info_dict);
        tmp_dictset_dict = var_entry_info_dict;
        tmp_dictset_key = mod_consts[153];
        assert(PyDict_CheckExact(tmp_dictset_dict));
        tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);

        Py_DECREF(tmp_dictset_value);
        assert(!(tmp_res != 0));
    }
    goto branch_end_194;
    branch_no_194:;
    {
        nuitka_bool tmp_condition_result_198;
        int tmp_and_left_truth_5;
        nuitka_bool tmp_and_left_value_5;
        nuitka_bool tmp_and_right_value_5;
        PyObject *tmp_called_instance_305;
        PyObject *tmp_call_result_39;
        PyObject *tmp_args_element_value_500;
        PyObject *tmp_args_element_value_501;
        int tmp_truth_name_112;
        PyObject *tmp_cmp_expr_left_71;
        PyObject *tmp_cmp_expr_right_71;
        tmp_called_instance_305 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_called_instance_305 == NULL)) {
            tmp_called_instance_305 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_called_instance_305 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3533;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_args_element_value_500 = mod_consts[478];
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_501 = var_video_url;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3533;
        {
            PyObject *call_args[] = {tmp_args_element_value_500, tmp_args_element_value_501};
            tmp_call_result_39 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_305,
                mod_consts[234],
                call_args
            );
        }

        if (tmp_call_result_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3533;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_112 = CHECK_IF_TRUE(tmp_call_result_39);
        if (tmp_truth_name_112 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_39);

            exception_lineno = 3533;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_and_left_value_5 = tmp_truth_name_112 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_39);
        tmp_and_left_truth_5 = tmp_and_left_value_5 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_5 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3533;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (tmp_and_left_truth_5 == 1) {
            goto and_right_5;
        } else {
            goto and_left_5;
        }
        and_right_5:;
        CHECK_OBJECT(var_video_url);
        tmp_cmp_expr_left_71 = var_video_url;
        if (Nuitka_Cell_GET(par_url) == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[33]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3533;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_cmp_expr_right_71 = Nuitka_Cell_GET(par_url);
        tmp_and_right_value_5 = RICH_COMPARE_NE_NBOOL_OBJECT_OBJECT(tmp_cmp_expr_left_71, tmp_cmp_expr_right_71);
        if (tmp_and_right_value_5 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3533;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_198 = tmp_and_right_value_5;
        goto and_end_5;
        and_left_5:;
        tmp_condition_result_198 = tmp_and_left_value_5;
        and_end_5:;
        if (tmp_condition_result_198 == NUITKA_BOOL_TRUE) {
            goto branch_yes_195;
        } else {
            goto branch_no_195;
        }
    }
    branch_yes_195:;
    {
        PyObject *tmp_assign_source_249;
        PyObject *tmp_called_value_222;
        PyObject *tmp_expression_value_217;
        PyObject *tmp_args_element_value_502;
        PyObject *tmp_called_value_223;
        PyObject *tmp_args_element_value_503;
        PyObject *tmp_args_element_value_504;
        PyObject *tmp_args_element_value_505;
        PyObject *tmp_called_instance_306;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3545;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_expression_value_217 = par_self;
        tmp_called_value_222 = LOOKUP_ATTRIBUTE(tmp_expression_value_217, mod_consts[87]);
        if (tmp_called_value_222 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3545;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_called_value_223 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[125]);

        if (unlikely(tmp_called_value_223 == NULL)) {
            tmp_called_value_223 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[125]);
        }

        if (tmp_called_value_223 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_222);

            exception_lineno = 3546;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        CHECK_OBJECT(var_video_url);
        tmp_args_element_value_503 = var_video_url;
        tmp_args_element_value_504 = DICT_COPY(mod_consts[479]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3546;
        {
            PyObject *call_args[] = {tmp_args_element_value_503, tmp_args_element_value_504};
            tmp_args_element_value_502 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_223, call_args);
        }

        Py_DECREF(tmp_args_element_value_504);
        if (tmp_args_element_value_502 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_222);

            exception_lineno = 3546;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_called_instance_306 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[480]);

        if (unlikely(tmp_called_instance_306 == NULL)) {
            tmp_called_instance_306 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[480]);
        }

        if (tmp_called_instance_306 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_222);
            Py_DECREF(tmp_args_element_value_502);

            exception_lineno = 3547;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3547;
        tmp_args_element_value_505 = CALL_METHOD_NO_ARGS(tmp_called_instance_306, mod_consts[210]);
        if (tmp_args_element_value_505 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_222);
            Py_DECREF(tmp_args_element_value_502);

            exception_lineno = 3547;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3545;
        {
            PyObject *call_args[] = {tmp_args_element_value_502, tmp_args_element_value_505};
            tmp_assign_source_249 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_222, call_args);
        }

        Py_DECREF(tmp_called_value_222);
        Py_DECREF(tmp_args_element_value_502);
        Py_DECREF(tmp_args_element_value_505);
        if (tmp_assign_source_249 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3545;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        {
            PyObject *old = var_entry_info_dict;
            assert(old != NULL);
            var_entry_info_dict = tmp_assign_source_249;
            Py_DECREF(old);
        }

    }
    goto branch_end_195;
    branch_no_195:;
    CHECK_OBJECT(var_video_url);
    tmp_dictset_value = var_video_url;
    CHECK_OBJECT(var_entry_info_dict);
    tmp_dictset_dict = var_entry_info_dict;
    tmp_dictset_key = mod_consts[33];
    assert(PyDict_CheckExact(tmp_dictset_dict));
    tmp_res = PyDict_SetItem(tmp_dictset_dict, tmp_dictset_key, tmp_dictset_value);

    assert(!(tmp_res != 0));
    branch_end_195:;
    branch_end_194:;
    branch_end_193:;
    branch_end_192:;
    branch_end_191:;
    branch_end_190:;
    {
        nuitka_bool tmp_condition_result_199;
        PyObject *tmp_called_value_224;
        PyObject *tmp_expression_value_218;
        PyObject *tmp_call_result_40;
        int tmp_truth_name_113;
        if (var_entry_info_dict == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[481]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3551;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_expression_value_218 = var_entry_info_dict;
        tmp_called_value_224 = LOOKUP_ATTRIBUTE(tmp_expression_value_218, mod_consts[13]);
        if (tmp_called_value_224 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3551;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3551;
        tmp_call_result_40 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_224, mod_consts[482]);

        Py_DECREF(tmp_called_value_224);
        if (tmp_call_result_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3551;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_truth_name_113 = CHECK_IF_TRUE(tmp_call_result_40);
        if (tmp_truth_name_113 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_40);

            exception_lineno = 3551;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        tmp_condition_result_199 = tmp_truth_name_113 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_40);
        if (tmp_condition_result_199 == NUITKA_BOOL_TRUE) {
            goto branch_yes_196;
        } else {
            goto branch_no_196;
        }
    }
    branch_yes_196:;
    {
        PyObject *tmp_called_value_225;
        PyObject *tmp_expression_value_219;
        PyObject *tmp_call_result_41;
        PyObject *tmp_args_element_value_506;
        PyObject *tmp_expression_value_220;
        PyObject *tmp_subscript_value_12;
        if (par_self == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[117]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3552;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_expression_value_219 = par_self;
        tmp_called_value_225 = LOOKUP_ATTRIBUTE(tmp_expression_value_219, mod_consts[151]);
        if (tmp_called_value_225 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3552;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (var_entry_info_dict == NULL) {
            Py_DECREF(tmp_called_value_225);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[481]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3552;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_expression_value_220 = var_entry_info_dict;
        tmp_subscript_value_12 = mod_consts[153];
        tmp_args_element_value_506 = LOOKUP_SUBSCRIPT(tmp_expression_value_220, tmp_subscript_value_12);
        if (tmp_args_element_value_506 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_225);

            exception_lineno = 3552;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3552;
        tmp_call_result_41 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_225, tmp_args_element_value_506);
        Py_DECREF(tmp_called_value_225);
        Py_DECREF(tmp_args_element_value_506);
        if (tmp_call_result_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3552;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        Py_DECREF(tmp_call_result_41);
    }
    branch_no_196:;
    {
        PyObject *tmp_called_value_226;
        PyObject *tmp_expression_value_221;
        PyObject *tmp_call_result_42;
        PyObject *tmp_args_element_value_507;
        if (var_entries == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[29]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3554;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_expression_value_221 = var_entries;
        tmp_called_value_226 = LOOKUP_ATTRIBUTE(tmp_expression_value_221, mod_consts[30]);
        if (tmp_called_value_226 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3554;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        if (var_entry_info_dict == NULL) {
            Py_DECREF(tmp_called_value_226);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[481]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3554;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }

        tmp_args_element_value_507 = var_entry_info_dict;
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3554;
        tmp_call_result_42 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_226, tmp_args_element_value_507);
        Py_DECREF(tmp_called_value_226);
        if (tmp_call_result_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3554;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_21;
        }
        Py_DECREF(tmp_call_result_42);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 3492;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_21;
    }
    goto loop_start_8;
    loop_end_8:;
    goto try_end_13;
    // Return handler code:
    try_return_handler_21:;
    CHECK_OBJECT(tmp_for_loop_5__iter_value);
    Py_DECREF(tmp_for_loop_5__iter_value);
    tmp_for_loop_5__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_5__for_iterator);
    Py_DECREF(tmp_for_loop_5__for_iterator);
    tmp_for_loop_5__for_iterator = NULL;
    goto frame_return_exit_1;
    // Exception handler code:
    try_except_handler_21:;
    exception_keeper_type_19 = exception_type;
    exception_keeper_value_19 = exception_value;
    exception_keeper_tb_19 = exception_tb;
    exception_keeper_lineno_19 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_5__iter_value);
    tmp_for_loop_5__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_5__for_iterator);
    Py_DECREF(tmp_for_loop_5__for_iterator);
    tmp_for_loop_5__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_19;
    exception_value = exception_keeper_value_19;
    exception_tb = exception_keeper_tb_19;
    exception_lineno = exception_keeper_lineno_19;

    goto frame_exception_exit_1;
    // End of try:
    try_end_13:;
    Py_XDECREF(tmp_for_loop_5__iter_value);
    tmp_for_loop_5__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_5__for_iterator);
    Py_DECREF(tmp_for_loop_5__for_iterator);
    tmp_for_loop_5__for_iterator = NULL;
    {
        bool tmp_condition_result_200;
        PyObject *tmp_cmp_expr_left_72;
        nuitka_digit tmp_cmp_expr_right_72;
        PyObject *tmp_len_arg_2;
        if (var_entries == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[29]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3556;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_len_arg_2 = var_entries;
        tmp_cmp_expr_left_72 = BUILTIN_LEN(tmp_len_arg_2);
        if (tmp_cmp_expr_left_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3556;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_cmp_expr_right_72 = 1;
        tmp_condition_result_200 = RICH_COMPARE_EQ_CBOOL_LONG_DIGIT(tmp_cmp_expr_left_72, tmp_cmp_expr_right_72);
        Py_DECREF(tmp_cmp_expr_left_72);
        if (tmp_condition_result_200 != false) {
            goto branch_yes_197;
        } else {
            goto branch_no_197;
        }
    }
    branch_yes_197:;
    {
        PyObject *tmp_expression_value_222;
        PyObject *tmp_subscript_value_13;
        if (var_entries == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[29]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3557;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_222 = var_entries;
        tmp_subscript_value_13 = mod_consts[28];
        tmp_return_value = LOOKUP_SUBSCRIPT_CONST(tmp_expression_value_222, tmp_subscript_value_13, 0);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3557;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    goto branch_end_197;
    branch_no_197:;
    {
        PyObject *tmp_assign_source_250;
        PyObject *tmp_iter_arg_12;
        PyObject *tmp_called_value_227;
        PyObject *tmp_args_value_23;
        PyObject *tmp_tuple_element_26;
        PyObject *tmp_kwargs_value_23;
        tmp_called_value_227 = (PyObject *)&PyEnum_Type;
        if (var_entries == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[29]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3559;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }

        tmp_tuple_element_26 = var_entries;
        tmp_args_value_23 = MAKE_TUPLE_EMPTY(1);
        PyTuple_SET_ITEM0(tmp_args_value_23, 0, tmp_tuple_element_26);
        tmp_kwargs_value_23 = DICT_COPY(mod_consts[419]);
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3559;
        tmp_iter_arg_12 = CALL_FUNCTION(tmp_called_value_227, tmp_args_value_23, tmp_kwargs_value_23);
        Py_DECREF(tmp_args_value_23);
        Py_DECREF(tmp_kwargs_value_23);
        if (tmp_iter_arg_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3559;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_250 = MAKE_ITERATOR(tmp_iter_arg_12);
        Py_DECREF(tmp_iter_arg_12);
        if (tmp_assign_source_250 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3559;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_6__for_iterator == NULL);
        tmp_for_loop_6__for_iterator = tmp_assign_source_250;
    }
    // Tried code:
    loop_start_9:;
    {
        PyObject *tmp_next_source_9;
        PyObject *tmp_assign_source_251;
        CHECK_OBJECT(tmp_for_loop_6__for_iterator);
        tmp_next_source_9 = tmp_for_loop_6__for_iterator;
        tmp_assign_source_251 = ITERATOR_NEXT(tmp_next_source_9);
        if (tmp_assign_source_251 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_9;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                exception_lineno = 3559;
                goto try_except_handler_22;
            }
        }

        {
            PyObject *old = tmp_for_loop_6__iter_value;
            tmp_for_loop_6__iter_value = tmp_assign_source_251;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_252;
        PyObject *tmp_iter_arg_13;
        CHECK_OBJECT(tmp_for_loop_6__iter_value);
        tmp_iter_arg_13 = tmp_for_loop_6__iter_value;
        tmp_assign_source_252 = MAKE_UNPACK_ITERATOR(tmp_iter_arg_13);
        if (tmp_assign_source_252 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3559;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_23;
        }
        {
            PyObject *old = tmp_tuple_unpack_3__source_iter;
            tmp_tuple_unpack_3__source_iter = tmp_assign_source_252;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_253;
        PyObject *tmp_unpack_5;
        CHECK_OBJECT(tmp_tuple_unpack_3__source_iter);
        tmp_unpack_5 = tmp_tuple_unpack_3__source_iter;
        tmp_assign_source_253 = UNPACK_NEXT(tmp_unpack_5, 0, 2);
        if (tmp_assign_source_253 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 3559;
            goto try_except_handler_24;
        }
        {
            PyObject *old = tmp_tuple_unpack_3__element_1;
            tmp_tuple_unpack_3__element_1 = tmp_assign_source_253;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_254;
        PyObject *tmp_unpack_6;
        CHECK_OBJECT(tmp_tuple_unpack_3__source_iter);
        tmp_unpack_6 = tmp_tuple_unpack_3__source_iter;
        tmp_assign_source_254 = UNPACK_NEXT(tmp_unpack_6, 1, 2);
        if (tmp_assign_source_254 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 3559;
            goto try_except_handler_24;
        }
        {
            PyObject *old = tmp_tuple_unpack_3__element_2;
            tmp_tuple_unpack_3__element_2 = tmp_assign_source_254;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_iterator_name_3;
        CHECK_OBJECT(tmp_tuple_unpack_3__source_iter);
        tmp_iterator_name_3 = tmp_tuple_unpack_3__source_iter;
        // Check if iterator has left-over elements.
        CHECK_OBJECT(tmp_iterator_name_3); assert(HAS_ITERNEXT(tmp_iterator_name_3));

        tmp_iterator_attempt = (*Py_TYPE(tmp_iterator_name_3)->tp_iternext)(tmp_iterator_name_3);

        if (likely(tmp_iterator_attempt == NULL)) {
            PyObject *error = GET_ERROR_OCCURRED();

            if (error != NULL) {
                if (EXCEPTION_MATCH_BOOL_SINGLE(error, PyExc_StopIteration)) {
                    CLEAR_ERROR_OCCURRED();
                } else {
                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);

                    type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
                    exception_lineno = 3559;
                    goto try_except_handler_24;
                }
            }
        } else {
            Py_DECREF(tmp_iterator_attempt);

            exception_type = PyExc_ValueError;
            Py_INCREF(PyExc_ValueError);
            exception_value = mod_consts[112];
            Py_INCREF(exception_value);
            exception_tb = NULL;

            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            exception_lineno = 3559;
            goto try_except_handler_24;
        }
    }
    goto try_end_14;
    // Exception handler code:
    try_except_handler_24:;
    exception_keeper_type_20 = exception_type;
    exception_keeper_value_20 = exception_value;
    exception_keeper_tb_20 = exception_tb;
    exception_keeper_lineno_20 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_tuple_unpack_3__source_iter);
    Py_DECREF(tmp_tuple_unpack_3__source_iter);
    tmp_tuple_unpack_3__source_iter = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_20;
    exception_value = exception_keeper_value_20;
    exception_tb = exception_keeper_tb_20;
    exception_lineno = exception_keeper_lineno_20;

    goto try_except_handler_23;
    // End of try:
    try_end_14:;
    goto try_end_15;
    // Exception handler code:
    try_except_handler_23:;
    exception_keeper_type_21 = exception_type;
    exception_keeper_value_21 = exception_value;
    exception_keeper_tb_21 = exception_tb;
    exception_keeper_lineno_21 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_tuple_unpack_3__element_1);
    tmp_tuple_unpack_3__element_1 = NULL;
    Py_XDECREF(tmp_tuple_unpack_3__element_2);
    tmp_tuple_unpack_3__element_2 = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_21;
    exception_value = exception_keeper_value_21;
    exception_tb = exception_keeper_tb_21;
    exception_lineno = exception_keeper_lineno_21;

    goto try_except_handler_22;
    // End of try:
    try_end_15:;
    CHECK_OBJECT(tmp_tuple_unpack_3__source_iter);
    Py_DECREF(tmp_tuple_unpack_3__source_iter);
    tmp_tuple_unpack_3__source_iter = NULL;
    {
        PyObject *tmp_assign_source_255;
        CHECK_OBJECT(tmp_tuple_unpack_3__element_1);
        tmp_assign_source_255 = tmp_tuple_unpack_3__element_1;
        {
            PyObject *old = var_num;
            var_num = tmp_assign_source_255;
            Py_INCREF(var_num);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_3__element_1);
    tmp_tuple_unpack_3__element_1 = NULL;

    {
        PyObject *tmp_assign_source_256;
        CHECK_OBJECT(tmp_tuple_unpack_3__element_2);
        tmp_assign_source_256 = tmp_tuple_unpack_3__element_2;
        {
            PyObject *old = var_e;
            var_e = tmp_assign_source_256;
            Py_INCREF(var_e);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_3__element_2);
    tmp_tuple_unpack_3__element_2 = NULL;

    {
        bool tmp_condition_result_201;
        PyObject *tmp_cmp_expr_left_73;
        PyObject *tmp_cmp_expr_right_73;
        PyObject *tmp_called_value_228;
        PyObject *tmp_expression_value_223;
        CHECK_OBJECT(var_e);
        tmp_expression_value_223 = var_e;
        tmp_called_value_228 = LOOKUP_ATTRIBUTE(tmp_expression_value_223, mod_consts[13]);
        if (tmp_called_value_228 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3561;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_22;
        }
        frame_713f709215410de619f38bbb0405e5b8->m_frame.f_lineno = 3561;
        tmp_cmp_expr_left_73 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_228, mod_consts[35]);

        Py_DECREF(tmp_called_value_228);
        if (tmp_cmp_expr_left_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3561;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_22;
        }
        tmp_cmp_expr_right_73 = Py_None;
        tmp_condition_result_201 = (tmp_cmp_expr_left_73 != tmp_cmp_expr_right_73) ? true : false;
        Py_DECREF(tmp_cmp_expr_left_73);
        if (tmp_condition_result_201 != false) {
            goto branch_yes_198;
        } else {
            goto branch_no_198;
        }
    }
    branch_yes_198:;
    {
        PyObject *tmp_ass_subvalue_3;
        PyObject *tmp_mod_expr_left_13;
        PyObject *tmp_mod_expr_right_13;
        PyObject *tmp_tuple_element_27;
        PyObject *tmp_expression_value_224;
        PyObject *tmp_subscript_value_14;
        PyObject *tmp_ass_subscribed_3;
        PyObject *tmp_ass_subscript_3;
        tmp_mod_expr_left_13 = mod_consts[421];
        CHECK_OBJECT(var_e);
        tmp_expression_value_224 = var_e;
        tmp_subscript_value_14 = mod_consts[34];
        tmp_tuple_element_27 = LOOKUP_SUBSCRIPT(tmp_expression_value_224, tmp_subscript_value_14);
        if (tmp_tuple_element_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3562;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_22;
        }
        tmp_mod_expr_right_13 = MAKE_TUPLE_EMPTY(2);
        PyTuple_SET_ITEM(tmp_mod_expr_right_13, 0, tmp_tuple_element_27);
        CHECK_OBJECT(var_num);
        tmp_tuple_element_27 = var_num;
        PyTuple_SET_ITEM0(tmp_mod_expr_right_13, 1, tmp_tuple_element_27);
        tmp_ass_subvalue_3 = BINARY_OPERATION_MOD_OBJECT_UNICODE_TUPLE(tmp_mod_expr_left_13, tmp_mod_expr_right_13);
        Py_DECREF(tmp_mod_expr_right_13);
        if (tmp_ass_subvalue_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3562;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_22;
        }
        CHECK_OBJECT(var_e);
        tmp_ass_subscribed_3 = var_e;
        tmp_ass_subscript_3 = mod_consts[34];
        tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_3, tmp_ass_subscript_3, tmp_ass_subvalue_3);
        Py_DECREF(tmp_ass_subvalue_3);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3562;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto try_except_handler_22;
        }
    }
    branch_no_198:;
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 3559;
        type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
        goto try_except_handler_22;
    }
    goto loop_start_9;
    loop_end_9:;
    goto try_end_16;
    // Exception handler code:
    try_except_handler_22:;
    exception_keeper_type_22 = exception_type;
    exception_keeper_value_22 = exception_value;
    exception_keeper_tb_22 = exception_tb;
    exception_keeper_lineno_22 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_6__iter_value);
    tmp_for_loop_6__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_6__for_iterator);
    Py_DECREF(tmp_for_loop_6__for_iterator);
    tmp_for_loop_6__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_22;
    exception_value = exception_keeper_value_22;
    exception_tb = exception_keeper_tb_22;
    exception_lineno = exception_keeper_lineno_22;

    goto frame_exception_exit_1;
    // End of try:
    try_end_16:;
    Py_XDECREF(tmp_for_loop_6__iter_value);
    tmp_for_loop_6__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_6__for_iterator);
    Py_DECREF(tmp_for_loop_6__for_iterator);
    tmp_for_loop_6__for_iterator = NULL;
    {
        PyObject *tmp_dict_key_24;
        PyObject *tmp_dict_value_24;
        tmp_dict_key_24 = mod_consts[31];
        tmp_dict_value_24 = mod_consts[57];
        tmp_return_value = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_24, tmp_dict_value_24);
        assert(!(tmp_res != 0));
        tmp_dict_key_24 = mod_consts[29];
        if (var_entries == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[29]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3565;
            type_description_1 = "ocoooooooooooooooooocoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooocoooNooooo";
            goto dict_build_exception_11;
        }

        tmp_dict_value_24 = var_entries;
        tmp_res = PyDict_SetItem(tmp_return_value, tmp_dict_key_24, tmp_dict_value_24);
        assert(!(tmp_res != 0));
        goto dict_build_noexception_11;
        // Exception handling pass through code for dict_build:
        dict_build_exception_11:;
        Py_DECREF(tmp_return_value);
        goto frame_exception_exit_1;
        // Finished with no exception for dict_build:
        dict_build_noexception_11:;
        goto frame_return_exit_1;
    }
    branch_end_197:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_713f709215410de619f38bbb0405e5b8);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto frame_no_exception_4;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_713f709215410de619f38bbb0405e5b8);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_713f709215410de619f38bbb0405e5b8);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_713f709215410de619f38bbb0405e5b8, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_713f709215410de619f38bbb0405e5b8->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_713f709215410de619f38bbb0405e5b8, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_713f709215410de619f38bbb0405e5b8,
        type_description_1,
        par_self,
        par_url,
        var_parsed_url,
        var_default_search,
        var_smuggled_data,
        var_force_videoid,
        var_is_intentional,
        var_video_id,
        var_head_req,
        var_head_response,
        var_new_url,
        var_full_response,
        var_request,
        var_info_dict,
        var_content_type,
        var_m,
        var_format_id,
        var_formats,
        var_force,
        var_first_bytes,
        var_webpage,
        var_doc,
        var_smil,
        var_camtasia_res,
        var_video_title,
        var_age_limit,
        var_AGE_LIMIT_MARKERS,
        var_video_uploader,
        var_video_description,
        var_video_thumbnail,
        var_bc_urls,
        var_entries,
        var_nexx_urls,
        var_nexx_embed_urls,
        var_tp_urls,
        var_arc_urls,
        var_mychannels_urls,
        var_matches,
        var_vimeo_urls,
        var_vhx_url,
        var_vid_me_embed_url,
        var_youtube_urls,
        var_playlists,
        var_dailymail_urls,
        var_teachable_url,
        var_wistia_urls,
        var_playlist,
        var_entry,
        var_svt_url,
        var_mobj,
        var_burl,
        var_embed_token,
        var_embeds,
        var_facebook_urls,
        var_odnoklassniki_url,
        var_sibnet_urls,
        var_simplecast_urls,
        var_rutv_url,
        var_tvc_url,
        var_sportbox_urls,
        var_xhamster_urls,
        var_tnaflix_urls,
        var_pornhub_urls,
        var_drtuber_urls,
        var_redtube_urls,
        var_tube8_urls,
        var_mofosex_urls,
        var_spankwire_urls,
        var_youporn_urls,
        var_ustream_url,
        var_arte_urls,
        var_myvi_url,
        var_soundcloud_urls,
        var_tunein_urls,
        var_mtvservices_url,
        var_kaltura_urls,
        var_eagleplatform_url,
        var_pladform_url,
        var_videomore_url,
        var_webcaster_url,
        var_nbc_sports_url,
        var_nbc_news_embed_url,
        var_google_drive_url,
        var_senate_isvp_url,
        var_kinja_embed_urls,
        var_onionstudios_url,
        var_viewlift_url,
        var_jwplatform_urls,
        var_digiteka_url,
        var_arkena_url,
        var_piksel_url,
        var_limelight_urls,
        var_anvato_urls,
        var_info,
        var_instagram_embed_url,
        var_threeqsdn_url,
        var_vbox7_url,
        var_dbtv_urls,
        var_videa_urls,
        var_twentymin_urls,
        var_videopress_urls,
        var_rutube_urls,
        var_wapo_urls,
        var_mediaset_urls,
        var_joj_urls,
        var_mpfn_urls,
        var_vzaar_urls,
        var_channel9_urls,
        var_vshare_urls,
        var_mediasite_urls,
        var_springboardplatform_urls,
        var_yapfiles_urls,
        var_vice_urls,
        var_xfileshare_urls,
        var_cloudflarestream_urls,
        var_peertube_urls,
        var_indavideo_urls,
        var_apa_urls,
        var_foxnews_urls,
        var_sharevideos_urls,
        var_viqeo_urls,
        var_expressen_urls,
        var_zype_urls,
        var_num,
        var_jwplayer_data,
        var_sources,
        var_source,
        var_src,
        var_src_type,
        var_ext,
        var_json_ld,
        var_check_video,
        var_filter_video,
        var_found,
        var_m_video_type,
        NULL,
        var_refresh_header,
        var_embed_url,
        var_video_url,
        var_entry_info_dict,
        var_e
    );


    // Release cached frame if used for exception.
    if (frame_713f709215410de619f38bbb0405e5b8 == cache_frame_713f709215410de619f38bbb0405e5b8) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_713f709215410de619f38bbb0405e5b8);
        cache_frame_713f709215410de619f38bbb0405e5b8 = NULL;
    }

    assertFrameObject(frame_713f709215410de619f38bbb0405e5b8);

    // Put the previous frame back on top.
    popFrameStack();


    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_4:;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(par_url);
    Py_DECREF(par_url);
    par_url = NULL;
    Py_XDECREF(var_parsed_url);
    var_parsed_url = NULL;
    Py_XDECREF(var_default_search);
    var_default_search = NULL;
    Py_XDECREF(var_smuggled_data);
    var_smuggled_data = NULL;
    Py_XDECREF(var_force_videoid);
    var_force_videoid = NULL;
    Py_XDECREF(var_is_intentional);
    var_is_intentional = NULL;
    Py_XDECREF(var_video_id);
    var_video_id = NULL;
    Py_XDECREF(var_head_req);
    var_head_req = NULL;
    Py_XDECREF(var_head_response);
    var_head_response = NULL;
    Py_XDECREF(var_new_url);
    var_new_url = NULL;
    Py_XDECREF(var_full_response);
    var_full_response = NULL;
    Py_XDECREF(var_request);
    var_request = NULL;
    Py_XDECREF(var_info_dict);
    var_info_dict = NULL;
    Py_XDECREF(var_content_type);
    var_content_type = NULL;
    Py_XDECREF(var_m);
    var_m = NULL;
    Py_XDECREF(var_format_id);
    var_format_id = NULL;
    Py_XDECREF(var_formats);
    var_formats = NULL;
    Py_XDECREF(var_force);
    var_force = NULL;
    Py_XDECREF(var_first_bytes);
    var_first_bytes = NULL;
    CHECK_OBJECT(var_webpage);
    Py_DECREF(var_webpage);
    var_webpage = NULL;
    Py_XDECREF(var_doc);
    var_doc = NULL;
    Py_XDECREF(var_smil);
    var_smil = NULL;
    Py_XDECREF(var_camtasia_res);
    var_camtasia_res = NULL;
    Py_XDECREF(var_video_title);
    var_video_title = NULL;
    Py_XDECREF(var_age_limit);
    var_age_limit = NULL;
    Py_XDECREF(var_AGE_LIMIT_MARKERS);
    var_AGE_LIMIT_MARKERS = NULL;
    Py_XDECREF(var_video_uploader);
    var_video_uploader = NULL;
    Py_XDECREF(var_video_description);
    var_video_description = NULL;
    Py_XDECREF(var_video_thumbnail);
    var_video_thumbnail = NULL;
    Py_XDECREF(var_bc_urls);
    var_bc_urls = NULL;
    Py_XDECREF(var_entries);
    var_entries = NULL;
    Py_XDECREF(var_nexx_urls);
    var_nexx_urls = NULL;
    Py_XDECREF(var_nexx_embed_urls);
    var_nexx_embed_urls = NULL;
    Py_XDECREF(var_tp_urls);
    var_tp_urls = NULL;
    Py_XDECREF(var_arc_urls);
    var_arc_urls = NULL;
    Py_XDECREF(var_mychannels_urls);
    var_mychannels_urls = NULL;
    Py_XDECREF(var_matches);
    var_matches = NULL;
    Py_XDECREF(var_vimeo_urls);
    var_vimeo_urls = NULL;
    Py_XDECREF(var_vhx_url);
    var_vhx_url = NULL;
    Py_XDECREF(var_vid_me_embed_url);
    var_vid_me_embed_url = NULL;
    Py_XDECREF(var_youtube_urls);
    var_youtube_urls = NULL;
    Py_XDECREF(var_playlists);
    var_playlists = NULL;
    Py_XDECREF(var_dailymail_urls);
    var_dailymail_urls = NULL;
    Py_XDECREF(var_teachable_url);
    var_teachable_url = NULL;
    Py_XDECREF(var_wistia_urls);
    var_wistia_urls = NULL;
    Py_XDECREF(var_playlist);
    var_playlist = NULL;
    Py_XDECREF(var_entry);
    var_entry = NULL;
    Py_XDECREF(var_svt_url);
    var_svt_url = NULL;
    Py_XDECREF(var_mobj);
    var_mobj = NULL;
    Py_XDECREF(var_burl);
    var_burl = NULL;
    Py_XDECREF(var_embed_token);
    var_embed_token = NULL;
    Py_XDECREF(var_embeds);
    var_embeds = NULL;
    Py_XDECREF(var_facebook_urls);
    var_facebook_urls = NULL;
    Py_XDECREF(var_odnoklassniki_url);
    var_odnoklassniki_url = NULL;
    Py_XDECREF(var_sibnet_urls);
    var_sibnet_urls = NULL;
    Py_XDECREF(var_simplecast_urls);
    var_simplecast_urls = NULL;
    Py_XDECREF(var_rutv_url);
    var_rutv_url = NULL;
    Py_XDECREF(var_tvc_url);
    var_tvc_url = NULL;
    Py_XDECREF(var_sportbox_urls);
    var_sportbox_urls = NULL;
    Py_XDECREF(var_xhamster_urls);
    var_xhamster_urls = NULL;
    Py_XDECREF(var_tnaflix_urls);
    var_tnaflix_urls = NULL;
    Py_XDECREF(var_pornhub_urls);
    var_pornhub_urls = NULL;
    Py_XDECREF(var_drtuber_urls);
    var_drtuber_urls = NULL;
    Py_XDECREF(var_redtube_urls);
    var_redtube_urls = NULL;
    Py_XDECREF(var_tube8_urls);
    var_tube8_urls = NULL;
    Py_XDECREF(var_mofosex_urls);
    var_mofosex_urls = NULL;
    Py_XDECREF(var_spankwire_urls);
    var_spankwire_urls = NULL;
    Py_XDECREF(var_youporn_urls);
    var_youporn_urls = NULL;
    Py_XDECREF(var_ustream_url);
    var_ustream_url = NULL;
    Py_XDECREF(var_arte_urls);
    var_arte_urls = NULL;
    Py_XDECREF(var_myvi_url);
    var_myvi_url = NULL;
    Py_XDECREF(var_soundcloud_urls);
    var_soundcloud_urls = NULL;
    Py_XDECREF(var_tunein_urls);
    var_tunein_urls = NULL;
    Py_XDECREF(var_mtvservices_url);
    var_mtvservices_url = NULL;
    Py_XDECREF(var_kaltura_urls);
    var_kaltura_urls = NULL;
    Py_XDECREF(var_eagleplatform_url);
    var_eagleplatform_url = NULL;
    Py_XDECREF(var_pladform_url);
    var_pladform_url = NULL;
    Py_XDECREF(var_videomore_url);
    var_videomore_url = NULL;
    Py_XDECREF(var_webcaster_url);
    var_webcaster_url = NULL;
    Py_XDECREF(var_nbc_sports_url);
    var_nbc_sports_url = NULL;
    Py_XDECREF(var_nbc_news_embed_url);
    var_nbc_news_embed_url = NULL;
    Py_XDECREF(var_google_drive_url);
    var_google_drive_url = NULL;
    Py_XDECREF(var_senate_isvp_url);
    var_senate_isvp_url = NULL;
    Py_XDECREF(var_kinja_embed_urls);
    var_kinja_embed_urls = NULL;
    Py_XDECREF(var_onionstudios_url);
    var_onionstudios_url = NULL;
    Py_XDECREF(var_viewlift_url);
    var_viewlift_url = NULL;
    Py_XDECREF(var_jwplatform_urls);
    var_jwplatform_urls = NULL;
    Py_XDECREF(var_digiteka_url);
    var_digiteka_url = NULL;
    Py_XDECREF(var_arkena_url);
    var_arkena_url = NULL;
    Py_XDECREF(var_piksel_url);
    var_piksel_url = NULL;
    Py_XDECREF(var_limelight_urls);
    var_limelight_urls = NULL;
    Py_XDECREF(var_anvato_urls);
    var_anvato_urls = NULL;
    Py_XDECREF(var_info);
    var_info = NULL;
    Py_XDECREF(var_instagram_embed_url);
    var_instagram_embed_url = NULL;
    Py_XDECREF(var_threeqsdn_url);
    var_threeqsdn_url = NULL;
    Py_XDECREF(var_vbox7_url);
    var_vbox7_url = NULL;
    Py_XDECREF(var_dbtv_urls);
    var_dbtv_urls = NULL;
    Py_XDECREF(var_videa_urls);
    var_videa_urls = NULL;
    Py_XDECREF(var_twentymin_urls);
    var_twentymin_urls = NULL;
    Py_XDECREF(var_videopress_urls);
    var_videopress_urls = NULL;
    Py_XDECREF(var_rutube_urls);
    var_rutube_urls = NULL;
    Py_XDECREF(var_wapo_urls);
    var_wapo_urls = NULL;
    Py_XDECREF(var_mediaset_urls);
    var_mediaset_urls = NULL;
    Py_XDECREF(var_joj_urls);
    var_joj_urls = NULL;
    Py_XDECREF(var_mpfn_urls);
    var_mpfn_urls = NULL;
    Py_XDECREF(var_vzaar_urls);
    var_vzaar_urls = NULL;
    Py_XDECREF(var_channel9_urls);
    var_channel9_urls = NULL;
    Py_XDECREF(var_vshare_urls);
    var_vshare_urls = NULL;
    Py_XDECREF(var_mediasite_urls);
    var_mediasite_urls = NULL;
    Py_XDECREF(var_springboardplatform_urls);
    var_springboardplatform_urls = NULL;
    Py_XDECREF(var_yapfiles_urls);
    var_yapfiles_urls = NULL;
    Py_XDECREF(var_vice_urls);
    var_vice_urls = NULL;
    Py_XDECREF(var_xfileshare_urls);
    var_xfileshare_urls = NULL;
    Py_XDECREF(var_cloudflarestream_urls);
    var_cloudflarestream_urls = NULL;
    Py_XDECREF(var_peertube_urls);
    var_peertube_urls = NULL;
    Py_XDECREF(var_indavideo_urls);
    var_indavideo_urls = NULL;
    Py_XDECREF(var_apa_urls);
    var_apa_urls = NULL;
    Py_XDECREF(var_foxnews_urls);
    var_foxnews_urls = NULL;
    Py_XDECREF(var_sharevideos_urls);
    var_sharevideos_urls = NULL;
    Py_XDECREF(var_viqeo_urls);
    var_viqeo_urls = NULL;
    Py_XDECREF(var_expressen_urls);
    var_expressen_urls = NULL;
    Py_XDECREF(var_zype_urls);
    var_zype_urls = NULL;
    Py_XDECREF(var_num);
    var_num = NULL;
    Py_XDECREF(var_jwplayer_data);
    var_jwplayer_data = NULL;
    Py_XDECREF(var_sources);
    var_sources = NULL;
    Py_XDECREF(var_source);
    var_source = NULL;
    Py_XDECREF(var_src);
    var_src = NULL;
    Py_XDECREF(var_src_type);
    var_src_type = NULL;
    Py_XDECREF(var_ext);
    var_ext = NULL;
    Py_XDECREF(var_json_ld);
    var_json_ld = NULL;
    CHECK_OBJECT(var_check_video);
    Py_DECREF(var_check_video);
    var_check_video = NULL;
    Py_XDECREF(var_filter_video);
    var_filter_video = NULL;
    Py_XDECREF(var_found);
    var_found = NULL;
    Py_XDECREF(var_m_video_type);
    var_m_video_type = NULL;
    Py_XDECREF(var_refresh_header);
    var_refresh_header = NULL;
    Py_XDECREF(var_embed_url);
    var_embed_url = NULL;
    Py_XDECREF(var_video_url);
    var_video_url = NULL;
    Py_XDECREF(var_entry_info_dict);
    var_entry_info_dict = NULL;
    Py_XDECREF(var_e);
    var_e = NULL;
    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_23 = exception_type;
    exception_keeper_value_23 = exception_value;
    exception_keeper_tb_23 = exception_tb;
    exception_keeper_lineno_23 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(par_url);
    Py_DECREF(par_url);
    par_url = NULL;
    Py_XDECREF(var_parsed_url);
    var_parsed_url = NULL;
    Py_XDECREF(var_default_search);
    var_default_search = NULL;
    Py_XDECREF(var_smuggled_data);
    var_smuggled_data = NULL;
    Py_XDECREF(var_force_videoid);
    var_force_videoid = NULL;
    Py_XDECREF(var_is_intentional);
    var_is_intentional = NULL;
    Py_XDECREF(var_video_id);
    var_video_id = NULL;
    Py_XDECREF(var_head_req);
    var_head_req = NULL;
    Py_XDECREF(var_head_response);
    var_head_response = NULL;
    Py_XDECREF(var_new_url);
    var_new_url = NULL;
    Py_XDECREF(var_full_response);
    var_full_response = NULL;
    Py_XDECREF(var_request);
    var_request = NULL;
    Py_XDECREF(var_info_dict);
    var_info_dict = NULL;
    Py_XDECREF(var_content_type);
    var_content_type = NULL;
    Py_XDECREF(var_m);
    var_m = NULL;
    Py_XDECREF(var_format_id);
    var_format_id = NULL;
    Py_XDECREF(var_formats);
    var_formats = NULL;
    Py_XDECREF(var_force);
    var_force = NULL;
    Py_XDECREF(var_first_bytes);
    var_first_bytes = NULL;
    CHECK_OBJECT(var_webpage);
    Py_DECREF(var_webpage);
    var_webpage = NULL;
    Py_XDECREF(var_doc);
    var_doc = NULL;
    Py_XDECREF(var_smil);
    var_smil = NULL;
    Py_XDECREF(var_camtasia_res);
    var_camtasia_res = NULL;
    Py_XDECREF(var_video_title);
    var_video_title = NULL;
    Py_XDECREF(var_age_limit);
    var_age_limit = NULL;
    Py_XDECREF(var_AGE_LIMIT_MARKERS);
    var_AGE_LIMIT_MARKERS = NULL;
    Py_XDECREF(var_video_uploader);
    var_video_uploader = NULL;
    Py_XDECREF(var_video_description);
    var_video_description = NULL;
    Py_XDECREF(var_video_thumbnail);
    var_video_thumbnail = NULL;
    Py_XDECREF(var_bc_urls);
    var_bc_urls = NULL;
    Py_XDECREF(var_entries);
    var_entries = NULL;
    Py_XDECREF(var_nexx_urls);
    var_nexx_urls = NULL;
    Py_XDECREF(var_nexx_embed_urls);
    var_nexx_embed_urls = NULL;
    Py_XDECREF(var_tp_urls);
    var_tp_urls = NULL;
    Py_XDECREF(var_arc_urls);
    var_arc_urls = NULL;
    Py_XDECREF(var_mychannels_urls);
    var_mychannels_urls = NULL;
    Py_XDECREF(var_matches);
    var_matches = NULL;
    Py_XDECREF(var_vimeo_urls);
    var_vimeo_urls = NULL;
    Py_XDECREF(var_vhx_url);
    var_vhx_url = NULL;
    Py_XDECREF(var_vid_me_embed_url);
    var_vid_me_embed_url = NULL;
    Py_XDECREF(var_youtube_urls);
    var_youtube_urls = NULL;
    Py_XDECREF(var_playlists);
    var_playlists = NULL;
    Py_XDECREF(var_dailymail_urls);
    var_dailymail_urls = NULL;
    Py_XDECREF(var_teachable_url);
    var_teachable_url = NULL;
    Py_XDECREF(var_wistia_urls);
    var_wistia_urls = NULL;
    Py_XDECREF(var_playlist);
    var_playlist = NULL;
    Py_XDECREF(var_entry);
    var_entry = NULL;
    Py_XDECREF(var_svt_url);
    var_svt_url = NULL;
    Py_XDECREF(var_mobj);
    var_mobj = NULL;
    Py_XDECREF(var_burl);
    var_burl = NULL;
    Py_XDECREF(var_embed_token);
    var_embed_token = NULL;
    Py_XDECREF(var_embeds);
    var_embeds = NULL;
    Py_XDECREF(var_facebook_urls);
    var_facebook_urls = NULL;
    Py_XDECREF(var_odnoklassniki_url);
    var_odnoklassniki_url = NULL;
    Py_XDECREF(var_sibnet_urls);
    var_sibnet_urls = NULL;
    Py_XDECREF(var_simplecast_urls);
    var_simplecast_urls = NULL;
    Py_XDECREF(var_rutv_url);
    var_rutv_url = NULL;
    Py_XDECREF(var_tvc_url);
    var_tvc_url = NULL;
    Py_XDECREF(var_sportbox_urls);
    var_sportbox_urls = NULL;
    Py_XDECREF(var_xhamster_urls);
    var_xhamster_urls = NULL;
    Py_XDECREF(var_tnaflix_urls);
    var_tnaflix_urls = NULL;
    Py_XDECREF(var_pornhub_urls);
    var_pornhub_urls = NULL;
    Py_XDECREF(var_drtuber_urls);
    var_drtuber_urls = NULL;
    Py_XDECREF(var_redtube_urls);
    var_redtube_urls = NULL;
    Py_XDECREF(var_tube8_urls);
    var_tube8_urls = NULL;
    Py_XDECREF(var_mofosex_urls);
    var_mofosex_urls = NULL;
    Py_XDECREF(var_spankwire_urls);
    var_spankwire_urls = NULL;
    Py_XDECREF(var_youporn_urls);
    var_youporn_urls = NULL;
    Py_XDECREF(var_ustream_url);
    var_ustream_url = NULL;
    Py_XDECREF(var_arte_urls);
    var_arte_urls = NULL;
    Py_XDECREF(var_myvi_url);
    var_myvi_url = NULL;
    Py_XDECREF(var_soundcloud_urls);
    var_soundcloud_urls = NULL;
    Py_XDECREF(var_tunein_urls);
    var_tunein_urls = NULL;
    Py_XDECREF(var_mtvservices_url);
    var_mtvservices_url = NULL;
    Py_XDECREF(var_kaltura_urls);
    var_kaltura_urls = NULL;
    Py_XDECREF(var_eagleplatform_url);
    var_eagleplatform_url = NULL;
    Py_XDECREF(var_pladform_url);
    var_pladform_url = NULL;
    Py_XDECREF(var_videomore_url);
    var_videomore_url = NULL;
    Py_XDECREF(var_webcaster_url);
    var_webcaster_url = NULL;
    Py_XDECREF(var_nbc_sports_url);
    var_nbc_sports_url = NULL;
    Py_XDECREF(var_nbc_news_embed_url);
    var_nbc_news_embed_url = NULL;
    Py_XDECREF(var_google_drive_url);
    var_google_drive_url = NULL;
    Py_XDECREF(var_senate_isvp_url);
    var_senate_isvp_url = NULL;
    Py_XDECREF(var_kinja_embed_urls);
    var_kinja_embed_urls = NULL;
    Py_XDECREF(var_onionstudios_url);
    var_onionstudios_url = NULL;
    Py_XDECREF(var_viewlift_url);
    var_viewlift_url = NULL;
    Py_XDECREF(var_jwplatform_urls);
    var_jwplatform_urls = NULL;
    Py_XDECREF(var_digiteka_url);
    var_digiteka_url = NULL;
    Py_XDECREF(var_arkena_url);
    var_arkena_url = NULL;
    Py_XDECREF(var_piksel_url);
    var_piksel_url = NULL;
    Py_XDECREF(var_limelight_urls);
    var_limelight_urls = NULL;
    Py_XDECREF(var_anvato_urls);
    var_anvato_urls = NULL;
    Py_XDECREF(var_info);
    var_info = NULL;
    Py_XDECREF(var_instagram_embed_url);
    var_instagram_embed_url = NULL;
    Py_XDECREF(var_threeqsdn_url);
    var_threeqsdn_url = NULL;
    Py_XDECREF(var_vbox7_url);
    var_vbox7_url = NULL;
    Py_XDECREF(var_dbtv_urls);
    var_dbtv_urls = NULL;
    Py_XDECREF(var_videa_urls);
    var_videa_urls = NULL;
    Py_XDECREF(var_twentymin_urls);
    var_twentymin_urls = NULL;
    Py_XDECREF(var_videopress_urls);
    var_videopress_urls = NULL;
    Py_XDECREF(var_rutube_urls);
    var_rutube_urls = NULL;
    Py_XDECREF(var_wapo_urls);
    var_wapo_urls = NULL;
    Py_XDECREF(var_mediaset_urls);
    var_mediaset_urls = NULL;
    Py_XDECREF(var_joj_urls);
    var_joj_urls = NULL;
    Py_XDECREF(var_mpfn_urls);
    var_mpfn_urls = NULL;
    Py_XDECREF(var_vzaar_urls);
    var_vzaar_urls = NULL;
    Py_XDECREF(var_channel9_urls);
    var_channel9_urls = NULL;
    Py_XDECREF(var_vshare_urls);
    var_vshare_urls = NULL;
    Py_XDECREF(var_mediasite_urls);
    var_mediasite_urls = NULL;
    Py_XDECREF(var_springboardplatform_urls);
    var_springboardplatform_urls = NULL;
    Py_XDECREF(var_yapfiles_urls);
    var_yapfiles_urls = NULL;
    Py_XDECREF(var_vice_urls);
    var_vice_urls = NULL;
    Py_XDECREF(var_xfileshare_urls);
    var_xfileshare_urls = NULL;
    Py_XDECREF(var_cloudflarestream_urls);
    var_cloudflarestream_urls = NULL;
    Py_XDECREF(var_peertube_urls);
    var_peertube_urls = NULL;
    Py_XDECREF(var_indavideo_urls);
    var_indavideo_urls = NULL;
    Py_XDECREF(var_apa_urls);
    var_apa_urls = NULL;
    Py_XDECREF(var_foxnews_urls);
    var_foxnews_urls = NULL;
    Py_XDECREF(var_sharevideos_urls);
    var_sharevideos_urls = NULL;
    Py_XDECREF(var_viqeo_urls);
    var_viqeo_urls = NULL;
    Py_XDECREF(var_expressen_urls);
    var_expressen_urls = NULL;
    Py_XDECREF(var_zype_urls);
    var_zype_urls = NULL;
    Py_XDECREF(var_num);
    var_num = NULL;
    Py_XDECREF(var_jwplayer_data);
    var_jwplayer_data = NULL;
    Py_XDECREF(var_sources);
    var_sources = NULL;
    Py_XDECREF(var_source);
    var_source = NULL;
    Py_XDECREF(var_src);
    var_src = NULL;
    Py_XDECREF(var_src_type);
    var_src_type = NULL;
    Py_XDECREF(var_ext);
    var_ext = NULL;
    Py_XDECREF(var_json_ld);
    var_json_ld = NULL;
    CHECK_OBJECT(var_check_video);
    Py_DECREF(var_check_video);
    var_check_video = NULL;
    Py_XDECREF(var_filter_video);
    var_filter_video = NULL;
    Py_XDECREF(var_found);
    var_found = NULL;
    Py_XDECREF(var_m_video_type);
    var_m_video_type = NULL;
    Py_XDECREF(var_refresh_header);
    var_refresh_header = NULL;
    Py_XDECREF(var_embed_url);
    var_embed_url = NULL;
    Py_XDECREF(var_video_url);
    var_video_url = NULL;
    Py_XDECREF(var_entry_info_dict);
    var_entry_info_dict = NULL;
    Py_XDECREF(var_e);
    var_e = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_23;
    exception_value = exception_keeper_value_23;
    exception_tb = exception_keeper_tb_23;
    exception_lineno = exception_keeper_lineno_23;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_self);
    Py_DECREF(par_self);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__1_lambda(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_x = python_pars[0];
    struct Nuitka_FrameObject *frame_48160966465c657f28fe71960e8ef540;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_48160966465c657f28fe71960e8ef540 = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_48160966465c657f28fe71960e8ef540)) {
        Py_XDECREF(cache_frame_48160966465c657f28fe71960e8ef540);

#if _DEBUG_REFCOUNTS
        if (cache_frame_48160966465c657f28fe71960e8ef540 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_48160966465c657f28fe71960e8ef540 = MAKE_FUNCTION_FRAME(codeobj_48160966465c657f28fe71960e8ef540, module_youtube_dl$extractor$generic, sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_48160966465c657f28fe71960e8ef540->m_type_description == NULL);
    frame_48160966465c657f28fe71960e8ef540 = cache_frame_48160966465c657f28fe71960e8ef540;


    // Push the new frame as the currently active one.
    pushFrameStack(frame_48160966465c657f28fe71960e8ef540);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_48160966465c657f28fe71960e8ef540) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_value_1;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_called_instance_1;
        tmp_called_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[237]);

        if (unlikely(tmp_called_value_1 == NULL)) {
            tmp_called_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[237]);
        }

        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2524;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_x);
        tmp_called_instance_1 = par_x;
        frame_48160966465c657f28fe71960e8ef540->m_frame.f_lineno = 2524;
        tmp_args_element_value_1 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_1,
            mod_consts[137],
            PyTuple_GET_ITEM(mod_consts[483], 0)
        );

        if (tmp_args_element_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2524;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        frame_48160966465c657f28fe71960e8ef540->m_frame.f_lineno = 2524;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_1, tmp_args_element_value_1);
        Py_DECREF(tmp_args_element_value_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2524;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_48160966465c657f28fe71960e8ef540);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_48160966465c657f28fe71960e8ef540);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_48160966465c657f28fe71960e8ef540);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_48160966465c657f28fe71960e8ef540, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_48160966465c657f28fe71960e8ef540->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_48160966465c657f28fe71960e8ef540, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_48160966465c657f28fe71960e8ef540,
        type_description_1,
        par_x
    );


    // Release cached frame if used for exception.
    if (frame_48160966465c657f28fe71960e8ef540 == cache_frame_48160966465c657f28fe71960e8ef540) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_48160966465c657f28fe71960e8ef540);
        cache_frame_48160966465c657f28fe71960e8ef540 = NULL;
    }

    assertFrameObject(frame_48160966465c657f28fe71960e8ef540);

    // Put the previous frame back on top.
    popFrameStack();


    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_x);
    Py_DECREF(par_x);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_x);
    Py_DECREF(par_x);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}



struct youtube_dl$extractor$generic$$$function__4__real_extract$$$genexpr__1_genexpr_locals {
    PyObject *var_marker;
    PyObject *tmp_iter_value_0;
    char const *type_description_1;
    PyObject *exception_type;
    PyObject *exception_value;
    PyTracebackObject *exception_tb;
    int exception_lineno;
    char yield_tmps[1024];
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    int exception_keeper_lineno_2;
};

static PyObject *youtube_dl$extractor$generic$$$function__4__real_extract$$$genexpr__1_genexpr_context(struct Nuitka_GeneratorObject *generator, PyObject *yield_return_value) {
    CHECK_OBJECT(generator);
    assert(Nuitka_Generator_Check((PyObject *)generator));
    CHECK_OBJECT_X(yield_return_value);

    // Heap access if used.
    struct youtube_dl$extractor$generic$$$function__4__real_extract$$$genexpr__1_genexpr_locals *generator_heap = (struct youtube_dl$extractor$generic$$$function__4__real_extract$$$genexpr__1_genexpr_locals *)generator->m_heap_storage;

    // Dispatch to yield based on return label index:
    switch(generator->m_yield_return_index) {
    case 1: goto yield_return_1;
    }

    // Local variable initialization
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    static struct Nuitka_FrameObject *cache_m_frame = NULL;
    generator_heap->var_marker = NULL;
    generator_heap->tmp_iter_value_0 = NULL;
    generator_heap->type_description_1 = NULL;
    generator_heap->exception_type = NULL;
    generator_heap->exception_value = NULL;
    generator_heap->exception_tb = NULL;
    generator_heap->exception_lineno = 0;

    // Actual generator function body.
    // Tried code:
    if (isFrameUnusable(cache_m_frame)) {
        Py_XDECREF(cache_m_frame);

#if _DEBUG_REFCOUNTS
        if (cache_m_frame == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_m_frame = MAKE_FUNCTION_FRAME(codeobj_020bccf0262b56adacf061c75c36b57a, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    generator->m_frame = cache_m_frame;

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    Py_INCREF(generator->m_frame);
    assert(Py_REFCNT(generator->m_frame) == 2); // Frame stack

#if PYTHON_VERSION >= 0x340
    Nuitka_SetFrameGenerator(generator->m_frame, (PyObject *)generator);
#endif

    assert(generator->m_frame->m_frame.f_back == NULL);

    pushFrameStack(generator->m_frame);

    // Taking a reference prevents reuse of generator frame while it is being used.
    Py_INCREF(generator->m_frame->m_frame.f_back);

#if PYTHON_VERSION >= 0x300
    // Accept currently existing exception as the one to publish again when we
    // yield or yield from.
    {
        PyThreadState *thread_state = PyThreadState_GET();

#if PYTHON_VERSION < 0x3b0
        EXC_TYPE_F(generator) = EXC_TYPE(thread_state);
        if (EXC_TYPE_F(generator) == Py_None) EXC_TYPE_F(generator) = NULL;
        Py_XINCREF(EXC_TYPE_F(generator));
#endif
        EXC_VALUE_F(generator) = EXC_VALUE(thread_state);
        Py_XINCREF(EXC_VALUE_F(generator));
#if PYTHON_VERSION < 0x3b0
        ASSIGN_EXC_TRACEBACK_F(generator, EXC_TRACEBACK(thread_state));
        Py_XINCREF(EXC_TRACEBACK_F(generator));
#endif
    }

#endif

    // Framed code:
    // Tried code:
    loop_start_1:;
    {
        PyObject *tmp_next_source_1;
        PyObject *tmp_assign_source_1;
        CHECK_OBJECT(Nuitka_Cell_GET(generator->m_closure[0]));
        tmp_next_source_1 = Nuitka_Cell_GET(generator->m_closure[0]);
        tmp_assign_source_1 = ITERATOR_NEXT(tmp_next_source_1);
        if (tmp_assign_source_1 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_1;
            } else {

                FETCH_ERROR_OCCURRED(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);
                generator_heap->type_description_1 = "Noc";
                generator_heap->exception_lineno = 2544;
                goto try_except_handler_2;
            }
        }

        {
            PyObject *old = generator_heap->tmp_iter_value_0;
            generator_heap->tmp_iter_value_0 = tmp_assign_source_1;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_2;
        CHECK_OBJECT(generator_heap->tmp_iter_value_0);
        tmp_assign_source_2 = generator_heap->tmp_iter_value_0;
        {
            PyObject *old = generator_heap->var_marker;
            generator_heap->var_marker = tmp_assign_source_2;
            Py_INCREF(generator_heap->var_marker);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_expression_value_1;
        PyObject *tmp_called_value_1;
        PyObject *tmp_expression_value_2;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_args_element_value_2;
        NUITKA_MAY_BE_UNUSED PyObject *tmp_yield_result_1;
        tmp_expression_value_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95]);

        if (unlikely(tmp_expression_value_2 == NULL)) {
            tmp_expression_value_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[95]);
        }

        if (tmp_expression_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);


            generator_heap->exception_lineno = 2544;
            generator_heap->type_description_1 = "Noc";
            goto try_except_handler_2;
        }
        tmp_called_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_2, mod_consts[234]);
        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);


            generator_heap->exception_lineno = 2544;
            generator_heap->type_description_1 = "Noc";
            goto try_except_handler_2;
        }
        CHECK_OBJECT(generator_heap->var_marker);
        tmp_args_element_value_1 = generator_heap->var_marker;
        if (Nuitka_Cell_GET(generator->m_closure[1]) == NULL) {
            Py_DECREF(tmp_called_value_1);
            FORMAT_UNBOUND_CLOSURE_ERROR(&generator_heap->exception_type, &generator_heap->exception_value, mod_consts[171]);
            generator_heap->exception_tb = NULL;
            NORMALIZE_EXCEPTION(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);
            CHAIN_EXCEPTION(generator_heap->exception_value);

            generator_heap->exception_lineno = 2544;
            generator_heap->type_description_1 = "Noc";
            goto try_except_handler_2;
        }

        tmp_args_element_value_2 = Nuitka_Cell_GET(generator->m_closure[1]);
        generator->m_frame->m_frame.f_lineno = 2544;
        {
            PyObject *call_args[] = {tmp_args_element_value_1, tmp_args_element_value_2};
            tmp_expression_value_1 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_1, call_args);
        }

        Py_DECREF(tmp_called_value_1);
        if (tmp_expression_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);


            generator_heap->exception_lineno = 2544;
            generator_heap->type_description_1 = "Noc";
            goto try_except_handler_2;
        }
        Nuitka_PreserveHeap(generator_heap->yield_tmps, &tmp_called_value_1, sizeof(PyObject *), &tmp_expression_value_2, sizeof(PyObject *), &tmp_args_element_value_1, sizeof(PyObject *), &tmp_args_element_value_2, sizeof(PyObject *), NULL);
        generator->m_yield_return_index = 1;
        return tmp_expression_value_1;
        yield_return_1:
        Nuitka_RestoreHeap(generator_heap->yield_tmps, &tmp_called_value_1, sizeof(PyObject *), &tmp_expression_value_2, sizeof(PyObject *), &tmp_args_element_value_1, sizeof(PyObject *), &tmp_args_element_value_2, sizeof(PyObject *), NULL);
        if (yield_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);


            generator_heap->exception_lineno = 2544;
            generator_heap->type_description_1 = "Noc";
            goto try_except_handler_2;
        }
        tmp_yield_result_1 = yield_return_value;
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&generator_heap->exception_type, &generator_heap->exception_value, &generator_heap->exception_tb);


        generator_heap->exception_lineno = 2544;
        generator_heap->type_description_1 = "Noc";
        goto try_except_handler_2;
    }
    goto loop_start_1;
    loop_end_1:;
    goto try_end_1;
    // Exception handler code:
    try_except_handler_2:;
    generator_heap->exception_keeper_type_1 = generator_heap->exception_type;
    generator_heap->exception_keeper_value_1 = generator_heap->exception_value;
    generator_heap->exception_keeper_tb_1 = generator_heap->exception_tb;
    generator_heap->exception_keeper_lineno_1 = generator_heap->exception_lineno;
    generator_heap->exception_type = NULL;
    generator_heap->exception_value = NULL;
    generator_heap->exception_tb = NULL;
    generator_heap->exception_lineno = 0;

    Py_XDECREF(generator_heap->tmp_iter_value_0);
    generator_heap->tmp_iter_value_0 = NULL;
    // Re-raise.
    generator_heap->exception_type = generator_heap->exception_keeper_type_1;
    generator_heap->exception_value = generator_heap->exception_keeper_value_1;
    generator_heap->exception_tb = generator_heap->exception_keeper_tb_1;
    generator_heap->exception_lineno = generator_heap->exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;

    Nuitka_Frame_MarkAsNotExecuting(generator->m_frame);

#if PYTHON_VERSION >= 0x300
#if PYTHON_VERSION < 0x3b0
    Py_CLEAR(EXC_TYPE_F(generator));
#endif
    Py_CLEAR(EXC_VALUE_F(generator));
#if PYTHON_VERSION < 0x3b0
    Py_CLEAR(EXC_TRACEBACK_F(generator));
#endif
#endif

    // Allow re-use of the frame again.
    Py_DECREF(generator->m_frame);
    goto frame_no_exception_1;

    frame_exception_exit_1:;

    // If it's not an exit exception, consider and create a traceback for it.
    if (!EXCEPTION_MATCH_GENERATOR(generator_heap->exception_type)) {
        if (generator_heap->exception_tb == NULL) {
            generator_heap->exception_tb = MAKE_TRACEBACK(generator->m_frame, generator_heap->exception_lineno);
        } else if (generator_heap->exception_tb->tb_frame != &generator->m_frame->m_frame) {
            generator_heap->exception_tb = ADD_TRACEBACK(generator_heap->exception_tb, generator->m_frame, generator_heap->exception_lineno);
        }

        Nuitka_Frame_AttachLocals(
            generator->m_frame,
            generator_heap->type_description_1,
            NULL,
            generator_heap->var_marker,
            generator->m_closure[1]
        );


        // Release cached frame if used for exception.
        if (generator->m_frame == cache_m_frame) {
#if _DEBUG_REFCOUNTS
            count_active_frame_cache_instances -= 1;
            count_released_frame_cache_instances += 1;
#endif

            Py_DECREF(cache_m_frame);
            cache_m_frame = NULL;
        }

        assertFrameObject(generator->m_frame);
    }

#if PYTHON_VERSION >= 0x300
#if PYTHON_VERSION < 0x3b0
    Py_CLEAR(EXC_TYPE_F(generator));
#endif
    Py_CLEAR(EXC_VALUE_F(generator));
#if PYTHON_VERSION < 0x3b0
    Py_CLEAR(EXC_TRACEBACK_F(generator));
#endif
#endif

    Py_DECREF(generator->m_frame);

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    goto try_end_2;
    // Exception handler code:
    try_except_handler_1:;
    generator_heap->exception_keeper_type_2 = generator_heap->exception_type;
    generator_heap->exception_keeper_value_2 = generator_heap->exception_value;
    generator_heap->exception_keeper_tb_2 = generator_heap->exception_tb;
    generator_heap->exception_keeper_lineno_2 = generator_heap->exception_lineno;
    generator_heap->exception_type = NULL;
    generator_heap->exception_value = NULL;
    generator_heap->exception_tb = NULL;
    generator_heap->exception_lineno = 0;

    Py_XDECREF(generator_heap->var_marker);
    generator_heap->var_marker = NULL;
    // Re-raise.
    generator_heap->exception_type = generator_heap->exception_keeper_type_2;
    generator_heap->exception_value = generator_heap->exception_keeper_value_2;
    generator_heap->exception_tb = generator_heap->exception_keeper_tb_2;
    generator_heap->exception_lineno = generator_heap->exception_keeper_lineno_2;

    goto function_exception_exit;
    // End of try:
    try_end_2:;
    Py_XDECREF(generator_heap->tmp_iter_value_0);
    generator_heap->tmp_iter_value_0 = NULL;
    Py_XDECREF(generator_heap->var_marker);
    generator_heap->var_marker = NULL;


    return NULL;

    function_exception_exit:

    assert(generator_heap->exception_type);
    RESTORE_ERROR_OCCURRED(generator_heap->exception_type, generator_heap->exception_value, generator_heap->exception_tb);

    return NULL;

}

static PyObject *MAKE_GENERATOR_youtube_dl$extractor$generic$$$function__4__real_extract$$$genexpr__1_genexpr(struct Nuitka_CellObject **closure) {
    return Nuitka_Generator_New(
        youtube_dl$extractor$generic$$$function__4__real_extract$$$genexpr__1_genexpr_context,
        module_youtube_dl$extractor$generic,
        mod_consts[484],
#if PYTHON_VERSION >= 0x350
        mod_consts[485],
#endif
        codeobj_020bccf0262b56adacf061c75c36b57a,
        closure,
        2,
        sizeof(struct youtube_dl$extractor$generic$$$function__4__real_extract$$$genexpr__1_genexpr_locals)
    );
}


static PyObject *impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__2_lambda(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_x = python_pars[0];
    struct Nuitka_FrameObject *frame_54fc4c2d3fe78c1b066f946ce4ee9f8c;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_54fc4c2d3fe78c1b066f946ce4ee9f8c = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_54fc4c2d3fe78c1b066f946ce4ee9f8c)) {
        Py_XDECREF(cache_frame_54fc4c2d3fe78c1b066f946ce4ee9f8c);

#if _DEBUG_REFCOUNTS
        if (cache_frame_54fc4c2d3fe78c1b066f946ce4ee9f8c == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_54fc4c2d3fe78c1b066f946ce4ee9f8c = MAKE_FUNCTION_FRAME(codeobj_54fc4c2d3fe78c1b066f946ce4ee9f8c, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_54fc4c2d3fe78c1b066f946ce4ee9f8c->m_type_description == NULL);
    frame_54fc4c2d3fe78c1b066f946ce4ee9f8c = cache_frame_54fc4c2d3fe78c1b066f946ce4ee9f8c;


    // Push the new frame as the currently active one.
    pushFrameStack(frame_54fc4c2d3fe78c1b066f946ce4ee9f8c);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_54fc4c2d3fe78c1b066f946ce4ee9f8c) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_value_1;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_args_element_value_2;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        tmp_called_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[125]);

        if (unlikely(tmp_called_value_1 == NULL)) {
            tmp_called_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[125]);
        }

        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2582;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_x);
        tmp_args_element_value_1 = par_x;
        tmp_dict_key_1 = mod_consts[337];
        if (Nuitka_Cell_GET(self->m_closure[0]) == NULL) {

            FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[33]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2582;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_dict_value_1 = Nuitka_Cell_GET(self->m_closure[0]);
        tmp_args_element_value_2 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_args_element_value_2, tmp_dict_key_1, tmp_dict_value_1);
        assert(!(tmp_res != 0));
        frame_54fc4c2d3fe78c1b066f946ce4ee9f8c->m_frame.f_lineno = 2582;
        {
            PyObject *call_args[] = {tmp_args_element_value_1, tmp_args_element_value_2};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_1, call_args);
        }

        Py_DECREF(tmp_args_element_value_2);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2582;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_54fc4c2d3fe78c1b066f946ce4ee9f8c);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_54fc4c2d3fe78c1b066f946ce4ee9f8c);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_54fc4c2d3fe78c1b066f946ce4ee9f8c);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_54fc4c2d3fe78c1b066f946ce4ee9f8c, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_54fc4c2d3fe78c1b066f946ce4ee9f8c->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_54fc4c2d3fe78c1b066f946ce4ee9f8c, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_54fc4c2d3fe78c1b066f946ce4ee9f8c,
        type_description_1,
        par_x,
        self->m_closure[0]
    );


    // Release cached frame if used for exception.
    if (frame_54fc4c2d3fe78c1b066f946ce4ee9f8c == cache_frame_54fc4c2d3fe78c1b066f946ce4ee9f8c) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_54fc4c2d3fe78c1b066f946ce4ee9f8c);
        cache_frame_54fc4c2d3fe78c1b066f946ce4ee9f8c = NULL;
    }

    assertFrameObject(frame_54fc4c2d3fe78c1b066f946ce4ee9f8c);

    // Put the previous frame back on top.
    popFrameStack();


    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_x);
    Py_DECREF(par_x);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_x);
    Py_DECREF(par_x);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__3_lambda(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_p = python_pars[0];
    struct Nuitka_FrameObject *frame_6258c47cf499e6cb22bf40a0ad10c16a;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_6258c47cf499e6cb22bf40a0ad10c16a = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_6258c47cf499e6cb22bf40a0ad10c16a)) {
        Py_XDECREF(cache_frame_6258c47cf499e6cb22bf40a0ad10c16a);

#if _DEBUG_REFCOUNTS
        if (cache_frame_6258c47cf499e6cb22bf40a0ad10c16a == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_6258c47cf499e6cb22bf40a0ad10c16a = MAKE_FUNCTION_FRAME(codeobj_6258c47cf499e6cb22bf40a0ad10c16a, module_youtube_dl$extractor$generic, sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_6258c47cf499e6cb22bf40a0ad10c16a->m_type_description == NULL);
    frame_6258c47cf499e6cb22bf40a0ad10c16a = cache_frame_6258c47cf499e6cb22bf40a0ad10c16a;


    // Push the new frame as the currently active one.
    pushFrameStack(frame_6258c47cf499e6cb22bf40a0ad10c16a);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_6258c47cf499e6cb22bf40a0ad10c16a) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_mod_expr_left_1;
        PyObject *tmp_mod_expr_right_1;
        tmp_mod_expr_left_1 = mod_consts[486];
        CHECK_OBJECT(par_p);
        tmp_mod_expr_right_1 = par_p;
        tmp_return_value = BINARY_OPERATION_MOD_OBJECT_UNICODE_OBJECT(tmp_mod_expr_left_1, tmp_mod_expr_right_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2648;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_6258c47cf499e6cb22bf40a0ad10c16a);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_6258c47cf499e6cb22bf40a0ad10c16a);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_6258c47cf499e6cb22bf40a0ad10c16a);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_6258c47cf499e6cb22bf40a0ad10c16a, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_6258c47cf499e6cb22bf40a0ad10c16a->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_6258c47cf499e6cb22bf40a0ad10c16a, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_6258c47cf499e6cb22bf40a0ad10c16a,
        type_description_1,
        par_p
    );


    // Release cached frame if used for exception.
    if (frame_6258c47cf499e6cb22bf40a0ad10c16a == cache_frame_6258c47cf499e6cb22bf40a0ad10c16a) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_6258c47cf499e6cb22bf40a0ad10c16a);
        cache_frame_6258c47cf499e6cb22bf40a0ad10c16a = NULL;
    }

    assertFrameObject(frame_6258c47cf499e6cb22bf40a0ad10c16a);

    // Put the previous frame back on top.
    popFrameStack();


    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_p);
    Py_DECREF(par_p);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_p);
    Py_DECREF(par_p);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__4_lambda(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_v = python_pars[0];
    struct Nuitka_FrameObject *frame_d3b61c05f5d9b35040306acbc338e99b;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_d3b61c05f5d9b35040306acbc338e99b = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_d3b61c05f5d9b35040306acbc338e99b)) {
        Py_XDECREF(cache_frame_d3b61c05f5d9b35040306acbc338e99b);

#if _DEBUG_REFCOUNTS
        if (cache_frame_d3b61c05f5d9b35040306acbc338e99b == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_d3b61c05f5d9b35040306acbc338e99b = MAKE_FUNCTION_FRAME(codeobj_d3b61c05f5d9b35040306acbc338e99b, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_d3b61c05f5d9b35040306acbc338e99b->m_type_description == NULL);
    frame_d3b61c05f5d9b35040306acbc338e99b = cache_frame_d3b61c05f5d9b35040306acbc338e99b;


    // Push the new frame as the currently active one.
    pushFrameStack(frame_d3b61c05f5d9b35040306acbc338e99b);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_d3b61c05f5d9b35040306acbc338e99b) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_value_1;
        PyObject *tmp_expression_value_1;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_called_value_2;
        PyObject *tmp_args_element_value_2;
        PyObject *tmp_expression_value_2;
        PyObject *tmp_subscript_value_1;
        PyObject *tmp_args_element_value_3;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        tmp_expression_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[258]);

        if (unlikely(tmp_expression_value_1 == NULL)) {
            tmp_expression_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[258]);
        }

        if (tmp_expression_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2733;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        tmp_called_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1, mod_consts[487]);
        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2733;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        tmp_called_value_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[125]);

        if (unlikely(tmp_called_value_2 == NULL)) {
            tmp_called_value_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[125]);
        }

        if (tmp_called_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_1);

            exception_lineno = 2733;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_v);
        tmp_expression_value_2 = par_v;
        tmp_subscript_value_1 = mod_consts[488];
        tmp_args_element_value_2 = LOOKUP_SUBSCRIPT(tmp_expression_value_2, tmp_subscript_value_1);
        if (tmp_args_element_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_1);

            exception_lineno = 2733;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_1 = mod_consts[261];
        if (Nuitka_Cell_GET(self->m_closure[0]) == NULL) {
            Py_DECREF(tmp_called_value_1);
            Py_DECREF(tmp_args_element_value_2);
            FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[33]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2733;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_dict_value_1 = Nuitka_Cell_GET(self->m_closure[0]);
        tmp_args_element_value_3 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_args_element_value_3, tmp_dict_key_1, tmp_dict_value_1);
        assert(!(tmp_res != 0));
        frame_d3b61c05f5d9b35040306acbc338e99b->m_frame.f_lineno = 2733;
        {
            PyObject *call_args[] = {tmp_args_element_value_2, tmp_args_element_value_3};
            tmp_args_element_value_1 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_2, call_args);
        }

        Py_DECREF(tmp_args_element_value_2);
        Py_DECREF(tmp_args_element_value_3);
        if (tmp_args_element_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_1);

            exception_lineno = 2733;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        frame_d3b61c05f5d9b35040306acbc338e99b->m_frame.f_lineno = 2733;
        tmp_return_value = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_1, tmp_args_element_value_1);
        Py_DECREF(tmp_called_value_1);
        Py_DECREF(tmp_args_element_value_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2733;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_d3b61c05f5d9b35040306acbc338e99b);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_d3b61c05f5d9b35040306acbc338e99b);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_d3b61c05f5d9b35040306acbc338e99b);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_d3b61c05f5d9b35040306acbc338e99b, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_d3b61c05f5d9b35040306acbc338e99b->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_d3b61c05f5d9b35040306acbc338e99b, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_d3b61c05f5d9b35040306acbc338e99b,
        type_description_1,
        par_v,
        self->m_closure[0]
    );


    // Release cached frame if used for exception.
    if (frame_d3b61c05f5d9b35040306acbc338e99b == cache_frame_d3b61c05f5d9b35040306acbc338e99b) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_d3b61c05f5d9b35040306acbc338e99b);
        cache_frame_d3b61c05f5d9b35040306acbc338e99b = NULL;
    }

    assertFrameObject(frame_d3b61c05f5d9b35040306acbc338e99b);

    // Put the previous frame back on top.
    popFrameStack();


    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_v);
    Py_DECREF(par_v);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_v);
    Py_DECREF(par_v);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__5_lambda(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_x = python_pars[0];
    struct Nuitka_FrameObject *frame_24a35816b83a2ee002f9da1478fc126d;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_24a35816b83a2ee002f9da1478fc126d = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_24a35816b83a2ee002f9da1478fc126d)) {
        Py_XDECREF(cache_frame_24a35816b83a2ee002f9da1478fc126d);

#if _DEBUG_REFCOUNTS
        if (cache_frame_24a35816b83a2ee002f9da1478fc126d == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_24a35816b83a2ee002f9da1478fc126d = MAKE_FUNCTION_FRAME(codeobj_24a35816b83a2ee002f9da1478fc126d, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_24a35816b83a2ee002f9da1478fc126d->m_type_description == NULL);
    frame_24a35816b83a2ee002f9da1478fc126d = cache_frame_24a35816b83a2ee002f9da1478fc126d;


    // Push the new frame as the currently active one.
    pushFrameStack(frame_24a35816b83a2ee002f9da1478fc126d);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_24a35816b83a2ee002f9da1478fc126d) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_called_value_1;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_args_element_value_2;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        tmp_called_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[125]);

        if (unlikely(tmp_called_value_1 == NULL)) {
            tmp_called_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[125]);
        }

        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2969;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_x);
        tmp_args_element_value_1 = par_x;
        tmp_dict_key_1 = mod_consts[489];
        if (Nuitka_Cell_GET(self->m_closure[0]) == NULL) {

            FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[33]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 2969;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_dict_value_1 = Nuitka_Cell_GET(self->m_closure[0]);
        tmp_args_element_value_2 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_args_element_value_2, tmp_dict_key_1, tmp_dict_value_1);
        assert(!(tmp_res != 0));
        frame_24a35816b83a2ee002f9da1478fc126d->m_frame.f_lineno = 2969;
        {
            PyObject *call_args[] = {tmp_args_element_value_1, tmp_args_element_value_2};
            tmp_return_value = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_1, call_args);
        }

        Py_DECREF(tmp_args_element_value_2);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2969;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_24a35816b83a2ee002f9da1478fc126d);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_24a35816b83a2ee002f9da1478fc126d);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_24a35816b83a2ee002f9da1478fc126d);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_24a35816b83a2ee002f9da1478fc126d, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_24a35816b83a2ee002f9da1478fc126d->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_24a35816b83a2ee002f9da1478fc126d, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_24a35816b83a2ee002f9da1478fc126d,
        type_description_1,
        par_x,
        self->m_closure[0]
    );


    // Release cached frame if used for exception.
    if (frame_24a35816b83a2ee002f9da1478fc126d == cache_frame_24a35816b83a2ee002f9da1478fc126d) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_24a35816b83a2ee002f9da1478fc126d);
        cache_frame_24a35816b83a2ee002f9da1478fc126d = NULL;
    }

    assertFrameObject(frame_24a35816b83a2ee002f9da1478fc126d);

    // Put the previous frame back on top.
    popFrameStack();


    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_x);
    Py_DECREF(par_x);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_x);
    Py_DECREF(par_x);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__6_check_video(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_vurl = python_pars[0];
    PyObject *var_vpath = NULL;
    PyObject *var_vext = NULL;
    struct Nuitka_FrameObject *frame_b3b83acc449cc64d070a11260b7b6b1f;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_return_value = NULL;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_b3b83acc449cc64d070a11260b7b6b1f = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_b3b83acc449cc64d070a11260b7b6b1f)) {
        Py_XDECREF(cache_frame_b3b83acc449cc64d070a11260b7b6b1f);

#if _DEBUG_REFCOUNTS
        if (cache_frame_b3b83acc449cc64d070a11260b7b6b1f == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_b3b83acc449cc64d070a11260b7b6b1f = MAKE_FUNCTION_FRAME(codeobj_b3b83acc449cc64d070a11260b7b6b1f, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_b3b83acc449cc64d070a11260b7b6b1f->m_type_description == NULL);
    frame_b3b83acc449cc64d070a11260b7b6b1f = cache_frame_b3b83acc449cc64d070a11260b7b6b1f;


    // Push the new frame as the currently active one.
    pushFrameStack(frame_b3b83acc449cc64d070a11260b7b6b1f);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_b3b83acc449cc64d070a11260b7b6b1f) == 2); // Frame stack

    // Framed code:
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_value_1;
        int tmp_truth_name_1;
        tmp_called_instance_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[232]);

        if (unlikely(tmp_called_instance_1 == NULL)) {
            tmp_called_instance_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[232]);
        }

        if (tmp_called_instance_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3399;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_vurl);
        tmp_args_element_value_1 = par_vurl;
        frame_b3b83acc449cc64d070a11260b7b6b1f->m_frame.f_lineno = 3399;
        tmp_call_result_1 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_1, mod_consts[470], tmp_args_element_value_1);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3399;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_1);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_1);

            exception_lineno = 3399;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = tmp_truth_name_1 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_1);
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    tmp_return_value = Py_True;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_1:;
    {
        nuitka_bool tmp_condition_result_2;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_call_result_2;
        PyObject *tmp_args_element_value_2;
        int tmp_truth_name_2;
        tmp_called_instance_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[472]);

        if (unlikely(tmp_called_instance_2 == NULL)) {
            tmp_called_instance_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[472]);
        }

        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3401;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_vurl);
        tmp_args_element_value_2 = par_vurl;
        frame_b3b83acc449cc64d070a11260b7b6b1f->m_frame.f_lineno = 3401;
        tmp_call_result_2 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_2, mod_consts[470], tmp_args_element_value_2);
        if (tmp_call_result_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3401;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_2);
        if (tmp_truth_name_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_2);

            exception_lineno = 3401;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_2 = tmp_truth_name_2 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_2);
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    tmp_return_value = Py_True;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;
    branch_no_2:;
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_expression_value_1;
        PyObject *tmp_called_instance_3;
        PyObject *tmp_args_element_value_3;
        tmp_called_instance_3 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[67]);

        if (unlikely(tmp_called_instance_3 == NULL)) {
            tmp_called_instance_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[67]);
        }

        if (tmp_called_instance_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3403;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_vurl);
        tmp_args_element_value_3 = par_vurl;
        frame_b3b83acc449cc64d070a11260b7b6b1f->m_frame.f_lineno = 3403;
        tmp_expression_value_1 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_3, mod_consts[89], tmp_args_element_value_3);
        if (tmp_expression_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3403;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1, mod_consts[75]);
        Py_DECREF(tmp_expression_value_1);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3403;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        assert(var_vpath == NULL);
        var_vpath = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_called_value_1;
        PyObject *tmp_args_element_value_4;
        tmp_called_value_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[431]);

        if (unlikely(tmp_called_value_1 == NULL)) {
            tmp_called_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[431]);
        }

        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3404;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_vpath);
        tmp_args_element_value_4 = var_vpath;
        frame_b3b83acc449cc64d070a11260b7b6b1f->m_frame.f_lineno = 3404;
        tmp_assign_source_2 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_1, tmp_args_element_value_4);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3404;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        assert(var_vext == NULL);
        var_vext = tmp_assign_source_2;
    }
    {
        int tmp_and_left_truth_1;
        PyObject *tmp_and_left_value_1;
        PyObject *tmp_and_right_value_1;
        PyObject *tmp_cmp_expr_left_1;
        PyObject *tmp_cmp_expr_right_1;
        PyObject *tmp_cmp_expr_left_2;
        PyObject *tmp_cmp_expr_right_2;
        tmp_cmp_expr_left_1 = mod_consts[490];
        CHECK_OBJECT(var_vpath);
        tmp_cmp_expr_right_1 = var_vpath;
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_1, tmp_cmp_expr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3405;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_and_left_value_1 = (tmp_res == 1) ? Py_True : Py_False;
        tmp_and_left_truth_1 = CHECK_IF_TRUE(tmp_and_left_value_1);
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(var_vext);
        tmp_cmp_expr_left_2 = var_vext;
        tmp_cmp_expr_right_2 = mod_consts[491];
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_2, tmp_cmp_expr_left_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3405;
            type_description_1 = "ooo";
            goto frame_exception_exit_1;
        }
        tmp_and_right_value_1 = (tmp_res == 0) ? Py_True : Py_False;
        tmp_return_value = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_return_value = tmp_and_left_value_1;
        and_end_1:;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_b3b83acc449cc64d070a11260b7b6b1f);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_b3b83acc449cc64d070a11260b7b6b1f);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_b3b83acc449cc64d070a11260b7b6b1f);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_b3b83acc449cc64d070a11260b7b6b1f, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_b3b83acc449cc64d070a11260b7b6b1f->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_b3b83acc449cc64d070a11260b7b6b1f, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_b3b83acc449cc64d070a11260b7b6b1f,
        type_description_1,
        par_vurl,
        var_vpath,
        var_vext
    );


    // Release cached frame if used for exception.
    if (frame_b3b83acc449cc64d070a11260b7b6b1f == cache_frame_b3b83acc449cc64d070a11260b7b6b1f) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_b3b83acc449cc64d070a11260b7b6b1f);
        cache_frame_b3b83acc449cc64d070a11260b7b6b1f = NULL;
    }

    assertFrameObject(frame_b3b83acc449cc64d070a11260b7b6b1f);

    // Put the previous frame back on top.
    popFrameStack();


    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_vpath);
    var_vpath = NULL;
    Py_XDECREF(var_vext);
    var_vext = NULL;
    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_vpath);
    var_vpath = NULL;
    Py_XDECREF(var_vext);
    var_vext = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_vurl);
    Py_DECREF(par_vurl);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_vurl);
    Py_DECREF(par_vurl);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__7_filter_video(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_urls = python_pars[0];
    struct Nuitka_FrameObject *frame_30e007b0701b686f990740988c79133e;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_30e007b0701b686f990740988c79133e = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_30e007b0701b686f990740988c79133e)) {
        Py_XDECREF(cache_frame_30e007b0701b686f990740988c79133e);

#if _DEBUG_REFCOUNTS
        if (cache_frame_30e007b0701b686f990740988c79133e == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_30e007b0701b686f990740988c79133e = MAKE_FUNCTION_FRAME(codeobj_30e007b0701b686f990740988c79133e, module_youtube_dl$extractor$generic, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_30e007b0701b686f990740988c79133e->m_type_description == NULL);
    frame_30e007b0701b686f990740988c79133e = cache_frame_30e007b0701b686f990740988c79133e;


    // Push the new frame as the currently active one.
    pushFrameStack(frame_30e007b0701b686f990740988c79133e);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_30e007b0701b686f990740988c79133e) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_list_arg_1;
        PyObject *tmp_called_value_1;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_args_element_value_2;
        tmp_called_value_1 = (PyObject *)&PyFilter_Type;
        if (Nuitka_Cell_GET(self->m_closure[0]) == NULL) {

            FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[448]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 3408;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }

        tmp_args_element_value_1 = Nuitka_Cell_GET(self->m_closure[0]);
        CHECK_OBJECT(par_urls);
        tmp_args_element_value_2 = par_urls;
        frame_30e007b0701b686f990740988c79133e->m_frame.f_lineno = 3408;
        {
            PyObject *call_args[] = {tmp_args_element_value_1, tmp_args_element_value_2};
            tmp_list_arg_1 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_1, call_args);
        }

        if (tmp_list_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3408;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        tmp_return_value = MAKE_LIST(tmp_list_arg_1);
        Py_DECREF(tmp_list_arg_1);
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 3408;
            type_description_1 = "oc";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_30e007b0701b686f990740988c79133e);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_30e007b0701b686f990740988c79133e);
#endif

    // Put the previous frame back on top.
    popFrameStack();


    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_30e007b0701b686f990740988c79133e);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_30e007b0701b686f990740988c79133e, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_30e007b0701b686f990740988c79133e->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_30e007b0701b686f990740988c79133e, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_30e007b0701b686f990740988c79133e,
        type_description_1,
        par_urls,
        self->m_closure[0]
    );


    // Release cached frame if used for exception.
    if (frame_30e007b0701b686f990740988c79133e == cache_frame_30e007b0701b686f990740988c79133e) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_30e007b0701b686f990740988c79133e);
        cache_frame_30e007b0701b686f990740988c79133e = NULL;
    }

    assertFrameObject(frame_30e007b0701b686f990740988c79133e);

    // Put the previous frame back on top.
    popFrameStack();


    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_urls);
    Py_DECREF(par_urls);
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_urls);
    Py_DECREF(par_urls);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__1_report_following_redirect() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function__1_report_following_redirect,
        mod_consts[124],
#if PYTHON_VERSION >= 0x300
        mod_consts[887],
#endif
        codeobj_65c889d1684fcae3612dceab5ea3c602,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        mod_consts[3],
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__2__extract_rss() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function__2__extract_rss,
        mod_consts[175],
#if PYTHON_VERSION >= 0x300
        mod_consts[888],
#endif
        codeobj_8085ace5ee20ccf11fcc49b46ce4dbf2,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__2__extract_rss$$$function__1_itunes(struct Nuitka_CellObject **closure) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function__2__extract_rss$$$function__1_itunes,
        mod_consts[19],
#if PYTHON_VERSION >= 0x300
        mod_consts[20],
#endif
        codeobj_3dad20957ac2f88f635f8d212acc1c28,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        closure,
        2
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__3__extract_camtasia() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function__3__extract_camtasia,
        mod_consts[190],
#if PYTHON_VERSION >= 0x300
        mod_consts[889],
#endif
        codeobj_d155beebf1b46446bdadcacf7ca7cc30,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        mod_consts[84],
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function__4__real_extract,
        mod_consts[890],
#if PYTHON_VERSION >= 0x300
        mod_consts[891],
#endif
        codeobj_713f709215410de619f38bbb0405e5b8,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__1_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__1_lambda,
        mod_consts[193],
#if PYTHON_VERSION >= 0x300
        mod_consts[194],
#endif
        codeobj_48160966465c657f28fe71960e8ef540,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__2_lambda(struct Nuitka_CellObject **closure) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__2_lambda,
        mod_consts[193],
#if PYTHON_VERSION >= 0x300
        mod_consts[194],
#endif
        codeobj_54fc4c2d3fe78c1b066f946ce4ee9f8c,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        closure,
        1
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__3_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__3_lambda,
        mod_consts[193],
#if PYTHON_VERSION >= 0x300
        mod_consts[194],
#endif
        codeobj_6258c47cf499e6cb22bf40a0ad10c16a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__4_lambda(struct Nuitka_CellObject **closure) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__4_lambda,
        mod_consts[193],
#if PYTHON_VERSION >= 0x300
        mod_consts[194],
#endif
        codeobj_d3b61c05f5d9b35040306acbc338e99b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        closure,
        1
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__5_lambda(struct Nuitka_CellObject **closure) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__5_lambda,
        mod_consts[193],
#if PYTHON_VERSION >= 0x300
        mod_consts[194],
#endif
        codeobj_24a35816b83a2ee002f9da1478fc126d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        closure,
        1
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__6_check_video() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__6_check_video,
        mod_consts[448],
#if PYTHON_VERSION >= 0x300
        mod_consts[449],
#endif
        codeobj_b3b83acc449cc64d070a11260b7b6b1f,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__7_filter_video(struct Nuitka_CellObject **closure) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__7_filter_video,
        mod_consts[450],
#if PYTHON_VERSION >= 0x300
        mod_consts[451],
#endif
        codeobj_30e007b0701b686f990740988c79133e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_youtube_dl$extractor$generic,
        NULL,
        closure,
        1
    );


    return (PyObject *)result;
}


extern void _initCompiledCellType();
extern void _initCompiledGeneratorType();
extern void _initCompiledFunctionType();
extern void _initCompiledMethodType();
extern void _initCompiledFrameType();

extern PyTypeObject Nuitka_Loader_Type;

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
// Provide a way to create find a function via its C code and create it back
// in another process, useful for multiprocessing extensions like dill
extern void registerDillPluginTables(char const *module_name, PyMethodDef *reduce_compiled_function, PyMethodDef *create_compiled_function);

function_impl_code functable_youtube_dl$extractor$generic[] = {
    impl_youtube_dl$extractor$generic$$$function__2__extract_rss$$$function__1_itunes,
    impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__1_lambda,
    impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__2_lambda,
    impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__3_lambda,
    impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__4_lambda,
    impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__5_lambda,
    impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__6_check_video,
    impl_youtube_dl$extractor$generic$$$function__4__real_extract$$$function__7_filter_video,
    impl_youtube_dl$extractor$generic$$$function__1_report_following_redirect,
    impl_youtube_dl$extractor$generic$$$function__2__extract_rss,
    impl_youtube_dl$extractor$generic$$$function__3__extract_camtasia,
    impl_youtube_dl$extractor$generic$$$function__4__real_extract,
    NULL
};

static char const *_reduce_compiled_function_argnames[] = {
    "func",
    NULL
};

static PyObject *_reduce_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    PyObject *func;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "O:reduce_compiled_function", (char **)_reduce_compiled_function_argnames, &func, NULL)) {
        return NULL;
    }

    if (Nuitka_Function_Check(func) == false) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "not a compiled function");
        return NULL;
    }

    struct Nuitka_FunctionObject *function = (struct Nuitka_FunctionObject *)func;

    function_impl_code *current = functable_youtube_dl$extractor$generic;
    int offset = 0;

    while (*current != NULL) {
        if (*current == function->m_c_code) {
            break;
        }

        current += 1;
        offset += 1;
    }

    if (*current == NULL) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "Cannot find compiled function in module.");
        return NULL;
    }

    PyObject *code_object_desc = MAKE_TUPLE_EMPTY(6);
    PyTuple_SET_ITEM0(code_object_desc, 0, function->m_code_object->co_filename);
    PyTuple_SET_ITEM0(code_object_desc, 1, function->m_code_object->co_name);
    PyTuple_SET_ITEM(code_object_desc, 2, PyLong_FromLong(function->m_code_object->co_firstlineno));
    PyTuple_SET_ITEM0(code_object_desc, 3, function->m_code_object->co_varnames);
    PyTuple_SET_ITEM(code_object_desc, 4, PyLong_FromLong(function->m_code_object->co_argcount));
    PyTuple_SET_ITEM(code_object_desc, 5, PyLong_FromLong(function->m_code_object->co_flags));

    CHECK_OBJECT_DEEP(code_object_desc);

    PyObject *result = MAKE_TUPLE_EMPTY(4);
    PyTuple_SET_ITEM(result, 0, PyLong_FromLong(offset));
    PyTuple_SET_ITEM(result, 1, code_object_desc);
    PyTuple_SET_ITEM0(result, 2, function->m_defaults);
    PyTuple_SET_ITEM0(result, 3, function->m_doc != NULL ? function->m_doc : Py_None);

    CHECK_OBJECT_DEEP(result);

    return result;
}

static PyMethodDef _method_def_reduce_compiled_function = {"reduce_compiled_function", (PyCFunction)_reduce_compiled_function,
                                                           METH_VARARGS | METH_KEYWORDS, NULL};

static char const *_create_compiled_function_argnames[] = {
    "func",
    "code_object_desc",
    "defaults",
    "doc",
    NULL
};


static PyObject *_create_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    CHECK_OBJECT_DEEP(args);

    PyObject *func;
    PyObject *code_object_desc;
    PyObject *defaults;
    PyObject *doc;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "OOOO:create_compiled_function", (char **)_create_compiled_function_argnames, &func, &code_object_desc, &defaults, &doc, NULL)) {
        return NULL;
    }

    int offset = PyLong_AsLong(func);

    if (offset == -1 && ERROR_OCCURRED()) {
        return NULL;
    }

    if (offset > sizeof(functable_youtube_dl$extractor$generic) || offset < 0) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "Wrong offset for compiled function.");
        return NULL;
    }

    PyObject *filename = PyTuple_GET_ITEM(code_object_desc, 0);
    PyObject *function_name = PyTuple_GET_ITEM(code_object_desc, 1);
    PyObject *line = PyTuple_GET_ITEM(code_object_desc, 2);
    int line_int = PyLong_AsLong(line);
    assert(!ERROR_OCCURRED());

    PyObject *argnames = PyTuple_GET_ITEM(code_object_desc, 3);
    PyObject *arg_count = PyTuple_GET_ITEM(code_object_desc, 4);
    int arg_count_int = PyLong_AsLong(arg_count);
    assert(!ERROR_OCCURRED());
    PyObject *flags = PyTuple_GET_ITEM(code_object_desc, 5);
    int flags_int = PyLong_AsLong(flags);
    assert(!ERROR_OCCURRED());

    PyCodeObject *code_object = MAKE_CODE_OBJECT(
        filename,
        line_int,
        flags_int,
        function_name,
        argnames,
        NULL, // freevars
        arg_count_int,
        0, // TODO: Missing kw_only_count
        0 // TODO: Missing pos_only_count
    );

    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        functable_youtube_dl$extractor$generic[offset],
        code_object->co_name,
#if PYTHON_VERSION >= 0x300
        NULL, // TODO: Not transferring qualname yet
#endif
        code_object,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL, // kwdefaults are done on the outside currently
        NULL, // TODO: Not transferring annotations
#endif
        module_youtube_dl$extractor$generic,
        doc,
        NULL,
        0
    );

    return (PyObject *)result;
}

static PyMethodDef _method_def_create_compiled_function = {
    "create_compiled_function",
    (PyCFunction)_create_compiled_function,
    METH_VARARGS | METH_KEYWORDS, NULL
};


#endif

// Internal entry point for module code.
PyObject *modulecode_youtube_dl$extractor$generic(PyObject *module, struct Nuitka_MetaPathBasedLoaderEntry const *loader_entry) {
    // Report entry to PGO.
    PGO_onModuleEntered("youtube_dl.extractor.generic");

    // Store the module for future use.
    module_youtube_dl$extractor$generic = module;

    // Modules can be loaded again in case of errors, avoid the init being done again.
    static bool init_done = false;

    if (init_done == false) {
#if defined(_NUITKA_MODULE) && 0
        // In case of an extension module loaded into a process, we need to call
        // initialization here because that's the first and potentially only time
        // we are going called.

        // Initialize the constant values used.
        _initBuiltinModule();
        createGlobalConstants();

        /* Initialize the compiled types of Nuitka. */
        _initCompiledCellType();
        _initCompiledGeneratorType();
        _initCompiledFunctionType();
        _initCompiledMethodType();
        _initCompiledFrameType();

        _initSlotCompare();
#if PYTHON_VERSION >= 0x270
        _initSlotIterNext();
#endif

        patchTypeComparison();

        // Enable meta path based loader if not already done.
#ifdef _NUITKA_TRACE
        PRINT_STRING("youtube_dl.extractor.generic: Calling setupMetaPathBasedLoader().\n");
#endif
        setupMetaPathBasedLoader();

#if PYTHON_VERSION >= 0x300
        patchInspectModule();
#endif

#endif

        /* The constants only used by this module are created now. */
#ifdef _NUITKA_TRACE
        PRINT_STRING("youtube_dl.extractor.generic: Calling createModuleConstants().\n");
#endif
        createModuleConstants();

        /* The code objects used by this module are created now. */
#ifdef _NUITKA_TRACE
        PRINT_STRING("youtube_dl.extractor.generic: Calling createModuleCodeObjects().\n");
#endif
        createModuleCodeObjects();

        init_done = true;
    }

    // PRINT_STRING("in inityoutube_dl$extractor$generic\n");

    moduledict_youtube_dl$extractor$generic = MODULE_DICT(module_youtube_dl$extractor$generic);

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
    registerDillPluginTables(loader_entry->name, &_method_def_reduce_compiled_function, &_method_def_create_compiled_function);
#endif

    // Set "__compiled__" to what version information we have.
    UPDATE_STRING_DICT0(
        moduledict_youtube_dl$extractor$generic,
        (Nuitka_StringObject *)const_str_plain___compiled__,
        Nuitka_dunder_compiled_value
    );

    // Update "__package__" value to what it ought to be.
    {
#if 0
        UPDATE_STRING_DICT0(
            moduledict_youtube_dl$extractor$generic,
            (Nuitka_StringObject *)const_str_plain___package__,
            mod_consts[23]
        );
#elif 0
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___name__);

        UPDATE_STRING_DICT0(
            moduledict_youtube_dl$extractor$generic,
            (Nuitka_StringObject *)const_str_plain___package__,
            module_name
        );
#else

#if PYTHON_VERSION < 0x300
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___name__);
        char const *module_name_cstr = PyString_AS_STRING(module_name);

        char const *last_dot = strrchr(module_name_cstr, '.');

        if (last_dot != NULL) {
            UPDATE_STRING_DICT1(
                moduledict_youtube_dl$extractor$generic,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyString_FromStringAndSize(module_name_cstr, last_dot - module_name_cstr)
            );
        }
#else
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___name__);
        Py_ssize_t dot_index = PyUnicode_Find(module_name, const_str_dot, 0, PyUnicode_GetLength(module_name), -1);

        if (dot_index != -1) {
            UPDATE_STRING_DICT1(
                moduledict_youtube_dl$extractor$generic,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyUnicode_Substring(module_name, 0, dot_index)
            );
        }
#endif
#endif
    }

    CHECK_OBJECT(module_youtube_dl$extractor$generic);

    // For deep importing of a module we need to have "__builtins__", so we set
    // it ourselves in the same way than CPython does. Note: This must be done
    // before the frame object is allocated, or else it may fail.

    if (GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___builtins__) == NULL) {
        PyObject *value = (PyObject *)builtin_module;

        // Check if main module, not a dict then but the module itself.
#if defined(_NUITKA_MODULE) || !0
        value = PyModule_GetDict(value);
#endif

        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___builtins__, value);
    }

#if PYTHON_VERSION >= 0x300
    UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___loader__, (PyObject *)&Nuitka_Loader_Type);
#endif

#if PYTHON_VERSION >= 0x340
// Set the "__spec__" value

#if 0
    // Main modules just get "None" as spec.
    UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___spec__, Py_None);
#else
    // Other modules get a "ModuleSpec" from the standard mechanism.
    {
        PyObject *bootstrap_module = getImportLibBootstrapModule();
        CHECK_OBJECT(bootstrap_module);

        PyObject *_spec_from_module = PyObject_GetAttrString(bootstrap_module, "_spec_from_module");
        CHECK_OBJECT(_spec_from_module);

        PyObject *spec_value = CALL_FUNCTION_WITH_SINGLE_ARG(_spec_from_module, module_youtube_dl$extractor$generic);
        Py_DECREF(_spec_from_module);

        // We can assume this to never fail, or else we are in trouble anyway.
        // CHECK_OBJECT(spec_value);

        if (spec_value == NULL) {
            PyErr_PrintEx(0);
            abort();
        }

// Mark the execution in the "__spec__" value.
        SET_ATTRIBUTE(spec_value, const_str_plain__initializing, Py_True);

        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___spec__, spec_value);
    }
#endif
#endif

    // Temp variables if any
    PyObject *outline_0_var___class__ = NULL;
    PyObject *tmp_class_creation_1__bases = NULL;
    PyObject *tmp_class_creation_1__bases_orig = NULL;
    PyObject *tmp_class_creation_1__class_decl_dict = NULL;
    PyObject *tmp_class_creation_1__metaclass = NULL;
    PyObject *tmp_class_creation_1__prepared = NULL;
    PyObject *tmp_import_from_1__module = NULL;
    PyObject *tmp_import_from_2__module = NULL;
    PyObject *tmp_import_from_3__module = NULL;
    PyObject *tmp_import_from_4__module = NULL;
    PyObject *tmp_import_from_5__module = NULL;
    struct Nuitka_FrameObject *frame_1fd16d11d213e76d6499b6413020ae45;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    bool tmp_result;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;
    int tmp_res;
    PyObject *tmp_dictdel_dict;
    PyObject *tmp_dictdel_key;
    PyObject *locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135 = NULL;
    PyObject *tmp_dictset_value;
    struct Nuitka_FrameObject *frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2;
    NUITKA_MAY_BE_UNUSED char const *type_description_2 = NULL;
    static struct Nuitka_FrameObject *cache_frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2 = NULL;
    PyObject *exception_keeper_type_6;
    PyObject *exception_keeper_value_6;
    PyTracebackObject *exception_keeper_tb_6;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_6;
    PyObject *exception_keeper_type_7;
    PyObject *exception_keeper_value_7;
    PyTracebackObject *exception_keeper_tb_7;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_7;
    PyObject *exception_keeper_type_8;
    PyObject *exception_keeper_value_8;
    PyTracebackObject *exception_keeper_tb_8;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_8;

    // Module code.
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = Py_None;
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[492], tmp_assign_source_1);
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = module_filename_obj;
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[493], tmp_assign_source_2);
    }
    // Frame without reuse.
    frame_1fd16d11d213e76d6499b6413020ae45 = MAKE_MODULE_FRAME(codeobj_1fd16d11d213e76d6499b6413020ae45, module_youtube_dl$extractor$generic);

    // Push the new frame as the currently active one, and we should be exclusively
    // owning it.
    pushFrameStack(frame_1fd16d11d213e76d6499b6413020ae45);
    assert(Py_REFCNT(frame_1fd16d11d213e76d6499b6413020ae45) == 2);

    // Framed code:
    {
        PyObject *tmp_assattr_value_1;
        PyObject *tmp_assattr_target_1;
        tmp_assattr_value_1 = module_filename_obj;
        tmp_assattr_target_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[494]);

        if (unlikely(tmp_assattr_target_1 == NULL)) {
            tmp_assattr_target_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[494]);
        }

        assert(!(tmp_assattr_target_1 == NULL));
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, mod_consts[495], tmp_assattr_value_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assattr_value_2;
        PyObject *tmp_assattr_target_2;
        tmp_assattr_value_2 = Py_True;
        tmp_assattr_target_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[494]);

        if (unlikely(tmp_assattr_target_2 == NULL)) {
            tmp_assattr_target_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[494]);
        }

        assert(!(tmp_assattr_target_2 == NULL));
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, mod_consts[496], tmp_assattr_value_2);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_3;
        tmp_assign_source_3 = Py_None;
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[497], tmp_assign_source_3);
    }
    {
        PyObject *tmp_assign_source_4;
        {
            PyObject *hard_module = IMPORT_HARD___FUTURE__();
            tmp_assign_source_4 = LOOKUP_ATTRIBUTE(hard_module, mod_consts[498]);
        }
        assert(!(tmp_assign_source_4 == NULL));
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[498], tmp_assign_source_4);
    }
    {
        PyObject *tmp_assign_source_5;
        tmp_assign_source_5 = IMPORT_HARD_OS();
        assert(!(tmp_assign_source_5 == NULL));
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[74], tmp_assign_source_5);
    }
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_name_value_1;
        PyObject *tmp_globals_arg_value_1;
        PyObject *tmp_locals_arg_value_1;
        PyObject *tmp_fromlist_value_1;
        PyObject *tmp_level_value_1;
        tmp_name_value_1 = mod_consts[95];
        tmp_globals_arg_value_1 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_1 = Py_None;
        tmp_fromlist_value_1 = Py_None;
        tmp_level_value_1 = mod_consts[28];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 6;
        tmp_assign_source_6 = IMPORT_MODULE5(tmp_name_value_1, tmp_globals_arg_value_1, tmp_locals_arg_value_1, tmp_fromlist_value_1, tmp_level_value_1);
        if (tmp_assign_source_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 6;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[95], tmp_assign_source_6);
    }
    {
        PyObject *tmp_assign_source_7;
        tmp_assign_source_7 = IMPORT_HARD_SYS();
        assert(!(tmp_assign_source_7 == NULL));
        UPDATE_STRING_DICT0(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[499], tmp_assign_source_7);
    }
    {
        PyObject *tmp_assign_source_8;
        PyObject *tmp_import_name_from_1;
        PyObject *tmp_name_value_2;
        PyObject *tmp_globals_arg_value_2;
        PyObject *tmp_locals_arg_value_2;
        PyObject *tmp_fromlist_value_2;
        PyObject *tmp_level_value_2;
        tmp_name_value_2 = mod_consts[500];
        tmp_globals_arg_value_2 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_2 = Py_None;
        tmp_fromlist_value_2 = mod_consts[501];
        tmp_level_value_2 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 9;
        tmp_import_name_from_1 = IMPORT_MODULE5(tmp_name_value_2, tmp_globals_arg_value_2, tmp_locals_arg_value_2, tmp_fromlist_value_2, tmp_level_value_2);
        if (tmp_import_name_from_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 9;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_1)) {
            tmp_assign_source_8 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[503],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_8 = IMPORT_NAME(tmp_import_name_from_1, mod_consts[503]);
        }

        Py_DECREF(tmp_import_name_from_1);
        if (tmp_assign_source_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 9;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[503], tmp_assign_source_8);
    }
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_import_name_from_2;
        PyObject *tmp_name_value_3;
        PyObject *tmp_globals_arg_value_3;
        PyObject *tmp_locals_arg_value_3;
        PyObject *tmp_fromlist_value_3;
        PyObject *tmp_level_value_3;
        tmp_name_value_3 = mod_consts[504];
        tmp_globals_arg_value_3 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_3 = Py_None;
        tmp_fromlist_value_3 = mod_consts[505];
        tmp_level_value_3 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 10;
        tmp_import_name_from_2 = IMPORT_MODULE5(tmp_name_value_3, tmp_globals_arg_value_3, tmp_locals_arg_value_3, tmp_fromlist_value_3, tmp_level_value_3);
        if (tmp_import_name_from_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 10;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_2)) {
            tmp_assign_source_9 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_2,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[232],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_9 = IMPORT_NAME(tmp_import_name_from_2, mod_consts[232]);
        }

        Py_DECREF(tmp_import_name_from_2);
        if (tmp_assign_source_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 10;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[232], tmp_assign_source_9);
    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_name_value_4;
        PyObject *tmp_globals_arg_value_4;
        PyObject *tmp_locals_arg_value_4;
        PyObject *tmp_fromlist_value_4;
        PyObject *tmp_level_value_4;
        tmp_name_value_4 = mod_consts[506];
        tmp_globals_arg_value_4 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_4 = Py_None;
        tmp_fromlist_value_4 = mod_consts[507];
        tmp_level_value_4 = mod_consts[79];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 11;
        tmp_assign_source_10 = IMPORT_MODULE5(tmp_name_value_4, tmp_globals_arg_value_4, tmp_locals_arg_value_4, tmp_fromlist_value_4, tmp_level_value_4);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_1__module == NULL);
        tmp_import_from_1__module = tmp_assign_source_10;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_import_name_from_3;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_3 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_3)) {
            tmp_assign_source_11 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_3,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[170],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_11 = IMPORT_NAME(tmp_import_name_from_3, mod_consts[170]);
        }

        if (tmp_assign_source_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[170], tmp_assign_source_11);
    }
    {
        PyObject *tmp_assign_source_12;
        PyObject *tmp_import_name_from_4;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_4 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_4)) {
            tmp_assign_source_12 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_4,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[136],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_12 = IMPORT_NAME(tmp_import_name_from_4, mod_consts[136]);
        }

        if (tmp_assign_source_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[136], tmp_assign_source_12);
    }
    {
        PyObject *tmp_assign_source_13;
        PyObject *tmp_import_name_from_5;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_5 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_5)) {
            tmp_assign_source_13 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_5,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[282],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_13 = IMPORT_NAME(tmp_import_name_from_5, mod_consts[282]);
        }

        if (tmp_assign_source_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[282], tmp_assign_source_13);
    }
    {
        PyObject *tmp_assign_source_14;
        PyObject *tmp_import_name_from_6;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_6 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_6)) {
            tmp_assign_source_14 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_6,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[67],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_14 = IMPORT_NAME(tmp_import_name_from_6, mod_consts[67]);
        }

        if (tmp_assign_source_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[67], tmp_assign_source_14);
    }
    {
        PyObject *tmp_assign_source_15;
        PyObject *tmp_import_name_from_7;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_7 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_7)) {
            tmp_assign_source_15 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_7,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[189],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_15 = IMPORT_NAME(tmp_import_name_from_7, mod_consts[189]);
        }

        if (tmp_assign_source_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 11;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[189], tmp_assign_source_15);
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;
    CHECK_OBJECT(tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;
    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_name_value_5;
        PyObject *tmp_globals_arg_value_5;
        PyObject *tmp_locals_arg_value_5;
        PyObject *tmp_fromlist_value_5;
        PyObject *tmp_level_value_5;
        tmp_name_value_5 = mod_consts[508];
        tmp_globals_arg_value_5 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_5 = Py_None;
        tmp_fromlist_value_5 = mod_consts[509];
        tmp_level_value_5 = mod_consts[79];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 18;
        tmp_assign_source_16 = IMPORT_MODULE5(tmp_name_value_5, tmp_globals_arg_value_5, tmp_locals_arg_value_5, tmp_fromlist_value_5, tmp_level_value_5);
        if (tmp_assign_source_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_2__module == NULL);
        tmp_import_from_2__module = tmp_assign_source_16;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_import_name_from_8;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_8 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_8)) {
            tmp_assign_source_17 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_8,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[431],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_17 = IMPORT_NAME(tmp_import_name_from_8, mod_consts[431]);
        }

        if (tmp_assign_source_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[431], tmp_assign_source_17);
    }
    {
        PyObject *tmp_assign_source_18;
        PyObject *tmp_import_name_from_9;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_9 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_9)) {
            tmp_assign_source_18 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_9,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[103],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_18 = IMPORT_NAME(tmp_import_name_from_9, mod_consts[103]);
        }

        if (tmp_assign_source_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[103], tmp_assign_source_18);
    }
    {
        PyObject *tmp_assign_source_19;
        PyObject *tmp_import_name_from_10;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_10 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_10)) {
            tmp_assign_source_19 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_10,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[82],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_19 = IMPORT_NAME(tmp_import_name_from_10, mod_consts[82]);
        }

        if (tmp_assign_source_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[82], tmp_assign_source_19);
    }
    {
        PyObject *tmp_assign_source_20;
        PyObject *tmp_import_name_from_11;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_11 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_11)) {
            tmp_assign_source_20 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_11,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[119],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_20 = IMPORT_NAME(tmp_import_name_from_11, mod_consts[119]);
        }

        if (tmp_assign_source_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[119], tmp_assign_source_20);
    }
    {
        PyObject *tmp_assign_source_21;
        PyObject *tmp_import_name_from_12;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_12 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_12)) {
            tmp_assign_source_21 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_12,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[42],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_21 = IMPORT_NAME(tmp_import_name_from_12, mod_consts[42]);
        }

        if (tmp_assign_source_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[42], tmp_assign_source_21);
    }
    {
        PyObject *tmp_assign_source_22;
        PyObject *tmp_import_name_from_13;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_13 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_13)) {
            tmp_assign_source_22 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_13,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[163],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_22 = IMPORT_NAME(tmp_import_name_from_13, mod_consts[163]);
        }

        if (tmp_assign_source_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[163], tmp_assign_source_22);
    }
    {
        PyObject *tmp_assign_source_23;
        PyObject *tmp_import_name_from_14;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_14 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_14)) {
            tmp_assign_source_23 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_14,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[423],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_23 = IMPORT_NAME(tmp_import_name_from_14, mod_consts[423]);
        }

        if (tmp_assign_source_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[423], tmp_assign_source_23);
    }
    {
        PyObject *tmp_assign_source_24;
        PyObject *tmp_import_name_from_15;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_15 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_15)) {
            tmp_assign_source_24 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_15,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[443],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_24 = IMPORT_NAME(tmp_import_name_from_15, mod_consts[443]);
        }

        if (tmp_assign_source_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[443], tmp_assign_source_24);
    }
    {
        PyObject *tmp_assign_source_25;
        PyObject *tmp_import_name_from_16;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_16 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_16)) {
            tmp_assign_source_25 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_16,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[427],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_25 = IMPORT_NAME(tmp_import_name_from_16, mod_consts[427]);
        }

        if (tmp_assign_source_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[427], tmp_assign_source_25);
    }
    {
        PyObject *tmp_assign_source_26;
        PyObject *tmp_import_name_from_17;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_17 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_17)) {
            tmp_assign_source_26 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_17,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[444],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_26 = IMPORT_NAME(tmp_import_name_from_17, mod_consts[444]);
        }

        if (tmp_assign_source_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[444], tmp_assign_source_26);
    }
    {
        PyObject *tmp_assign_source_27;
        PyObject *tmp_import_name_from_18;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_18 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_18)) {
            tmp_assign_source_27 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_18,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[466],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_27 = IMPORT_NAME(tmp_import_name_from_18, mod_consts[466]);
        }

        if (tmp_assign_source_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[466], tmp_assign_source_27);
    }
    {
        PyObject *tmp_assign_source_28;
        PyObject *tmp_import_name_from_19;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_19 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_19)) {
            tmp_assign_source_28 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_19,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[43],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_28 = IMPORT_NAME(tmp_import_name_from_19, mod_consts[43]);
        }

        if (tmp_assign_source_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[43], tmp_assign_source_28);
    }
    {
        PyObject *tmp_assign_source_29;
        PyObject *tmp_import_name_from_20;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_20 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_20)) {
            tmp_assign_source_29 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_20,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[128],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_29 = IMPORT_NAME(tmp_import_name_from_20, mod_consts[128]);
        }

        if (tmp_assign_source_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[128], tmp_assign_source_29);
    }
    {
        PyObject *tmp_assign_source_30;
        PyObject *tmp_import_name_from_21;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_21 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_21)) {
            tmp_assign_source_30 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_21,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[125],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_30 = IMPORT_NAME(tmp_import_name_from_21, mod_consts[125]);
        }

        if (tmp_assign_source_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[125], tmp_assign_source_30);
    }
    {
        PyObject *tmp_assign_source_31;
        PyObject *tmp_import_name_from_22;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_22 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_22)) {
            tmp_assign_source_31 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_22,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[237],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_31 = IMPORT_NAME(tmp_import_name_from_22, mod_consts[237]);
        }

        if (tmp_assign_source_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[237], tmp_assign_source_31);
    }
    {
        PyObject *tmp_assign_source_32;
        PyObject *tmp_import_name_from_23;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_23 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_23)) {
            tmp_assign_source_32 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_23,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[39],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_32 = IMPORT_NAME(tmp_import_name_from_23, mod_consts[39]);
        }

        if (tmp_assign_source_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[39], tmp_assign_source_32);
    }
    {
        PyObject *tmp_assign_source_33;
        PyObject *tmp_import_name_from_24;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_24 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_24)) {
            tmp_assign_source_33 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_24,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[111],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_33 = IMPORT_NAME(tmp_import_name_from_24, mod_consts[111]);
        }

        if (tmp_assign_source_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[111], tmp_assign_source_33);
    }
    {
        PyObject *tmp_assign_source_34;
        PyObject *tmp_import_name_from_25;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_25 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_25)) {
            tmp_assign_source_34 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_25,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[465],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_34 = IMPORT_NAME(tmp_import_name_from_25, mod_consts[465]);
        }

        if (tmp_assign_source_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[465], tmp_assign_source_34);
    }
    {
        PyObject *tmp_assign_source_35;
        PyObject *tmp_import_name_from_26;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_26 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_26)) {
            tmp_assign_source_35 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_26,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[45],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_35 = IMPORT_NAME(tmp_import_name_from_26, mod_consts[45]);
        }

        if (tmp_assign_source_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[45], tmp_assign_source_35);
    }
    {
        PyObject *tmp_assign_source_36;
        PyObject *tmp_import_name_from_27;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_27 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_27)) {
            tmp_assign_source_36 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_27,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[46],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_36 = IMPORT_NAME(tmp_import_name_from_27, mod_consts[46]);
        }

        if (tmp_assign_source_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[46], tmp_assign_source_36);
    }
    {
        PyObject *tmp_assign_source_37;
        PyObject *tmp_import_name_from_28;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_28 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_28)) {
            tmp_assign_source_37 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_28,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[16],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_37 = IMPORT_NAME(tmp_import_name_from_28, mod_consts[16]);
        }

        if (tmp_assign_source_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[16], tmp_assign_source_37);
    }
    {
        PyObject *tmp_assign_source_38;
        PyObject *tmp_import_name_from_29;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_29 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_29)) {
            tmp_assign_source_38 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_29,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[47],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_38 = IMPORT_NAME(tmp_import_name_from_29, mod_consts[47]);
        }

        if (tmp_assign_source_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 18;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[47], tmp_assign_source_38);
    }
    goto try_end_2;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_2__module);
    Py_DECREF(tmp_import_from_2__module);
    tmp_import_from_2__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto frame_exception_exit_1;
    // End of try:
    try_end_2:;
    CHECK_OBJECT(tmp_import_from_2__module);
    Py_DECREF(tmp_import_from_2__module);
    tmp_import_from_2__module = NULL;
    {
        PyObject *tmp_assign_source_39;
        PyObject *tmp_import_name_from_30;
        PyObject *tmp_name_value_6;
        PyObject *tmp_globals_arg_value_6;
        PyObject *tmp_locals_arg_value_6;
        PyObject *tmp_fromlist_value_6;
        PyObject *tmp_level_value_6;
        tmp_name_value_6 = mod_consts[510];
        tmp_globals_arg_value_6 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_6 = Py_None;
        tmp_fromlist_value_6 = mod_consts[511];
        tmp_level_value_6 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 42;
        tmp_import_name_from_30 = IMPORT_MODULE5(tmp_name_value_6, tmp_globals_arg_value_6, tmp_locals_arg_value_6, tmp_fromlist_value_6, tmp_level_value_6);
        if (tmp_import_name_from_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 42;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_30)) {
            tmp_assign_source_39 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_30,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[472],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_39 = IMPORT_NAME(tmp_import_name_from_30, mod_consts[472]);
        }

        Py_DECREF(tmp_import_name_from_30);
        if (tmp_assign_source_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 42;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[472], tmp_assign_source_39);
    }
    {
        PyObject *tmp_assign_source_40;
        PyObject *tmp_name_value_7;
        PyObject *tmp_globals_arg_value_7;
        PyObject *tmp_locals_arg_value_7;
        PyObject *tmp_fromlist_value_7;
        PyObject *tmp_level_value_7;
        tmp_name_value_7 = mod_consts[512];
        tmp_globals_arg_value_7 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_7 = Py_None;
        tmp_fromlist_value_7 = mod_consts[513];
        tmp_level_value_7 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 43;
        tmp_assign_source_40 = IMPORT_MODULE5(tmp_name_value_7, tmp_globals_arg_value_7, tmp_locals_arg_value_7, tmp_fromlist_value_7, tmp_level_value_7);
        if (tmp_assign_source_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 43;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_3__module == NULL);
        tmp_import_from_3__module = tmp_assign_source_40;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_41;
        PyObject *tmp_import_name_from_31;
        CHECK_OBJECT(tmp_import_from_3__module);
        tmp_import_name_from_31 = tmp_import_from_3__module;
        if (PyModule_Check(tmp_import_name_from_31)) {
            tmp_assign_source_41 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_31,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[207],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_41 = IMPORT_NAME(tmp_import_name_from_31, mod_consts[207]);
        }

        if (tmp_assign_source_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 43;

            goto try_except_handler_3;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[207], tmp_assign_source_41);
    }
    {
        PyObject *tmp_assign_source_42;
        PyObject *tmp_import_name_from_32;
        CHECK_OBJECT(tmp_import_from_3__module);
        tmp_import_name_from_32 = tmp_import_from_3__module;
        if (PyModule_Check(tmp_import_name_from_32)) {
            tmp_assign_source_42 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_32,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[212],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_42 = IMPORT_NAME(tmp_import_name_from_32, mod_consts[212]);
        }

        if (tmp_assign_source_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 43;

            goto try_except_handler_3;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[212], tmp_assign_source_42);
    }
    goto try_end_3;
    // Exception handler code:
    try_except_handler_3:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_3__module);
    Py_DECREF(tmp_import_from_3__module);
    tmp_import_from_3__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto frame_exception_exit_1;
    // End of try:
    try_end_3:;
    CHECK_OBJECT(tmp_import_from_3__module);
    Py_DECREF(tmp_import_from_3__module);
    tmp_import_from_3__module = NULL;
    {
        PyObject *tmp_assign_source_43;
        PyObject *tmp_name_value_8;
        PyObject *tmp_globals_arg_value_8;
        PyObject *tmp_locals_arg_value_8;
        PyObject *tmp_fromlist_value_8;
        PyObject *tmp_level_value_8;
        tmp_name_value_8 = mod_consts[514];
        tmp_globals_arg_value_8 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_8 = Py_None;
        tmp_fromlist_value_8 = mod_consts[515];
        tmp_level_value_8 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 47;
        tmp_assign_source_43 = IMPORT_MODULE5(tmp_name_value_8, tmp_globals_arg_value_8, tmp_locals_arg_value_8, tmp_fromlist_value_8, tmp_level_value_8);
        if (tmp_assign_source_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 47;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_4__module == NULL);
        tmp_import_from_4__module = tmp_assign_source_43;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_44;
        PyObject *tmp_import_name_from_33;
        CHECK_OBJECT(tmp_import_from_4__module);
        tmp_import_name_from_33 = tmp_import_from_4__module;
        if (PyModule_Check(tmp_import_name_from_33)) {
            tmp_assign_source_44 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_33,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[217],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_44 = IMPORT_NAME(tmp_import_name_from_33, mod_consts[217]);
        }

        if (tmp_assign_source_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 47;

            goto try_except_handler_4;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[217], tmp_assign_source_44);
    }
    {
        PyObject *tmp_assign_source_45;
        PyObject *tmp_import_name_from_34;
        CHECK_OBJECT(tmp_import_from_4__module);
        tmp_import_name_from_34 = tmp_import_from_4__module;
        if (PyModule_Check(tmp_import_name_from_34)) {
            tmp_assign_source_45 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_34,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[219],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_45 = IMPORT_NAME(tmp_import_name_from_34, mod_consts[219]);
        }

        if (tmp_assign_source_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 47;

            goto try_except_handler_4;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[219], tmp_assign_source_45);
    }
    goto try_end_4;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_4__module);
    Py_DECREF(tmp_import_from_4__module);
    tmp_import_from_4__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;
    CHECK_OBJECT(tmp_import_from_4__module);
    Py_DECREF(tmp_import_from_4__module);
    tmp_import_from_4__module = NULL;
    {
        PyObject *tmp_assign_source_46;
        PyObject *tmp_import_name_from_35;
        PyObject *tmp_name_value_9;
        PyObject *tmp_globals_arg_value_9;
        PyObject *tmp_locals_arg_value_9;
        PyObject *tmp_fromlist_value_9;
        PyObject *tmp_level_value_9;
        tmp_name_value_9 = mod_consts[516];
        tmp_globals_arg_value_9 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_9 = Py_None;
        tmp_fromlist_value_9 = mod_consts[517];
        tmp_level_value_9 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 51;
        tmp_import_name_from_35 = IMPORT_MODULE5(tmp_name_value_9, tmp_globals_arg_value_9, tmp_locals_arg_value_9, tmp_fromlist_value_9, tmp_level_value_9);
        if (tmp_import_name_from_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 51;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_35)) {
            tmp_assign_source_46 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_35,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[351],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_46 = IMPORT_NAME(tmp_import_name_from_35, mod_consts[351]);
        }

        Py_DECREF(tmp_import_name_from_35);
        if (tmp_assign_source_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 51;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[351], tmp_assign_source_46);
    }
    {
        PyObject *tmp_assign_source_47;
        PyObject *tmp_import_name_from_36;
        PyObject *tmp_name_value_10;
        PyObject *tmp_globals_arg_value_10;
        PyObject *tmp_locals_arg_value_10;
        PyObject *tmp_fromlist_value_10;
        PyObject *tmp_level_value_10;
        tmp_name_value_10 = mod_consts[518];
        tmp_globals_arg_value_10 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_10 = Py_None;
        tmp_fromlist_value_10 = mod_consts[519];
        tmp_level_value_10 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 52;
        tmp_import_name_from_36 = IMPORT_MODULE5(tmp_name_value_10, tmp_globals_arg_value_10, tmp_locals_arg_value_10, tmp_fromlist_value_10, tmp_level_value_10);
        if (tmp_import_name_from_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 52;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_36)) {
            tmp_assign_source_47 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_36,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[258],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_47 = IMPORT_NAME(tmp_import_name_from_36, mod_consts[258]);
        }

        Py_DECREF(tmp_import_name_from_36);
        if (tmp_assign_source_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 52;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[258], tmp_assign_source_47);
    }
    {
        PyObject *tmp_assign_source_48;
        PyObject *tmp_import_name_from_37;
        PyObject *tmp_name_value_11;
        PyObject *tmp_globals_arg_value_11;
        PyObject *tmp_locals_arg_value_11;
        PyObject *tmp_fromlist_value_11;
        PyObject *tmp_level_value_11;
        tmp_name_value_11 = mod_consts[520];
        tmp_globals_arg_value_11 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_11 = Py_None;
        tmp_fromlist_value_11 = mod_consts[521];
        tmp_level_value_11 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 53;
        tmp_import_name_from_37 = IMPORT_MODULE5(tmp_name_value_11, tmp_globals_arg_value_11, tmp_locals_arg_value_11, tmp_fromlist_value_11, tmp_level_value_11);
        if (tmp_import_name_from_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 53;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_37)) {
            tmp_assign_source_48 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_37,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[288],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_48 = IMPORT_NAME(tmp_import_name_from_37, mod_consts[288]);
        }

        Py_DECREF(tmp_import_name_from_37);
        if (tmp_assign_source_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 53;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[288], tmp_assign_source_48);
    }
    {
        PyObject *tmp_assign_source_49;
        PyObject *tmp_import_name_from_38;
        PyObject *tmp_name_value_12;
        PyObject *tmp_globals_arg_value_12;
        PyObject *tmp_locals_arg_value_12;
        PyObject *tmp_fromlist_value_12;
        PyObject *tmp_level_value_12;
        tmp_name_value_12 = mod_consts[522];
        tmp_globals_arg_value_12 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_12 = Py_None;
        tmp_fromlist_value_12 = mod_consts[523];
        tmp_level_value_12 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 54;
        tmp_import_name_from_38 = IMPORT_MODULE5(tmp_name_value_12, tmp_globals_arg_value_12, tmp_locals_arg_value_12, tmp_fromlist_value_12, tmp_level_value_12);
        if (tmp_import_name_from_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 54;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_38)) {
            tmp_assign_source_49 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_38,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[290],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_49 = IMPORT_NAME(tmp_import_name_from_38, mod_consts[290]);
        }

        Py_DECREF(tmp_import_name_from_38);
        if (tmp_assign_source_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 54;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[290], tmp_assign_source_49);
    }
    {
        PyObject *tmp_assign_source_50;
        PyObject *tmp_import_name_from_39;
        PyObject *tmp_name_value_13;
        PyObject *tmp_globals_arg_value_13;
        PyObject *tmp_locals_arg_value_13;
        PyObject *tmp_fromlist_value_13;
        PyObject *tmp_level_value_13;
        tmp_name_value_13 = mod_consts[524];
        tmp_globals_arg_value_13 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_13 = Py_None;
        tmp_fromlist_value_13 = mod_consts[525];
        tmp_level_value_13 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 55;
        tmp_import_name_from_39 = IMPORT_MODULE5(tmp_name_value_13, tmp_globals_arg_value_13, tmp_locals_arg_value_13, tmp_fromlist_value_13, tmp_level_value_13);
        if (tmp_import_name_from_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 55;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_39)) {
            tmp_assign_source_50 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_39,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[292],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_50 = IMPORT_NAME(tmp_import_name_from_39, mod_consts[292]);
        }

        Py_DECREF(tmp_import_name_from_39);
        if (tmp_assign_source_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 55;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[292], tmp_assign_source_50);
    }
    {
        PyObject *tmp_assign_source_51;
        PyObject *tmp_import_name_from_40;
        PyObject *tmp_name_value_14;
        PyObject *tmp_globals_arg_value_14;
        PyObject *tmp_locals_arg_value_14;
        PyObject *tmp_fromlist_value_14;
        PyObject *tmp_level_value_14;
        tmp_name_value_14 = mod_consts[526];
        tmp_globals_arg_value_14 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_14 = Py_None;
        tmp_fromlist_value_14 = mod_consts[527];
        tmp_level_value_14 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 56;
        tmp_import_name_from_40 = IMPORT_MODULE5(tmp_name_value_14, tmp_globals_arg_value_14, tmp_locals_arg_value_14, tmp_fromlist_value_14, tmp_level_value_14);
        if (tmp_import_name_from_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 56;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_40)) {
            tmp_assign_source_51 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_40,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[310],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_51 = IMPORT_NAME(tmp_import_name_from_40, mod_consts[310]);
        }

        Py_DECREF(tmp_import_name_from_40);
        if (tmp_assign_source_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 56;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[310], tmp_assign_source_51);
    }
    {
        PyObject *tmp_assign_source_52;
        PyObject *tmp_import_name_from_41;
        PyObject *tmp_name_value_15;
        PyObject *tmp_globals_arg_value_15;
        PyObject *tmp_locals_arg_value_15;
        PyObject *tmp_fromlist_value_15;
        PyObject *tmp_level_value_15;
        tmp_name_value_15 = mod_consts[528];
        tmp_globals_arg_value_15 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_15 = Py_None;
        tmp_fromlist_value_15 = mod_consts[529];
        tmp_level_value_15 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 57;
        tmp_import_name_from_41 = IMPORT_MODULE5(tmp_name_value_15, tmp_globals_arg_value_15, tmp_locals_arg_value_15, tmp_fromlist_value_15, tmp_level_value_15);
        if (tmp_import_name_from_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 57;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_41)) {
            tmp_assign_source_52 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_41,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[326],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_52 = IMPORT_NAME(tmp_import_name_from_41, mod_consts[326]);
        }

        Py_DECREF(tmp_import_name_from_41);
        if (tmp_assign_source_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 57;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[326], tmp_assign_source_52);
    }
    {
        PyObject *tmp_assign_source_53;
        PyObject *tmp_import_name_from_42;
        PyObject *tmp_name_value_16;
        PyObject *tmp_globals_arg_value_16;
        PyObject *tmp_locals_arg_value_16;
        PyObject *tmp_fromlist_value_16;
        PyObject *tmp_level_value_16;
        tmp_name_value_16 = mod_consts[530];
        tmp_globals_arg_value_16 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_16 = Py_None;
        tmp_fromlist_value_16 = mod_consts[531];
        tmp_level_value_16 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 58;
        tmp_import_name_from_42 = IMPORT_MODULE5(tmp_name_value_16, tmp_globals_arg_value_16, tmp_locals_arg_value_16, tmp_fromlist_value_16, tmp_level_value_16);
        if (tmp_import_name_from_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 58;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_42)) {
            tmp_assign_source_53 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_42,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[358],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_53 = IMPORT_NAME(tmp_import_name_from_42, mod_consts[358]);
        }

        Py_DECREF(tmp_import_name_from_42);
        if (tmp_assign_source_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 58;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[358], tmp_assign_source_53);
    }
    {
        PyObject *tmp_assign_source_54;
        PyObject *tmp_import_name_from_43;
        PyObject *tmp_name_value_17;
        PyObject *tmp_globals_arg_value_17;
        PyObject *tmp_locals_arg_value_17;
        PyObject *tmp_fromlist_value_17;
        PyObject *tmp_level_value_17;
        tmp_name_value_17 = mod_consts[532];
        tmp_globals_arg_value_17 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_17 = Py_None;
        tmp_fromlist_value_17 = mod_consts[533];
        tmp_level_value_17 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 59;
        tmp_import_name_from_43 = IMPORT_MODULE5(tmp_name_value_17, tmp_globals_arg_value_17, tmp_locals_arg_value_17, tmp_fromlist_value_17, tmp_level_value_17);
        if (tmp_import_name_from_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 59;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_43)) {
            tmp_assign_source_54 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_43,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[361],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_54 = IMPORT_NAME(tmp_import_name_from_43, mod_consts[361]);
        }

        Py_DECREF(tmp_import_name_from_43);
        if (tmp_assign_source_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 59;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[361], tmp_assign_source_54);
    }
    {
        PyObject *tmp_assign_source_55;
        PyObject *tmp_import_name_from_44;
        PyObject *tmp_name_value_18;
        PyObject *tmp_globals_arg_value_18;
        PyObject *tmp_locals_arg_value_18;
        PyObject *tmp_fromlist_value_18;
        PyObject *tmp_level_value_18;
        tmp_name_value_18 = mod_consts[534];
        tmp_globals_arg_value_18 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_18 = Py_None;
        tmp_fromlist_value_18 = mod_consts[535];
        tmp_level_value_18 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 60;
        tmp_import_name_from_44 = IMPORT_MODULE5(tmp_name_value_18, tmp_globals_arg_value_18, tmp_locals_arg_value_18, tmp_fromlist_value_18, tmp_level_value_18);
        if (tmp_import_name_from_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 60;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_44)) {
            tmp_assign_source_55 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_44,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[243],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_55 = IMPORT_NAME(tmp_import_name_from_44, mod_consts[243]);
        }

        Py_DECREF(tmp_import_name_from_44);
        if (tmp_assign_source_55 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 60;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[243], tmp_assign_source_55);
    }
    {
        PyObject *tmp_assign_source_56;
        PyObject *tmp_import_name_from_45;
        PyObject *tmp_name_value_19;
        PyObject *tmp_globals_arg_value_19;
        PyObject *tmp_locals_arg_value_19;
        PyObject *tmp_fromlist_value_19;
        PyObject *tmp_level_value_19;
        tmp_name_value_19 = mod_consts[536];
        tmp_globals_arg_value_19 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_19 = Py_None;
        tmp_fromlist_value_19 = mod_consts[537];
        tmp_level_value_19 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 61;
        tmp_import_name_from_45 = IMPORT_MODULE5(tmp_name_value_19, tmp_globals_arg_value_19, tmp_locals_arg_value_19, tmp_fromlist_value_19, tmp_level_value_19);
        if (tmp_import_name_from_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 61;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_45)) {
            tmp_assign_source_56 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_45,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[296],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_56 = IMPORT_NAME(tmp_import_name_from_45, mod_consts[296]);
        }

        Py_DECREF(tmp_import_name_from_45);
        if (tmp_assign_source_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 61;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[296], tmp_assign_source_56);
    }
    {
        PyObject *tmp_assign_source_57;
        PyObject *tmp_import_name_from_46;
        PyObject *tmp_name_value_20;
        PyObject *tmp_globals_arg_value_20;
        PyObject *tmp_locals_arg_value_20;
        PyObject *tmp_fromlist_value_20;
        PyObject *tmp_level_value_20;
        tmp_name_value_20 = mod_consts[538];
        tmp_globals_arg_value_20 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_20 = Py_None;
        tmp_fromlist_value_20 = mod_consts[539];
        tmp_level_value_20 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 62;
        tmp_import_name_from_46 = IMPORT_MODULE5(tmp_name_value_20, tmp_globals_arg_value_20, tmp_locals_arg_value_20, tmp_fromlist_value_20, tmp_level_value_20);
        if (tmp_import_name_from_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 62;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_46)) {
            tmp_assign_source_57 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_46,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[293],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_57 = IMPORT_NAME(tmp_import_name_from_46, mod_consts[293]);
        }

        Py_DECREF(tmp_import_name_from_46);
        if (tmp_assign_source_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 62;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[293], tmp_assign_source_57);
    }
    {
        PyObject *tmp_assign_source_58;
        PyObject *tmp_import_name_from_47;
        PyObject *tmp_name_value_21;
        PyObject *tmp_globals_arg_value_21;
        PyObject *tmp_locals_arg_value_21;
        PyObject *tmp_fromlist_value_21;
        PyObject *tmp_level_value_21;
        tmp_name_value_21 = mod_consts[540];
        tmp_globals_arg_value_21 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_21 = Py_None;
        tmp_fromlist_value_21 = mod_consts[541];
        tmp_level_value_21 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 63;
        tmp_import_name_from_47 = IMPORT_MODULE5(tmp_name_value_21, tmp_globals_arg_value_21, tmp_locals_arg_value_21, tmp_fromlist_value_21, tmp_level_value_21);
        if (tmp_import_name_from_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 63;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_47)) {
            tmp_assign_source_58 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_47,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[295],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_58 = IMPORT_NAME(tmp_import_name_from_47, mod_consts[295]);
        }

        Py_DECREF(tmp_import_name_from_47);
        if (tmp_assign_source_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 63;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[295], tmp_assign_source_58);
    }
    {
        PyObject *tmp_assign_source_59;
        PyObject *tmp_import_name_from_48;
        PyObject *tmp_name_value_22;
        PyObject *tmp_globals_arg_value_22;
        PyObject *tmp_locals_arg_value_22;
        PyObject *tmp_fromlist_value_22;
        PyObject *tmp_level_value_22;
        tmp_name_value_22 = mod_consts[542];
        tmp_globals_arg_value_22 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_22 = Py_None;
        tmp_fromlist_value_22 = mod_consts[543];
        tmp_level_value_22 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 64;
        tmp_import_name_from_48 = IMPORT_MODULE5(tmp_name_value_22, tmp_globals_arg_value_22, tmp_locals_arg_value_22, tmp_fromlist_value_22, tmp_level_value_22);
        if (tmp_import_name_from_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 64;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_48)) {
            tmp_assign_source_59 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_48,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[297],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_59 = IMPORT_NAME(tmp_import_name_from_48, mod_consts[297]);
        }

        Py_DECREF(tmp_import_name_from_48);
        if (tmp_assign_source_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 64;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[297], tmp_assign_source_59);
    }
    {
        PyObject *tmp_assign_source_60;
        PyObject *tmp_import_name_from_49;
        PyObject *tmp_name_value_23;
        PyObject *tmp_globals_arg_value_23;
        PyObject *tmp_locals_arg_value_23;
        PyObject *tmp_fromlist_value_23;
        PyObject *tmp_level_value_23;
        tmp_name_value_23 = mod_consts[544];
        tmp_globals_arg_value_23 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_23 = Py_None;
        tmp_fromlist_value_23 = mod_consts[545];
        tmp_level_value_23 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 65;
        tmp_import_name_from_49 = IMPORT_MODULE5(tmp_name_value_23, tmp_globals_arg_value_23, tmp_locals_arg_value_23, tmp_fromlist_value_23, tmp_level_value_23);
        if (tmp_import_name_from_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_49)) {
            tmp_assign_source_60 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_49,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[298],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_60 = IMPORT_NAME(tmp_import_name_from_49, mod_consts[298]);
        }

        Py_DECREF(tmp_import_name_from_49);
        if (tmp_assign_source_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[298], tmp_assign_source_60);
    }
    {
        PyObject *tmp_assign_source_61;
        PyObject *tmp_import_name_from_50;
        PyObject *tmp_name_value_24;
        PyObject *tmp_globals_arg_value_24;
        PyObject *tmp_locals_arg_value_24;
        PyObject *tmp_fromlist_value_24;
        PyObject *tmp_level_value_24;
        tmp_name_value_24 = mod_consts[546];
        tmp_globals_arg_value_24 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_24 = Py_None;
        tmp_fromlist_value_24 = mod_consts[547];
        tmp_level_value_24 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 66;
        tmp_import_name_from_50 = IMPORT_MODULE5(tmp_name_value_24, tmp_globals_arg_value_24, tmp_locals_arg_value_24, tmp_fromlist_value_24, tmp_level_value_24);
        if (tmp_import_name_from_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 66;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_50)) {
            tmp_assign_source_61 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_50,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[299],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_61 = IMPORT_NAME(tmp_import_name_from_50, mod_consts[299]);
        }

        Py_DECREF(tmp_import_name_from_50);
        if (tmp_assign_source_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 66;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[299], tmp_assign_source_61);
    }
    {
        PyObject *tmp_assign_source_62;
        PyObject *tmp_import_name_from_51;
        PyObject *tmp_name_value_25;
        PyObject *tmp_globals_arg_value_25;
        PyObject *tmp_locals_arg_value_25;
        PyObject *tmp_fromlist_value_25;
        PyObject *tmp_level_value_25;
        tmp_name_value_25 = mod_consts[548];
        tmp_globals_arg_value_25 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_25 = Py_None;
        tmp_fromlist_value_25 = mod_consts[549];
        tmp_level_value_25 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 67;
        tmp_import_name_from_51 = IMPORT_MODULE5(tmp_name_value_25, tmp_globals_arg_value_25, tmp_locals_arg_value_25, tmp_fromlist_value_25, tmp_level_value_25);
        if (tmp_import_name_from_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 67;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_51)) {
            tmp_assign_source_62 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_51,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[300],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_62 = IMPORT_NAME(tmp_import_name_from_51, mod_consts[300]);
        }

        Py_DECREF(tmp_import_name_from_51);
        if (tmp_assign_source_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 67;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[300], tmp_assign_source_62);
    }
    {
        PyObject *tmp_assign_source_63;
        PyObject *tmp_import_name_from_52;
        PyObject *tmp_name_value_26;
        PyObject *tmp_globals_arg_value_26;
        PyObject *tmp_locals_arg_value_26;
        PyObject *tmp_fromlist_value_26;
        PyObject *tmp_level_value_26;
        tmp_name_value_26 = mod_consts[550];
        tmp_globals_arg_value_26 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_26 = Py_None;
        tmp_fromlist_value_26 = mod_consts[551];
        tmp_level_value_26 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 68;
        tmp_import_name_from_52 = IMPORT_MODULE5(tmp_name_value_26, tmp_globals_arg_value_26, tmp_locals_arg_value_26, tmp_fromlist_value_26, tmp_level_value_26);
        if (tmp_import_name_from_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 68;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_52)) {
            tmp_assign_source_63 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_52,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[301],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_63 = IMPORT_NAME(tmp_import_name_from_52, mod_consts[301]);
        }

        Py_DECREF(tmp_import_name_from_52);
        if (tmp_assign_source_63 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 68;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[301], tmp_assign_source_63);
    }
    {
        PyObject *tmp_assign_source_64;
        PyObject *tmp_import_name_from_53;
        PyObject *tmp_name_value_27;
        PyObject *tmp_globals_arg_value_27;
        PyObject *tmp_locals_arg_value_27;
        PyObject *tmp_fromlist_value_27;
        PyObject *tmp_level_value_27;
        tmp_name_value_27 = mod_consts[552];
        tmp_globals_arg_value_27 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_27 = Py_None;
        tmp_fromlist_value_27 = mod_consts[553];
        tmp_level_value_27 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 69;
        tmp_import_name_from_53 = IMPORT_MODULE5(tmp_name_value_27, tmp_globals_arg_value_27, tmp_locals_arg_value_27, tmp_fromlist_value_27, tmp_level_value_27);
        if (tmp_import_name_from_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 69;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_53)) {
            tmp_assign_source_64 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_53,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[302],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_64 = IMPORT_NAME(tmp_import_name_from_53, mod_consts[302]);
        }

        Py_DECREF(tmp_import_name_from_53);
        if (tmp_assign_source_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 69;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[302], tmp_assign_source_64);
    }
    {
        PyObject *tmp_assign_source_65;
        PyObject *tmp_name_value_28;
        PyObject *tmp_globals_arg_value_28;
        PyObject *tmp_locals_arg_value_28;
        PyObject *tmp_fromlist_value_28;
        PyObject *tmp_level_value_28;
        tmp_name_value_28 = mod_consts[554];
        tmp_globals_arg_value_28 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_28 = Py_None;
        tmp_fromlist_value_28 = mod_consts[555];
        tmp_level_value_28 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 70;
        tmp_assign_source_65 = IMPORT_MODULE5(tmp_name_value_28, tmp_globals_arg_value_28, tmp_locals_arg_value_28, tmp_fromlist_value_28, tmp_level_value_28);
        if (tmp_assign_source_65 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 70;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_5__module == NULL);
        tmp_import_from_5__module = tmp_assign_source_65;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_66;
        PyObject *tmp_import_name_from_54;
        CHECK_OBJECT(tmp_import_from_5__module);
        tmp_import_name_from_54 = tmp_import_from_5__module;
        if (PyModule_Check(tmp_import_name_from_54)) {
            tmp_assign_source_66 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_54,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[226],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_66 = IMPORT_NAME(tmp_import_name_from_54, mod_consts[226]);
        }

        if (tmp_assign_source_66 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 70;

            goto try_except_handler_5;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[226], tmp_assign_source_66);
    }
    {
        PyObject *tmp_assign_source_67;
        PyObject *tmp_import_name_from_55;
        CHECK_OBJECT(tmp_import_from_5__module);
        tmp_import_name_from_55 = tmp_import_from_5__module;
        if (PyModule_Check(tmp_import_name_from_55)) {
            tmp_assign_source_67 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_55,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[227],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_67 = IMPORT_NAME(tmp_import_name_from_55, mod_consts[227]);
        }

        if (tmp_assign_source_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 70;

            goto try_except_handler_5;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[227], tmp_assign_source_67);
    }
    goto try_end_5;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_5 = exception_type;
    exception_keeper_value_5 = exception_value;
    exception_keeper_tb_5 = exception_tb;
    exception_keeper_lineno_5 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_5__module);
    Py_DECREF(tmp_import_from_5__module);
    tmp_import_from_5__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_5;
    exception_value = exception_keeper_value_5;
    exception_tb = exception_keeper_tb_5;
    exception_lineno = exception_keeper_lineno_5;

    goto frame_exception_exit_1;
    // End of try:
    try_end_5:;
    CHECK_OBJECT(tmp_import_from_5__module);
    Py_DECREF(tmp_import_from_5__module);
    tmp_import_from_5__module = NULL;
    {
        PyObject *tmp_assign_source_68;
        PyObject *tmp_import_name_from_56;
        PyObject *tmp_name_value_29;
        PyObject *tmp_globals_arg_value_29;
        PyObject *tmp_locals_arg_value_29;
        PyObject *tmp_fromlist_value_29;
        PyObject *tmp_level_value_29;
        tmp_name_value_29 = mod_consts[556];
        tmp_globals_arg_value_29 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_29 = Py_None;
        tmp_fromlist_value_29 = mod_consts[557];
        tmp_level_value_29 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 74;
        tmp_import_name_from_56 = IMPORT_MODULE5(tmp_name_value_29, tmp_globals_arg_value_29, tmp_locals_arg_value_29, tmp_fromlist_value_29, tmp_level_value_29);
        if (tmp_import_name_from_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_56)) {
            tmp_assign_source_68 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_56,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[233],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_68 = IMPORT_NAME(tmp_import_name_from_56, mod_consts[233]);
        }

        Py_DECREF(tmp_import_name_from_56);
        if (tmp_assign_source_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 74;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[233], tmp_assign_source_68);
    }
    {
        PyObject *tmp_assign_source_69;
        PyObject *tmp_import_name_from_57;
        PyObject *tmp_name_value_30;
        PyObject *tmp_globals_arg_value_30;
        PyObject *tmp_locals_arg_value_30;
        PyObject *tmp_fromlist_value_30;
        PyObject *tmp_level_value_30;
        tmp_name_value_30 = mod_consts[558];
        tmp_globals_arg_value_30 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_30 = Py_None;
        tmp_fromlist_value_30 = mod_consts[559];
        tmp_level_value_30 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 75;
        tmp_import_name_from_57 = IMPORT_MODULE5(tmp_name_value_30, tmp_globals_arg_value_30, tmp_locals_arg_value_30, tmp_fromlist_value_30, tmp_level_value_30);
        if (tmp_import_name_from_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 75;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_57)) {
            tmp_assign_source_69 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_57,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[238],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_69 = IMPORT_NAME(tmp_import_name_from_57, mod_consts[238]);
        }

        Py_DECREF(tmp_import_name_from_57);
        if (tmp_assign_source_69 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 75;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[238], tmp_assign_source_69);
    }
    {
        PyObject *tmp_assign_source_70;
        PyObject *tmp_import_name_from_58;
        PyObject *tmp_name_value_31;
        PyObject *tmp_globals_arg_value_31;
        PyObject *tmp_locals_arg_value_31;
        PyObject *tmp_fromlist_value_31;
        PyObject *tmp_level_value_31;
        tmp_name_value_31 = mod_consts[560];
        tmp_globals_arg_value_31 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_31 = Py_None;
        tmp_fromlist_value_31 = mod_consts[561];
        tmp_level_value_31 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 76;
        tmp_import_name_from_58 = IMPORT_MODULE5(tmp_name_value_31, tmp_globals_arg_value_31, tmp_locals_arg_value_31, tmp_fromlist_value_31, tmp_level_value_31);
        if (tmp_import_name_from_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 76;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_58)) {
            tmp_assign_source_70 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_58,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[365],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_70 = IMPORT_NAME(tmp_import_name_from_58, mod_consts[365]);
        }

        Py_DECREF(tmp_import_name_from_58);
        if (tmp_assign_source_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 76;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[365], tmp_assign_source_70);
    }
    {
        PyObject *tmp_assign_source_71;
        PyObject *tmp_import_name_from_59;
        PyObject *tmp_name_value_32;
        PyObject *tmp_globals_arg_value_32;
        PyObject *tmp_locals_arg_value_32;
        PyObject *tmp_fromlist_value_32;
        PyObject *tmp_level_value_32;
        tmp_name_value_32 = mod_consts[562];
        tmp_globals_arg_value_32 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_32 = Py_None;
        tmp_fromlist_value_32 = mod_consts[563];
        tmp_level_value_32 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 77;
        tmp_import_name_from_59 = IMPORT_MODULE5(tmp_name_value_32, tmp_globals_arg_value_32, tmp_locals_arg_value_32, tmp_fromlist_value_32, tmp_level_value_32);
        if (tmp_import_name_from_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 77;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_59)) {
            tmp_assign_source_71 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_59,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[366],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_71 = IMPORT_NAME(tmp_import_name_from_59, mod_consts[366]);
        }

        Py_DECREF(tmp_import_name_from_59);
        if (tmp_assign_source_71 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 77;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[366], tmp_assign_source_71);
    }
    {
        PyObject *tmp_assign_source_72;
        PyObject *tmp_import_name_from_60;
        PyObject *tmp_name_value_33;
        PyObject *tmp_globals_arg_value_33;
        PyObject *tmp_locals_arg_value_33;
        PyObject *tmp_fromlist_value_33;
        PyObject *tmp_level_value_33;
        tmp_name_value_33 = mod_consts[564];
        tmp_globals_arg_value_33 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_33 = Py_None;
        tmp_fromlist_value_33 = mod_consts[565];
        tmp_level_value_33 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 78;
        tmp_import_name_from_60 = IMPORT_MODULE5(tmp_name_value_33, tmp_globals_arg_value_33, tmp_locals_arg_value_33, tmp_fromlist_value_33, tmp_level_value_33);
        if (tmp_import_name_from_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 78;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_60)) {
            tmp_assign_source_72 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_60,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[314],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_72 = IMPORT_NAME(tmp_import_name_from_60, mod_consts[314]);
        }

        Py_DECREF(tmp_import_name_from_60);
        if (tmp_assign_source_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 78;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[314], tmp_assign_source_72);
    }
    {
        PyObject *tmp_assign_source_73;
        PyObject *tmp_import_name_from_61;
        PyObject *tmp_name_value_34;
        PyObject *tmp_globals_arg_value_34;
        PyObject *tmp_locals_arg_value_34;
        PyObject *tmp_fromlist_value_34;
        PyObject *tmp_level_value_34;
        tmp_name_value_34 = mod_consts[566];
        tmp_globals_arg_value_34 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_34 = Py_None;
        tmp_fromlist_value_34 = mod_consts[567];
        tmp_level_value_34 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 79;
        tmp_import_name_from_61 = IMPORT_MODULE5(tmp_name_value_34, tmp_globals_arg_value_34, tmp_locals_arg_value_34, tmp_fromlist_value_34, tmp_level_value_34);
        if (tmp_import_name_from_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 79;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_61)) {
            tmp_assign_source_73 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_61,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[342],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_73 = IMPORT_NAME(tmp_import_name_from_61, mod_consts[342]);
        }

        Py_DECREF(tmp_import_name_from_61);
        if (tmp_assign_source_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 79;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[342], tmp_assign_source_73);
    }
    {
        PyObject *tmp_assign_source_74;
        PyObject *tmp_import_name_from_62;
        PyObject *tmp_name_value_35;
        PyObject *tmp_globals_arg_value_35;
        PyObject *tmp_locals_arg_value_35;
        PyObject *tmp_fromlist_value_35;
        PyObject *tmp_level_value_35;
        tmp_name_value_35 = mod_consts[568];
        tmp_globals_arg_value_35 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_35 = Py_None;
        tmp_fromlist_value_35 = mod_consts[569];
        tmp_level_value_35 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 80;
        tmp_import_name_from_62 = IMPORT_MODULE5(tmp_name_value_35, tmp_globals_arg_value_35, tmp_locals_arg_value_35, tmp_fromlist_value_35, tmp_level_value_35);
        if (tmp_import_name_from_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 80;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_62)) {
            tmp_assign_source_74 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_62,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[343],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_74 = IMPORT_NAME(tmp_import_name_from_62, mod_consts[343]);
        }

        Py_DECREF(tmp_import_name_from_62);
        if (tmp_assign_source_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 80;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[343], tmp_assign_source_74);
    }
    {
        PyObject *tmp_assign_source_75;
        PyObject *tmp_import_name_from_63;
        PyObject *tmp_name_value_36;
        PyObject *tmp_globals_arg_value_36;
        PyObject *tmp_locals_arg_value_36;
        PyObject *tmp_fromlist_value_36;
        PyObject *tmp_level_value_36;
        tmp_name_value_36 = mod_consts[570];
        tmp_globals_arg_value_36 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_36 = Py_None;
        tmp_fromlist_value_36 = mod_consts[571];
        tmp_level_value_36 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 81;
        tmp_import_name_from_63 = IMPORT_MODULE5(tmp_name_value_36, tmp_globals_arg_value_36, tmp_locals_arg_value_36, tmp_fromlist_value_36, tmp_level_value_36);
        if (tmp_import_name_from_63 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_63)) {
            tmp_assign_source_75 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_63,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[344],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_75 = IMPORT_NAME(tmp_import_name_from_63, mod_consts[344]);
        }

        Py_DECREF(tmp_import_name_from_63);
        if (tmp_assign_source_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 81;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[344], tmp_assign_source_75);
    }
    {
        PyObject *tmp_assign_source_76;
        PyObject *tmp_import_name_from_64;
        PyObject *tmp_name_value_37;
        PyObject *tmp_globals_arg_value_37;
        PyObject *tmp_locals_arg_value_37;
        PyObject *tmp_fromlist_value_37;
        PyObject *tmp_level_value_37;
        tmp_name_value_37 = mod_consts[572];
        tmp_globals_arg_value_37 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_37 = Py_None;
        tmp_fromlist_value_37 = mod_consts[573];
        tmp_level_value_37 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 82;
        tmp_import_name_from_64 = IMPORT_MODULE5(tmp_name_value_37, tmp_globals_arg_value_37, tmp_locals_arg_value_37, tmp_fromlist_value_37, tmp_level_value_37);
        if (tmp_import_name_from_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 82;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_64)) {
            tmp_assign_source_76 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_64,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[355],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_76 = IMPORT_NAME(tmp_import_name_from_64, mod_consts[355]);
        }

        Py_DECREF(tmp_import_name_from_64);
        if (tmp_assign_source_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 82;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[355], tmp_assign_source_76);
    }
    {
        PyObject *tmp_assign_source_77;
        PyObject *tmp_import_name_from_65;
        PyObject *tmp_name_value_38;
        PyObject *tmp_globals_arg_value_38;
        PyObject *tmp_locals_arg_value_38;
        PyObject *tmp_fromlist_value_38;
        PyObject *tmp_level_value_38;
        tmp_name_value_38 = mod_consts[574];
        tmp_globals_arg_value_38 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_38 = Py_None;
        tmp_fromlist_value_38 = mod_consts[575];
        tmp_level_value_38 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 83;
        tmp_import_name_from_65 = IMPORT_MODULE5(tmp_name_value_38, tmp_globals_arg_value_38, tmp_locals_arg_value_38, tmp_fromlist_value_38, tmp_level_value_38);
        if (tmp_import_name_from_65 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 83;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_65)) {
            tmp_assign_source_77 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_65,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[367],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_77 = IMPORT_NAME(tmp_import_name_from_65, mod_consts[367]);
        }

        Py_DECREF(tmp_import_name_from_65);
        if (tmp_assign_source_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 83;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[367], tmp_assign_source_77);
    }
    {
        PyObject *tmp_assign_source_78;
        PyObject *tmp_import_name_from_66;
        PyObject *tmp_name_value_39;
        PyObject *tmp_globals_arg_value_39;
        PyObject *tmp_locals_arg_value_39;
        PyObject *tmp_fromlist_value_39;
        PyObject *tmp_level_value_39;
        tmp_name_value_39 = mod_consts[576];
        tmp_globals_arg_value_39 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_39 = Py_None;
        tmp_fromlist_value_39 = mod_consts[577];
        tmp_level_value_39 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 84;
        tmp_import_name_from_66 = IMPORT_MODULE5(tmp_name_value_39, tmp_globals_arg_value_39, tmp_locals_arg_value_39, tmp_fromlist_value_39, tmp_level_value_39);
        if (tmp_import_name_from_66 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_66)) {
            tmp_assign_source_78 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_66,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[368],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_78 = IMPORT_NAME(tmp_import_name_from_66, mod_consts[368]);
        }

        Py_DECREF(tmp_import_name_from_66);
        if (tmp_assign_source_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 84;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[368], tmp_assign_source_78);
    }
    {
        PyObject *tmp_assign_source_79;
        PyObject *tmp_import_name_from_67;
        PyObject *tmp_name_value_40;
        PyObject *tmp_globals_arg_value_40;
        PyObject *tmp_locals_arg_value_40;
        PyObject *tmp_fromlist_value_40;
        PyObject *tmp_level_value_40;
        tmp_name_value_40 = mod_consts[578];
        tmp_globals_arg_value_40 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_40 = Py_None;
        tmp_fromlist_value_40 = mod_consts[579];
        tmp_level_value_40 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 85;
        tmp_import_name_from_67 = IMPORT_MODULE5(tmp_name_value_40, tmp_globals_arg_value_40, tmp_locals_arg_value_40, tmp_fromlist_value_40, tmp_level_value_40);
        if (tmp_import_name_from_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 85;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_67)) {
            tmp_assign_source_79 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_67,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[369],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_79 = IMPORT_NAME(tmp_import_name_from_67, mod_consts[369]);
        }

        Py_DECREF(tmp_import_name_from_67);
        if (tmp_assign_source_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 85;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[369], tmp_assign_source_79);
    }
    {
        PyObject *tmp_assign_source_80;
        PyObject *tmp_import_name_from_68;
        PyObject *tmp_name_value_41;
        PyObject *tmp_globals_arg_value_41;
        PyObject *tmp_locals_arg_value_41;
        PyObject *tmp_fromlist_value_41;
        PyObject *tmp_level_value_41;
        tmp_name_value_41 = mod_consts[580];
        tmp_globals_arg_value_41 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_41 = Py_None;
        tmp_fromlist_value_41 = mod_consts[581];
        tmp_level_value_41 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 86;
        tmp_import_name_from_68 = IMPORT_MODULE5(tmp_name_value_41, tmp_globals_arg_value_41, tmp_locals_arg_value_41, tmp_fromlist_value_41, tmp_level_value_41);
        if (tmp_import_name_from_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 86;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_68)) {
            tmp_assign_source_80 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_68,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[385],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_80 = IMPORT_NAME(tmp_import_name_from_68, mod_consts[385]);
        }

        Py_DECREF(tmp_import_name_from_68);
        if (tmp_assign_source_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 86;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[385], tmp_assign_source_80);
    }
    {
        PyObject *tmp_assign_source_81;
        PyObject *tmp_import_name_from_69;
        PyObject *tmp_name_value_42;
        PyObject *tmp_globals_arg_value_42;
        PyObject *tmp_locals_arg_value_42;
        PyObject *tmp_fromlist_value_42;
        PyObject *tmp_level_value_42;
        tmp_name_value_42 = mod_consts[582];
        tmp_globals_arg_value_42 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_42 = Py_None;
        tmp_fromlist_value_42 = mod_consts[583];
        tmp_level_value_42 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 87;
        tmp_import_name_from_69 = IMPORT_MODULE5(tmp_name_value_42, tmp_globals_arg_value_42, tmp_locals_arg_value_42, tmp_fromlist_value_42, tmp_level_value_42);
        if (tmp_import_name_from_69 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 87;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_69)) {
            tmp_assign_source_81 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_69,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[387],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_81 = IMPORT_NAME(tmp_import_name_from_69, mod_consts[387]);
        }

        Py_DECREF(tmp_import_name_from_69);
        if (tmp_assign_source_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 87;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[387], tmp_assign_source_81);
    }
    {
        PyObject *tmp_assign_source_82;
        PyObject *tmp_import_name_from_70;
        PyObject *tmp_name_value_43;
        PyObject *tmp_globals_arg_value_43;
        PyObject *tmp_locals_arg_value_43;
        PyObject *tmp_fromlist_value_43;
        PyObject *tmp_level_value_43;
        tmp_name_value_43 = mod_consts[584];
        tmp_globals_arg_value_43 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_43 = Py_None;
        tmp_fromlist_value_43 = mod_consts[585];
        tmp_level_value_43 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 88;
        tmp_import_name_from_70 = IMPORT_MODULE5(tmp_name_value_43, tmp_globals_arg_value_43, tmp_locals_arg_value_43, tmp_fromlist_value_43, tmp_level_value_43);
        if (tmp_import_name_from_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 88;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_70)) {
            tmp_assign_source_82 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_70,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[220],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_82 = IMPORT_NAME(tmp_import_name_from_70, mod_consts[220]);
        }

        Py_DECREF(tmp_import_name_from_70);
        if (tmp_assign_source_82 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 88;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[220], tmp_assign_source_82);
    }
    {
        PyObject *tmp_assign_source_83;
        PyObject *tmp_import_name_from_71;
        PyObject *tmp_name_value_44;
        PyObject *tmp_globals_arg_value_44;
        PyObject *tmp_locals_arg_value_44;
        PyObject *tmp_fromlist_value_44;
        PyObject *tmp_level_value_44;
        tmp_name_value_44 = mod_consts[586];
        tmp_globals_arg_value_44 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_44 = Py_None;
        tmp_fromlist_value_44 = mod_consts[587];
        tmp_level_value_44 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 89;
        tmp_import_name_from_71 = IMPORT_MODULE5(tmp_name_value_44, tmp_globals_arg_value_44, tmp_locals_arg_value_44, tmp_fromlist_value_44, tmp_level_value_44);
        if (tmp_import_name_from_71 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 89;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_71)) {
            tmp_assign_source_83 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_71,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[335],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_83 = IMPORT_NAME(tmp_import_name_from_71, mod_consts[335]);
        }

        Py_DECREF(tmp_import_name_from_71);
        if (tmp_assign_source_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 89;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[335], tmp_assign_source_83);
    }
    {
        PyObject *tmp_assign_source_84;
        PyObject *tmp_import_name_from_72;
        PyObject *tmp_name_value_45;
        PyObject *tmp_globals_arg_value_45;
        PyObject *tmp_locals_arg_value_45;
        PyObject *tmp_fromlist_value_45;
        PyObject *tmp_level_value_45;
        tmp_name_value_45 = mod_consts[588];
        tmp_globals_arg_value_45 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_45 = Py_None;
        tmp_fromlist_value_45 = mod_consts[589];
        tmp_level_value_45 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 90;
        tmp_import_name_from_72 = IMPORT_MODULE5(tmp_name_value_45, tmp_globals_arg_value_45, tmp_locals_arg_value_45, tmp_fromlist_value_45, tmp_level_value_45);
        if (tmp_import_name_from_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 90;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_72)) {
            tmp_assign_source_84 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_72,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[336],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_84 = IMPORT_NAME(tmp_import_name_from_72, mod_consts[336]);
        }

        Py_DECREF(tmp_import_name_from_72);
        if (tmp_assign_source_84 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 90;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[336], tmp_assign_source_84);
    }
    {
        PyObject *tmp_assign_source_85;
        PyObject *tmp_import_name_from_73;
        PyObject *tmp_name_value_46;
        PyObject *tmp_globals_arg_value_46;
        PyObject *tmp_locals_arg_value_46;
        PyObject *tmp_fromlist_value_46;
        PyObject *tmp_level_value_46;
        tmp_name_value_46 = mod_consts[590];
        tmp_globals_arg_value_46 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_46 = Py_None;
        tmp_fromlist_value_46 = mod_consts[591];
        tmp_level_value_46 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 91;
        tmp_import_name_from_73 = IMPORT_MODULE5(tmp_name_value_46, tmp_globals_arg_value_46, tmp_locals_arg_value_46, tmp_fromlist_value_46, tmp_level_value_46);
        if (tmp_import_name_from_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 91;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_73)) {
            tmp_assign_source_85 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_73,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[270],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_85 = IMPORT_NAME(tmp_import_name_from_73, mod_consts[270]);
        }

        Py_DECREF(tmp_import_name_from_73);
        if (tmp_assign_source_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 91;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[270], tmp_assign_source_85);
    }
    {
        PyObject *tmp_assign_source_86;
        PyObject *tmp_import_name_from_74;
        PyObject *tmp_name_value_47;
        PyObject *tmp_globals_arg_value_47;
        PyObject *tmp_locals_arg_value_47;
        PyObject *tmp_fromlist_value_47;
        PyObject *tmp_level_value_47;
        tmp_name_value_47 = mod_consts[592];
        tmp_globals_arg_value_47 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_47 = Py_None;
        tmp_fromlist_value_47 = mod_consts[593];
        tmp_level_value_47 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 92;
        tmp_import_name_from_74 = IMPORT_MODULE5(tmp_name_value_47, tmp_globals_arg_value_47, tmp_locals_arg_value_47, tmp_fromlist_value_47, tmp_level_value_47);
        if (tmp_import_name_from_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 92;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_74)) {
            tmp_assign_source_86 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_74,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[311],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_86 = IMPORT_NAME(tmp_import_name_from_74, mod_consts[311]);
        }

        Py_DECREF(tmp_import_name_from_74);
        if (tmp_assign_source_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 92;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[311], tmp_assign_source_86);
    }
    {
        PyObject *tmp_assign_source_87;
        PyObject *tmp_import_name_from_75;
        PyObject *tmp_name_value_48;
        PyObject *tmp_globals_arg_value_48;
        PyObject *tmp_locals_arg_value_48;
        PyObject *tmp_fromlist_value_48;
        PyObject *tmp_level_value_48;
        tmp_name_value_48 = mod_consts[594];
        tmp_globals_arg_value_48 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_48 = Py_None;
        tmp_fromlist_value_48 = mod_consts[595];
        tmp_level_value_48 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 93;
        tmp_import_name_from_75 = IMPORT_MODULE5(tmp_name_value_48, tmp_globals_arg_value_48, tmp_locals_arg_value_48, tmp_fromlist_value_48, tmp_level_value_48);
        if (tmp_import_name_from_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 93;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_75)) {
            tmp_assign_source_87 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_75,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[313],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_87 = IMPORT_NAME(tmp_import_name_from_75, mod_consts[313]);
        }

        Py_DECREF(tmp_import_name_from_75);
        if (tmp_assign_source_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 93;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[313], tmp_assign_source_87);
    }
    {
        PyObject *tmp_assign_source_88;
        PyObject *tmp_import_name_from_76;
        PyObject *tmp_name_value_49;
        PyObject *tmp_globals_arg_value_49;
        PyObject *tmp_locals_arg_value_49;
        PyObject *tmp_fromlist_value_49;
        PyObject *tmp_level_value_49;
        tmp_name_value_49 = mod_consts[596];
        tmp_globals_arg_value_49 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_49 = Py_None;
        tmp_fromlist_value_49 = mod_consts[597];
        tmp_level_value_49 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 94;
        tmp_import_name_from_76 = IMPORT_MODULE5(tmp_name_value_49, tmp_globals_arg_value_49, tmp_locals_arg_value_49, tmp_fromlist_value_49, tmp_level_value_49);
        if (tmp_import_name_from_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 94;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_76)) {
            tmp_assign_source_88 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_76,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[388],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_88 = IMPORT_NAME(tmp_import_name_from_76, mod_consts[388]);
        }

        Py_DECREF(tmp_import_name_from_76);
        if (tmp_assign_source_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 94;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[388], tmp_assign_source_88);
    }
    {
        PyObject *tmp_assign_source_89;
        PyObject *tmp_import_name_from_77;
        PyObject *tmp_name_value_50;
        PyObject *tmp_globals_arg_value_50;
        PyObject *tmp_locals_arg_value_50;
        PyObject *tmp_fromlist_value_50;
        PyObject *tmp_level_value_50;
        tmp_name_value_50 = mod_consts[598];
        tmp_globals_arg_value_50 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_50 = Py_None;
        tmp_fromlist_value_50 = mod_consts[599];
        tmp_level_value_50 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 95;
        tmp_import_name_from_77 = IMPORT_MODULE5(tmp_name_value_50, tmp_globals_arg_value_50, tmp_locals_arg_value_50, tmp_fromlist_value_50, tmp_level_value_50);
        if (tmp_import_name_from_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 95;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_77)) {
            tmp_assign_source_89 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_77,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[389],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_89 = IMPORT_NAME(tmp_import_name_from_77, mod_consts[389]);
        }

        Py_DECREF(tmp_import_name_from_77);
        if (tmp_assign_source_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 95;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[389], tmp_assign_source_89);
    }
    {
        PyObject *tmp_assign_source_90;
        PyObject *tmp_import_name_from_78;
        PyObject *tmp_name_value_51;
        PyObject *tmp_globals_arg_value_51;
        PyObject *tmp_locals_arg_value_51;
        PyObject *tmp_fromlist_value_51;
        PyObject *tmp_level_value_51;
        tmp_name_value_51 = mod_consts[600];
        tmp_globals_arg_value_51 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_51 = Py_None;
        tmp_fromlist_value_51 = mod_consts[601];
        tmp_level_value_51 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 96;
        tmp_import_name_from_78 = IMPORT_MODULE5(tmp_name_value_51, tmp_globals_arg_value_51, tmp_locals_arg_value_51, tmp_fromlist_value_51, tmp_level_value_51);
        if (tmp_import_name_from_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_78)) {
            tmp_assign_source_90 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_78,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[370],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_90 = IMPORT_NAME(tmp_import_name_from_78, mod_consts[370]);
        }

        Py_DECREF(tmp_import_name_from_78);
        if (tmp_assign_source_90 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 96;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[370], tmp_assign_source_90);
    }
    {
        PyObject *tmp_assign_source_91;
        PyObject *tmp_import_name_from_79;
        PyObject *tmp_name_value_52;
        PyObject *tmp_globals_arg_value_52;
        PyObject *tmp_locals_arg_value_52;
        PyObject *tmp_fromlist_value_52;
        PyObject *tmp_level_value_52;
        tmp_name_value_52 = mod_consts[602];
        tmp_globals_arg_value_52 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_52 = Py_None;
        tmp_fromlist_value_52 = mod_consts[603];
        tmp_level_value_52 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 97;
        tmp_import_name_from_79 = IMPORT_MODULE5(tmp_name_value_52, tmp_globals_arg_value_52, tmp_locals_arg_value_52, tmp_fromlist_value_52, tmp_level_value_52);
        if (tmp_import_name_from_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 97;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_79)) {
            tmp_assign_source_91 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_79,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[390],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_91 = IMPORT_NAME(tmp_import_name_from_79, mod_consts[390]);
        }

        Py_DECREF(tmp_import_name_from_79);
        if (tmp_assign_source_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 97;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[390], tmp_assign_source_91);
    }
    {
        PyObject *tmp_assign_source_92;
        PyObject *tmp_import_name_from_80;
        PyObject *tmp_name_value_53;
        PyObject *tmp_globals_arg_value_53;
        PyObject *tmp_locals_arg_value_53;
        PyObject *tmp_fromlist_value_53;
        PyObject *tmp_level_value_53;
        tmp_name_value_53 = mod_consts[604];
        tmp_globals_arg_value_53 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_53 = Py_None;
        tmp_fromlist_value_53 = mod_consts[605];
        tmp_level_value_53 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 98;
        tmp_import_name_from_80 = IMPORT_MODULE5(tmp_name_value_53, tmp_globals_arg_value_53, tmp_locals_arg_value_53, tmp_fromlist_value_53, tmp_level_value_53);
        if (tmp_import_name_from_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 98;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_80)) {
            tmp_assign_source_92 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_80,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[391],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_92 = IMPORT_NAME(tmp_import_name_from_80, mod_consts[391]);
        }

        Py_DECREF(tmp_import_name_from_80);
        if (tmp_assign_source_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 98;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[391], tmp_assign_source_92);
    }
    {
        PyObject *tmp_assign_source_93;
        PyObject *tmp_import_name_from_81;
        PyObject *tmp_name_value_54;
        PyObject *tmp_globals_arg_value_54;
        PyObject *tmp_locals_arg_value_54;
        PyObject *tmp_fromlist_value_54;
        PyObject *tmp_level_value_54;
        tmp_name_value_54 = mod_consts[606];
        tmp_globals_arg_value_54 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_54 = Py_None;
        tmp_fromlist_value_54 = mod_consts[607];
        tmp_level_value_54 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 99;
        tmp_import_name_from_81 = IMPORT_MODULE5(tmp_name_value_54, tmp_globals_arg_value_54, tmp_locals_arg_value_54, tmp_fromlist_value_54, tmp_level_value_54);
        if (tmp_import_name_from_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 99;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_81)) {
            tmp_assign_source_93 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_81,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[307],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_93 = IMPORT_NAME(tmp_import_name_from_81, mod_consts[307]);
        }

        Py_DECREF(tmp_import_name_from_81);
        if (tmp_assign_source_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 99;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[307], tmp_assign_source_93);
    }
    {
        PyObject *tmp_assign_source_94;
        PyObject *tmp_import_name_from_82;
        PyObject *tmp_name_value_55;
        PyObject *tmp_globals_arg_value_55;
        PyObject *tmp_locals_arg_value_55;
        PyObject *tmp_fromlist_value_55;
        PyObject *tmp_level_value_55;
        tmp_name_value_55 = mod_consts[608];
        tmp_globals_arg_value_55 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_55 = Py_None;
        tmp_fromlist_value_55 = mod_consts[609];
        tmp_level_value_55 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 100;
        tmp_import_name_from_82 = IMPORT_MODULE5(tmp_name_value_55, tmp_globals_arg_value_55, tmp_locals_arg_value_55, tmp_fromlist_value_55, tmp_level_value_55);
        if (tmp_import_name_from_82 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 100;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_82)) {
            tmp_assign_source_94 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_82,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[308],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_94 = IMPORT_NAME(tmp_import_name_from_82, mod_consts[308]);
        }

        Py_DECREF(tmp_import_name_from_82);
        if (tmp_assign_source_94 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 100;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[308], tmp_assign_source_94);
    }
    {
        PyObject *tmp_assign_source_95;
        PyObject *tmp_import_name_from_83;
        PyObject *tmp_name_value_56;
        PyObject *tmp_globals_arg_value_56;
        PyObject *tmp_locals_arg_value_56;
        PyObject *tmp_fromlist_value_56;
        PyObject *tmp_level_value_56;
        tmp_name_value_56 = mod_consts[610];
        tmp_globals_arg_value_56 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_56 = Py_None;
        tmp_fromlist_value_56 = mod_consts[611];
        tmp_level_value_56 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 101;
        tmp_import_name_from_83 = IMPORT_MODULE5(tmp_name_value_56, tmp_globals_arg_value_56, tmp_locals_arg_value_56, tmp_fromlist_value_56, tmp_level_value_56);
        if (tmp_import_name_from_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 101;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_83)) {
            tmp_assign_source_95 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_83,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[392],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_95 = IMPORT_NAME(tmp_import_name_from_83, mod_consts[392]);
        }

        Py_DECREF(tmp_import_name_from_83);
        if (tmp_assign_source_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 101;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[392], tmp_assign_source_95);
    }
    {
        PyObject *tmp_assign_source_96;
        PyObject *tmp_import_name_from_84;
        PyObject *tmp_name_value_57;
        PyObject *tmp_globals_arg_value_57;
        PyObject *tmp_locals_arg_value_57;
        PyObject *tmp_fromlist_value_57;
        PyObject *tmp_level_value_57;
        tmp_name_value_57 = mod_consts[612];
        tmp_globals_arg_value_57 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_57 = Py_None;
        tmp_fromlist_value_57 = mod_consts[613];
        tmp_level_value_57 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 102;
        tmp_import_name_from_84 = IMPORT_MODULE5(tmp_name_value_57, tmp_globals_arg_value_57, tmp_locals_arg_value_57, tmp_fromlist_value_57, tmp_level_value_57);
        if (tmp_import_name_from_84 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 102;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_84)) {
            tmp_assign_source_96 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_84,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[393],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_96 = IMPORT_NAME(tmp_import_name_from_84, mod_consts[393]);
        }

        Py_DECREF(tmp_import_name_from_84);
        if (tmp_assign_source_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 102;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[393], tmp_assign_source_96);
    }
    {
        PyObject *tmp_assign_source_97;
        PyObject *tmp_import_name_from_85;
        PyObject *tmp_name_value_58;
        PyObject *tmp_globals_arg_value_58;
        PyObject *tmp_locals_arg_value_58;
        PyObject *tmp_fromlist_value_58;
        PyObject *tmp_level_value_58;
        tmp_name_value_58 = mod_consts[614];
        tmp_globals_arg_value_58 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_58 = Py_None;
        tmp_fromlist_value_58 = mod_consts[615];
        tmp_level_value_58 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 103;
        tmp_import_name_from_85 = IMPORT_MODULE5(tmp_name_value_58, tmp_globals_arg_value_58, tmp_locals_arg_value_58, tmp_fromlist_value_58, tmp_level_value_58);
        if (tmp_import_name_from_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 103;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_85)) {
            tmp_assign_source_97 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_85,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[371],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_97 = IMPORT_NAME(tmp_import_name_from_85, mod_consts[371]);
        }

        Py_DECREF(tmp_import_name_from_85);
        if (tmp_assign_source_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 103;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[371], tmp_assign_source_97);
    }
    {
        PyObject *tmp_assign_source_98;
        PyObject *tmp_import_name_from_86;
        PyObject *tmp_name_value_59;
        PyObject *tmp_globals_arg_value_59;
        PyObject *tmp_locals_arg_value_59;
        PyObject *tmp_fromlist_value_59;
        PyObject *tmp_level_value_59;
        tmp_name_value_59 = mod_consts[616];
        tmp_globals_arg_value_59 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_59 = Py_None;
        tmp_fromlist_value_59 = mod_consts[617];
        tmp_level_value_59 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 104;
        tmp_import_name_from_86 = IMPORT_MODULE5(tmp_name_value_59, tmp_globals_arg_value_59, tmp_locals_arg_value_59, tmp_fromlist_value_59, tmp_level_value_59);
        if (tmp_import_name_from_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 104;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_86)) {
            tmp_assign_source_98 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_86,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[372],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_98 = IMPORT_NAME(tmp_import_name_from_86, mod_consts[372]);
        }

        Py_DECREF(tmp_import_name_from_86);
        if (tmp_assign_source_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 104;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[372], tmp_assign_source_98);
    }
    {
        PyObject *tmp_assign_source_99;
        PyObject *tmp_import_name_from_87;
        PyObject *tmp_name_value_60;
        PyObject *tmp_globals_arg_value_60;
        PyObject *tmp_locals_arg_value_60;
        PyObject *tmp_fromlist_value_60;
        PyObject *tmp_level_value_60;
        tmp_name_value_60 = mod_consts[618];
        tmp_globals_arg_value_60 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_60 = Py_None;
        tmp_fromlist_value_60 = mod_consts[619];
        tmp_level_value_60 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 105;
        tmp_import_name_from_87 = IMPORT_MODULE5(tmp_name_value_60, tmp_globals_arg_value_60, tmp_locals_arg_value_60, tmp_fromlist_value_60, tmp_level_value_60);
        if (tmp_import_name_from_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 105;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_87)) {
            tmp_assign_source_99 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_87,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[394],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_99 = IMPORT_NAME(tmp_import_name_from_87, mod_consts[394]);
        }

        Py_DECREF(tmp_import_name_from_87);
        if (tmp_assign_source_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 105;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[394], tmp_assign_source_99);
    }
    {
        PyObject *tmp_assign_source_100;
        PyObject *tmp_import_name_from_88;
        PyObject *tmp_name_value_61;
        PyObject *tmp_globals_arg_value_61;
        PyObject *tmp_locals_arg_value_61;
        PyObject *tmp_fromlist_value_61;
        PyObject *tmp_level_value_61;
        tmp_name_value_61 = mod_consts[620];
        tmp_globals_arg_value_61 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_61 = Py_None;
        tmp_fromlist_value_61 = mod_consts[621];
        tmp_level_value_61 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 106;
        tmp_import_name_from_88 = IMPORT_MODULE5(tmp_name_value_61, tmp_globals_arg_value_61, tmp_locals_arg_value_61, tmp_fromlist_value_61, tmp_level_value_61);
        if (tmp_import_name_from_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 106;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_88)) {
            tmp_assign_source_100 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_88,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[240],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_100 = IMPORT_NAME(tmp_import_name_from_88, mod_consts[240]);
        }

        Py_DECREF(tmp_import_name_from_88);
        if (tmp_assign_source_100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 106;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[240], tmp_assign_source_100);
    }
    {
        PyObject *tmp_assign_source_101;
        PyObject *tmp_import_name_from_89;
        PyObject *tmp_name_value_62;
        PyObject *tmp_globals_arg_value_62;
        PyObject *tmp_locals_arg_value_62;
        PyObject *tmp_fromlist_value_62;
        PyObject *tmp_level_value_62;
        tmp_name_value_62 = mod_consts[622];
        tmp_globals_arg_value_62 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_62 = Py_None;
        tmp_fromlist_value_62 = mod_consts[623];
        tmp_level_value_62 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 107;
        tmp_import_name_from_89 = IMPORT_MODULE5(tmp_name_value_62, tmp_globals_arg_value_62, tmp_locals_arg_value_62, tmp_fromlist_value_62, tmp_level_value_62);
        if (tmp_import_name_from_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 107;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_89)) {
            tmp_assign_source_101 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_89,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[395],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_101 = IMPORT_NAME(tmp_import_name_from_89, mod_consts[395]);
        }

        Py_DECREF(tmp_import_name_from_89);
        if (tmp_assign_source_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 107;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[395], tmp_assign_source_101);
    }
    {
        PyObject *tmp_assign_source_102;
        PyObject *tmp_import_name_from_90;
        PyObject *tmp_name_value_63;
        PyObject *tmp_globals_arg_value_63;
        PyObject *tmp_locals_arg_value_63;
        PyObject *tmp_fromlist_value_63;
        PyObject *tmp_level_value_63;
        tmp_name_value_63 = mod_consts[624];
        tmp_globals_arg_value_63 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_63 = Py_None;
        tmp_fromlist_value_63 = mod_consts[625];
        tmp_level_value_63 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 108;
        tmp_import_name_from_90 = IMPORT_MODULE5(tmp_name_value_63, tmp_globals_arg_value_63, tmp_locals_arg_value_63, tmp_fromlist_value_63, tmp_level_value_63);
        if (tmp_import_name_from_90 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_90)) {
            tmp_assign_source_102 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_90,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[396],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_102 = IMPORT_NAME(tmp_import_name_from_90, mod_consts[396]);
        }

        Py_DECREF(tmp_import_name_from_90);
        if (tmp_assign_source_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 108;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[396], tmp_assign_source_102);
    }
    {
        PyObject *tmp_assign_source_103;
        PyObject *tmp_import_name_from_91;
        PyObject *tmp_name_value_64;
        PyObject *tmp_globals_arg_value_64;
        PyObject *tmp_locals_arg_value_64;
        PyObject *tmp_fromlist_value_64;
        PyObject *tmp_level_value_64;
        tmp_name_value_64 = mod_consts[626];
        tmp_globals_arg_value_64 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_64 = Py_None;
        tmp_fromlist_value_64 = mod_consts[627];
        tmp_level_value_64 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 109;
        tmp_import_name_from_91 = IMPORT_MODULE5(tmp_name_value_64, tmp_globals_arg_value_64, tmp_locals_arg_value_64, tmp_fromlist_value_64, tmp_level_value_64);
        if (tmp_import_name_from_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 109;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_91)) {
            tmp_assign_source_103 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_91,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[397],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_103 = IMPORT_NAME(tmp_import_name_from_91, mod_consts[397]);
        }

        Py_DECREF(tmp_import_name_from_91);
        if (tmp_assign_source_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 109;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[397], tmp_assign_source_103);
    }
    {
        PyObject *tmp_assign_source_104;
        PyObject *tmp_import_name_from_92;
        PyObject *tmp_name_value_65;
        PyObject *tmp_globals_arg_value_65;
        PyObject *tmp_locals_arg_value_65;
        PyObject *tmp_fromlist_value_65;
        PyObject *tmp_level_value_65;
        tmp_name_value_65 = mod_consts[628];
        tmp_globals_arg_value_65 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_65 = Py_None;
        tmp_fromlist_value_65 = mod_consts[629];
        tmp_level_value_65 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 110;
        tmp_import_name_from_92 = IMPORT_MODULE5(tmp_name_value_65, tmp_globals_arg_value_65, tmp_locals_arg_value_65, tmp_fromlist_value_65, tmp_level_value_65);
        if (tmp_import_name_from_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 110;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_92)) {
            tmp_assign_source_104 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_92,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[398],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_104 = IMPORT_NAME(tmp_import_name_from_92, mod_consts[398]);
        }

        Py_DECREF(tmp_import_name_from_92);
        if (tmp_assign_source_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 110;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[398], tmp_assign_source_104);
    }
    {
        PyObject *tmp_assign_source_105;
        PyObject *tmp_import_name_from_93;
        PyObject *tmp_name_value_66;
        PyObject *tmp_globals_arg_value_66;
        PyObject *tmp_locals_arg_value_66;
        PyObject *tmp_fromlist_value_66;
        PyObject *tmp_level_value_66;
        tmp_name_value_66 = mod_consts[630];
        tmp_globals_arg_value_66 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_66 = Py_None;
        tmp_fromlist_value_66 = mod_consts[631];
        tmp_level_value_66 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 111;
        tmp_import_name_from_93 = IMPORT_MODULE5(tmp_name_value_66, tmp_globals_arg_value_66, tmp_locals_arg_value_66, tmp_fromlist_value_66, tmp_level_value_66);
        if (tmp_import_name_from_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 111;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_93)) {
            tmp_assign_source_105 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_93,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[399],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_105 = IMPORT_NAME(tmp_import_name_from_93, mod_consts[399]);
        }

        Py_DECREF(tmp_import_name_from_93);
        if (tmp_assign_source_105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 111;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[399], tmp_assign_source_105);
    }
    {
        PyObject *tmp_assign_source_106;
        PyObject *tmp_import_name_from_94;
        PyObject *tmp_name_value_67;
        PyObject *tmp_globals_arg_value_67;
        PyObject *tmp_locals_arg_value_67;
        PyObject *tmp_fromlist_value_67;
        PyObject *tmp_level_value_67;
        tmp_name_value_67 = mod_consts[632];
        tmp_globals_arg_value_67 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_67 = Py_None;
        tmp_fromlist_value_67 = mod_consts[633];
        tmp_level_value_67 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 112;
        tmp_import_name_from_94 = IMPORT_MODULE5(tmp_name_value_67, tmp_globals_arg_value_67, tmp_locals_arg_value_67, tmp_fromlist_value_67, tmp_level_value_67);
        if (tmp_import_name_from_94 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 112;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_94)) {
            tmp_assign_source_106 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_94,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[400],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_106 = IMPORT_NAME(tmp_import_name_from_94, mod_consts[400]);
        }

        Py_DECREF(tmp_import_name_from_94);
        if (tmp_assign_source_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 112;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[400], tmp_assign_source_106);
    }
    {
        PyObject *tmp_assign_source_107;
        PyObject *tmp_import_name_from_95;
        PyObject *tmp_name_value_68;
        PyObject *tmp_globals_arg_value_68;
        PyObject *tmp_locals_arg_value_68;
        PyObject *tmp_fromlist_value_68;
        PyObject *tmp_level_value_68;
        tmp_name_value_68 = mod_consts[634];
        tmp_globals_arg_value_68 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_68 = Py_None;
        tmp_fromlist_value_68 = mod_consts[635];
        tmp_level_value_68 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 113;
        tmp_import_name_from_95 = IMPORT_MODULE5(tmp_name_value_68, tmp_globals_arg_value_68, tmp_locals_arg_value_68, tmp_fromlist_value_68, tmp_level_value_68);
        if (tmp_import_name_from_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 113;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_95)) {
            tmp_assign_source_107 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_95,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[401],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_107 = IMPORT_NAME(tmp_import_name_from_95, mod_consts[401]);
        }

        Py_DECREF(tmp_import_name_from_95);
        if (tmp_assign_source_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 113;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[401], tmp_assign_source_107);
    }
    {
        PyObject *tmp_assign_source_108;
        PyObject *tmp_import_name_from_96;
        PyObject *tmp_name_value_69;
        PyObject *tmp_globals_arg_value_69;
        PyObject *tmp_locals_arg_value_69;
        PyObject *tmp_fromlist_value_69;
        PyObject *tmp_level_value_69;
        tmp_name_value_69 = mod_consts[636];
        tmp_globals_arg_value_69 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_69 = Py_None;
        tmp_fromlist_value_69 = mod_consts[637];
        tmp_level_value_69 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 114;
        tmp_import_name_from_96 = IMPORT_MODULE5(tmp_name_value_69, tmp_globals_arg_value_69, tmp_locals_arg_value_69, tmp_fromlist_value_69, tmp_level_value_69);
        if (tmp_import_name_from_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 114;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_96)) {
            tmp_assign_source_108 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_96,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[403],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_108 = IMPORT_NAME(tmp_import_name_from_96, mod_consts[403]);
        }

        Py_DECREF(tmp_import_name_from_96);
        if (tmp_assign_source_108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 114;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[403], tmp_assign_source_108);
    }
    {
        PyObject *tmp_assign_source_109;
        PyObject *tmp_import_name_from_97;
        PyObject *tmp_name_value_70;
        PyObject *tmp_globals_arg_value_70;
        PyObject *tmp_locals_arg_value_70;
        PyObject *tmp_fromlist_value_70;
        PyObject *tmp_level_value_70;
        tmp_name_value_70 = mod_consts[638];
        tmp_globals_arg_value_70 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_70 = Py_None;
        tmp_fromlist_value_70 = mod_consts[639];
        tmp_level_value_70 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 115;
        tmp_import_name_from_97 = IMPORT_MODULE5(tmp_name_value_70, tmp_globals_arg_value_70, tmp_locals_arg_value_70, tmp_fromlist_value_70, tmp_level_value_70);
        if (tmp_import_name_from_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 115;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_97)) {
            tmp_assign_source_109 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_97,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[404],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_109 = IMPORT_NAME(tmp_import_name_from_97, mod_consts[404]);
        }

        Py_DECREF(tmp_import_name_from_97);
        if (tmp_assign_source_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 115;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[404], tmp_assign_source_109);
    }
    {
        PyObject *tmp_assign_source_110;
        PyObject *tmp_import_name_from_98;
        PyObject *tmp_name_value_71;
        PyObject *tmp_globals_arg_value_71;
        PyObject *tmp_locals_arg_value_71;
        PyObject *tmp_fromlist_value_71;
        PyObject *tmp_level_value_71;
        tmp_name_value_71 = mod_consts[640];
        tmp_globals_arg_value_71 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_71 = Py_None;
        tmp_fromlist_value_71 = mod_consts[641];
        tmp_level_value_71 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 116;
        tmp_import_name_from_98 = IMPORT_MODULE5(tmp_name_value_71, tmp_globals_arg_value_71, tmp_locals_arg_value_71, tmp_fromlist_value_71, tmp_level_value_71);
        if (tmp_import_name_from_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 116;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_98)) {
            tmp_assign_source_110 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_98,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[405],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_110 = IMPORT_NAME(tmp_import_name_from_98, mod_consts[405]);
        }

        Py_DECREF(tmp_import_name_from_98);
        if (tmp_assign_source_110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 116;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[405], tmp_assign_source_110);
    }
    {
        PyObject *tmp_assign_source_111;
        PyObject *tmp_import_name_from_99;
        PyObject *tmp_name_value_72;
        PyObject *tmp_globals_arg_value_72;
        PyObject *tmp_locals_arg_value_72;
        PyObject *tmp_fromlist_value_72;
        PyObject *tmp_level_value_72;
        tmp_name_value_72 = mod_consts[642];
        tmp_globals_arg_value_72 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_72 = Py_None;
        tmp_fromlist_value_72 = mod_consts[643];
        tmp_level_value_72 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 117;
        tmp_import_name_from_99 = IMPORT_MODULE5(tmp_name_value_72, tmp_globals_arg_value_72, tmp_locals_arg_value_72, tmp_fromlist_value_72, tmp_level_value_72);
        if (tmp_import_name_from_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 117;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_99)) {
            tmp_assign_source_111 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_99,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[406],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_111 = IMPORT_NAME(tmp_import_name_from_99, mod_consts[406]);
        }

        Py_DECREF(tmp_import_name_from_99);
        if (tmp_assign_source_111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 117;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[406], tmp_assign_source_111);
    }
    {
        PyObject *tmp_assign_source_112;
        PyObject *tmp_import_name_from_100;
        PyObject *tmp_name_value_73;
        PyObject *tmp_globals_arg_value_73;
        PyObject *tmp_locals_arg_value_73;
        PyObject *tmp_fromlist_value_73;
        PyObject *tmp_level_value_73;
        tmp_name_value_73 = mod_consts[644];
        tmp_globals_arg_value_73 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_73 = Py_None;
        tmp_fromlist_value_73 = mod_consts[645];
        tmp_level_value_73 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 118;
        tmp_import_name_from_100 = IMPORT_MODULE5(tmp_name_value_73, tmp_globals_arg_value_73, tmp_locals_arg_value_73, tmp_fromlist_value_73, tmp_level_value_73);
        if (tmp_import_name_from_100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 118;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_100)) {
            tmp_assign_source_112 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_100,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[407],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_112 = IMPORT_NAME(tmp_import_name_from_100, mod_consts[407]);
        }

        Py_DECREF(tmp_import_name_from_100);
        if (tmp_assign_source_112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 118;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[407], tmp_assign_source_112);
    }
    {
        PyObject *tmp_assign_source_113;
        PyObject *tmp_import_name_from_101;
        PyObject *tmp_name_value_74;
        PyObject *tmp_globals_arg_value_74;
        PyObject *tmp_locals_arg_value_74;
        PyObject *tmp_fromlist_value_74;
        PyObject *tmp_level_value_74;
        tmp_name_value_74 = mod_consts[646];
        tmp_globals_arg_value_74 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_74 = Py_None;
        tmp_fromlist_value_74 = mod_consts[647];
        tmp_level_value_74 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 119;
        tmp_import_name_from_101 = IMPORT_MODULE5(tmp_name_value_74, tmp_globals_arg_value_74, tmp_locals_arg_value_74, tmp_fromlist_value_74, tmp_level_value_74);
        if (tmp_import_name_from_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 119;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_101)) {
            tmp_assign_source_113 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_101,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[408],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_113 = IMPORT_NAME(tmp_import_name_from_101, mod_consts[408]);
        }

        Py_DECREF(tmp_import_name_from_101);
        if (tmp_assign_source_113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 119;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[408], tmp_assign_source_113);
    }
    {
        PyObject *tmp_assign_source_114;
        PyObject *tmp_import_name_from_102;
        PyObject *tmp_name_value_75;
        PyObject *tmp_globals_arg_value_75;
        PyObject *tmp_locals_arg_value_75;
        PyObject *tmp_fromlist_value_75;
        PyObject *tmp_level_value_75;
        tmp_name_value_75 = mod_consts[648];
        tmp_globals_arg_value_75 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_75 = Py_None;
        tmp_fromlist_value_75 = mod_consts[649];
        tmp_level_value_75 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 120;
        tmp_import_name_from_102 = IMPORT_MODULE5(tmp_name_value_75, tmp_globals_arg_value_75, tmp_locals_arg_value_75, tmp_fromlist_value_75, tmp_level_value_75);
        if (tmp_import_name_from_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 120;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_102)) {
            tmp_assign_source_114 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_102,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[239],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_114 = IMPORT_NAME(tmp_import_name_from_102, mod_consts[239]);
        }

        Py_DECREF(tmp_import_name_from_102);
        if (tmp_assign_source_114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 120;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[239], tmp_assign_source_114);
    }
    {
        PyObject *tmp_assign_source_115;
        PyObject *tmp_import_name_from_103;
        PyObject *tmp_name_value_76;
        PyObject *tmp_globals_arg_value_76;
        PyObject *tmp_locals_arg_value_76;
        PyObject *tmp_fromlist_value_76;
        PyObject *tmp_level_value_76;
        tmp_name_value_76 = mod_consts[650];
        tmp_globals_arg_value_76 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_76 = Py_None;
        tmp_fromlist_value_76 = mod_consts[651];
        tmp_level_value_76 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 121;
        tmp_import_name_from_103 = IMPORT_MODULE5(tmp_name_value_76, tmp_globals_arg_value_76, tmp_locals_arg_value_76, tmp_fromlist_value_76, tmp_level_value_76);
        if (tmp_import_name_from_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 121;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_103)) {
            tmp_assign_source_115 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_103,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[409],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_115 = IMPORT_NAME(tmp_import_name_from_103, mod_consts[409]);
        }

        Py_DECREF(tmp_import_name_from_103);
        if (tmp_assign_source_115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 121;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[409], tmp_assign_source_115);
    }
    {
        PyObject *tmp_assign_source_116;
        PyObject *tmp_import_name_from_104;
        PyObject *tmp_name_value_77;
        PyObject *tmp_globals_arg_value_77;
        PyObject *tmp_locals_arg_value_77;
        PyObject *tmp_fromlist_value_77;
        PyObject *tmp_level_value_77;
        tmp_name_value_77 = mod_consts[652];
        tmp_globals_arg_value_77 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_77 = Py_None;
        tmp_fromlist_value_77 = mod_consts[653];
        tmp_level_value_77 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 122;
        tmp_import_name_from_104 = IMPORT_MODULE5(tmp_name_value_77, tmp_globals_arg_value_77, tmp_locals_arg_value_77, tmp_fromlist_value_77, tmp_level_value_77);
        if (tmp_import_name_from_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 122;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_104)) {
            tmp_assign_source_116 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_104,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[410],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_116 = IMPORT_NAME(tmp_import_name_from_104, mod_consts[410]);
        }

        Py_DECREF(tmp_import_name_from_104);
        if (tmp_assign_source_116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 122;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[410], tmp_assign_source_116);
    }
    {
        PyObject *tmp_assign_source_117;
        PyObject *tmp_import_name_from_105;
        PyObject *tmp_name_value_78;
        PyObject *tmp_globals_arg_value_78;
        PyObject *tmp_locals_arg_value_78;
        PyObject *tmp_fromlist_value_78;
        PyObject *tmp_level_value_78;
        tmp_name_value_78 = mod_consts[654];
        tmp_globals_arg_value_78 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_78 = Py_None;
        tmp_fromlist_value_78 = mod_consts[655];
        tmp_level_value_78 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 123;
        tmp_import_name_from_105 = IMPORT_MODULE5(tmp_name_value_78, tmp_globals_arg_value_78, tmp_locals_arg_value_78, tmp_fromlist_value_78, tmp_level_value_78);
        if (tmp_import_name_from_105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 123;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_105)) {
            tmp_assign_source_117 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_105,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[411],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_117 = IMPORT_NAME(tmp_import_name_from_105, mod_consts[411]);
        }

        Py_DECREF(tmp_import_name_from_105);
        if (tmp_assign_source_117 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 123;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[411], tmp_assign_source_117);
    }
    {
        PyObject *tmp_assign_source_118;
        PyObject *tmp_import_name_from_106;
        PyObject *tmp_name_value_79;
        PyObject *tmp_globals_arg_value_79;
        PyObject *tmp_locals_arg_value_79;
        PyObject *tmp_fromlist_value_79;
        PyObject *tmp_level_value_79;
        tmp_name_value_79 = mod_consts[656];
        tmp_globals_arg_value_79 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_79 = Py_None;
        tmp_fromlist_value_79 = mod_consts[657];
        tmp_level_value_79 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 124;
        tmp_import_name_from_106 = IMPORT_MODULE5(tmp_name_value_79, tmp_globals_arg_value_79, tmp_locals_arg_value_79, tmp_fromlist_value_79, tmp_level_value_79);
        if (tmp_import_name_from_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_106)) {
            tmp_assign_source_118 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_106,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[414],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_118 = IMPORT_NAME(tmp_import_name_from_106, mod_consts[414]);
        }

        Py_DECREF(tmp_import_name_from_106);
        if (tmp_assign_source_118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 124;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[414], tmp_assign_source_118);
    }
    {
        PyObject *tmp_assign_source_119;
        PyObject *tmp_import_name_from_107;
        PyObject *tmp_name_value_80;
        PyObject *tmp_globals_arg_value_80;
        PyObject *tmp_locals_arg_value_80;
        PyObject *tmp_fromlist_value_80;
        PyObject *tmp_level_value_80;
        tmp_name_value_80 = mod_consts[658];
        tmp_globals_arg_value_80 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_80 = Py_None;
        tmp_fromlist_value_80 = mod_consts[659];
        tmp_level_value_80 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 125;
        tmp_import_name_from_107 = IMPORT_MODULE5(tmp_name_value_80, tmp_globals_arg_value_80, tmp_locals_arg_value_80, tmp_fromlist_value_80, tmp_level_value_80);
        if (tmp_import_name_from_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 125;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_107)) {
            tmp_assign_source_119 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_107,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[415],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_119 = IMPORT_NAME(tmp_import_name_from_107, mod_consts[415]);
        }

        Py_DECREF(tmp_import_name_from_107);
        if (tmp_assign_source_119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 125;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[415], tmp_assign_source_119);
    }
    {
        PyObject *tmp_assign_source_120;
        PyObject *tmp_import_name_from_108;
        PyObject *tmp_name_value_81;
        PyObject *tmp_globals_arg_value_81;
        PyObject *tmp_locals_arg_value_81;
        PyObject *tmp_fromlist_value_81;
        PyObject *tmp_level_value_81;
        tmp_name_value_81 = mod_consts[660];
        tmp_globals_arg_value_81 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_81 = Py_None;
        tmp_fromlist_value_81 = mod_consts[661];
        tmp_level_value_81 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 126;
        tmp_import_name_from_108 = IMPORT_MODULE5(tmp_name_value_81, tmp_globals_arg_value_81, tmp_locals_arg_value_81, tmp_fromlist_value_81, tmp_level_value_81);
        if (tmp_import_name_from_108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 126;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_108)) {
            tmp_assign_source_120 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_108,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[416],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_120 = IMPORT_NAME(tmp_import_name_from_108, mod_consts[416]);
        }

        Py_DECREF(tmp_import_name_from_108);
        if (tmp_assign_source_120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 126;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[416], tmp_assign_source_120);
    }
    {
        PyObject *tmp_assign_source_121;
        PyObject *tmp_import_name_from_109;
        PyObject *tmp_name_value_82;
        PyObject *tmp_globals_arg_value_82;
        PyObject *tmp_locals_arg_value_82;
        PyObject *tmp_fromlist_value_82;
        PyObject *tmp_level_value_82;
        tmp_name_value_82 = mod_consts[662];
        tmp_globals_arg_value_82 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_82 = Py_None;
        tmp_fromlist_value_82 = mod_consts[663];
        tmp_level_value_82 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 127;
        tmp_import_name_from_109 = IMPORT_MODULE5(tmp_name_value_82, tmp_globals_arg_value_82, tmp_locals_arg_value_82, tmp_fromlist_value_82, tmp_level_value_82);
        if (tmp_import_name_from_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 127;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_109)) {
            tmp_assign_source_121 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_109,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[273],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_121 = IMPORT_NAME(tmp_import_name_from_109, mod_consts[273]);
        }

        Py_DECREF(tmp_import_name_from_109);
        if (tmp_assign_source_121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 127;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[273], tmp_assign_source_121);
    }
    {
        PyObject *tmp_assign_source_122;
        PyObject *tmp_import_name_from_110;
        PyObject *tmp_name_value_83;
        PyObject *tmp_globals_arg_value_83;
        PyObject *tmp_locals_arg_value_83;
        PyObject *tmp_fromlist_value_83;
        PyObject *tmp_level_value_83;
        tmp_name_value_83 = mod_consts[664];
        tmp_globals_arg_value_83 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_83 = Py_None;
        tmp_fromlist_value_83 = mod_consts[665];
        tmp_level_value_83 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 128;
        tmp_import_name_from_110 = IMPORT_MODULE5(tmp_name_value_83, tmp_globals_arg_value_83, tmp_locals_arg_value_83, tmp_fromlist_value_83, tmp_level_value_83);
        if (tmp_import_name_from_110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 128;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_110)) {
            tmp_assign_source_122 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_110,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[274],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_122 = IMPORT_NAME(tmp_import_name_from_110, mod_consts[274]);
        }

        Py_DECREF(tmp_import_name_from_110);
        if (tmp_assign_source_122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 128;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[274], tmp_assign_source_122);
    }
    {
        PyObject *tmp_assign_source_123;
        PyObject *tmp_import_name_from_111;
        PyObject *tmp_name_value_84;
        PyObject *tmp_globals_arg_value_84;
        PyObject *tmp_locals_arg_value_84;
        PyObject *tmp_fromlist_value_84;
        PyObject *tmp_level_value_84;
        tmp_name_value_84 = mod_consts[666];
        tmp_globals_arg_value_84 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_84 = Py_None;
        tmp_fromlist_value_84 = mod_consts[667];
        tmp_level_value_84 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 129;
        tmp_import_name_from_111 = IMPORT_MODULE5(tmp_name_value_84, tmp_globals_arg_value_84, tmp_locals_arg_value_84, tmp_fromlist_value_84, tmp_level_value_84);
        if (tmp_import_name_from_111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 129;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_111)) {
            tmp_assign_source_123 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_111,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[364],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_123 = IMPORT_NAME(tmp_import_name_from_111, mod_consts[364]);
        }

        Py_DECREF(tmp_import_name_from_111);
        if (tmp_assign_source_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 129;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[364], tmp_assign_source_123);
    }
    {
        PyObject *tmp_assign_source_124;
        PyObject *tmp_import_name_from_112;
        PyObject *tmp_name_value_85;
        PyObject *tmp_globals_arg_value_85;
        PyObject *tmp_locals_arg_value_85;
        PyObject *tmp_fromlist_value_85;
        PyObject *tmp_level_value_85;
        tmp_name_value_85 = mod_consts[668];
        tmp_globals_arg_value_85 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_85 = Py_None;
        tmp_fromlist_value_85 = mod_consts[669];
        tmp_level_value_85 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 130;
        tmp_import_name_from_112 = IMPORT_MODULE5(tmp_name_value_85, tmp_globals_arg_value_85, tmp_locals_arg_value_85, tmp_fromlist_value_85, tmp_level_value_85);
        if (tmp_import_name_from_112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 130;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_112)) {
            tmp_assign_source_124 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_112,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[222],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_124 = IMPORT_NAME(tmp_import_name_from_112, mod_consts[222]);
        }

        Py_DECREF(tmp_import_name_from_112);
        if (tmp_assign_source_124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 130;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[222], tmp_assign_source_124);
    }
    {
        PyObject *tmp_assign_source_125;
        PyObject *tmp_import_name_from_113;
        PyObject *tmp_name_value_86;
        PyObject *tmp_globals_arg_value_86;
        PyObject *tmp_locals_arg_value_86;
        PyObject *tmp_fromlist_value_86;
        PyObject *tmp_level_value_86;
        tmp_name_value_86 = mod_consts[670];
        tmp_globals_arg_value_86 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_86 = Py_None;
        tmp_fromlist_value_86 = mod_consts[671];
        tmp_level_value_86 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 131;
        tmp_import_name_from_113 = IMPORT_MODULE5(tmp_name_value_86, tmp_globals_arg_value_86, tmp_locals_arg_value_86, tmp_fromlist_value_86, tmp_level_value_86);
        if (tmp_import_name_from_113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 131;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_113)) {
            tmp_assign_source_125 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_113,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[223],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_125 = IMPORT_NAME(tmp_import_name_from_113, mod_consts[223]);
        }

        Py_DECREF(tmp_import_name_from_113);
        if (tmp_assign_source_125 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 131;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[223], tmp_assign_source_125);
    }
    {
        PyObject *tmp_assign_source_126;
        PyObject *tmp_import_name_from_114;
        PyObject *tmp_name_value_87;
        PyObject *tmp_globals_arg_value_87;
        PyObject *tmp_locals_arg_value_87;
        PyObject *tmp_fromlist_value_87;
        PyObject *tmp_level_value_87;
        tmp_name_value_87 = mod_consts[672];
        tmp_globals_arg_value_87 = (PyObject *)moduledict_youtube_dl$extractor$generic;
        tmp_locals_arg_value_87 = Py_None;
        tmp_fromlist_value_87 = mod_consts[673];
        tmp_level_value_87 = mod_consts[502];
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 132;
        tmp_import_name_from_114 = IMPORT_MODULE5(tmp_name_value_87, tmp_globals_arg_value_87, tmp_locals_arg_value_87, tmp_fromlist_value_87, tmp_level_value_87);
        if (tmp_import_name_from_114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 132;

            goto frame_exception_exit_1;
        }
        if (PyModule_Check(tmp_import_name_from_114)) {
            tmp_assign_source_126 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_114,
                (PyObject *)moduledict_youtube_dl$extractor$generic,
                mod_consts[285],
                mod_consts[28]
            );
        } else {
            tmp_assign_source_126 = IMPORT_NAME(tmp_import_name_from_114, mod_consts[285]);
        }

        Py_DECREF(tmp_import_name_from_114);
        if (tmp_assign_source_126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 132;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[285], tmp_assign_source_126);
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_127;
        PyObject *tmp_tuple_element_1;
        tmp_tuple_element_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[503]);

        if (unlikely(tmp_tuple_element_1 == NULL)) {
            tmp_tuple_element_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[503]);
        }

        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_6;
        }
        tmp_assign_source_127 = MAKE_TUPLE_EMPTY(1);
        PyTuple_SET_ITEM0(tmp_assign_source_127, 0, tmp_tuple_element_1);
        assert(tmp_class_creation_1__bases_orig == NULL);
        tmp_class_creation_1__bases_orig = tmp_assign_source_127;
    }
    {
        PyObject *tmp_assign_source_128;
        PyObject *tmp_dircall_arg1_1;
        CHECK_OBJECT(tmp_class_creation_1__bases_orig);
        tmp_dircall_arg1_1 = tmp_class_creation_1__bases_orig;
        Py_INCREF(tmp_dircall_arg1_1);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_1};
            tmp_assign_source_128 = impl___main__$$$function__3__mro_entries_conversion(dir_call_args);
        }
        if (tmp_assign_source_128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_6;
        }
        assert(tmp_class_creation_1__bases == NULL);
        tmp_class_creation_1__bases = tmp_assign_source_128;
    }
    {
        PyObject *tmp_assign_source_129;
        tmp_assign_source_129 = MAKE_DICT_EMPTY();
        assert(tmp_class_creation_1__class_decl_dict == NULL);
        tmp_class_creation_1__class_decl_dict = tmp_assign_source_129;
    }
    {
        PyObject *tmp_assign_source_130;
        PyObject *tmp_metaclass_value_1;
        bool tmp_condition_result_1;
        PyObject *tmp_key_value_1;
        PyObject *tmp_dict_arg_value_1;
        PyObject *tmp_dict_arg_value_2;
        PyObject *tmp_key_value_2;
        nuitka_bool tmp_condition_result_2;
        int tmp_truth_name_1;
        PyObject *tmp_type_arg_1;
        PyObject *tmp_expression_value_1;
        PyObject *tmp_subscript_value_1;
        PyObject *tmp_bases_value_1;
        tmp_key_value_1 = mod_consts[674];
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dict_arg_value_1 = tmp_class_creation_1__class_decl_dict;
        tmp_res = DICT_HAS_ITEM(tmp_dict_arg_value_1, tmp_key_value_1);
        assert(!(tmp_res == -1));
        tmp_condition_result_1 = (tmp_res != 0) ? true : false;
        if (tmp_condition_result_1 != false) {
            goto condexpr_true_1;
        } else {
            goto condexpr_false_1;
        }
        condexpr_true_1:;
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dict_arg_value_2 = tmp_class_creation_1__class_decl_dict;
        tmp_key_value_2 = mod_consts[674];
        tmp_metaclass_value_1 = DICT_GET_ITEM0(tmp_dict_arg_value_2, tmp_key_value_2);
        if (tmp_metaclass_value_1 == NULL) {
            tmp_metaclass_value_1 = Py_None;
        }
        assert(!(tmp_metaclass_value_1 == NULL));
        Py_INCREF(tmp_metaclass_value_1);
        goto condexpr_end_1;
        condexpr_false_1:;
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_class_creation_1__bases);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_6;
        }
        tmp_condition_result_2 = tmp_truth_name_1 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto condexpr_true_2;
        } else {
            goto condexpr_false_2;
        }
        condexpr_true_2:;
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_expression_value_1 = tmp_class_creation_1__bases;
        tmp_subscript_value_1 = mod_consts[28];
        tmp_type_arg_1 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_value_1, tmp_subscript_value_1, 0);
        if (tmp_type_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_6;
        }
        tmp_metaclass_value_1 = BUILTIN_TYPE1(tmp_type_arg_1);
        Py_DECREF(tmp_type_arg_1);
        if (tmp_metaclass_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_6;
        }
        goto condexpr_end_2;
        condexpr_false_2:;
        tmp_metaclass_value_1 = (PyObject *)&PyType_Type;
        Py_INCREF(tmp_metaclass_value_1);
        condexpr_end_2:;
        condexpr_end_1:;
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_bases_value_1 = tmp_class_creation_1__bases;
        tmp_assign_source_130 = SELECT_METACLASS(tmp_metaclass_value_1, tmp_bases_value_1);
        Py_DECREF(tmp_metaclass_value_1);
        if (tmp_assign_source_130 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_6;
        }
        assert(tmp_class_creation_1__metaclass == NULL);
        tmp_class_creation_1__metaclass = tmp_assign_source_130;
    }
    {
        bool tmp_condition_result_3;
        PyObject *tmp_key_value_3;
        PyObject *tmp_dict_arg_value_3;
        tmp_key_value_3 = mod_consts[674];
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_dict_arg_value_3 = tmp_class_creation_1__class_decl_dict;
        tmp_res = DICT_HAS_ITEM(tmp_dict_arg_value_3, tmp_key_value_3);
        assert(!(tmp_res == -1));
        tmp_condition_result_3 = (tmp_res != 0) ? true : false;
        if (tmp_condition_result_3 != false) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
    tmp_dictdel_dict = tmp_class_creation_1__class_decl_dict;
    tmp_dictdel_key = mod_consts[674];
    tmp_result = DICT_REMOVE_ITEM(tmp_dictdel_dict, tmp_dictdel_key);
    if (tmp_result == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 135;

        goto try_except_handler_6;
    }
    branch_no_1:;
    {
        nuitka_bool tmp_condition_result_4;
        PyObject *tmp_expression_value_2;
        CHECK_OBJECT(tmp_class_creation_1__metaclass);
        tmp_expression_value_2 = tmp_class_creation_1__metaclass;
        tmp_result = HAS_ATTR_BOOL(tmp_expression_value_2, mod_consts[675]);
        tmp_condition_result_4 = (tmp_result) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_4 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    {
        PyObject *tmp_assign_source_131;
        PyObject *tmp_called_value_1;
        PyObject *tmp_expression_value_3;
        PyObject *tmp_args_value_1;
        PyObject *tmp_tuple_element_2;
        PyObject *tmp_kwargs_value_1;
        CHECK_OBJECT(tmp_class_creation_1__metaclass);
        tmp_expression_value_3 = tmp_class_creation_1__metaclass;
        tmp_called_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_3, mod_consts[675]);
        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_6;
        }
        tmp_tuple_element_2 = mod_consts[480];
        tmp_args_value_1 = MAKE_TUPLE_EMPTY(2);
        PyTuple_SET_ITEM0(tmp_args_value_1, 0, tmp_tuple_element_2);
        CHECK_OBJECT(tmp_class_creation_1__bases);
        tmp_tuple_element_2 = tmp_class_creation_1__bases;
        PyTuple_SET_ITEM0(tmp_args_value_1, 1, tmp_tuple_element_2);
        CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
        tmp_kwargs_value_1 = tmp_class_creation_1__class_decl_dict;
        frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 135;
        tmp_assign_source_131 = CALL_FUNCTION(tmp_called_value_1, tmp_args_value_1, tmp_kwargs_value_1);
        Py_DECREF(tmp_called_value_1);
        Py_DECREF(tmp_args_value_1);
        if (tmp_assign_source_131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_6;
        }
        assert(tmp_class_creation_1__prepared == NULL);
        tmp_class_creation_1__prepared = tmp_assign_source_131;
    }
    {
        bool tmp_condition_result_5;
        PyObject *tmp_operand_value_1;
        PyObject *tmp_expression_value_4;
        CHECK_OBJECT(tmp_class_creation_1__prepared);
        tmp_expression_value_4 = tmp_class_creation_1__prepared;
        tmp_result = HAS_ATTR_BOOL(tmp_expression_value_4, mod_consts[676]);
        tmp_operand_value_1 = (tmp_result) ? Py_True : Py_False;
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_6;
        }
        tmp_condition_result_5 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_5 != false) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
    }
    branch_yes_3:;
    {
        PyObject *tmp_raise_type_1;
        PyObject *tmp_raise_value_1;
        PyObject *tmp_mod_expr_left_1;
        PyObject *tmp_mod_expr_right_1;
        PyObject *tmp_tuple_element_3;
        PyObject *tmp_getattr_target_1;
        PyObject *tmp_getattr_attr_1;
        PyObject *tmp_getattr_default_1;
        tmp_raise_type_1 = PyExc_TypeError;
        tmp_mod_expr_left_1 = mod_consts[677];
        CHECK_OBJECT(tmp_class_creation_1__metaclass);
        tmp_getattr_target_1 = tmp_class_creation_1__metaclass;
        tmp_getattr_attr_1 = mod_consts[678];
        tmp_getattr_default_1 = mod_consts[679];
        tmp_tuple_element_3 = BUILTIN_GETATTR(tmp_getattr_target_1, tmp_getattr_attr_1, tmp_getattr_default_1);
        if (tmp_tuple_element_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_6;
        }
        tmp_mod_expr_right_1 = MAKE_TUPLE_EMPTY(2);
        {
            PyObject *tmp_expression_value_5;
            PyObject *tmp_type_arg_2;
            PyTuple_SET_ITEM(tmp_mod_expr_right_1, 0, tmp_tuple_element_3);
            CHECK_OBJECT(tmp_class_creation_1__prepared);
            tmp_type_arg_2 = tmp_class_creation_1__prepared;
            tmp_expression_value_5 = BUILTIN_TYPE1(tmp_type_arg_2);
            assert(!(tmp_expression_value_5 == NULL));
            tmp_tuple_element_3 = LOOKUP_ATTRIBUTE(tmp_expression_value_5, mod_consts[678]);
            Py_DECREF(tmp_expression_value_5);
            if (tmp_tuple_element_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 135;

                goto tuple_build_exception_1;
            }
            PyTuple_SET_ITEM(tmp_mod_expr_right_1, 1, tmp_tuple_element_3);
        }
        goto tuple_build_noexception_1;
        // Exception handling pass through code for tuple_build:
        tuple_build_exception_1:;
        Py_DECREF(tmp_mod_expr_right_1);
        goto try_except_handler_6;
        // Finished with no exception for tuple_build:
        tuple_build_noexception_1:;
        tmp_raise_value_1 = BINARY_OPERATION_MOD_OBJECT_UNICODE_TUPLE(tmp_mod_expr_left_1, tmp_mod_expr_right_1);
        Py_DECREF(tmp_mod_expr_right_1);
        if (tmp_raise_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_6;
        }
        exception_type = tmp_raise_type_1;
        Py_INCREF(tmp_raise_type_1);
        exception_value = tmp_raise_value_1;
        exception_lineno = 135;
        RAISE_EXCEPTION_IMPLICIT(&exception_type, &exception_value, &exception_tb);

        goto try_except_handler_6;
    }
    branch_no_3:;
    goto branch_end_2;
    branch_no_2:;
    {
        PyObject *tmp_assign_source_132;
        tmp_assign_source_132 = MAKE_DICT_EMPTY();
        assert(tmp_class_creation_1__prepared == NULL);
        tmp_class_creation_1__prepared = tmp_assign_source_132;
    }
    branch_end_2:;
    {
        PyObject *tmp_assign_source_133;
        {
            PyObject *tmp_set_locals_1;
            CHECK_OBJECT(tmp_class_creation_1__prepared);
            tmp_set_locals_1 = tmp_class_creation_1__prepared;
            locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135 = tmp_set_locals_1;
            Py_INCREF(tmp_set_locals_1);
        }
        // Tried code:
        // Tried code:
        tmp_dictset_value = mod_consts[680];
        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[681], tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_8;
        }
        tmp_dictset_value = mod_consts[480];
        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[682], tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_8;
        }
        if (isFrameUnusable(cache_frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2)) {
            Py_XDECREF(cache_frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2);

#if _DEBUG_REFCOUNTS
            if (cache_frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2 == NULL) {
                count_active_frame_cache_instances += 1;
            } else {
                count_released_frame_cache_instances += 1;
            }
            count_allocated_frame_cache_instances += 1;
#endif
            cache_frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2 = MAKE_CLASS_FRAME(codeobj_ba5b9723ae0cbe5b8efd735840f2dbfe, module_youtube_dl$extractor$generic, NULL, sizeof(void *));
#if _DEBUG_REFCOUNTS
        } else {
            count_hit_frame_cache_instances += 1;
#endif
        }
        assert(cache_frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_type_description == NULL);
        frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2 = cache_frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2;


        // Push the new frame as the currently active one.
        pushFrameStack(frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2) == 2); // Frame stack

        // Framed code:
        tmp_dictset_value = mod_consts[683];
        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[684], tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 136;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }
        tmp_dictset_value = mod_consts[685];
        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[686], tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 137;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }
        tmp_dictset_value = mod_consts[687];
        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[688], tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 138;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }
        {
            PyObject *tmp_list_element_1;
            tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[689]);
            tmp_dictset_value = MAKE_LIST_EMPTY(151);
            {
                PyObject *tmp_dict_key_1;
                PyObject *tmp_dict_value_1;
                PyObject *tmp_dict_key_4;
                PyObject *tmp_dict_value_4;
                PyObject *tmp_dict_key_5;
                PyObject *tmp_dict_value_5;
                PyObject *tmp_dict_key_7;
                PyObject *tmp_dict_value_7;
                PyObject *tmp_dict_key_9;
                PyObject *tmp_dict_value_9;
                PyObject *tmp_dict_key_11;
                PyObject *tmp_dict_value_11;
                PyObject *tmp_dict_key_12;
                PyObject *tmp_dict_value_12;
                PyObject *tmp_dict_key_13;
                PyObject *tmp_dict_value_13;
                PyObject *tmp_dict_key_14;
                PyObject *tmp_dict_value_14;
                PyObject *tmp_dict_key_15;
                PyObject *tmp_dict_value_15;
                PyObject *tmp_dict_key_16;
                PyObject *tmp_dict_value_16;
                PyObject *tmp_dict_key_17;
                PyObject *tmp_dict_value_17;
                PyObject *tmp_dict_key_18;
                PyObject *tmp_dict_value_18;
                PyObject *tmp_dict_key_19;
                PyObject *tmp_dict_value_19;
                PyObject *tmp_dict_key_20;
                PyObject *tmp_dict_value_20;
                PyObject *tmp_dict_key_21;
                PyObject *tmp_dict_value_21;
                PyObject *tmp_dict_key_22;
                PyObject *tmp_dict_value_22;
                PyObject *tmp_dict_key_23;
                PyObject *tmp_dict_value_23;
                PyList_SET_ITEM(tmp_dictset_value, 0, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[690]);
                PyList_SET_ITEM(tmp_dictset_value, 1, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[691]);
                PyList_SET_ITEM(tmp_dictset_value, 2, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[692]);
                PyList_SET_ITEM(tmp_dictset_value, 3, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[693]);
                PyList_SET_ITEM(tmp_dictset_value, 4, tmp_list_element_1);
                tmp_dict_key_1 = mod_consts[33];
                tmp_dict_value_1 = mod_consts[694];
                tmp_list_element_1 = _PyDict_NewPresized( 3 );
                {
                    PyObject *tmp_list_element_2;
                    PyObject *tmp_dict_key_2;
                    PyObject *tmp_dict_value_2;
                    PyObject *tmp_dict_key_3;
                    PyObject *tmp_dict_value_3;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_1, tmp_dict_value_1);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_1 = mod_consts[152];
                    tmp_dict_value_1 = DICT_COPY(mod_consts[695]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_1, tmp_dict_value_1);
                    Py_DECREF(tmp_dict_value_1);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_1 = mod_consts[57];
                    tmp_dict_key_2 = mod_consts[152];
                    tmp_dict_key_3 = mod_consts[442];
                    tmp_dict_value_3 = mod_consts[696];
                    tmp_dict_value_2 = _PyDict_NewPresized( 7 );
                    tmp_res = PyDict_SetItem(tmp_dict_value_2, tmp_dict_key_3, tmp_dict_value_3);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_3 = mod_consts[58];
                    tmp_dict_value_3 = mod_consts[697];
                    tmp_res = PyDict_SetItem(tmp_dict_value_2, tmp_dict_key_3, tmp_dict_value_3);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_3 = mod_consts[34];
                    tmp_dict_value_3 = mod_consts[698];
                    tmp_res = PyDict_SetItem(tmp_dict_value_2, tmp_dict_key_3, tmp_dict_value_3);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_3 = mod_consts[36];
                    tmp_dict_value_3 = mod_consts[699];
                    tmp_res = PyDict_SetItem(tmp_dict_value_2, tmp_dict_key_3, tmp_dict_value_3);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_3 = mod_consts[38];
                    tmp_dict_value_3 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[700]);

                    if (tmp_dict_value_3 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_dict_value_3 = (PyObject *)&PyLong_Type;
                            Py_INCREF(tmp_dict_value_3);
                        } else {
                            goto dict_build_exception_2;
                        }
                    }

                    tmp_res = PyDict_SetItem(tmp_dict_value_2, tmp_dict_key_3, tmp_dict_value_3);
                    Py_DECREF(tmp_dict_value_3);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_3 = mod_consts[701];
                    tmp_dict_value_3 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[136]);

                    if (tmp_dict_value_3 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_dict_value_3 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[136]);

                            if (unlikely(tmp_dict_value_3 == NULL)) {
                                tmp_dict_value_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[136]);
                            }

                            if (tmp_dict_value_3 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 222;
                                type_description_2 = "o";
                                goto dict_build_exception_2;
                            }
                            Py_INCREF(tmp_dict_value_3);
                        } else {
                            goto dict_build_exception_2;
                        }
                    }

                    tmp_res = PyDict_SetItem(tmp_dict_value_2, tmp_dict_key_3, tmp_dict_value_3);
                    Py_DECREF(tmp_dict_value_3);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_3 = mod_consts[41];
                    tmp_dict_value_3 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[702]);

                    if (tmp_dict_value_3 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_dict_value_3 = (PyObject *)&PyFloat_Type;
                            Py_INCREF(tmp_dict_value_3);
                        } else {
                            goto dict_build_exception_2;
                        }
                    }

                    tmp_res = PyDict_SetItem(tmp_dict_value_2, tmp_dict_key_3, tmp_dict_value_3);
                    Py_DECREF(tmp_dict_value_3);
                    assert(!(tmp_res != 0));
                    goto dict_build_noexception_1;
                    // Exception handling pass through code for dict_build:
                    dict_build_exception_2:;
                    Py_DECREF(tmp_dict_value_2);
                    goto dict_build_exception_1;
                    // Finished with no exception for dict_build:
                    dict_build_noexception_1:;
                    tmp_list_element_2 = _PyDict_NewPresized( 1 );
                    tmp_res = PyDict_SetItem(tmp_list_element_2, tmp_dict_key_2, tmp_dict_value_2);
                    Py_DECREF(tmp_dict_value_2);
                    assert(!(tmp_res != 0));
                    tmp_dict_value_1 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_1, 0, tmp_list_element_2);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_1, tmp_dict_value_1);
                    Py_DECREF(tmp_dict_value_1);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_2;
                // Exception handling pass through code for dict_build:
                dict_build_exception_1:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_2:;
                PyList_SET_ITEM(tmp_dictset_value, 5, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[703]);
                PyList_SET_ITEM(tmp_dictset_value, 6, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[704]);
                PyList_SET_ITEM(tmp_dictset_value, 7, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[705]);
                PyList_SET_ITEM(tmp_dictset_value, 8, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[706]);
                PyList_SET_ITEM(tmp_dictset_value, 9, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[707]);
                PyList_SET_ITEM(tmp_dictset_value, 10, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[708]);
                PyList_SET_ITEM(tmp_dictset_value, 11, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[709]);
                PyList_SET_ITEM(tmp_dictset_value, 12, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[710]);
                PyList_SET_ITEM(tmp_dictset_value, 13, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[711]);
                PyList_SET_ITEM(tmp_dictset_value, 14, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[712]);
                PyList_SET_ITEM(tmp_dictset_value, 15, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[713]);
                PyList_SET_ITEM(tmp_dictset_value, 16, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[714]);
                PyList_SET_ITEM(tmp_dictset_value, 17, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[715]);
                PyList_SET_ITEM(tmp_dictset_value, 18, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[716]);
                PyList_SET_ITEM(tmp_dictset_value, 19, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[717]);
                PyList_SET_ITEM(tmp_dictset_value, 20, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[718]);
                PyList_SET_ITEM(tmp_dictset_value, 21, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[719]);
                PyList_SET_ITEM(tmp_dictset_value, 22, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[720]);
                PyList_SET_ITEM(tmp_dictset_value, 23, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[721]);
                PyList_SET_ITEM(tmp_dictset_value, 24, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[722]);
                PyList_SET_ITEM(tmp_dictset_value, 25, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[723]);
                PyList_SET_ITEM(tmp_dictset_value, 26, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[724]);
                PyList_SET_ITEM(tmp_dictset_value, 27, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[725]);
                PyList_SET_ITEM(tmp_dictset_value, 28, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[726]);
                PyList_SET_ITEM(tmp_dictset_value, 29, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[727]);
                PyList_SET_ITEM(tmp_dictset_value, 30, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[728]);
                PyList_SET_ITEM(tmp_dictset_value, 31, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[729]);
                PyList_SET_ITEM(tmp_dictset_value, 32, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[730]);
                PyList_SET_ITEM(tmp_dictset_value, 33, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[731]);
                PyList_SET_ITEM(tmp_dictset_value, 34, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[732]);
                PyList_SET_ITEM(tmp_dictset_value, 35, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[733]);
                PyList_SET_ITEM(tmp_dictset_value, 36, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[734]);
                PyList_SET_ITEM(tmp_dictset_value, 37, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[735]);
                PyList_SET_ITEM(tmp_dictset_value, 38, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[736]);
                PyList_SET_ITEM(tmp_dictset_value, 39, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[737]);
                PyList_SET_ITEM(tmp_dictset_value, 40, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[738]);
                PyList_SET_ITEM(tmp_dictset_value, 41, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[739]);
                PyList_SET_ITEM(tmp_dictset_value, 42, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[740]);
                PyList_SET_ITEM(tmp_dictset_value, 43, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[741]);
                PyList_SET_ITEM(tmp_dictset_value, 44, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[742]);
                PyList_SET_ITEM(tmp_dictset_value, 45, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[743]);
                PyList_SET_ITEM(tmp_dictset_value, 46, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[744]);
                PyList_SET_ITEM(tmp_dictset_value, 47, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[745]);
                PyList_SET_ITEM(tmp_dictset_value, 48, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[746]);
                PyList_SET_ITEM(tmp_dictset_value, 49, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[747]);
                PyList_SET_ITEM(tmp_dictset_value, 50, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[748]);
                PyList_SET_ITEM(tmp_dictset_value, 51, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[749]);
                PyList_SET_ITEM(tmp_dictset_value, 52, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[750]);
                PyList_SET_ITEM(tmp_dictset_value, 53, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[751]);
                PyList_SET_ITEM(tmp_dictset_value, 54, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[752]);
                PyList_SET_ITEM(tmp_dictset_value, 55, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[753]);
                PyList_SET_ITEM(tmp_dictset_value, 56, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[754]);
                PyList_SET_ITEM(tmp_dictset_value, 57, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[755]);
                PyList_SET_ITEM(tmp_dictset_value, 58, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[756]);
                PyList_SET_ITEM(tmp_dictset_value, 59, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[757]);
                PyList_SET_ITEM(tmp_dictset_value, 60, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[758]);
                PyList_SET_ITEM(tmp_dictset_value, 61, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[759]);
                PyList_SET_ITEM(tmp_dictset_value, 62, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[760]);
                PyList_SET_ITEM(tmp_dictset_value, 63, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[761]);
                PyList_SET_ITEM(tmp_dictset_value, 64, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[762]);
                PyList_SET_ITEM(tmp_dictset_value, 65, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[763]);
                PyList_SET_ITEM(tmp_dictset_value, 66, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[764]);
                PyList_SET_ITEM(tmp_dictset_value, 67, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[765]);
                PyList_SET_ITEM(tmp_dictset_value, 68, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[766]);
                PyList_SET_ITEM(tmp_dictset_value, 69, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[767]);
                PyList_SET_ITEM(tmp_dictset_value, 70, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[768]);
                PyList_SET_ITEM(tmp_dictset_value, 71, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[769]);
                PyList_SET_ITEM(tmp_dictset_value, 72, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[770]);
                PyList_SET_ITEM(tmp_dictset_value, 73, tmp_list_element_1);
                tmp_dict_key_4 = mod_consts[33];
                tmp_dict_value_4 = mod_consts[771];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_list_element_3;
                    PyObject *tmp_called_instance_1;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_4, tmp_dict_value_4);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_4 = mod_consts[772];
                    tmp_dict_value_4 = mod_consts[773];
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_4, tmp_dict_value_4);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_4 = mod_consts[152];
                    tmp_dict_value_4 = DICT_COPY(mod_consts[774]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_4, tmp_dict_value_4);
                    Py_DECREF(tmp_dict_value_4);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_4 = mod_consts[775];
                    tmp_called_instance_1 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[367]);

                    if (tmp_called_instance_1 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_1 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[367]);

                            if (unlikely(tmp_called_instance_1 == NULL)) {
                                tmp_called_instance_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[367]);
                            }

                            if (tmp_called_instance_1 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1224;
                                type_description_2 = "o";
                                goto dict_build_exception_3;
                            }
                            Py_INCREF(tmp_called_instance_1);
                        } else {
                            goto dict_build_exception_3;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 1224;
                    tmp_list_element_3 = CALL_METHOD_NO_ARGS(tmp_called_instance_1, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_1);
                    if (tmp_list_element_3 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1224;
                        type_description_2 = "o";
                        goto dict_build_exception_3;
                    }
                    tmp_dict_value_4 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_4, 0, tmp_list_element_3);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_4, tmp_dict_value_4);
                    Py_DECREF(tmp_dict_value_4);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_3;
                // Exception handling pass through code for dict_build:
                dict_build_exception_3:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_3:;
                PyList_SET_ITEM(tmp_dictset_value, 74, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[776]);
                PyList_SET_ITEM(tmp_dictset_value, 75, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[777]);
                PyList_SET_ITEM(tmp_dictset_value, 76, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[778]);
                PyList_SET_ITEM(tmp_dictset_value, 77, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[779]);
                PyList_SET_ITEM(tmp_dictset_value, 78, tmp_list_element_1);
                tmp_dict_key_5 = mod_consts[33];
                tmp_dict_value_5 = mod_consts[780];
                tmp_list_element_1 = _PyDict_NewPresized( 2 );
                {
                    PyObject *tmp_dict_key_6;
                    PyObject *tmp_dict_value_6;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_5, tmp_dict_value_5);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_5 = mod_consts[152];
                    tmp_dict_key_6 = mod_consts[58];
                    tmp_dict_value_6 = mod_consts[781];
                    tmp_dict_value_5 = _PyDict_NewPresized( 6 );
                    tmp_res = PyDict_SetItem(tmp_dict_value_5, tmp_dict_key_6, tmp_dict_value_6);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_6 = mod_consts[442];
                    tmp_dict_value_6 = mod_consts[782];
                    tmp_res = PyDict_SetItem(tmp_dict_value_5, tmp_dict_key_6, tmp_dict_value_6);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_6 = mod_consts[701];
                    tmp_dict_value_6 = mod_consts[783];
                    tmp_res = PyDict_SetItem(tmp_dict_value_5, tmp_dict_key_6, tmp_dict_value_6);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_6 = mod_consts[784];
                    tmp_dict_value_6 = mod_consts[785];
                    tmp_res = PyDict_SetItem(tmp_dict_value_5, tmp_dict_key_6, tmp_dict_value_6);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_6 = mod_consts[38];
                    tmp_dict_value_6 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[700]);

                    if (tmp_dict_value_6 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_dict_value_6 = (PyObject *)&PyLong_Type;
                            Py_INCREF(tmp_dict_value_6);
                        } else {
                            goto list_build_exception_1;
                        }
                    }

                    tmp_res = PyDict_SetItem(tmp_dict_value_5, tmp_dict_key_6, tmp_dict_value_6);
                    Py_DECREF(tmp_dict_value_6);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_6 = mod_consts[34];
                    tmp_dict_value_6 = mod_consts[786];
                    tmp_res = PyDict_SetItem(tmp_dict_value_5, tmp_dict_key_6, tmp_dict_value_6);
                    assert(!(tmp_res != 0));
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_5, tmp_dict_value_5);
                    Py_DECREF(tmp_dict_value_5);
                    assert(!(tmp_res != 0));
                }
                PyList_SET_ITEM(tmp_dictset_value, 79, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[787]);
                PyList_SET_ITEM(tmp_dictset_value, 80, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[788]);
                PyList_SET_ITEM(tmp_dictset_value, 81, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[789]);
                PyList_SET_ITEM(tmp_dictset_value, 82, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[790]);
                PyList_SET_ITEM(tmp_dictset_value, 83, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[791]);
                PyList_SET_ITEM(tmp_dictset_value, 84, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[792]);
                PyList_SET_ITEM(tmp_dictset_value, 85, tmp_list_element_1);
                tmp_dict_key_7 = mod_consts[33];
                tmp_dict_value_7 = mod_consts[793];
                tmp_list_element_1 = _PyDict_NewPresized( 3 );
                {
                    PyObject *tmp_dict_key_8;
                    PyObject *tmp_dict_value_8;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_7, tmp_dict_value_7);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_7 = mod_consts[152];
                    tmp_dict_key_8 = mod_consts[58];
                    tmp_dict_value_8 = mod_consts[794];
                    tmp_dict_value_7 = _PyDict_NewPresized( 6 );
                    tmp_res = PyDict_SetItem(tmp_dict_value_7, tmp_dict_key_8, tmp_dict_value_8);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_8 = mod_consts[442];
                    tmp_dict_value_8 = mod_consts[142];
                    tmp_res = PyDict_SetItem(tmp_dict_value_7, tmp_dict_key_8, tmp_dict_value_8);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_8 = mod_consts[34];
                    tmp_dict_value_8 = mod_consts[795];
                    tmp_res = PyDict_SetItem(tmp_dict_value_7, tmp_dict_key_8, tmp_dict_value_8);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_8 = mod_consts[44];
                    tmp_dict_value_8 = mod_consts[796];
                    tmp_res = PyDict_SetItem(tmp_dict_value_7, tmp_dict_key_8, tmp_dict_value_8);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_8 = mod_consts[41];
                    tmp_dict_value_8 = mod_consts[797];
                    tmp_res = PyDict_SetItem(tmp_dict_value_7, tmp_dict_key_8, tmp_dict_value_8);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_8 = mod_consts[798];
                    tmp_dict_value_8 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[700]);

                    if (tmp_dict_value_8 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_dict_value_8 = (PyObject *)&PyLong_Type;
                            Py_INCREF(tmp_dict_value_8);
                        } else {
                            goto list_build_exception_1;
                        }
                    }

                    tmp_res = PyDict_SetItem(tmp_dict_value_7, tmp_dict_key_8, tmp_dict_value_8);
                    Py_DECREF(tmp_dict_value_8);
                    assert(!(tmp_res != 0));
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_7, tmp_dict_value_7);
                    Py_DECREF(tmp_dict_value_7);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_7 = mod_consts[91];
                    tmp_dict_value_7 = DICT_COPY(mod_consts[799]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_7, tmp_dict_value_7);
                    Py_DECREF(tmp_dict_value_7);
                    assert(!(tmp_res != 0));
                }
                PyList_SET_ITEM(tmp_dictset_value, 86, tmp_list_element_1);
                tmp_dict_key_9 = mod_consts[33];
                tmp_dict_value_9 = mod_consts[800];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_dict_key_10;
                    PyObject *tmp_dict_value_10;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_9, tmp_dict_value_9);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_9 = mod_consts[152];
                    tmp_dict_key_10 = mod_consts[58];
                    tmp_dict_value_10 = mod_consts[801];
                    tmp_dict_value_9 = _PyDict_NewPresized( 6 );
                    tmp_res = PyDict_SetItem(tmp_dict_value_9, tmp_dict_key_10, tmp_dict_value_10);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_10 = mod_consts[442];
                    tmp_dict_value_10 = mod_consts[142];
                    tmp_res = PyDict_SetItem(tmp_dict_value_9, tmp_dict_key_10, tmp_dict_value_10);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_10 = mod_consts[34];
                    tmp_dict_value_10 = mod_consts[802];
                    tmp_res = PyDict_SetItem(tmp_dict_value_9, tmp_dict_key_10, tmp_dict_value_10);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_10 = mod_consts[44];
                    tmp_dict_value_10 = mod_consts[796];
                    tmp_res = PyDict_SetItem(tmp_dict_value_9, tmp_dict_key_10, tmp_dict_value_10);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_10 = mod_consts[41];
                    tmp_dict_value_10 = mod_consts[803];
                    tmp_res = PyDict_SetItem(tmp_dict_value_9, tmp_dict_key_10, tmp_dict_value_10);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_10 = mod_consts[798];
                    tmp_dict_value_10 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[700]);

                    if (tmp_dict_value_10 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_dict_value_10 = (PyObject *)&PyLong_Type;
                            Py_INCREF(tmp_dict_value_10);
                        } else {
                            goto list_build_exception_1;
                        }
                    }

                    tmp_res = PyDict_SetItem(tmp_dict_value_9, tmp_dict_key_10, tmp_dict_value_10);
                    Py_DECREF(tmp_dict_value_10);
                    assert(!(tmp_res != 0));
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_9, tmp_dict_value_9);
                    Py_DECREF(tmp_dict_value_9);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_9 = mod_consts[91];
                    tmp_dict_value_9 = DICT_COPY(mod_consts[799]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_9, tmp_dict_value_9);
                    Py_DECREF(tmp_dict_value_9);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_9 = mod_consts[804];
                    tmp_dict_value_9 = mod_consts[805];
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_9, tmp_dict_value_9);
                    assert(!(tmp_res != 0));
                }
                PyList_SET_ITEM(tmp_dictset_value, 87, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[806]);
                PyList_SET_ITEM(tmp_dictset_value, 88, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[807]);
                PyList_SET_ITEM(tmp_dictset_value, 89, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[808]);
                PyList_SET_ITEM(tmp_dictset_value, 90, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[809]);
                PyList_SET_ITEM(tmp_dictset_value, 91, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[810]);
                PyList_SET_ITEM(tmp_dictset_value, 92, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[811]);
                PyList_SET_ITEM(tmp_dictset_value, 93, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[812]);
                PyList_SET_ITEM(tmp_dictset_value, 94, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[813]);
                PyList_SET_ITEM(tmp_dictset_value, 95, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[814]);
                PyList_SET_ITEM(tmp_dictset_value, 96, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[815]);
                PyList_SET_ITEM(tmp_dictset_value, 97, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[816]);
                PyList_SET_ITEM(tmp_dictset_value, 98, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[817]);
                PyList_SET_ITEM(tmp_dictset_value, 99, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[818]);
                PyList_SET_ITEM(tmp_dictset_value, 100, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[819]);
                PyList_SET_ITEM(tmp_dictset_value, 101, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[820]);
                PyList_SET_ITEM(tmp_dictset_value, 102, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[821]);
                PyList_SET_ITEM(tmp_dictset_value, 103, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[822]);
                PyList_SET_ITEM(tmp_dictset_value, 104, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[823]);
                PyList_SET_ITEM(tmp_dictset_value, 105, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[824]);
                PyList_SET_ITEM(tmp_dictset_value, 106, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[825]);
                PyList_SET_ITEM(tmp_dictset_value, 107, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[826]);
                PyList_SET_ITEM(tmp_dictset_value, 108, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[827]);
                PyList_SET_ITEM(tmp_dictset_value, 109, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[828]);
                PyList_SET_ITEM(tmp_dictset_value, 110, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[829]);
                PyList_SET_ITEM(tmp_dictset_value, 111, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[830]);
                PyList_SET_ITEM(tmp_dictset_value, 112, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[831]);
                PyList_SET_ITEM(tmp_dictset_value, 113, tmp_list_element_1);
                tmp_list_element_1 = DICT_COPY(mod_consts[832]);
                PyList_SET_ITEM(tmp_dictset_value, 114, tmp_list_element_1);
                tmp_dict_key_11 = mod_consts[33];
                tmp_dict_value_11 = mod_consts[833];
                tmp_list_element_1 = _PyDict_NewPresized( 5 );
                {
                    PyObject *tmp_list_element_4;
                    PyObject *tmp_called_instance_2;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_11, tmp_dict_value_11);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_11 = mod_consts[772];
                    tmp_dict_value_11 = mod_consts[834];
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_11, tmp_dict_value_11);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_11 = mod_consts[152];
                    tmp_dict_value_11 = DICT_COPY(mod_consts[835]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_11, tmp_dict_value_11);
                    Py_DECREF(tmp_dict_value_11);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_11 = mod_consts[91];
                    tmp_dict_value_11 = DICT_COPY(mod_consts[799]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_11, tmp_dict_value_11);
                    Py_DECREF(tmp_dict_value_11);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_11 = mod_consts[775];
                    tmp_called_instance_2 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[369]);

                    if (tmp_called_instance_2 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_2 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[369]);

                            if (unlikely(tmp_called_instance_2 == NULL)) {
                                tmp_called_instance_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[369]);
                            }

                            if (tmp_called_instance_2 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1778;
                                type_description_2 = "o";
                                goto dict_build_exception_4;
                            }
                            Py_INCREF(tmp_called_instance_2);
                        } else {
                            goto dict_build_exception_4;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 1778;
                    tmp_list_element_4 = CALL_METHOD_NO_ARGS(tmp_called_instance_2, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_2);
                    if (tmp_list_element_4 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1778;
                        type_description_2 = "o";
                        goto dict_build_exception_4;
                    }
                    tmp_dict_value_11 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_11, 0, tmp_list_element_4);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_11, tmp_dict_value_11);
                    Py_DECREF(tmp_dict_value_11);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_4;
                // Exception handling pass through code for dict_build:
                dict_build_exception_4:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_4:;
                PyList_SET_ITEM(tmp_dictset_value, 115, tmp_list_element_1);
                tmp_dict_key_12 = mod_consts[33];
                tmp_dict_value_12 = mod_consts[836];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_list_element_5;
                    PyObject *tmp_called_instance_3;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_12, tmp_dict_value_12);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_12 = mod_consts[152];
                    tmp_dict_value_12 = DICT_COPY(mod_consts[837]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_12, tmp_dict_value_12);
                    Py_DECREF(tmp_dict_value_12);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_12 = mod_consts[91];
                    tmp_dict_value_12 = DICT_COPY(mod_consts[799]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_12, tmp_dict_value_12);
                    Py_DECREF(tmp_dict_value_12);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_12 = mod_consts[775];
                    tmp_called_instance_3 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[388]);

                    if (tmp_called_instance_3 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_3 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[388]);

                            if (unlikely(tmp_called_instance_3 == NULL)) {
                                tmp_called_instance_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[388]);
                            }

                            if (tmp_called_instance_3 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1790;
                                type_description_2 = "o";
                                goto dict_build_exception_5;
                            }
                            Py_INCREF(tmp_called_instance_3);
                        } else {
                            goto dict_build_exception_5;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 1790;
                    tmp_list_element_5 = CALL_METHOD_NO_ARGS(tmp_called_instance_3, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_3);
                    if (tmp_list_element_5 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1790;
                        type_description_2 = "o";
                        goto dict_build_exception_5;
                    }
                    tmp_dict_value_12 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_12, 0, tmp_list_element_5);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_12, tmp_dict_value_12);
                    Py_DECREF(tmp_dict_value_12);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_5;
                // Exception handling pass through code for dict_build:
                dict_build_exception_5:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_5:;
                PyList_SET_ITEM(tmp_dictset_value, 116, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[838]);
                PyList_SET_ITEM(tmp_dictset_value, 117, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[839]);
                PyList_SET_ITEM(tmp_dictset_value, 118, tmp_list_element_1);
                tmp_dict_key_13 = mod_consts[33];
                tmp_dict_value_13 = mod_consts[840];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_list_element_6;
                    PyObject *tmp_called_instance_4;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_13, tmp_dict_value_13);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_13 = mod_consts[152];
                    tmp_dict_value_13 = DICT_COPY(mod_consts[841]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_13, tmp_dict_value_13);
                    Py_DECREF(tmp_dict_value_13);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_13 = mod_consts[91];
                    tmp_dict_value_13 = DICT_COPY(mod_consts[799]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_13, tmp_dict_value_13);
                    Py_DECREF(tmp_dict_value_13);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_13 = mod_consts[775];
                    tmp_called_instance_4 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[391]);

                    if (tmp_called_instance_4 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_4 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[391]);

                            if (unlikely(tmp_called_instance_4 == NULL)) {
                                tmp_called_instance_4 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[391]);
                            }

                            if (tmp_called_instance_4 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1822;
                                type_description_2 = "o";
                                goto dict_build_exception_6;
                            }
                            Py_INCREF(tmp_called_instance_4);
                        } else {
                            goto dict_build_exception_6;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 1822;
                    tmp_list_element_6 = CALL_METHOD_NO_ARGS(tmp_called_instance_4, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_4);
                    if (tmp_list_element_6 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1822;
                        type_description_2 = "o";
                        goto dict_build_exception_6;
                    }
                    tmp_dict_value_13 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_13, 0, tmp_list_element_6);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_13, tmp_dict_value_13);
                    Py_DECREF(tmp_dict_value_13);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_6;
                // Exception handling pass through code for dict_build:
                dict_build_exception_6:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_6:;
                PyList_SET_ITEM(tmp_dictset_value, 119, tmp_list_element_1);
                tmp_dict_key_14 = mod_consts[33];
                tmp_dict_value_14 = mod_consts[842];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_list_element_7;
                    PyObject *tmp_called_instance_5;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_14, tmp_dict_value_14);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_14 = mod_consts[152];
                    tmp_dict_value_14 = DICT_COPY(mod_consts[843]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_14, tmp_dict_value_14);
                    Py_DECREF(tmp_dict_value_14);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_14 = mod_consts[91];
                    tmp_dict_value_14 = DICT_COPY(mod_consts[799]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_14, tmp_dict_value_14);
                    Py_DECREF(tmp_dict_value_14);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_14 = mod_consts[775];
                    tmp_called_instance_5 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[392]);

                    if (tmp_called_instance_5 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_5 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[392]);

                            if (unlikely(tmp_called_instance_5 == NULL)) {
                                tmp_called_instance_5 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[392]);
                            }

                            if (tmp_called_instance_5 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1837;
                                type_description_2 = "o";
                                goto dict_build_exception_7;
                            }
                            Py_INCREF(tmp_called_instance_5);
                        } else {
                            goto dict_build_exception_7;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 1837;
                    tmp_list_element_7 = CALL_METHOD_NO_ARGS(tmp_called_instance_5, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_5);
                    if (tmp_list_element_7 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1837;
                        type_description_2 = "o";
                        goto dict_build_exception_7;
                    }
                    tmp_dict_value_14 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_14, 0, tmp_list_element_7);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_14, tmp_dict_value_14);
                    Py_DECREF(tmp_dict_value_14);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_7;
                // Exception handling pass through code for dict_build:
                dict_build_exception_7:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_7:;
                PyList_SET_ITEM(tmp_dictset_value, 120, tmp_list_element_1);
                tmp_dict_key_15 = mod_consts[33];
                tmp_dict_value_15 = mod_consts[844];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_list_element_8;
                    PyObject *tmp_called_instance_6;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_15, tmp_dict_value_15);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_15 = mod_consts[152];
                    tmp_dict_value_15 = DICT_COPY(mod_consts[845]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_15, tmp_dict_value_15);
                    Py_DECREF(tmp_dict_value_15);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_15 = mod_consts[91];
                    tmp_dict_value_15 = DICT_COPY(mod_consts[799]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_15, tmp_dict_value_15);
                    Py_DECREF(tmp_dict_value_15);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_15 = mod_consts[775];
                    tmp_called_instance_6 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[393]);

                    if (tmp_called_instance_6 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_6 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[393]);

                            if (unlikely(tmp_called_instance_6 == NULL)) {
                                tmp_called_instance_6 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[393]);
                            }

                            if (tmp_called_instance_6 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1854;
                                type_description_2 = "o";
                                goto dict_build_exception_8;
                            }
                            Py_INCREF(tmp_called_instance_6);
                        } else {
                            goto dict_build_exception_8;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 1854;
                    tmp_list_element_8 = CALL_METHOD_NO_ARGS(tmp_called_instance_6, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_6);
                    if (tmp_list_element_8 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1854;
                        type_description_2 = "o";
                        goto dict_build_exception_8;
                    }
                    tmp_dict_value_15 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_15, 0, tmp_list_element_8);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_15, tmp_dict_value_15);
                    Py_DECREF(tmp_dict_value_15);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_8;
                // Exception handling pass through code for dict_build:
                dict_build_exception_8:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_8:;
                PyList_SET_ITEM(tmp_dictset_value, 121, tmp_list_element_1);
                tmp_list_element_1 = DICT_COPY(mod_consts[846]);
                PyList_SET_ITEM(tmp_dictset_value, 122, tmp_list_element_1);
                tmp_dict_key_16 = mod_consts[33];
                tmp_dict_value_16 = mod_consts[847];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_list_element_9;
                    PyObject *tmp_called_instance_7;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_16, tmp_dict_value_16);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_16 = mod_consts[772];
                    tmp_dict_value_16 = mod_consts[848];
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_16, tmp_dict_value_16);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_16 = mod_consts[152];
                    tmp_dict_value_16 = DICT_COPY(mod_consts[849]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_16, tmp_dict_value_16);
                    Py_DECREF(tmp_dict_value_16);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_16 = mod_consts[775];
                    tmp_called_instance_7 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[361]);

                    if (tmp_called_instance_7 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_7 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[361]);

                            if (unlikely(tmp_called_instance_7 == NULL)) {
                                tmp_called_instance_7 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[361]);
                            }

                            if (tmp_called_instance_7 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1870;
                                type_description_2 = "o";
                                goto dict_build_exception_9;
                            }
                            Py_INCREF(tmp_called_instance_7);
                        } else {
                            goto dict_build_exception_9;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 1870;
                    tmp_list_element_9 = CALL_METHOD_NO_ARGS(tmp_called_instance_7, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_7);
                    if (tmp_list_element_9 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1870;
                        type_description_2 = "o";
                        goto dict_build_exception_9;
                    }
                    tmp_dict_value_16 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_16, 0, tmp_list_element_9);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_16, tmp_dict_value_16);
                    Py_DECREF(tmp_dict_value_16);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_9;
                // Exception handling pass through code for dict_build:
                dict_build_exception_9:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_9:;
                PyList_SET_ITEM(tmp_dictset_value, 123, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[850]);
                PyList_SET_ITEM(tmp_dictset_value, 124, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[851]);
                PyList_SET_ITEM(tmp_dictset_value, 125, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[852]);
                PyList_SET_ITEM(tmp_dictset_value, 126, tmp_list_element_1);
                tmp_dict_key_17 = mod_consts[33];
                tmp_dict_value_17 = mod_consts[853];
                tmp_list_element_1 = _PyDict_NewPresized( 3 );
                {
                    PyObject *tmp_list_element_10;
                    PyObject *tmp_called_instance_8;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_17, tmp_dict_value_17);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_17 = mod_consts[152];
                    tmp_dict_value_17 = DICT_COPY(mod_consts[854]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_17, tmp_dict_value_17);
                    Py_DECREF(tmp_dict_value_17);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_17 = mod_consts[775];
                    tmp_called_instance_8 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[394]);

                    if (tmp_called_instance_8 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_8 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[394]);

                            if (unlikely(tmp_called_instance_8 == NULL)) {
                                tmp_called_instance_8 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[394]);
                            }

                            if (tmp_called_instance_8 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1917;
                                type_description_2 = "o";
                                goto dict_build_exception_10;
                            }
                            Py_INCREF(tmp_called_instance_8);
                        } else {
                            goto dict_build_exception_10;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 1917;
                    tmp_list_element_10 = CALL_METHOD_NO_ARGS(tmp_called_instance_8, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_8);
                    if (tmp_list_element_10 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1917;
                        type_description_2 = "o";
                        goto dict_build_exception_10;
                    }
                    tmp_dict_value_17 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_17, 0, tmp_list_element_10);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_17, tmp_dict_value_17);
                    Py_DECREF(tmp_dict_value_17);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_10;
                // Exception handling pass through code for dict_build:
                dict_build_exception_10:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_10:;
                PyList_SET_ITEM(tmp_dictset_value, 127, tmp_list_element_1);
                tmp_dict_key_18 = mod_consts[33];
                tmp_dict_value_18 = mod_consts[855];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_list_element_11;
                    PyObject *tmp_called_instance_9;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_18, tmp_dict_value_18);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_18 = mod_consts[152];
                    tmp_dict_value_18 = DICT_COPY(mod_consts[856]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_18, tmp_dict_value_18);
                    Py_DECREF(tmp_dict_value_18);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_18 = mod_consts[91];
                    tmp_dict_value_18 = DICT_COPY(mod_consts[799]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_18, tmp_dict_value_18);
                    Py_DECREF(tmp_dict_value_18);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_18 = mod_consts[775];
                    tmp_called_instance_9 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[395]);

                    if (tmp_called_instance_9 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_9 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[395]);

                            if (unlikely(tmp_called_instance_9 == NULL)) {
                                tmp_called_instance_9 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[395]);
                            }

                            if (tmp_called_instance_9 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1930;
                                type_description_2 = "o";
                                goto dict_build_exception_11;
                            }
                            Py_INCREF(tmp_called_instance_9);
                        } else {
                            goto dict_build_exception_11;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 1930;
                    tmp_list_element_11 = CALL_METHOD_NO_ARGS(tmp_called_instance_9, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_9);
                    if (tmp_list_element_11 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1930;
                        type_description_2 = "o";
                        goto dict_build_exception_11;
                    }
                    tmp_dict_value_18 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_18, 0, tmp_list_element_11);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_18, tmp_dict_value_18);
                    Py_DECREF(tmp_dict_value_18);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_11;
                // Exception handling pass through code for dict_build:
                dict_build_exception_11:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_11:;
                PyList_SET_ITEM(tmp_dictset_value, 128, tmp_list_element_1);
                tmp_dict_key_19 = mod_consts[33];
                tmp_dict_value_19 = mod_consts[857];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_list_element_12;
                    PyObject *tmp_called_instance_10;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_19, tmp_dict_value_19);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_19 = mod_consts[152];
                    tmp_dict_value_19 = DICT_COPY(mod_consts[858]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_19, tmp_dict_value_19);
                    Py_DECREF(tmp_dict_value_19);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_19 = mod_consts[859];
                    tmp_dict_value_19 = mod_consts[860];
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_19, tmp_dict_value_19);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_19 = mod_consts[775];
                    tmp_called_instance_10 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[396]);

                    if (tmp_called_instance_10 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_10 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[396]);

                            if (unlikely(tmp_called_instance_10 == NULL)) {
                                tmp_called_instance_10 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[396]);
                            }

                            if (tmp_called_instance_10 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 1940;
                                type_description_2 = "o";
                                goto dict_build_exception_12;
                            }
                            Py_INCREF(tmp_called_instance_10);
                        } else {
                            goto dict_build_exception_12;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 1940;
                    tmp_list_element_12 = CALL_METHOD_NO_ARGS(tmp_called_instance_10, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_10);
                    if (tmp_list_element_12 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 1940;
                        type_description_2 = "o";
                        goto dict_build_exception_12;
                    }
                    tmp_dict_value_19 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_19, 0, tmp_list_element_12);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_19, tmp_dict_value_19);
                    Py_DECREF(tmp_dict_value_19);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_12;
                // Exception handling pass through code for dict_build:
                dict_build_exception_12:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_12:;
                PyList_SET_ITEM(tmp_dictset_value, 129, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[861]);
                PyList_SET_ITEM(tmp_dictset_value, 130, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[862]);
                PyList_SET_ITEM(tmp_dictset_value, 131, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[863]);
                PyList_SET_ITEM(tmp_dictset_value, 132, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[864]);
                PyList_SET_ITEM(tmp_dictset_value, 133, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[865]);
                PyList_SET_ITEM(tmp_dictset_value, 134, tmp_list_element_1);
                tmp_dict_key_20 = mod_consts[33];
                tmp_dict_value_20 = mod_consts[866];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_list_element_13;
                    PyObject *tmp_called_instance_11;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_20, tmp_dict_value_20);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_20 = mod_consts[152];
                    tmp_dict_value_20 = DICT_COPY(mod_consts[867]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_20, tmp_dict_value_20);
                    Py_DECREF(tmp_dict_value_20);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_20 = mod_consts[91];
                    tmp_dict_value_20 = DICT_COPY(mod_consts[799]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_20, tmp_dict_value_20);
                    Py_DECREF(tmp_dict_value_20);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_20 = mod_consts[775];
                    tmp_called_instance_11 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[403]);

                    if (tmp_called_instance_11 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_11 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[403]);

                            if (unlikely(tmp_called_instance_11 == NULL)) {
                                tmp_called_instance_11 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[403]);
                            }

                            if (tmp_called_instance_11 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 2006;
                                type_description_2 = "o";
                                goto dict_build_exception_13;
                            }
                            Py_INCREF(tmp_called_instance_11);
                        } else {
                            goto dict_build_exception_13;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 2006;
                    tmp_list_element_13 = CALL_METHOD_NO_ARGS(tmp_called_instance_11, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_11);
                    if (tmp_list_element_13 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 2006;
                        type_description_2 = "o";
                        goto dict_build_exception_13;
                    }
                    tmp_dict_value_20 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_20, 0, tmp_list_element_13);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_20, tmp_dict_value_20);
                    Py_DECREF(tmp_dict_value_20);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_13;
                // Exception handling pass through code for dict_build:
                dict_build_exception_13:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_13:;
                PyList_SET_ITEM(tmp_dictset_value, 135, tmp_list_element_1);
                tmp_dict_key_21 = mod_consts[33];
                tmp_dict_value_21 = mod_consts[868];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_list_element_14;
                    PyObject *tmp_called_instance_12;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_21, tmp_dict_value_21);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_21 = mod_consts[152];
                    tmp_dict_value_21 = DICT_COPY(mod_consts[869]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_21, tmp_dict_value_21);
                    Py_DECREF(tmp_dict_value_21);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_21 = mod_consts[775];
                    tmp_called_instance_12 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[404]);

                    if (tmp_called_instance_12 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_12 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[404]);

                            if (unlikely(tmp_called_instance_12 == NULL)) {
                                tmp_called_instance_12 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[404]);
                            }

                            if (tmp_called_instance_12 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 2015;
                                type_description_2 = "o";
                                goto dict_build_exception_14;
                            }
                            Py_INCREF(tmp_called_instance_12);
                        } else {
                            goto dict_build_exception_14;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 2015;
                    tmp_list_element_14 = CALL_METHOD_NO_ARGS(tmp_called_instance_12, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_12);
                    if (tmp_list_element_14 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 2015;
                        type_description_2 = "o";
                        goto dict_build_exception_14;
                    }
                    tmp_dict_value_21 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_21, 0, tmp_list_element_14);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_21, tmp_dict_value_21);
                    Py_DECREF(tmp_dict_value_21);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_21 = mod_consts[91];
                    tmp_dict_value_21 = DICT_COPY(mod_consts[799]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_21, tmp_dict_value_21);
                    Py_DECREF(tmp_dict_value_21);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_14;
                // Exception handling pass through code for dict_build:
                dict_build_exception_14:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_14:;
                PyList_SET_ITEM(tmp_dictset_value, 136, tmp_list_element_1);
                tmp_dict_key_22 = mod_consts[33];
                tmp_dict_value_22 = mod_consts[870];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_list_element_15;
                    PyObject *tmp_called_instance_13;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_22, tmp_dict_value_22);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_22 = mod_consts[152];
                    tmp_dict_value_22 = DICT_COPY(mod_consts[871]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_22, tmp_dict_value_22);
                    Py_DECREF(tmp_dict_value_22);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_22 = mod_consts[775];
                    tmp_called_instance_13 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[407]);

                    if (tmp_called_instance_13 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_13 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[407]);

                            if (unlikely(tmp_called_instance_13 == NULL)) {
                                tmp_called_instance_13 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[407]);
                            }

                            if (tmp_called_instance_13 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 2028;
                                type_description_2 = "o";
                                goto dict_build_exception_15;
                            }
                            Py_INCREF(tmp_called_instance_13);
                        } else {
                            goto dict_build_exception_15;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 2028;
                    tmp_list_element_15 = CALL_METHOD_NO_ARGS(tmp_called_instance_13, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_13);
                    if (tmp_list_element_15 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 2028;
                        type_description_2 = "o";
                        goto dict_build_exception_15;
                    }
                    tmp_dict_value_22 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_22, 0, tmp_list_element_15);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_22, tmp_dict_value_22);
                    Py_DECREF(tmp_dict_value_22);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_22 = mod_consts[91];
                    tmp_dict_value_22 = DICT_COPY(mod_consts[799]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_22, tmp_dict_value_22);
                    Py_DECREF(tmp_dict_value_22);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_15;
                // Exception handling pass through code for dict_build:
                dict_build_exception_15:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_15:;
                PyList_SET_ITEM(tmp_dictset_value, 137, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[872]);
                PyList_SET_ITEM(tmp_dictset_value, 138, tmp_list_element_1);
                tmp_dict_key_23 = mod_consts[33];
                tmp_dict_value_23 = mod_consts[873];
                tmp_list_element_1 = _PyDict_NewPresized( 4 );
                {
                    PyObject *tmp_list_element_16;
                    PyObject *tmp_called_instance_14;
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_23, tmp_dict_value_23);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_23 = mod_consts[152];
                    tmp_dict_value_23 = DICT_COPY(mod_consts[874]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_23, tmp_dict_value_23);
                    Py_DECREF(tmp_dict_value_23);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_23 = mod_consts[775];
                    tmp_called_instance_14 = PyObject_GetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[409]);

                    if (tmp_called_instance_14 == NULL) {
                        if (CHECK_AND_CLEAR_KEY_ERROR_OCCURRED()) {
                            tmp_called_instance_14 = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[409]);

                            if (unlikely(tmp_called_instance_14 == NULL)) {
                                tmp_called_instance_14 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[409]);
                            }

                            if (tmp_called_instance_14 == NULL) {
                                assert(ERROR_OCCURRED());

                                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                                exception_lineno = 2055;
                                type_description_2 = "o";
                                goto dict_build_exception_16;
                            }
                            Py_INCREF(tmp_called_instance_14);
                        } else {
                            goto dict_build_exception_16;
                        }
                    }

                    frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame.f_lineno = 2055;
                    tmp_list_element_16 = CALL_METHOD_NO_ARGS(tmp_called_instance_14, mod_consts[210]);
                    Py_DECREF(tmp_called_instance_14);
                    if (tmp_list_element_16 == NULL) {
                        assert(ERROR_OCCURRED());

                        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                        exception_lineno = 2055;
                        type_description_2 = "o";
                        goto dict_build_exception_16;
                    }
                    tmp_dict_value_23 = MAKE_LIST_EMPTY(1);
                    PyList_SET_ITEM(tmp_dict_value_23, 0, tmp_list_element_16);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_23, tmp_dict_value_23);
                    Py_DECREF(tmp_dict_value_23);
                    assert(!(tmp_res != 0));
                    tmp_dict_key_23 = mod_consts[91];
                    tmp_dict_value_23 = DICT_COPY(mod_consts[799]);
                    tmp_res = PyDict_SetItem(tmp_list_element_1, tmp_dict_key_23, tmp_dict_value_23);
                    Py_DECREF(tmp_dict_value_23);
                    assert(!(tmp_res != 0));
                }
                goto dict_build_noexception_16;
                // Exception handling pass through code for dict_build:
                dict_build_exception_16:;
                Py_DECREF(tmp_list_element_1);
                goto list_build_exception_1;
                // Finished with no exception for dict_build:
                dict_build_noexception_16:;
                PyList_SET_ITEM(tmp_dictset_value, 139, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[875]);
                PyList_SET_ITEM(tmp_dictset_value, 140, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[876]);
                PyList_SET_ITEM(tmp_dictset_value, 141, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[877]);
                PyList_SET_ITEM(tmp_dictset_value, 142, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[878]);
                PyList_SET_ITEM(tmp_dictset_value, 143, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[879]);
                PyList_SET_ITEM(tmp_dictset_value, 144, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[880]);
                PyList_SET_ITEM(tmp_dictset_value, 145, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[881]);
                PyList_SET_ITEM(tmp_dictset_value, 146, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[882]);
                PyList_SET_ITEM(tmp_dictset_value, 147, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[883]);
                PyList_SET_ITEM(tmp_dictset_value, 148, tmp_list_element_1);
                tmp_list_element_1 = DEEP_COPY_DICT(mod_consts[884]);
                PyList_SET_ITEM(tmp_dictset_value, 149, tmp_list_element_1);
                tmp_list_element_1 = DICT_COPY(mod_consts[885]);
                PyList_SET_ITEM(tmp_dictset_value, 150, tmp_list_element_1);
            }
            goto list_build_noexception_1;
            // Exception handling pass through code for list_build:
            list_build_exception_1:;
            Py_DECREF(tmp_dictset_value);
            goto frame_exception_exit_2;
            // Finished with no exception for list_build:
            list_build_noexception_1:;
            tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[886], tmp_dictset_value);
            Py_DECREF(tmp_dictset_value);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 139;
                type_description_2 = "o";
                goto frame_exception_exit_2;
            }
        }


        tmp_dictset_value = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__1_report_following_redirect();

        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[124], tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2233;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }


        tmp_dictset_value = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__2__extract_rss();

        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[175], tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2237;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }


        tmp_dictset_value = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__3__extract_camtasia();

        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[190], tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2298;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }


        tmp_dictset_value = MAKE_FUNCTION_youtube_dl$extractor$generic$$$function__4__real_extract();

        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[890], tmp_dictset_value);
        Py_DECREF(tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 2335;
            type_description_2 = "o";
            goto frame_exception_exit_2;
        }

#if 0
        RESTORE_FRAME_EXCEPTION(frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2);
#endif

        // Put the previous frame back on top.
        popFrameStack();


        goto frame_no_exception_1;

        frame_exception_exit_2:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2, exception_lineno);
        } else if (exception_tb->tb_frame != &frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2, exception_lineno);
        }

        // Attaches locals to frame if any.
        Nuitka_Frame_AttachLocals(
            frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2,
            type_description_2,
            outline_0_var___class__
        );


        // Release cached frame if used for exception.
        if (frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2 == cache_frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2) {
#if _DEBUG_REFCOUNTS
            count_active_frame_cache_instances -= 1;
            count_released_frame_cache_instances += 1;
#endif

            Py_DECREF(cache_frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2);
            cache_frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2 = NULL;
        }

        assertFrameObject(frame_ba5b9723ae0cbe5b8efd735840f2dbfe_2);

        // Put the previous frame back on top.
        popFrameStack();


        // Return the error.
        goto nested_frame_exit_1;

        frame_no_exception_1:;
        goto skip_nested_handling_1;
        nested_frame_exit_1:;

        goto try_except_handler_8;
        skip_nested_handling_1:;
        {
            nuitka_bool tmp_condition_result_6;
            PyObject *tmp_cmp_expr_left_1;
            PyObject *tmp_cmp_expr_right_1;
            CHECK_OBJECT(tmp_class_creation_1__bases);
            tmp_cmp_expr_left_1 = tmp_class_creation_1__bases;
            CHECK_OBJECT(tmp_class_creation_1__bases_orig);
            tmp_cmp_expr_right_1 = tmp_class_creation_1__bases_orig;
            tmp_condition_result_6 = RICH_COMPARE_NE_NBOOL_OBJECT_TUPLE(tmp_cmp_expr_left_1, tmp_cmp_expr_right_1);
            if (tmp_condition_result_6 == NUITKA_BOOL_EXCEPTION) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 135;

                goto try_except_handler_8;
            }
            if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
                goto branch_yes_4;
            } else {
                goto branch_no_4;
            }
        }
        branch_yes_4:;
        CHECK_OBJECT(tmp_class_creation_1__bases_orig);
        tmp_dictset_value = tmp_class_creation_1__bases_orig;
        tmp_res = PyObject_SetItem(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135, mod_consts[892], tmp_dictset_value);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 135;

            goto try_except_handler_8;
        }
        branch_no_4:;
        {
            PyObject *tmp_assign_source_134;
            PyObject *tmp_called_value_2;
            PyObject *tmp_args_value_2;
            PyObject *tmp_tuple_element_4;
            PyObject *tmp_kwargs_value_2;
            CHECK_OBJECT(tmp_class_creation_1__metaclass);
            tmp_called_value_2 = tmp_class_creation_1__metaclass;
            tmp_tuple_element_4 = mod_consts[480];
            tmp_args_value_2 = MAKE_TUPLE_EMPTY(3);
            PyTuple_SET_ITEM0(tmp_args_value_2, 0, tmp_tuple_element_4);
            CHECK_OBJECT(tmp_class_creation_1__bases);
            tmp_tuple_element_4 = tmp_class_creation_1__bases;
            PyTuple_SET_ITEM0(tmp_args_value_2, 1, tmp_tuple_element_4);
            tmp_tuple_element_4 = locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135;
            PyTuple_SET_ITEM0(tmp_args_value_2, 2, tmp_tuple_element_4);
            CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
            tmp_kwargs_value_2 = tmp_class_creation_1__class_decl_dict;
            frame_1fd16d11d213e76d6499b6413020ae45->m_frame.f_lineno = 135;
            tmp_assign_source_134 = CALL_FUNCTION(tmp_called_value_2, tmp_args_value_2, tmp_kwargs_value_2);
            Py_DECREF(tmp_args_value_2);
            if (tmp_assign_source_134 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 135;

                goto try_except_handler_8;
            }
            assert(outline_0_var___class__ == NULL);
            outline_0_var___class__ = tmp_assign_source_134;
        }
        CHECK_OBJECT(outline_0_var___class__);
        tmp_assign_source_133 = outline_0_var___class__;
        Py_INCREF(tmp_assign_source_133);
        goto try_return_handler_8;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_8:;
        Py_DECREF(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135);
        locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135 = NULL;
        goto try_return_handler_7;
        // Exception handler code:
        try_except_handler_8:;
        exception_keeper_type_6 = exception_type;
        exception_keeper_value_6 = exception_value;
        exception_keeper_tb_6 = exception_tb;
        exception_keeper_lineno_6 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_DECREF(locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135);
        locals_youtube_dl$extractor$generic$$$class__1_GenericIE_135 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_6;
        exception_value = exception_keeper_value_6;
        exception_tb = exception_keeper_tb_6;
        exception_lineno = exception_keeper_lineno_6;

        goto try_except_handler_7;
        // End of try:
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_7:;
        CHECK_OBJECT(outline_0_var___class__);
        Py_DECREF(outline_0_var___class__);
        outline_0_var___class__ = NULL;
        goto outline_result_1;
        // Exception handler code:
        try_except_handler_7:;
        exception_keeper_type_7 = exception_type;
        exception_keeper_value_7 = exception_value;
        exception_keeper_tb_7 = exception_tb;
        exception_keeper_lineno_7 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        // Re-raise.
        exception_type = exception_keeper_type_7;
        exception_value = exception_keeper_value_7;
        exception_tb = exception_keeper_tb_7;
        exception_lineno = exception_keeper_lineno_7;

        goto outline_exception_1;
        // End of try:
        NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
        return NULL;
        outline_exception_1:;
        exception_lineno = 135;
        goto try_except_handler_6;
        outline_result_1:;
        UPDATE_STRING_DICT1(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)mod_consts[480], tmp_assign_source_133);
    }
    goto try_end_6;
    // Exception handler code:
    try_except_handler_6:;
    exception_keeper_type_8 = exception_type;
    exception_keeper_value_8 = exception_value;
    exception_keeper_tb_8 = exception_tb;
    exception_keeper_lineno_8 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_class_creation_1__bases_orig);
    tmp_class_creation_1__bases_orig = NULL;
    Py_XDECREF(tmp_class_creation_1__bases);
    tmp_class_creation_1__bases = NULL;
    Py_XDECREF(tmp_class_creation_1__class_decl_dict);
    tmp_class_creation_1__class_decl_dict = NULL;
    Py_XDECREF(tmp_class_creation_1__metaclass);
    tmp_class_creation_1__metaclass = NULL;
    Py_XDECREF(tmp_class_creation_1__prepared);
    tmp_class_creation_1__prepared = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_8;
    exception_value = exception_keeper_value_8;
    exception_tb = exception_keeper_tb_8;
    exception_lineno = exception_keeper_lineno_8;

    goto frame_exception_exit_1;
    // End of try:
    try_end_6:;

    // Restore frame exception if necessary.
#if 0
    RESTORE_FRAME_EXCEPTION(frame_1fd16d11d213e76d6499b6413020ae45);
#endif
    popFrameStack();

    goto frame_no_exception_2;

    frame_exception_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_1fd16d11d213e76d6499b6413020ae45);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_1fd16d11d213e76d6499b6413020ae45, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_1fd16d11d213e76d6499b6413020ae45->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_1fd16d11d213e76d6499b6413020ae45, exception_lineno);
    }

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto module_exception_exit;

    frame_no_exception_2:;
    CHECK_OBJECT(tmp_class_creation_1__bases_orig);
    Py_DECREF(tmp_class_creation_1__bases_orig);
    tmp_class_creation_1__bases_orig = NULL;
    CHECK_OBJECT(tmp_class_creation_1__bases);
    Py_DECREF(tmp_class_creation_1__bases);
    tmp_class_creation_1__bases = NULL;
    CHECK_OBJECT(tmp_class_creation_1__class_decl_dict);
    Py_DECREF(tmp_class_creation_1__class_decl_dict);
    tmp_class_creation_1__class_decl_dict = NULL;
    CHECK_OBJECT(tmp_class_creation_1__metaclass);
    Py_DECREF(tmp_class_creation_1__metaclass);
    tmp_class_creation_1__metaclass = NULL;
    CHECK_OBJECT(tmp_class_creation_1__prepared);
    Py_DECREF(tmp_class_creation_1__prepared);
    tmp_class_creation_1__prepared = NULL;

    // Report to PGO about leaving the module without error.
    PGO_onModuleExit("youtube_dl.extractor.generic", false);

    Py_INCREF(module_youtube_dl$extractor$generic);
    return module_youtube_dl$extractor$generic;
    module_exception_exit:

#if defined(_NUITKA_MODULE) && 0
    {
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_youtube_dl$extractor$generic, (Nuitka_StringObject *)const_str_plain___name__);

        if (module_name != NULL) {
            Nuitka_DelModule(module_name);
        }
    }
#endif
    PGO_onModuleExit("youtube_dl$extractor$generic", false);

    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);
    return NULL;
}
